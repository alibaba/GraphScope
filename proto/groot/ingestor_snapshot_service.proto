/**
 * Copyright 2020 Alibaba Group Holding Limited.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
package gs.rpc.groot;

import "groot/sdk/model.proto";

option java_package = "com.alibaba.graphscope.proto.groot";
option java_multiple_files = true;

service IngestorSnapshot {
  rpc advanceIngestSnapshotId(AdvanceIngestSnapshotIdRequest) returns (AdvanceIngestSnapshotIdResponse);
}

message AdvanceIngestSnapshotIdRequest {
  int64 snapshotId = 1;
}

message AdvanceIngestSnapshotIdResponse {
  int64 previousSnapshotId = 1;
}


service IngestProgress {
  rpc getTailOffsets(GetTailOffsetsRequest) returns(GetTailOffsetsResponse);
}

message GetTailOffsetsRequest {
  repeated int32 queueId = 1;
}

message GetTailOffsetsResponse {
  repeated int64 offsets = 1;
}

service IngestorWrite {
  rpc writeIngestor(WriteIngestorRequest) returns (WriteIngestorResponse);
  rpc replayWAL(ReplayWALRequest) returns (ReplayWALResponse);
}

message ReplayWALRequest {
  int64 offset = 1;
  int64 timestamp = 2;
}

message ReplayWALResponse {
  repeated int64 snapshotId = 1;
}


message WriteIngestorRequest {
  string requestId = 1;
  int32 queueId = 2;
  OperationBatchPb operationBatch = 3;
}

message WriteIngestorResponse {
  int64 snapshotId = 1;
}
