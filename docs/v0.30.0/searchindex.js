Search.setIndex({"docnames": ["analytical_engine/builtin_algorithms", "analytical_engine/customized_algorithms", "analytical_engine/deployment", "analytical_engine/design_of_gae", "analytical_engine/dev_and_test", "analytical_engine/faqs", "analytical_engine/flash", "analytical_engine/getting_started", "analytical_engine/guide_and_examples", "analytical_engine/ingress", "analytical_engine/key_concepts", "analytical_engine/networkx_compatibility", "analytical_engine/overview_and_architecture", "analytical_engine/performance_tuning", "analytical_engine/programming_model_pie", "analytical_engine/tutorial_dev_algo_cpp_flash", "analytical_engine/tutorial_dev_algo_cpp_pie", "analytical_engine/tutorial_dev_algo_java", "analytical_engine/tutorial_dev_algo_python", "analytical_engine/tutorial_networkx_algorithms", "analytical_engine/tutorial_networkx_operations", "analytical_engine/tutorial_run_builtin_algo", "analytical_engine/tutorial_run_giraph_apps", "analytical_engine/tutorial_run_graphx_apps", "analytical_engine/vertex_centric_models", "contact_us", "deployment/deploy_graphscope_on_clouds", "deployment/deploy_graphscope_on_self_managed_k8s", "deployment/deploy_graphscope_operator", "deployment/deploy_graphscope_with_helm", "deployment/deploy_with_existing_vineyard_cluster", "deployment/install_in_offline_env", "deployment/install_on_local", "deployment/persistent_storage_of_graphs_on_k8s", "design_of_gae", "development/code_style_guide", "development/dev_guide", "development/how_to_contribute", "development/how_to_debug", "development/how_to_instrument", "development/how_to_submit_pr", "development/how_to_test", "error_codes", "flex/coordinator", "flex/coordinator/dev_guide", "flex/coordinator/development/dev_and_test", "flex/coordinator/development/python/README", "flex/coordinator/development/python/docs/AlertApi", "flex/coordinator/development/python/docs/BaseEdgeType", "flex/coordinator/development/python/docs/BaseEdgeTypeVertexTypePairRelationsInner", "flex/coordinator/development/python/docs/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/coordinator/development/python/docs/BasePropertyMeta", "flex/coordinator/development/python/docs/BaseVertexType", "flex/coordinator/development/python/docs/BaseVertexTypeXCsrParams", "flex/coordinator/development/python/docs/ColumnMapping", "flex/coordinator/development/python/docs/ColumnMappingColumn", "flex/coordinator/development/python/docs/CreateAlertReceiverRequest", "flex/coordinator/development/python/docs/CreateAlertRuleRequest", "flex/coordinator/development/python/docs/CreateDataloadingJobResponse", "flex/coordinator/development/python/docs/CreateEdgeType", "flex/coordinator/development/python/docs/CreateGraphRequest", "flex/coordinator/development/python/docs/CreateGraphResponse", "flex/coordinator/development/python/docs/CreateGraphSchemaRequest", "flex/coordinator/development/python/docs/CreatePropertyMeta", "flex/coordinator/development/python/docs/CreateStoredProcRequest", "flex/coordinator/development/python/docs/CreateStoredProcResponse", "flex/coordinator/development/python/docs/CreateVertexType", "flex/coordinator/development/python/docs/DataSourceApi", "flex/coordinator/development/python/docs/DataloadingJobConfig", "flex/coordinator/development/python/docs/DataloadingJobConfigEdgesInner", "flex/coordinator/development/python/docs/DataloadingJobConfigLoadingConfig", "flex/coordinator/development/python/docs/DataloadingJobConfigLoadingConfigFormat", "flex/coordinator/development/python/docs/DataloadingJobConfigVerticesInner", "flex/coordinator/development/python/docs/DataloadingMRJobConfig", "flex/coordinator/development/python/docs/DateType", "flex/coordinator/development/python/docs/DeploymentApi", "flex/coordinator/development/python/docs/EdgeMapping", "flex/coordinator/development/python/docs/EdgeMappingTypeTriplet", "flex/coordinator/development/python/docs/Error", "flex/coordinator/development/python/docs/GSDataType", "flex/coordinator/development/python/docs/GetAlertMessageResponse", "flex/coordinator/development/python/docs/GetAlertReceiverResponse", "flex/coordinator/development/python/docs/GetAlertRuleResponse", "flex/coordinator/development/python/docs/GetEdgeType", "flex/coordinator/development/python/docs/GetGraphResponse", "flex/coordinator/development/python/docs/GetGraphSchemaResponse", "flex/coordinator/development/python/docs/GetPodLogResponse", "flex/coordinator/development/python/docs/GetPropertyMeta", "flex/coordinator/development/python/docs/GetResourceUsageResponse", "flex/coordinator/development/python/docs/GetStorageUsageResponse", "flex/coordinator/development/python/docs/GetStoredProcResponse", "flex/coordinator/development/python/docs/GetVertexType", "flex/coordinator/development/python/docs/GraphApi", "flex/coordinator/development/python/docs/JobApi", "flex/coordinator/development/python/docs/JobStatus", "flex/coordinator/development/python/docs/LongText", "flex/coordinator/development/python/docs/NodeStatus", "flex/coordinator/development/python/docs/Parameter", "flex/coordinator/development/python/docs/PodStatus", "flex/coordinator/development/python/docs/PrimitiveType", "flex/coordinator/development/python/docs/ResourceUsage", "flex/coordinator/development/python/docs/RunningDeploymentInfo", "flex/coordinator/development/python/docs/RunningDeploymentStatus", "flex/coordinator/development/python/docs/SchemaMapping", "flex/coordinator/development/python/docs/ServiceApi", "flex/coordinator/development/python/docs/ServiceStatus", "flex/coordinator/development/python/docs/ServiceStatusSdkEndpoints", "flex/coordinator/development/python/docs/StartServiceRequest", "flex/coordinator/development/python/docs/StoredProcedureApi", "flex/coordinator/development/python/docs/StoredProcedureMeta", "flex/coordinator/development/python/docs/StringType", "flex/coordinator/development/python/docs/StringTypeString", "flex/coordinator/development/python/docs/TemporalType", "flex/coordinator/development/python/docs/TemporalTypeTemporal", "flex/coordinator/development/python/docs/TimeStampType", "flex/coordinator/development/python/docs/UpdateAlertMessageStatusRequest", "flex/coordinator/development/python/docs/UpdateStoredProcRequest", "flex/coordinator/development/python/docs/UploadFileResponse", "flex/coordinator/development/python/docs/UtilsApi", "flex/coordinator/development/python/docs/VertexMapping", "flex/coordinator/development/python/python_sdk", "flex/coordinator/getting_started", "flex/coordinator/restful_api", "flex/interactive/configuration", "flex/interactive/custom_graph_data", "flex/interactive/data_import", "flex/interactive/data_model", "flex/interactive/deployment", "flex/interactive/dev_guide", "flex/interactive/development/dev_and_test", "flex/interactive/development/java/APIResponseWithCode", "flex/interactive/development/java/BaseEdgeType", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInner", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/interactive/development/java/BasePropertyMeta", "flex/interactive/development/java/BaseVertexType", "flex/interactive/development/java/BaseVertexTypeXCsrParams", "flex/interactive/development/java/ColumnMapping", "flex/interactive/development/java/CreateEdgeType", "flex/interactive/development/java/CreateGraphRequest", "flex/interactive/development/java/CreateGraphResponse", "flex/interactive/development/java/CreateGraphSchemaRequest", "flex/interactive/development/java/CreateProcedureRequest", "flex/interactive/development/java/CreateProcedureResponse", "flex/interactive/development/java/CreatePropertyMeta", "flex/interactive/development/java/CreateVertexType", "flex/interactive/development/java/DateType", "flex/interactive/development/java/EdgeApi", "flex/interactive/development/java/EdgeData", "flex/interactive/development/java/EdgeMapping", "flex/interactive/development/java/EdgeMappingDestinationVertexMappingsInner", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInner", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInnerColumn", "flex/interactive/development/java/EdgeMappingTypeTriplet", "flex/interactive/development/java/EdgeRequest", "flex/interactive/development/java/EdgeStatistics", "flex/interactive/development/java/FixedChar", "flex/interactive/development/java/FixedCharChar", "flex/interactive/development/java/GSDataType", "flex/interactive/development/java/GetEdgeType", "flex/interactive/development/java/GetGraphResponse", "flex/interactive/development/java/GetGraphSchemaResponse", "flex/interactive/development/java/GetGraphStatisticsResponse", "flex/interactive/development/java/GetProcedureResponse", "flex/interactive/development/java/GetPropertyMeta", "flex/interactive/development/java/GetVertexType", "flex/interactive/development/java/GraphManagementApi", "flex/interactive/development/java/JobManagementApi", "flex/interactive/development/java/JobResponse", "flex/interactive/development/java/JobStatus", "flex/interactive/development/java/LongText", "flex/interactive/development/java/Parameter", "flex/interactive/development/java/PrimitiveType", "flex/interactive/development/java/ProcedureManagementApi", "flex/interactive/development/java/Property", "flex/interactive/development/java/QueryRequest", "flex/interactive/development/java/QueryServiceApi", "flex/interactive/development/java/SchemaMapping", "flex/interactive/development/java/SchemaMappingLoadingConfig", "flex/interactive/development/java/SchemaMappingLoadingConfigDataSource", "flex/interactive/development/java/SchemaMappingLoadingConfigFormat", "flex/interactive/development/java/SchemaMappingLoadingConfigXCsrParams", "flex/interactive/development/java/ServiceManagementApi", "flex/interactive/development/java/ServiceStatus", "flex/interactive/development/java/StartServiceRequest", "flex/interactive/development/java/StopServiceRequest", "flex/interactive/development/java/StoredProcedureMeta", "flex/interactive/development/java/StringType", "flex/interactive/development/java/StringTypeString", "flex/interactive/development/java/TemporalType", "flex/interactive/development/java/TemporalTypeTemporal", "flex/interactive/development/java/TimeStampType", "flex/interactive/development/java/TypedValue", "flex/interactive/development/java/UpdateProcedureRequest", "flex/interactive/development/java/UploadFileResponse", "flex/interactive/development/java/VarChar", "flex/interactive/development/java/VarCharVarChar", "flex/interactive/development/java/VertexApi", "flex/interactive/development/java/VertexData", "flex/interactive/development/java/VertexEdgeRequest", "flex/interactive/development/java/VertexMapping", "flex/interactive/development/java/VertexRequest", "flex/interactive/development/java/VertexStatistics", "flex/interactive/development/java/VertexTypePairStatistics", "flex/interactive/development/java/java_sdk", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/Driver", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/Session", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/common/Result", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/common/Status", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/impl/DefaultSession", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/utils/Decoder", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/utils/Encoder", "flex/interactive/development/java/reference/index", "flex/interactive/development/python/APIResponseWithCode", "flex/interactive/development/python/BaseEdgeType", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInner", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/interactive/development/python/BasePropertyMeta", "flex/interactive/development/python/BaseVertexType", "flex/interactive/development/python/BaseVertexTypeXCsrParams", "flex/interactive/development/python/ColumnMapping", "flex/interactive/development/python/CreateEdgeType", "flex/interactive/development/python/CreateGraphRequest", "flex/interactive/development/python/CreateGraphResponse", "flex/interactive/development/python/CreateGraphSchemaRequest", "flex/interactive/development/python/CreateProcedureRequest", "flex/interactive/development/python/CreateProcedureResponse", "flex/interactive/development/python/CreatePropertyMeta", "flex/interactive/development/python/CreateVertexType", "flex/interactive/development/python/DateType", "flex/interactive/development/python/EdgeApi", "flex/interactive/development/python/EdgeData", "flex/interactive/development/python/EdgeMapping", "flex/interactive/development/python/EdgeMappingDestinationVertexMappingsInner", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInner", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInnerColumn", "flex/interactive/development/python/EdgeMappingTypeTriplet", "flex/interactive/development/python/EdgeRequest", "flex/interactive/development/python/EdgeStatistics", "flex/interactive/development/python/FixedChar", "flex/interactive/development/python/FixedCharChar", "flex/interactive/development/python/GSDataType", "flex/interactive/development/python/GetEdgeType", "flex/interactive/development/python/GetGraphResponse", "flex/interactive/development/python/GetGraphSchemaResponse", "flex/interactive/development/python/GetGraphStatisticsResponse", "flex/interactive/development/python/GetProcedureResponse", "flex/interactive/development/python/GetPropertyMeta", "flex/interactive/development/python/GetVertexType", "flex/interactive/development/python/GraphManagementApi", "flex/interactive/development/python/JobManagementApi", "flex/interactive/development/python/JobResponse", "flex/interactive/development/python/JobStatus", "flex/interactive/development/python/LongText", "flex/interactive/development/python/ModelProperty", "flex/interactive/development/python/Parameter", "flex/interactive/development/python/PrimitiveType", "flex/interactive/development/python/ProcedureManagementApi", "flex/interactive/development/python/QueryRequest", "flex/interactive/development/python/QueryServiceApi", "flex/interactive/development/python/SchemaMapping", "flex/interactive/development/python/SchemaMappingLoadingConfig", "flex/interactive/development/python/SchemaMappingLoadingConfigDataSource", "flex/interactive/development/python/SchemaMappingLoadingConfigFormat", "flex/interactive/development/python/SchemaMappingLoadingConfigXCsrParams", "flex/interactive/development/python/ServiceManagementApi", "flex/interactive/development/python/ServiceStatus", "flex/interactive/development/python/StartServiceRequest", "flex/interactive/development/python/StopServiceRequest", "flex/interactive/development/python/StoredProcedureMeta", "flex/interactive/development/python/StringType", "flex/interactive/development/python/StringTypeString", "flex/interactive/development/python/TemporalType", "flex/interactive/development/python/TemporalTypeTemporal", "flex/interactive/development/python/TimeStampType", "flex/interactive/development/python/TypedValue", "flex/interactive/development/python/UpdateProcedureRequest", "flex/interactive/development/python/UploadFileResponse", "flex/interactive/development/python/VarChar", "flex/interactive/development/python/VarCharVarChar", "flex/interactive/development/python/VertexApi", "flex/interactive/development/python/VertexData", "flex/interactive/development/python/VertexEdgeRequest", "flex/interactive/development/python/VertexMapping", "flex/interactive/development/python/VertexRequest", "flex/interactive/development/python/VertexStatistics", "flex/interactive/development/python/VertexTypePairStatistics", "flex/interactive/development/python/driver", "flex/interactive/development/python/encoder", "flex/interactive/development/python/python_sdk", "flex/interactive/development/python/result", "flex/interactive/development/python/session", "flex/interactive/development/python/status", "flex/interactive/development/restful_api", "flex/interactive/development/stored_procedure/cpp_procedure", "flex/interactive/getting_started", "flex/interactive/glossary", "flex/interactive/installation", "flex/interactive/overview", "flex/interactive/stored_procedures", "flex/interactive_intro", "frag_intro", "frequently_asked_questions", "getting_started_gle", "graph_workloads", "graphscope_for_data_scientists", "how_to_report_bugs", "index", "interactive_engine/benchmark_tool", "interactive_engine/deployment", "interactive_engine/design_of_gie", "interactive_engine/dev_and_test", "interactive_engine/getting_started", "interactive_engine/gopt", "interactive_engine/neo4j/cypher_sdk", "interactive_engine/neo4j/llm_assistant", "interactive_engine/neo4j/supported_cypher", "interactive_engine/neo4j_eco", "interactive_engine/tinkerpop/faq", "interactive_engine/tinkerpop/guide_and_examples", "interactive_engine/tinkerpop/supported_gremlin_steps", "interactive_engine/tinkerpop/tinkerpop_gremlin", "interactive_engine/tinkerpop/tutorial_ldbc_gremlin", "interactive_engine/tinkerpop_eco", "java_tutorials", "key_features", "learning_engine/design_of_gle", "learning_engine/dev_and_test", "learning_engine/getting_started", "learning_engine/graph_sampling", "learning_engine/guide_and_examples", "learning_engine/tutorial_node_classification_k8s", "learning_engine/tutorial_node_classification_local", "learning_engine/tutorial_node_classification_pyg_k8s", "learning_engine/tutorial_node_classification_pyg_local", "loading_graphs", "overview/design_of_graphscope", "overview/getting_started", "overview/glossary", "overview/graph_analytics_workloads", "overview/graph_interactive_workloads", "overview/graph_learning_workloads", "overview/intro", "overview/positioning", "performance_and_benchmark", "python_tutorials", "reference/analytical_engine_index", "reference/app", "reference/context", "reference/cython_sdk", "reference/flex/index", "reference/gae_java/about", "reference/gae_java/index", "reference/generated/graphscope.Vertex", "reference/generated/graphscope.declare", "reference/generated/graphscope.framework.app.load_app", "reference/generated/graphscope.framework.dag_utils.add_column", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic", "reference/generated/graphscope.framework.dag_utils.bind_app", "reference/generated/graphscope.framework.dag_utils.clear_edges", "reference/generated/graphscope.framework.dag_utils.clear_graph", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe", "reference/generated/graphscope.framework.dag_utils.context_to_numpy", "reference/generated/graphscope.framework.dag_utils.copy_graph", "reference/generated/graphscope.framework.dag_utils.create_app", "reference/generated/graphscope.framework.dag_utils.create_graph", "reference/generated/graphscope.framework.dag_utils.create_graph_view", "reference/generated/graphscope.framework.dag_utils.create_loader", "reference/generated/graphscope.framework.dag_utils.create_subgraph", "reference/generated/graphscope.framework.dag_utils.create_unload_op", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow", "reference/generated/graphscope.framework.dag_utils.get_context_data", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph", "reference/generated/graphscope.framework.dag_utils.modify_edges", "reference/generated/graphscope.framework.dag_utils.modify_vertices", "reference/generated/graphscope.framework.dag_utils.output", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph", "reference/generated/graphscope.framework.dag_utils.project_to_simple", "reference/generated/graphscope.framework.dag_utils.report_graph", "reference/generated/graphscope.framework.dag_utils.run_app", "reference/generated/graphscope.framework.dag_utils.to_data_sink", "reference/generated/graphscope.framework.dag_utils.to_directed", "reference/generated/graphscope.framework.dag_utils.to_undirected", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor", "reference/generated/graphscope.framework.dag_utils.unload_app", "reference/generated/graphscope.framework.dag_utils.unload_context", "reference/generated/graphscope.framework.dag_utils.unload_graph", "reference/generated/graphscope.framework.operation.Operation.__init__", "reference/generated/graphscope.framework.operation.Operation.as_op_def", "reference/generated/graphscope.framework.operation.Operation.eval", "reference/generated/graphscope.framework.operation.Operation.evaluated", "reference/generated/graphscope.framework.operation.Operation.key", "reference/generated/graphscope.framework.operation.Operation.signature", "reference/generated/graphscope.g", "reference/generated/graphscope.get_default_session", "reference/generated/graphscope.graphlearn", "reference/generated/graphscope.gremlin", "reference/generated/graphscope.has_default_session", "reference/generated/graphscope.session", "reference/generated/graphscope.set_option", "reference/gnn_engine/algo_en", "reference/gnn_engine/data_loader_en", "reference/gnn_engine/graph_object_en", "reference/gnn_engine/graph_query_en", "reference/gnn_engine/graph_sampling_en", "reference/gnn_engine/graph_traverse_en", "reference/gnn_engine/gsl_en", "reference/gnn_engine/install_en", "reference/gnn_engine/model_programming_en", "reference/gnn_engine/negative_sampling_en", "reference/gnn_engine/operator", "reference/gnn_engine/other_source", "reference/gnn_engine/quick_start_en", "reference/gnn_engine/system_config", "reference/graph", "reference/interactive", "reference/learning", "reference/networkx/builtin", "reference/networkx/functions", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle", "reference/networkx/generated/graphscope.nx.classes.function.add_path", "reference/networkx/generated/graphscope.nx.classes.function.add_star", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy", "reference/networkx/generated/graphscope.nx.classes.function.degree", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram", "reference/networkx/generated/graphscope.nx.classes.function.density", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.edges", "reference/networkx/generated/graphscope.nx.classes.function.freeze", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.info", "reference/networkx/generated/graphscope.nx.classes.function.is_directed", "reference/networkx/generated/graphscope.nx.classes.function.is_empty", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted", "reference/networkx/generated/graphscope.nx.classes.function.neighbors", "reference/networkx/generated/graphscope.nx.classes.function.nodes", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.non_edges", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges", "reference/networkx/generated/graphscope.nx.classes.function.subgraph", "reference/networkx/generated/graphscope.nx.classes.function.to_directed", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph", "reference/networkx/generators", "reference/networkx/graphs", "reference/networkx/index", "reference/networkx/io", "reference/networkx/transformation", "reference/operation", "reference/python_index", "reference/selector", "reference/session", "resources_estimator", "storage_engine/gart", "storage_engine/getting_started", "storage_engine/graphar", "storage_engine/grin", "storage_engine/groot", "storage_engine/vineyard", "tutorial/builtin", "tutorial/scaling", "user_guide_and_examples_of_gae", "user_guide_and_examples_of_gle", "utilities/error_codes", "utilities/gs", "utilities/how_to_find_logs", "utilities/monitoring", "zh/analytics_engine", "zh/deployment", "zh/developer_guide", "zh/frequently_asked_questions", "zh/getting_started", "zh/graph_transformation", "zh/index", "zh/installation", "zh/interactive_engine", "zh/learning_engine", "zh/loading_graph", "zh/tutorials"], "filenames": ["analytical_engine/builtin_algorithms.md", "analytical_engine/customized_algorithms.md", "analytical_engine/deployment.md", "analytical_engine/design_of_gae.md", "analytical_engine/dev_and_test.md", "analytical_engine/faqs.md", "analytical_engine/flash.md", "analytical_engine/getting_started.md", "analytical_engine/guide_and_examples.md", "analytical_engine/ingress.md", "analytical_engine/key_concepts.rst", "analytical_engine/networkx_compatibility.md", "analytical_engine/overview_and_architecture.md", "analytical_engine/performance_tuning.md", "analytical_engine/programming_model_pie.md", "analytical_engine/tutorial_dev_algo_cpp_flash.md", "analytical_engine/tutorial_dev_algo_cpp_pie.md", "analytical_engine/tutorial_dev_algo_java.md", "analytical_engine/tutorial_dev_algo_python.rst", "analytical_engine/tutorial_networkx_algorithms.md", "analytical_engine/tutorial_networkx_operations.md", "analytical_engine/tutorial_run_builtin_algo.md", "analytical_engine/tutorial_run_giraph_apps.md", "analytical_engine/tutorial_run_graphx_apps.md", "analytical_engine/vertex_centric_models.md", "contact_us.md", "deployment/deploy_graphscope_on_clouds.md", "deployment/deploy_graphscope_on_self_managed_k8s.md", "deployment/deploy_graphscope_operator.md", "deployment/deploy_graphscope_with_helm.md", "deployment/deploy_with_existing_vineyard_cluster.md", "deployment/install_in_offline_env.md", "deployment/install_on_local.md", "deployment/persistent_storage_of_graphs_on_k8s.md", "design_of_gae.md", "development/code_style_guide.md", "development/dev_guide.md", "development/how_to_contribute.md", "development/how_to_debug.md", "development/how_to_instrument.md", "development/how_to_submit_pr.md", "development/how_to_test.md", "error_codes.md", "flex/coordinator.md", "flex/coordinator/dev_guide.md", "flex/coordinator/development/dev_and_test.md", "flex/coordinator/development/python/README.md", "flex/coordinator/development/python/docs/AlertApi.md", "flex/coordinator/development/python/docs/BaseEdgeType.md", "flex/coordinator/development/python/docs/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/coordinator/development/python/docs/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/coordinator/development/python/docs/BasePropertyMeta.md", "flex/coordinator/development/python/docs/BaseVertexType.md", "flex/coordinator/development/python/docs/BaseVertexTypeXCsrParams.md", "flex/coordinator/development/python/docs/ColumnMapping.md", "flex/coordinator/development/python/docs/ColumnMappingColumn.md", "flex/coordinator/development/python/docs/CreateAlertReceiverRequest.md", "flex/coordinator/development/python/docs/CreateAlertRuleRequest.md", "flex/coordinator/development/python/docs/CreateDataloadingJobResponse.md", "flex/coordinator/development/python/docs/CreateEdgeType.md", "flex/coordinator/development/python/docs/CreateGraphRequest.md", "flex/coordinator/development/python/docs/CreateGraphResponse.md", "flex/coordinator/development/python/docs/CreateGraphSchemaRequest.md", "flex/coordinator/development/python/docs/CreatePropertyMeta.md", "flex/coordinator/development/python/docs/CreateStoredProcRequest.md", "flex/coordinator/development/python/docs/CreateStoredProcResponse.md", "flex/coordinator/development/python/docs/CreateVertexType.md", "flex/coordinator/development/python/docs/DataSourceApi.md", "flex/coordinator/development/python/docs/DataloadingJobConfig.md", "flex/coordinator/development/python/docs/DataloadingJobConfigEdgesInner.md", "flex/coordinator/development/python/docs/DataloadingJobConfigLoadingConfig.md", "flex/coordinator/development/python/docs/DataloadingJobConfigLoadingConfigFormat.md", "flex/coordinator/development/python/docs/DataloadingJobConfigVerticesInner.md", "flex/coordinator/development/python/docs/DataloadingMRJobConfig.md", "flex/coordinator/development/python/docs/DateType.md", "flex/coordinator/development/python/docs/DeploymentApi.md", "flex/coordinator/development/python/docs/EdgeMapping.md", "flex/coordinator/development/python/docs/EdgeMappingTypeTriplet.md", "flex/coordinator/development/python/docs/Error.md", "flex/coordinator/development/python/docs/GSDataType.md", "flex/coordinator/development/python/docs/GetAlertMessageResponse.md", "flex/coordinator/development/python/docs/GetAlertReceiverResponse.md", "flex/coordinator/development/python/docs/GetAlertRuleResponse.md", "flex/coordinator/development/python/docs/GetEdgeType.md", "flex/coordinator/development/python/docs/GetGraphResponse.md", "flex/coordinator/development/python/docs/GetGraphSchemaResponse.md", "flex/coordinator/development/python/docs/GetPodLogResponse.md", "flex/coordinator/development/python/docs/GetPropertyMeta.md", "flex/coordinator/development/python/docs/GetResourceUsageResponse.md", "flex/coordinator/development/python/docs/GetStorageUsageResponse.md", "flex/coordinator/development/python/docs/GetStoredProcResponse.md", "flex/coordinator/development/python/docs/GetVertexType.md", "flex/coordinator/development/python/docs/GraphApi.md", "flex/coordinator/development/python/docs/JobApi.md", "flex/coordinator/development/python/docs/JobStatus.md", "flex/coordinator/development/python/docs/LongText.md", "flex/coordinator/development/python/docs/NodeStatus.md", "flex/coordinator/development/python/docs/Parameter.md", "flex/coordinator/development/python/docs/PodStatus.md", "flex/coordinator/development/python/docs/PrimitiveType.md", "flex/coordinator/development/python/docs/ResourceUsage.md", "flex/coordinator/development/python/docs/RunningDeploymentInfo.md", "flex/coordinator/development/python/docs/RunningDeploymentStatus.md", "flex/coordinator/development/python/docs/SchemaMapping.md", "flex/coordinator/development/python/docs/ServiceApi.md", "flex/coordinator/development/python/docs/ServiceStatus.md", "flex/coordinator/development/python/docs/ServiceStatusSdkEndpoints.md", "flex/coordinator/development/python/docs/StartServiceRequest.md", "flex/coordinator/development/python/docs/StoredProcedureApi.md", "flex/coordinator/development/python/docs/StoredProcedureMeta.md", "flex/coordinator/development/python/docs/StringType.md", "flex/coordinator/development/python/docs/StringTypeString.md", "flex/coordinator/development/python/docs/TemporalType.md", "flex/coordinator/development/python/docs/TemporalTypeTemporal.md", "flex/coordinator/development/python/docs/TimeStampType.md", "flex/coordinator/development/python/docs/UpdateAlertMessageStatusRequest.md", "flex/coordinator/development/python/docs/UpdateStoredProcRequest.md", "flex/coordinator/development/python/docs/UploadFileResponse.md", "flex/coordinator/development/python/docs/UtilsApi.md", "flex/coordinator/development/python/docs/VertexMapping.md", "flex/coordinator/development/python/python_sdk.md", "flex/coordinator/getting_started.md", "flex/coordinator/restful_api.rst", "flex/interactive/configuration.md", "flex/interactive/custom_graph_data.md", "flex/interactive/data_import.md", "flex/interactive/data_model.md", "flex/interactive/deployment.md", "flex/interactive/dev_guide.md", "flex/interactive/development/dev_and_test.md", "flex/interactive/development/java/APIResponseWithCode.md", "flex/interactive/development/java/BaseEdgeType.md", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/interactive/development/java/BasePropertyMeta.md", "flex/interactive/development/java/BaseVertexType.md", "flex/interactive/development/java/BaseVertexTypeXCsrParams.md", "flex/interactive/development/java/ColumnMapping.md", "flex/interactive/development/java/CreateEdgeType.md", "flex/interactive/development/java/CreateGraphRequest.md", "flex/interactive/development/java/CreateGraphResponse.md", "flex/interactive/development/java/CreateGraphSchemaRequest.md", "flex/interactive/development/java/CreateProcedureRequest.md", "flex/interactive/development/java/CreateProcedureResponse.md", "flex/interactive/development/java/CreatePropertyMeta.md", "flex/interactive/development/java/CreateVertexType.md", "flex/interactive/development/java/DateType.md", "flex/interactive/development/java/EdgeApi.md", "flex/interactive/development/java/EdgeData.md", "flex/interactive/development/java/EdgeMapping.md", "flex/interactive/development/java/EdgeMappingDestinationVertexMappingsInner.md", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInner.md", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInnerColumn.md", "flex/interactive/development/java/EdgeMappingTypeTriplet.md", "flex/interactive/development/java/EdgeRequest.md", "flex/interactive/development/java/EdgeStatistics.md", "flex/interactive/development/java/FixedChar.md", "flex/interactive/development/java/FixedCharChar.md", "flex/interactive/development/java/GSDataType.md", "flex/interactive/development/java/GetEdgeType.md", "flex/interactive/development/java/GetGraphResponse.md", "flex/interactive/development/java/GetGraphSchemaResponse.md", "flex/interactive/development/java/GetGraphStatisticsResponse.md", "flex/interactive/development/java/GetProcedureResponse.md", "flex/interactive/development/java/GetPropertyMeta.md", "flex/interactive/development/java/GetVertexType.md", "flex/interactive/development/java/GraphManagementApi.md", "flex/interactive/development/java/JobManagementApi.md", "flex/interactive/development/java/JobResponse.md", "flex/interactive/development/java/JobStatus.md", "flex/interactive/development/java/LongText.md", "flex/interactive/development/java/Parameter.md", "flex/interactive/development/java/PrimitiveType.md", "flex/interactive/development/java/ProcedureManagementApi.md", "flex/interactive/development/java/Property.md", "flex/interactive/development/java/QueryRequest.md", "flex/interactive/development/java/QueryServiceApi.md", "flex/interactive/development/java/SchemaMapping.md", "flex/interactive/development/java/SchemaMappingLoadingConfig.md", "flex/interactive/development/java/SchemaMappingLoadingConfigDataSource.md", "flex/interactive/development/java/SchemaMappingLoadingConfigFormat.md", "flex/interactive/development/java/SchemaMappingLoadingConfigXCsrParams.md", "flex/interactive/development/java/ServiceManagementApi.md", "flex/interactive/development/java/ServiceStatus.md", "flex/interactive/development/java/StartServiceRequest.md", "flex/interactive/development/java/StopServiceRequest.md", "flex/interactive/development/java/StoredProcedureMeta.md", "flex/interactive/development/java/StringType.md", "flex/interactive/development/java/StringTypeString.md", "flex/interactive/development/java/TemporalType.md", "flex/interactive/development/java/TemporalTypeTemporal.md", "flex/interactive/development/java/TimeStampType.md", "flex/interactive/development/java/TypedValue.md", "flex/interactive/development/java/UpdateProcedureRequest.md", "flex/interactive/development/java/UploadFileResponse.md", "flex/interactive/development/java/VarChar.md", "flex/interactive/development/java/VarCharVarChar.md", "flex/interactive/development/java/VertexApi.md", "flex/interactive/development/java/VertexData.md", "flex/interactive/development/java/VertexEdgeRequest.md", "flex/interactive/development/java/VertexMapping.md", "flex/interactive/development/java/VertexRequest.md", "flex/interactive/development/java/VertexStatistics.md", "flex/interactive/development/java/VertexTypePairStatistics.md", "flex/interactive/development/java/java_sdk.md", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/Driver.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/Session.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/common/Result.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/common/Status.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/impl/DefaultSession.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/utils/Decoder.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/utils/Encoder.rst", "flex/interactive/development/java/reference/index.rst", "flex/interactive/development/python/APIResponseWithCode.md", "flex/interactive/development/python/BaseEdgeType.md", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/interactive/development/python/BasePropertyMeta.md", "flex/interactive/development/python/BaseVertexType.md", "flex/interactive/development/python/BaseVertexTypeXCsrParams.md", "flex/interactive/development/python/ColumnMapping.md", "flex/interactive/development/python/CreateEdgeType.md", "flex/interactive/development/python/CreateGraphRequest.md", "flex/interactive/development/python/CreateGraphResponse.md", "flex/interactive/development/python/CreateGraphSchemaRequest.md", "flex/interactive/development/python/CreateProcedureRequest.md", "flex/interactive/development/python/CreateProcedureResponse.md", "flex/interactive/development/python/CreatePropertyMeta.md", "flex/interactive/development/python/CreateVertexType.md", "flex/interactive/development/python/DateType.md", "flex/interactive/development/python/EdgeApi.md", "flex/interactive/development/python/EdgeData.md", "flex/interactive/development/python/EdgeMapping.md", "flex/interactive/development/python/EdgeMappingDestinationVertexMappingsInner.md", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInner.md", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInnerColumn.md", "flex/interactive/development/python/EdgeMappingTypeTriplet.md", "flex/interactive/development/python/EdgeRequest.md", "flex/interactive/development/python/EdgeStatistics.md", "flex/interactive/development/python/FixedChar.md", "flex/interactive/development/python/FixedCharChar.md", "flex/interactive/development/python/GSDataType.md", "flex/interactive/development/python/GetEdgeType.md", "flex/interactive/development/python/GetGraphResponse.md", "flex/interactive/development/python/GetGraphSchemaResponse.md", "flex/interactive/development/python/GetGraphStatisticsResponse.md", "flex/interactive/development/python/GetProcedureResponse.md", "flex/interactive/development/python/GetPropertyMeta.md", "flex/interactive/development/python/GetVertexType.md", "flex/interactive/development/python/GraphManagementApi.md", "flex/interactive/development/python/JobManagementApi.md", "flex/interactive/development/python/JobResponse.md", "flex/interactive/development/python/JobStatus.md", "flex/interactive/development/python/LongText.md", "flex/interactive/development/python/ModelProperty.md", "flex/interactive/development/python/Parameter.md", "flex/interactive/development/python/PrimitiveType.md", "flex/interactive/development/python/ProcedureManagementApi.md", "flex/interactive/development/python/QueryRequest.md", "flex/interactive/development/python/QueryServiceApi.md", "flex/interactive/development/python/SchemaMapping.md", "flex/interactive/development/python/SchemaMappingLoadingConfig.md", "flex/interactive/development/python/SchemaMappingLoadingConfigDataSource.md", "flex/interactive/development/python/SchemaMappingLoadingConfigFormat.md", "flex/interactive/development/python/SchemaMappingLoadingConfigXCsrParams.md", "flex/interactive/development/python/ServiceManagementApi.md", "flex/interactive/development/python/ServiceStatus.md", "flex/interactive/development/python/StartServiceRequest.md", "flex/interactive/development/python/StopServiceRequest.md", "flex/interactive/development/python/StoredProcedureMeta.md", "flex/interactive/development/python/StringType.md", "flex/interactive/development/python/StringTypeString.md", "flex/interactive/development/python/TemporalType.md", "flex/interactive/development/python/TemporalTypeTemporal.md", "flex/interactive/development/python/TimeStampType.md", "flex/interactive/development/python/TypedValue.md", "flex/interactive/development/python/UpdateProcedureRequest.md", "flex/interactive/development/python/UploadFileResponse.md", "flex/interactive/development/python/VarChar.md", "flex/interactive/development/python/VarCharVarChar.md", "flex/interactive/development/python/VertexApi.md", "flex/interactive/development/python/VertexData.md", "flex/interactive/development/python/VertexEdgeRequest.md", "flex/interactive/development/python/VertexMapping.md", "flex/interactive/development/python/VertexRequest.md", "flex/interactive/development/python/VertexStatistics.md", "flex/interactive/development/python/VertexTypePairStatistics.md", "flex/interactive/development/python/driver.rst", "flex/interactive/development/python/encoder.rst", "flex/interactive/development/python/python_sdk.md", "flex/interactive/development/python/result.rst", "flex/interactive/development/python/session.rst", "flex/interactive/development/python/status.rst", "flex/interactive/development/restful_api.rst", "flex/interactive/development/stored_procedure/cpp_procedure.md", "flex/interactive/getting_started.md", "flex/interactive/glossary.md", "flex/interactive/installation.md", "flex/interactive/overview.md", "flex/interactive/stored_procedures.md", "flex/interactive_intro.md", "frag_intro.md", "frequently_asked_questions.rst", "getting_started_gle.md", "graph_workloads.md", "graphscope_for_data_scientists.md", "how_to_report_bugs.md", "index.rst", "interactive_engine/benchmark_tool.md", "interactive_engine/deployment.md", "interactive_engine/design_of_gie.md", "interactive_engine/dev_and_test.md", "interactive_engine/getting_started.md", "interactive_engine/gopt.md", "interactive_engine/neo4j/cypher_sdk.md", "interactive_engine/neo4j/llm_assistant.md", "interactive_engine/neo4j/supported_cypher.md", "interactive_engine/neo4j_eco.md", "interactive_engine/tinkerpop/faq.md", "interactive_engine/tinkerpop/guide_and_examples.md", "interactive_engine/tinkerpop/supported_gremlin_steps.md", "interactive_engine/tinkerpop/tinkerpop_gremlin.md", "interactive_engine/tinkerpop/tutorial_ldbc_gremlin.md", "interactive_engine/tinkerpop_eco.md", "java_tutorials.md", "key_features.md", "learning_engine/design_of_gle.md", "learning_engine/dev_and_test.md", "learning_engine/getting_started.md", "learning_engine/graph_sampling.md", "learning_engine/guide_and_examples.md", "learning_engine/tutorial_node_classification_k8s.md", "learning_engine/tutorial_node_classification_local.md", "learning_engine/tutorial_node_classification_pyg_k8s.md", "learning_engine/tutorial_node_classification_pyg_local.md", "loading_graphs.rst", "overview/design_of_graphscope.md", "overview/getting_started.md", "overview/glossary.md", "overview/graph_analytics_workloads.md", "overview/graph_interactive_workloads.md", "overview/graph_learning_workloads.md", "overview/intro.md", "overview/positioning.md", "performance_and_benchmark.md", "python_tutorials.md", "reference/analytical_engine_index.rst", "reference/app.rst", "reference/context.rst", "reference/cython_sdk.rst", "reference/flex/index.rst", "reference/gae_java/about.rst", "reference/gae_java/index.rst", "reference/generated/graphscope.Vertex.rst", "reference/generated/graphscope.declare.rst", "reference/generated/graphscope.framework.app.load_app.rst", "reference/generated/graphscope.framework.dag_utils.add_column.rst", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph.rst", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic.rst", "reference/generated/graphscope.framework.dag_utils.bind_app.rst", "reference/generated/graphscope.framework.dag_utils.clear_edges.rst", "reference/generated/graphscope.framework.dag_utils.clear_graph.rst", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.context_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.copy_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_app.rst", "reference/generated/graphscope.framework.dag_utils.create_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_graph_view.rst", "reference/generated/graphscope.framework.dag_utils.create_loader.rst", "reference/generated/graphscope.framework.dag_utils.create_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.create_unload_op.rst", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow.rst", "reference/generated/graphscope.framework.dag_utils.get_context_data.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.modify_edges.rst", "reference/generated/graphscope.framework.dag_utils.modify_vertices.rst", "reference/generated/graphscope.framework.dag_utils.output.rst", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph.rst", "reference/generated/graphscope.framework.dag_utils.project_to_simple.rst", "reference/generated/graphscope.framework.dag_utils.report_graph.rst", "reference/generated/graphscope.framework.dag_utils.run_app.rst", "reference/generated/graphscope.framework.dag_utils.to_data_sink.rst", "reference/generated/graphscope.framework.dag_utils.to_directed.rst", "reference/generated/graphscope.framework.dag_utils.to_undirected.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor.rst", "reference/generated/graphscope.framework.dag_utils.unload_app.rst", "reference/generated/graphscope.framework.dag_utils.unload_context.rst", "reference/generated/graphscope.framework.dag_utils.unload_graph.rst", "reference/generated/graphscope.framework.operation.Operation.__init__.rst", "reference/generated/graphscope.framework.operation.Operation.as_op_def.rst", "reference/generated/graphscope.framework.operation.Operation.eval.rst", "reference/generated/graphscope.framework.operation.Operation.evaluated.rst", "reference/generated/graphscope.framework.operation.Operation.key.rst", "reference/generated/graphscope.framework.operation.Operation.signature.rst", "reference/generated/graphscope.g.rst", "reference/generated/graphscope.get_default_session.rst", "reference/generated/graphscope.graphlearn.rst", "reference/generated/graphscope.gremlin.rst", "reference/generated/graphscope.has_default_session.rst", "reference/generated/graphscope.session.rst", "reference/generated/graphscope.set_option.rst", "reference/gnn_engine/algo_en.rst", "reference/gnn_engine/data_loader_en.rst", "reference/gnn_engine/graph_object_en.rst", "reference/gnn_engine/graph_query_en.rst", "reference/gnn_engine/graph_sampling_en.rst", "reference/gnn_engine/graph_traverse_en.rst", "reference/gnn_engine/gsl_en.rst", "reference/gnn_engine/install_en.rst", "reference/gnn_engine/model_programming_en.rst", "reference/gnn_engine/negative_sampling_en.rst", "reference/gnn_engine/operator.rst", "reference/gnn_engine/other_source.rst", "reference/gnn_engine/quick_start_en.rst", "reference/gnn_engine/system_config.rst", "reference/graph.rst", "reference/interactive.rst", "reference/learning.rst", "reference/networkx/builtin.rst", "reference/networkx/functions.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_path.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_star.rst", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram.rst", "reference/networkx/generated/graphscope.nx.classes.function.density.rst", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.freeze.rst", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.info.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_empty.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g.rst", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques.rst", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model.rst", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph.rst", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph.rst", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge.rst", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph.rst", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree.rst", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree.rst", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph.rst", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph.rst", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph.rst", "reference/networkx/generators.rst", "reference/networkx/graphs.rst", "reference/networkx/index.rst", "reference/networkx/io.rst", "reference/networkx/transformation.rst", "reference/operation.rst", "reference/python_index.rst", "reference/selector.rst", "reference/session.rst", "resources_estimator.md", "storage_engine/gart.md", "storage_engine/getting_started.md", "storage_engine/graphar.md", "storage_engine/grin.md", "storage_engine/groot.md", "storage_engine/vineyard.md", "tutorial/builtin.rst", "tutorial/scaling.rst", "user_guide_and_examples_of_gae.md", "user_guide_and_examples_of_gle.md", "utilities/error_codes.md", "utilities/gs.md", "utilities/how_to_find_logs.md", "utilities/monitoring.md", "zh/analytics_engine.rst", "zh/deployment.rst", "zh/developer_guide.rst", "zh/frequently_asked_questions.rst", "zh/getting_started.rst", "zh/graph_transformation.rst", "zh/index.rst", "zh/installation.rst", "zh/interactive_engine.rst", "zh/learning_engine.rst", "zh/loading_graph.rst", "zh/tutorials.rst"], "titles": ["Built-in Algorithms", "Customized Algorithms", "Deployment for GAE", "Design of Analytical Engine", "Dev and Test", "FAQs", "Programming Model: FLASH", "Getting Started", "Guide and Examples", "Ingress: Incrementalize Graph Algorithms", "Key Concepts", "NetworkX Compatibility", "Overview and Architecture", "Performance Tuning", "Programming Model: PIE", "Tutorial: Develop Your Algorithms in C++ with FLASH Model", "Tutorial: Develop your Algorithm in C++ with PIE Model", "Tutorial: Develop your Algorithm in Java with PIE Model", "Tutorial: Develop algorithms in Python", "Tutorial: Graph Algorithms with NetworkX APIs", "Tutorial: Graph Operations with NetworkX APIs", "Tutorial: Running Builtin Algorithms", "Tutorial: Run Giraph Applications on GraphScope", "Tutorial: Run GraphX Applications on GraphScope", "Vertex-Centric Model", "Contact Us", "Deploy GraphScope on Clouds", "Deploy on K8s Cluster", "Deploy GraphScope Operator", "Deploy GraphScope with <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code>", "Deploy with Existing Vineyard Cluster", "Install GraphScope in offline environment", "Install GraphScope on Local", "Persistent storage of graphs on the Kubernetes cluster", "Design of Analytical Engine", "Code Style Guide", "Development Guide", "How to Contribute", "Debugging on local deployment", "How to instrument", "How to Submit Pull-requests", "How to Test", "Error Codes", "Coordinator", "Development guide", "Dev and Test", "Coordinator Python SDK Reference", "graphscope.flex.rest.AlertApi", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "ColumnMappingColumn", "CreateAlertReceiverRequest", "CreateAlertRuleRequest", "CreateDataloadingJobResponse", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreatePropertyMeta", "CreateStoredProcRequest", "CreateStoredProcResponse", "CreateVertexType", "graphscope.flex.rest.DataSourceApi", "DataloadingJobConfig", "DataloadingJobConfigEdgesInner", "DataloadingJobConfigLoadingConfig", "DataloadingJobConfigLoadingConfigFormat", "DataloadingJobConfigVerticesInner", "DataloadingMRJobConfig", "DateType", "graphscope.flex.rest.DeploymentApi", "EdgeMapping", "EdgeMappingTypeTriplet", "Error", "GSDataType", "GetAlertMessageResponse", "GetAlertReceiverResponse", "GetAlertRuleResponse", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetPodLogResponse", "GetPropertyMeta", "GetResourceUsageResponse", "GetStorageUsageResponse", "GetStoredProcResponse", "GetVertexType", "graphscope.flex.rest.GraphApi", "graphscope.flex.rest.JobApi", "JobStatus", "LongText", "NodeStatus", "Parameter", "PodStatus", "PrimitiveType", "ResourceUsage", "RunningDeploymentInfo", "RunningDeploymentStatus", "SchemaMapping", "graphscope.flex.rest.ServiceApi", "ServiceStatus", "ServiceStatusSdkEndpoints", "StartServiceRequest", "graphscope.flex.rest.StoredProcedureApi", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "UpdateAlertMessageStatusRequest", "UpdateStoredProcRequest", "UploadFileResponse", "graphscope.flex.rest.UtilsApi", "VertexMapping", "FLEX Coordinator Python SDK", "Getting Started", "Coordinator RESTFul API", "Configuration", "Using Custom Graph", "Data Import Configuration", "Data Model", "Deployment", "Development guide", "Dev and Test", "APIResponseWithCode", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreateProcedureRequest", "CreateProcedureResponse", "CreatePropertyMeta", "CreateVertexType", "DateType", "EdgeAPI", "EdgeData", "EdgeMapping", "EdgeMappingDestinationVertexMappingsInner", "EdgeMappingSourceVertexMappingsInner", "EdgeMappingSourceVertexMappingsInnerColumn", "EdgeMappingTypeTriplet", "EdgeRequest", "EdgeStatistics", "FixedChar", "FixedCharChar", "GSDataType", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetGraphStatisticsResponse", "GetProcedureResponse", "GetPropertyMeta", "GetVertexType", "GraphManagementApi", "JobManagementApi", "JobResponse", "JobStatus", "LongText", "Parameter", "PrimitiveType", "ProcedureManagementApi", "Property", "QueryRequest", "QueryServiceApi", "SchemaMapping", "SchemaMappingLoadingConfig", "SchemaMappingLoadingConfigDataSource", "SchemaMappingLoadingConfigFormat", "SchemaMappingLoadingConfigXCsrParams", "ServiceManagementApi", "ServiceStatus", "StartServiceRequest", "StopServiceRequest", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateProcedureRequest", "UploadFileResponse", "VarChar", "VarCharVarChar", "VertexApi", "VertexData", "VertexEdgeRequest", "VertexMapping", "VertexRequest", "VertexStatistics", "VertexTypePairStatistics", "Java SDK Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "APIResponseWithCode", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreateProcedureRequest", "CreateProcedureResponse", "CreatePropertyMeta", "CreateVertexType", "DateType", "EdgeApi", "EdgeData", "EdgeMapping", "EdgeMappingDestinationVertexMappingsInner", "EdgeMappingSourceVertexMappingsInner", "EdgeMappingSourceVertexMappingsInnerColumn", "EdgeMappingTypeTriplet", "EdgeRequest", "EdgeStatistics", "FixedChar", "FixedCharChar", "GSDataType", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetGraphStatisticsResponse", "GetProcedureResponse", "GetPropertyMeta", "GetVertexType", "GraphManagementApI", "gs_interactive.AdminServiceJobManagementApi", "JobResponse", "JobStatus", "LongText", "ModelProperty", "Parameter", "PrimitiveType", "gs_interactive.AdminServiceProcedureManagementApi", "QueryRequest", "gs_interactive.QueryServiceApi", "SchemaMapping", "SchemaMappingLoadingConfig", "SchemaMappingLoadingConfigDataSource", "SchemaMappingLoadingConfigFormat", "SchemaMappingLoadingConfigXCsrParams", "gs_interactive.AdminServiceServiceManagementApi", "ServiceStatus", "StartServiceRequest", "StopServiceRequest", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateProcedureRequest", "UploadFileResponse", "VarChar", "VarCharVarChar", "VertexApi", "VertexData", "VertexEdgeRequest", "VertexMapping", "VertexRequest", "VertexStatistics", "VertexTypePairStatistics", "Driver", "Encoder and Deocder", "Python SDK Reference", "Result", "Session", "Status", "Interactive RESTFul API", "Create c++ Stored Procedures on GraphScope Interactive", "Getting Started", "Glossary", "Installation", "Overview", "Stored Procedures", "GraphScope Interactive", "Introduction to ArrowFragment", "Frequently Asked Questions", "Getting Started for GLE", "Graph Workloads", "GraphScope for Data Scientists", "How to Report Bugs", "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba", "A Generic Benchmark Tool", "Standalone Deployment for GIE", "Design of GIE", "Dev and Test", "Getting Started", "GOpt: A Graph-Native Query Optimization Framework", "GIE for Cypher", "Using LLM as an Assistant in GIE", "Cypher Support", "Neo4j Ecosystem", "FAQs for GIE Gremlin Usage", "Guide and Examples", "Supported Gremlin Steps", "GIE for Gremlin", "Tutorial: LDBC Gremlin", "Apache TinkerPop Ecosystem", "Tutorials for Java Users", "Key Features", "Design of GLE", "Dev and Test", "Getting Started", "Graph Sampling", "Guide and Examples", "Tutorial: Training a Node Classification Model on K8s Cluster", "Tutorial: Training a Node Classification Model on Your Local Machine", "Tutorial: Training a Node Classification Model (PyG) on a K8S Cluster", "Tutorial: Training a Node Classification Model (PyG) on Your Local Machine", "Loading Graphs", "Design of GraphScope", "Getting Started", "Glossary", "Graph Analytics Workloads", "Graph Interactive Workloads", "Graph Learning Workloads", "Introducing GraphScope", "Positioning of GraphScope", "Performance and Benchmark", "Tutorials for Python Users", "Analytical Engine API Reference", "Analytical App", "Context", "Cython SDK API", "Flex API Reference", "About Grape JDK", "Java Reference (javadoc)", "graphscope.Vertex", "graphscope.declare", "graphscope.framework.app.load_app", "graphscope.framework.dag_utils.add_column", "graphscope.framework.dag_utils.add_labels_to_graph", "graphscope.framework.dag_utils.arrow_to_dynamic", "graphscope.framework.dag_utils.bind_app", "graphscope.framework.dag_utils.clear_edges", "graphscope.framework.dag_utils.clear_graph", "graphscope.framework.dag_utils.context_to_dataframe", "graphscope.framework.dag_utils.context_to_numpy", "graphscope.framework.dag_utils.copy_graph", "graphscope.framework.dag_utils.create_app", "graphscope.framework.dag_utils.create_graph", "graphscope.framework.dag_utils.create_graph_view", "graphscope.framework.dag_utils.create_loader", "graphscope.framework.dag_utils.create_subgraph", "graphscope.framework.dag_utils.create_unload_op", "graphscope.framework.dag_utils.dynamic_to_arrow", "graphscope.framework.dag_utils.get_context_data", "graphscope.framework.dag_utils.graph_to_dataframe", "graphscope.framework.dag_utils.graph_to_numpy", "graphscope.framework.dag_utils.gremlin_to_subgraph", "graphscope.framework.dag_utils.modify_edges", "graphscope.framework.dag_utils.modify_vertices", "graphscope.framework.dag_utils.output", "graphscope.framework.dag_utils.project_arrow_property_graph", "graphscope.framework.dag_utils.project_to_simple", "graphscope.framework.dag_utils.report_graph", "graphscope.framework.dag_utils.run_app", "graphscope.framework.dag_utils.to_data_sink", "graphscope.framework.dag_utils.to_directed", "graphscope.framework.dag_utils.to_undirected", "graphscope.framework.dag_utils.to_vineyard_dataframe", "graphscope.framework.dag_utils.to_vineyard_tensor", "graphscope.framework.dag_utils.unload_app", "graphscope.framework.dag_utils.unload_context", "graphscope.framework.dag_utils.unload_graph", "graphscope.framework.operation.Operation.__init__", "graphscope.framework.operation.Operation.as_op_def", "graphscope.framework.operation.Operation.eval", "graphscope.framework.operation.Operation.evaluated", "graphscope.framework.operation.Operation.key", "graphscope.framework.operation.Operation.signature", "graphscope.g", "graphscope.get_default_session", "graphscope.graphlearn", "graphscope.gremlin", "graphscope.has_default_session", "graphscope.session", "graphscope.set_option", "Developing Your Own Model", "Data Source", "Graph Object", "Graph Query", "Graph Sampling", "Graph Traversal", "Graph Sampling Language\uff08GSL)", "Install from pip", "Graph Learning Model", "Negative Sampling", "Defining Your Own Operator", "Integrating Other Data Sources", "Quick Start", "System configuration", "Graph", "Interactive Query", "Graph Learning", "Builtin algorithms", "Functions", "graphscope.nx.classes.function.add_cycle", "graphscope.nx.classes.function.add_path", "graphscope.nx.classes.function.add_star", "graphscope.nx.classes.function.all_neighbors", "graphscope.nx.classes.function.common_neighbors", "graphscope.nx.classes.function.create_empty_copy", "graphscope.nx.classes.function.degree", "graphscope.nx.classes.function.degree_histogram", "graphscope.nx.classes.function.density", "graphscope.nx.classes.function.edge_subgraph", "graphscope.nx.classes.function.edges", "graphscope.nx.classes.function.freeze", "graphscope.nx.classes.function.induced_subgraph", "graphscope.nx.classes.function.info", "graphscope.nx.classes.function.is_directed", "graphscope.nx.classes.function.is_empty", "graphscope.nx.classes.function.is_frozen", "graphscope.nx.classes.function.is_negatively_weighted", "graphscope.nx.classes.function.is_weighted", "graphscope.nx.classes.function.neighbors", "graphscope.nx.classes.function.nodes", "graphscope.nx.classes.function.nodes_with_selfloops", "graphscope.nx.classes.function.non_edges", "graphscope.nx.classes.function.non_neighbors", "graphscope.nx.classes.function.number_of_edges", "graphscope.nx.classes.function.number_of_nodes", "graphscope.nx.classes.function.number_of_selfloops", "graphscope.nx.classes.function.selfloop_edges", "graphscope.nx.classes.function.subgraph", "graphscope.nx.classes.function.to_directed", "graphscope.nx.classes.function.to_undirected", "graphscope.nx.generators.atlas.graph_atlas", "graphscope.nx.generators.atlas.graph_atlas_g", "graphscope.nx.generators.classic.balanced_tree", "graphscope.nx.generators.classic.barbell_graph", "graphscope.nx.generators.classic.binomial_tree", "graphscope.nx.generators.classic.circulant_graph", "graphscope.nx.generators.classic.circular_ladder_graph", "graphscope.nx.generators.classic.complete_graph", "graphscope.nx.generators.classic.complete_multipartite_graph", "graphscope.nx.generators.classic.cycle_graph", "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "graphscope.nx.generators.classic.empty_graph", "graphscope.nx.generators.classic.full_rary_tree", "graphscope.nx.generators.classic.ladder_graph", "graphscope.nx.generators.classic.lollipop_graph", "graphscope.nx.generators.classic.null_graph", "graphscope.nx.generators.classic.path_graph", "graphscope.nx.generators.classic.star_graph", "graphscope.nx.generators.classic.trivial_graph", "graphscope.nx.generators.classic.turan_graph", "graphscope.nx.generators.classic.wheel_graph", "graphscope.nx.generators.community.LFR_benchmark_graph", "graphscope.nx.generators.community.caveman_graph", "graphscope.nx.generators.community.connected_caveman_graph", "graphscope.nx.generators.community.gaussian_random_partition_graph", "graphscope.nx.generators.community.planted_partition_graph", "graphscope.nx.generators.community.random_partition_graph", "graphscope.nx.generators.community.relaxed_caveman_graph", "graphscope.nx.generators.community.ring_of_cliques", "graphscope.nx.generators.community.stochastic_block_model", "graphscope.nx.generators.community.windmill_graph", "graphscope.nx.generators.degree_seq.configuration_model", "graphscope.nx.generators.degree_seq.degree_sequence_tree", "graphscope.nx.generators.degree_seq.directed_configuration_model", "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "graphscope.nx.generators.degree_seq.expected_degree_graph", "graphscope.nx.generators.degree_seq.havel_hakimi_graph", "graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "graphscope.nx.generators.directed.gn_graph", "graphscope.nx.generators.directed.gnc_graph", "graphscope.nx.generators.directed.gnr_graph", "graphscope.nx.generators.directed.random_k_out_graph", "graphscope.nx.generators.directed.scale_free_graph", "graphscope.nx.generators.duplication.duplication_divergence_graph", "graphscope.nx.generators.duplication.partial_duplication_graph", "graphscope.nx.generators.ego.ego_graph", "graphscope.nx.generators.expanders.chordal_cycle_graph", "graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "graphscope.nx.generators.expanders.paley_graph", "graphscope.nx.generators.geometric.geographical_threshold_graph", "graphscope.nx.generators.geometric.random_geometric_graph", "graphscope.nx.generators.geometric.soft_random_geometric_graph", "graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "graphscope.nx.generators.geometric.waxman_graph", "graphscope.nx.generators.harary_graph.hkn_harary_graph", "graphscope.nx.generators.harary_graph.hnm_harary_graph", "graphscope.nx.generators.intersection.general_random_intersection_graph", "graphscope.nx.generators.intersection.k_random_intersection_graph", "graphscope.nx.generators.intersection.uniform_random_intersection_graph", "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "graphscope.nx.generators.mycielski.mycielski_graph", "graphscope.nx.generators.mycielski.mycielskian", "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "graphscope.nx.generators.small.LCF_graph", "graphscope.nx.generators.small.bull_graph", "graphscope.nx.generators.small.chvatal_graph", "graphscope.nx.generators.small.cubical_graph", "graphscope.nx.generators.small.desargues_graph", "graphscope.nx.generators.small.diamond_graph", "graphscope.nx.generators.small.dodecahedral_graph", "graphscope.nx.generators.small.frucht_graph", "graphscope.nx.generators.small.heawood_graph", "graphscope.nx.generators.small.house_graph", "graphscope.nx.generators.small.house_x_graph", "graphscope.nx.generators.small.icosahedral_graph", "graphscope.nx.generators.small.krackhardt_kite_graph", "graphscope.nx.generators.small.make_small_graph", "graphscope.nx.generators.small.moebius_kantor_graph", "graphscope.nx.generators.small.octahedral_graph", "graphscope.nx.generators.small.pappus_graph", "graphscope.nx.generators.small.petersen_graph", "graphscope.nx.generators.small.sedgewick_maze_graph", "graphscope.nx.generators.small.tetrahedral_graph", "graphscope.nx.generators.small.truncated_cube_graph", "graphscope.nx.generators.small.truncated_tetrahedron_graph", "graphscope.nx.generators.small.tutte_graph", "graphscope.nx.generators.social.davis_southern_women_graph", "graphscope.nx.generators.social.florentine_families_graph", "graphscope.nx.generators.social.karate_club_graph", "graphscope.nx.generators.social.les_miserables_graph", "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "graphscope.nx.generators.sudoku.sudoku_graph", "graphscope.nx.generators.trees.prefix_tree", "graphscope.nx.generators.trees.random_tree", "graphscope.nx.generators.triads.triad_graph", "networkx.generators.internet_as_graphs.random_internet_as_graph", "networkx.generators.stochastic.stochastic_graph", "Graph generators", "Graph types", "NetworkX-style API", "Reading graphs", "Graph Transformation", "Operation", "Python API Reference", "Selector", "Session", "Resources Estimator", "GART: Bridging the Gap between Relational OLTP and Graph Workloads", "Getting Started", "GraphAr: Standard Graph Data File Format", "GRIN: Graph Retrieval INterface", "Groot: Persistent Graph Store", "In-memory immutable graphs on Vineyard", "Applications and algorithms", "Scaling and repartitioning", "User Guide and Examples of GAE", "User Guide and Examples of GLE", "Error Codes", "Command-line Utility <code class=\"docutils literal notranslate\"><span class=\"pre\">gsctl</span></code>", "How to Find logs", "Monitoring", "\u56fe\u5206\u6790\u5f15\u64ce", "\u90e8\u7f72", "\u5f00\u53d1\u8005\u6307\u5357", "\u5e38\u89c1\u95ee\u9898", "\u5feb\u901f\u4e0a\u624b", "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c", "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf", "\u5b89\u88c5", "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce", "\u56fe\u5b66\u4e60\u5f15\u64ce", "\u8f7d\u56fe", "\u5165\u95e8\u6559\u7a0b"], "terms": {"The": [0, 1, 2, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 27, 29, 31, 32, 34, 36, 37, 38, 41, 42, 43, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 123, 124, 125, 126, 127, 129, 147, 166, 167, 173, 176, 197, 204, 230, 249, 250, 257, 259, 280, 287, 289, 291, 294, 295, 297, 299, 300, 302, 308, 309, 311, 312, 313, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 328, 329, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 357, 375, 376, 377, 380, 388, 390, 391, 398, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 425, 426, 430, 431, 432, 435, 436, 438, 440, 441, 446, 449, 454, 455, 456, 457, 458, 459, 462, 465, 468, 471, 473, 474, 475, 477, 478, 480, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 541, 542, 543, 545, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 562, 563, 565, 568, 569, 570, 571, 572, 573, 576, 577, 579], "graph": [0, 1, 3, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 29, 36, 37, 38, 46, 67, 92, 93, 104, 108, 121, 123, 128, 147, 166, 167, 173, 176, 182, 183, 197, 230, 249, 250, 257, 259, 265, 266, 280, 291, 295, 296, 299, 300, 302, 308, 309, 310, 311, 312, 314, 316, 317, 320, 321, 323, 324, 328, 330, 338, 342, 345, 346, 347, 348, 349, 356, 357, 358, 359, 360, 361, 364, 366, 367, 369, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 390, 397, 399, 405, 411, 414, 415, 419, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 557, 560, 561, 562, 563, 572, 573, 576, 579, 583, 584, 585, 587, 588, 589], "analyt": [0, 1, 5, 8, 12, 14, 15, 16, 17, 18, 23, 27, 32, 36, 37, 38, 41, 302, 322, 324, 338, 340, 342, 343, 345, 349, 351, 354, 359, 418, 556, 561, 569, 572, 573, 579], "engin": [0, 1, 2, 5, 8, 16, 17, 23, 27, 28, 30, 32, 38, 41, 43, 45, 101, 123, 128, 296, 298, 302, 305, 308, 309, 310, 311, 315, 318, 319, 322, 326, 330, 331, 335, 337, 338, 339, 340, 341, 343, 347, 351, 359, 375, 399, 404, 412, 418, 419, 420, 556, 562, 563, 565, 569, 570, 571, 572, 582, 583], "gae": [0, 3, 10, 12, 14, 15, 28, 32, 34, 302, 307, 324, 325, 336, 339, 343, 344, 345, 351, 375, 419, 580, 581], "graphscop": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 18, 24, 33, 34, 35, 37, 38, 39, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 124, 125, 126, 127, 128, 129, 147, 166, 167, 173, 176, 182, 197, 204, 289, 295, 296, 297, 298, 299, 301, 302, 304, 308, 309, 311, 313, 314, 315, 319, 320, 321, 322, 324, 325, 327, 330, 331, 332, 333, 334, 335, 337, 338, 340, 344, 345, 347, 348, 351, 418, 419, 420, 421, 556, 558, 559, 560, 561, 562, 563, 564, 568, 569, 570, 571, 572, 573, 576, 579, 580, 582, 583, 584, 587, 589, 590], "offer": [0, 2, 9, 12, 20, 34, 43, 121, 124, 125, 126, 204, 295, 297, 298, 299, 307, 311, 313, 316, 321, 325, 326, 336, 338, 342, 343, 568], "mani": [0, 4, 6, 10, 12, 13, 14, 24, 32, 34, 36, 37, 45, 126, 294, 298, 300, 302, 305, 310, 327, 335, 337, 338, 339, 341, 405, 412, 459, 503, 505, 556, 568, 573], "which": [0, 2, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 38, 41, 45, 124, 125, 126, 129, 204, 265, 289, 294, 297, 298, 299, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 349, 351, 355, 358, 371, 380, 382, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 418, 419, 420, 421, 435, 460, 462, 475, 476, 477, 485, 487, 504, 505, 506, 513, 515, 516, 534, 546, 548, 550, 554, 555, 556, 558, 559, 560, 562, 563, 565, 567, 568, 569, 570, 571, 573, 576], "enabl": [0, 1, 4, 6, 13, 15, 17, 18, 23, 31, 56, 57, 81, 82, 123, 128, 163, 186, 246, 269, 297, 298, 299, 302, 308, 321, 322, 326, 331, 332, 336, 337, 338, 340, 341, 342, 343, 344, 346, 415, 421, 556, 563, 568, 569, 572, 573, 577], "user": [0, 2, 4, 6, 9, 11, 12, 13, 14, 15, 17, 18, 22, 23, 24, 27, 29, 31, 34, 37, 41, 43, 46, 124, 125, 126, 128, 289, 294, 295, 297, 298, 302, 307, 308, 310, 313, 315, 316, 318, 320, 322, 325, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 404, 406, 407, 408, 409, 410, 411, 413, 416, 419, 556, 562, 563, 565, 568, 569, 572, 583, 586, 587], "analyz": [0, 7, 13, 19, 27, 308, 321, 336, 337, 339, 340, 342, 410, 568], "data": [0, 2, 3, 4, 6, 9, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 27, 30, 31, 33, 34, 67, 93, 118, 121, 128, 129, 288, 295, 296, 298, 300, 302, 307, 308, 310, 311, 315, 317, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 354, 356, 362, 363, 368, 373, 374, 378, 386, 387, 404, 406, 407, 408, 409, 410, 414, 418, 428, 434, 450, 451, 466, 483, 499, 518, 548, 556, 558, 559, 562, 563, 565, 568, 570, 571, 573, 579, 580, 582, 583, 588], "least": [0, 6, 37, 124, 322, 421, 455, 477], "effort": [0, 34, 298, 320, 344, 568], "cover": [0, 6, 15, 41, 329], "wide": [0, 11, 12, 24, 312, 324, 325, 329, 336, 337, 339, 340, 341, 343, 408, 567, 573], "rang": [0, 13, 18, 123, 125, 126, 313, 318, 320, 322, 325, 328, 329, 331, 332, 333, 334, 336, 337, 340, 343, 346, 348, 349, 362, 363, 373, 374, 378, 386, 387, 404, 409, 413, 461, 463, 465, 468, 471, 483, 489, 503, 504, 505, 506, 534, 556, 561, 568, 579, 582, 583, 587, 588], "applic": [0, 1, 4, 6, 8, 10, 11, 13, 14, 24, 34, 39, 47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 182, 197, 204, 230, 249, 250, 257, 265, 280, 289, 296, 297, 298, 302, 309, 310, 313, 314, 321, 323, 325, 326, 338, 339, 340, 341, 344, 346, 347, 349, 359, 408, 487, 511, 567, 577], "commun": [0, 4, 6, 8, 9, 12, 15, 16, 18, 24, 27, 325, 336, 337, 338, 339, 342, 346, 347, 351, 406, 414, 507, 548, 553, 557, 567, 576], "detect": [0, 6, 8, 9, 325, 336, 337, 339, 340, 342, 343, 347, 475, 479, 480, 481], "etc": [0, 6, 7, 15, 29, 305, 308, 310, 318, 326, 329, 335, 337, 338, 341, 344, 348, 404, 407, 408, 409, 412, 423, 435, 444, 449, 450, 556, 558, 569], "ar": [0, 1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 27, 29, 30, 32, 33, 34, 35, 37, 38, 46, 47, 67, 75, 92, 93, 104, 108, 118, 123, 124, 125, 126, 127, 129, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 287, 289, 291, 294, 296, 297, 298, 299, 302, 305, 308, 309, 310, 311, 313, 315, 316, 318, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 351, 354, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 421, 430, 431, 432, 445, 446, 451, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 474, 475, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 491, 495, 499, 501, 502, 503, 504, 505, 506, 507, 511, 513, 515, 517, 518, 521, 539, 548, 549, 550, 551, 552, 556, 559, 562, 563, 565, 567, 568, 569, 570, 572, 576, 577, 589], "implement": [0, 1, 4, 8, 9, 12, 13, 16, 18, 22, 24, 34, 45, 126, 129, 173, 204, 257, 289, 291, 294, 295, 305, 308, 310, 313, 314, 316, 317, 318, 320, 323, 325, 326, 329, 333, 334, 335, 336, 340, 343, 346, 347, 351, 404, 406, 408, 409, 410, 412, 415, 416, 418, 419, 421, 497, 498, 502, 503, 505, 507, 508, 509, 550, 551, 559, 579], "pie": [0, 1, 3, 8, 12, 34, 322, 324, 325, 339, 351, 354, 561, 573, 583, 585], "program": [0, 3, 9, 15, 16, 17, 18, 20, 23, 24, 128, 298, 299, 308, 324, 325, 329, 336, 338, 339, 341, 343, 344, 351, 404, 409, 410, 568, 569, 573], "model": [0, 1, 3, 8, 9, 18, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 147, 166, 173, 176, 182, 197, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 294, 299, 300, 305, 310, 313, 317, 318, 322, 324, 325, 328, 329, 330, 335, 336, 337, 339, 340, 343, 351, 406, 408, 410, 411, 475, 479, 483, 485, 487, 489, 495, 497, 498, 503, 504, 505, 506, 507, 511, 512, 546, 553, 563, 567, 573, 583], "highli": [0, 4, 12, 34, 317, 322, 325, 338, 339, 567], "optim": [0, 9, 12, 14, 34, 50, 53, 123, 125, 126, 129, 133, 136, 216, 219, 298, 299, 307, 310, 321, 322, 323, 325, 326, 328, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 344, 347, 404, 416, 418, 568, 570, 583], "best": [0, 16, 294, 336, 338, 340, 343, 344, 347, 556, 579], "perform": [0, 3, 4, 6, 9, 12, 14, 17, 22, 23, 24, 37, 41, 123, 125, 129, 294, 298, 307, 308, 310, 313, 316, 320, 322, 323, 324, 326, 336, 338, 339, 341, 342, 343, 348, 406, 410, 412, 418, 513, 518, 548, 560, 562, 565, 569, 571, 573], "can": [0, 1, 2, 4, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 45, 46, 121, 123, 124, 125, 126, 127, 128, 129, 173, 176, 204, 257, 259, 265, 287, 289, 291, 294, 295, 296, 297, 298, 299, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 329, 331, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 351, 355, 357, 381, 382, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 430, 431, 434, 438, 459, 462, 475, 476, 477, 484, 485, 487, 503, 504, 505, 506, 513, 517, 518, 525, 527, 529, 534, 537, 542, 543, 548, 550, 556, 559, 560, 562, 563, 565, 567, 568, 569, 570, 571, 573, 576, 577, 579], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 28, 29, 30, 31, 33, 35, 36, 37, 38, 41, 45, 46, 50, 53, 121, 123, 125, 126, 129, 133, 136, 147, 197, 216, 219, 287, 289, 291, 294, 295, 296, 297, 298, 299, 300, 302, 305, 308, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 356, 357, 381, 382, 391, 396, 404, 405, 406, 407, 408, 410, 412, 415, 417, 418, 419, 420, 421, 440, 441, 450, 462, 465, 469, 475, 476, 477, 483, 485, 489, 490, 492, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 513, 517, 521, 534, 539, 548, 550, 553, 554, 556, 558, 559, 561, 563, 567, 568, 571, 572, 573, 576, 577, 579, 583, 589], "them": [0, 1, 2, 6, 8, 12, 14, 15, 17, 24, 27, 30, 33, 34, 36, 41, 124, 204, 287, 289, 297, 302, 305, 310, 313, 316, 320, 322, 331, 336, 337, 339, 341, 343, 344, 345, 356, 404, 407, 416, 461, 548, 562, 568, 569, 579], "out": [0, 6, 9, 12, 27, 29, 33, 34, 37, 46, 147, 166, 167, 173, 176, 182, 197, 204, 294, 318, 321, 326, 333, 334, 335, 337, 338, 339, 340, 343, 347, 349, 404, 407, 408, 410, 421, 478, 487, 488, 495, 496, 499, 513, 514, 550, 554, 556, 568, 569, 570, 572, 583, 587], "box": [0, 338, 549], "manner": [0, 2, 17, 18, 32, 36, 298, 337, 339, 340], "here": [0, 4, 10, 14, 16, 17, 18, 20, 23, 27, 33, 36, 37, 38, 41, 42, 45, 123, 124, 126, 129, 147, 197, 294, 297, 302, 308, 309, 310, 311, 313, 315, 316, 318, 320, 321, 322, 325, 327, 328, 331, 332, 335, 341, 344, 347, 405, 406, 410, 413, 415, 416, 418, 421, 475, 487, 502, 503, 505, 514, 534, 556, 559, 567, 568, 569, 583], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 166, 173, 176, 197, 204, 249, 257, 259, 265, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 346, 347, 348, 349, 350, 351, 352, 355, 357, 381, 391, 393, 397, 398, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 431, 433, 435, 436, 437, 438, 439, 440, 441, 450, 451, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 562, 563, 565, 567, 568, 569, 570, 571, 572, 573, 576, 577, 579, 582, 583, 587, 588, 589], "full": [0, 4, 12, 16, 17, 18, 22, 34, 125, 204, 289, 294, 318, 325, 326, 329, 336, 341, 343, 347, 404, 407, 408, 410, 466, 569, 573, 579, 588], "list": [0, 1, 16, 19, 20, 28, 31, 34, 37, 38, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 131, 135, 138, 139, 141, 145, 147, 148, 149, 154, 155, 159, 160, 161, 162, 163, 165, 166, 167, 173, 175, 177, 186, 198, 199, 200, 201, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 309, 316, 318, 320, 322, 325, 331, 333, 335, 338, 341, 345, 347, 349, 368, 369, 376, 377, 391, 405, 408, 410, 418, 421, 430, 432, 435, 442, 444, 450, 451, 454, 455, 459, 461, 462, 480, 483, 485, 487, 488, 489, 490, 491, 503, 507, 510, 513, 514, 519, 521, 534, 550, 556, 557, 559, 563, 567, 569, 572, 577, 584, 587], "support": [0, 3, 4, 6, 9, 10, 12, 13, 17, 18, 20, 22, 24, 29, 32, 34, 37, 43, 46, 47, 67, 75, 92, 93, 104, 108, 118, 123, 124, 126, 127, 129, 176, 204, 259, 289, 294, 295, 298, 299, 300, 302, 305, 308, 309, 310, 312, 313, 317, 318, 322, 323, 324, 328, 329, 330, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 351, 357, 404, 405, 406, 408, 409, 410, 412, 413, 415, 418, 419, 421, 556, 559, 562, 563, 565, 567, 569, 570, 572, 573, 576, 582], "bf": [0, 15, 17, 34, 344, 347, 579], "df": [0, 34, 567], "hit": [0, 34, 36, 347, 348, 421, 557, 562, 579], "lpa": [0, 7, 34, 337, 347, 579], "sssp": [0, 7, 8, 9, 13, 14, 17, 18, 22, 24, 34, 301, 337, 344, 347, 348, 355, 562, 563, 571, 572, 579], "thi": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 75, 92, 93, 104, 121, 123, 124, 125, 126, 127, 129, 166, 167, 176, 182, 204, 249, 250, 257, 259, 265, 289, 290, 292, 294, 295, 297, 298, 299, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 365, 378, 381, 396, 404, 405, 406, 408, 409, 410, 411, 412, 414, 416, 418, 421, 438, 452, 453, 454, 455, 456, 457, 462, 465, 467, 468, 475, 476, 477, 479, 480, 483, 484, 485, 487, 489, 495, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 515, 517, 534, 536, 539, 544, 548, 550, 551, 553, 554, 555, 556, 558, 560, 562, 563, 564, 565, 567, 568, 569, 573, 576, 577, 579], "find": [0, 4, 8, 9, 17, 22, 31, 32, 36, 37, 41, 45, 46, 124, 294, 297, 302, 305, 307, 311, 313, 318, 320, 322, 331, 335, 337, 339, 340, 344, 346, 355, 403, 421, 426, 445, 446, 475, 563, 568, 569, 576], "problem": [0, 2, 6, 9, 11, 14, 15, 24, 29, 31, 37, 38, 121, 294, 302, 304, 305, 310, 322, 339, 341], "from": [0, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 22, 23, 24, 27, 29, 30, 34, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 147, 167, 197, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 355, 375, 376, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 435, 454, 456, 461, 463, 465, 468, 475, 478, 482, 483, 484, 485, 487, 490, 495, 496, 498, 499, 503, 504, 505, 506, 507, 508, 515, 522, 531, 543, 548, 550, 551, 555, 556, 558, 559, 562, 563, 567, 568, 570, 576, 579, 583, 584, 587, 589], "given": [0, 7, 9, 13, 14, 20, 34, 123, 125, 176, 204, 259, 289, 298, 300, 305, 309, 310, 311, 313, 320, 321, 322, 329, 335, 337, 340, 341, 343, 347, 408, 410, 413, 416, 418, 420, 455, 462, 473, 485, 486, 487, 488, 489, 490, 491, 499, 507, 508, 509, 513, 514, 515, 516, 520, 548, 551, 552, 555, 556, 562, 563, 567, 568, 571, 572], "weight": [0, 7, 19, 20, 33, 45, 124, 125, 147, 166, 204, 230, 249, 257, 289, 301, 320, 322, 329, 337, 339, 344, 347, 376, 404, 406, 407, 408, 409, 410, 413, 416, 418, 421, 423, 424, 425, 429, 440, 441, 483, 495, 499, 503, 506, 546, 554, 555, 556, 558, 563, 588], "As": [0, 7, 12, 13, 15, 16, 18, 20, 22, 24, 27, 38, 121, 295, 298, 302, 310, 312, 313, 316, 322, 328, 329, 336, 340, 404, 406, 412, 413, 414, 485, 567, 568], "result": [0, 2, 4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 24, 33, 37, 129, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289, 291, 294, 298, 299, 305, 310, 311, 312, 313, 315, 318, 320, 321, 322, 325, 329, 336, 337, 339, 340, 341, 346, 347, 348, 356, 362, 363, 372, 378, 380, 382, 383, 386, 387, 404, 407, 408, 410, 412, 413, 415, 418, 419, 421, 485, 487, 490, 509, 556, 567, 569, 571, 579, 583], "comput": [0, 3, 4, 6, 9, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 31, 34, 37, 296, 298, 310, 311, 313, 320, 322, 325, 326, 329, 337, 338, 339, 340, 341, 342, 343, 346, 347, 349, 408, 409, 412, 414, 421, 502, 505, 506, 510, 515, 524, 547, 548, 560, 563, 569, 570, 579], "minimum": [0, 6, 302, 311, 313, 316, 320, 322, 347, 475, 563], "distanc": [0, 7, 15, 17, 18, 337, 347, 421, 456, 495, 499, 503, 504, 505, 506, 507, 525, 537, 579], "ani": [0, 2, 4, 17, 19, 20, 22, 24, 27, 30, 33, 34, 36, 37, 38, 45, 47, 75, 92, 93, 104, 123, 124, 129, 167, 176, 182, 204, 249, 250, 259, 265, 289, 291, 294, 309, 310, 312, 316, 318, 320, 321, 322, 335, 336, 337, 339, 340, 343, 345, 346, 348, 357, 364, 408, 419, 420, 421, 432, 436, 451, 475, 480, 482, 485, 487, 503, 505, 507, 556, 559, 562, 568, 576], "vertex": [0, 2, 3, 4, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 30, 33, 34, 46, 67, 92, 124, 126, 129, 147, 150, 151, 197, 204, 230, 233, 234, 280, 289, 291, 294, 301, 309, 316, 318, 320, 324, 325, 326, 329, 336, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 354, 375, 405, 406, 407, 408, 409, 410, 413, 416, 418, 420, 421, 495, 500, 517, 518, 534, 559, 561, 565, 567, 569, 570, 573, 579, 584], "other": [0, 3, 4, 6, 8, 9, 10, 12, 14, 16, 20, 23, 24, 29, 30, 33, 34, 36, 37, 125, 126, 127, 128, 300, 302, 305, 308, 310, 313, 318, 320, 322, 325, 326, 329, 331, 336, 338, 339, 340, 341, 342, 343, 347, 349, 404, 406, 408, 410, 414, 417, 418, 419, 421, 425, 456, 458, 462, 465, 475, 484, 490, 496, 505, 506, 548, 556, 558, 559, 562, 563, 567, 568, 572], "vertic": [0, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 33, 45, 68, 124, 125, 126, 166, 249, 294, 298, 301, 309, 310, 312, 313, 316, 318, 320, 326, 329, 336, 337, 339, 340, 341, 346, 347, 348, 349, 377, 405, 406, 407, 408, 409, 410, 413, 416, 418, 479, 490, 500, 502, 517, 518, 529, 531, 542, 543, 549, 562, 563, 565, 567, 568, 569, 570, 579, 583, 584], "all_pairs_shortest_path_length": [0, 34], "refer": [0, 2, 4, 9, 10, 12, 16, 17, 23, 24, 29, 30, 33, 34, 37, 41, 43, 44, 45, 121, 124, 126, 127, 128, 129, 173, 176, 259, 294, 295, 296, 297, 298, 299, 300, 302, 309, 311, 312, 316, 318, 320, 322, 326, 327, 329, 339, 340, 341, 343, 347, 366, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 421, 454, 455, 466, 475, 476, 477, 478, 479, 480, 481, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 555, 556, 569, 573, 587], "tendenc": [0, 20], "similar": [0, 10, 12, 20, 37, 309, 310, 316, 318, 321, 322, 326, 329, 335, 336, 339, 343, 347, 404, 405, 406, 407, 410, 413, 418, 548, 556], "over": [0, 9, 12, 15, 16, 18, 22, 24, 33, 34, 297, 302, 305, 320, 324, 329, 336, 338, 339, 343, 344, 347, 349, 407, 421, 443, 444, 450, 502, 556, 565, 573], "dissimilar": 0, "measur": [0, 6, 20, 310, 339, 341, 347, 405, 421, 499, 500, 533], "extent": [0, 6], "same": [0, 2, 4, 6, 10, 13, 15, 17, 20, 22, 29, 30, 37, 126, 127, 287, 299, 310, 316, 318, 320, 322, 326, 335, 339, 340, 344, 405, 406, 410, 411, 414, 416, 418, 420, 421, 449, 450, 471, 479, 480, 485, 487, 513, 514, 516, 549, 550, 556, 563, 567, 568, 569, 570, 571], "properti": [0, 4, 6, 7, 9, 12, 15, 17, 20, 33, 45, 124, 125, 126, 147, 166, 197, 204, 230, 249, 257, 280, 289, 292, 300, 301, 308, 311, 313, 315, 323, 337, 339, 340, 341, 346, 347, 348, 349, 366, 380, 394, 395, 396, 407, 410, 418, 419, 503, 518, 548, 553, 556, 559, 562, 563, 565, 569, 570, 577, 583, 584, 587], "each": [0, 6, 9, 10, 12, 13, 14, 15, 16, 19, 20, 24, 30, 34, 35, 36, 38, 41, 123, 124, 125, 126, 166, 204, 249, 289, 291, 308, 309, 310, 313, 318, 320, 321, 322, 326, 328, 329, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 395, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 418, 421, 430, 432, 450, 451, 456, 460, 462, 467, 473, 475, 477, 478, 479, 481, 482, 484, 485, 487, 488, 490, 495, 498, 500, 503, 504, 505, 506, 507, 510, 511, 513, 515, 516, 521, 524, 536, 541, 546, 550, 552, 553, 554, 556, 562, 563, 565, 567, 568, 569, 570, 573, 577], "attribute_assort": [0, 34], "nearest": [0, 347], "neighbor": [0, 6, 9, 13, 14, 17, 18, 301, 318, 320, 322, 326, 329, 333, 339, 340, 341, 347, 349, 404, 405, 407, 408, 410, 412, 413, 414, 416, 417, 421, 426, 427, 446, 498, 499, 513, 516, 549, 556, 565, 568, 579], "return": [0, 6, 9, 15, 18, 20, 90, 109, 163, 186, 204, 246, 269, 288, 289, 290, 291, 292, 294, 295, 299, 301, 310, 312, 313, 314, 315, 316, 320, 321, 322, 329, 331, 333, 334, 337, 340, 347, 348, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 397, 398, 399, 403, 404, 406, 407, 408, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 562, 563, 565, 568, 579, 588], "success": [0, 13, 22, 47, 67, 92, 93, 108, 118, 124, 166, 167, 169, 173, 182, 204, 249, 250, 257, 265, 289, 290, 292, 351, 406, 490, 521], "0": [0, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 30, 31, 33, 35, 45, 46, 121, 123, 124, 125, 129, 147, 166, 204, 249, 289, 294, 295, 297, 299, 302, 305, 308, 309, 311, 312, 313, 317, 320, 322, 326, 328, 329, 331, 332, 333, 334, 335, 337, 344, 346, 347, 348, 349, 363, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 421, 423, 424, 425, 427, 431, 432, 435, 436, 440, 450, 454, 455, 457, 458, 459, 460, 462, 465, 467, 468, 470, 471, 472, 474, 475, 478, 479, 480, 481, 483, 484, 485, 487, 488, 491, 494, 496, 503, 504, 505, 506, 507, 513, 514, 518, 521, 534, 539, 548, 550, 551, 556, 558, 559, 563, 565, 568, 569, 570, 571, 577, 579, 581, 582, 583, 584, 586, 587, 588, 589], "1": [0, 4, 6, 7, 9, 10, 13, 14, 15, 17, 19, 20, 22, 23, 24, 28, 30, 31, 33, 34, 35, 37, 45, 46, 121, 123, 125, 126, 129, 147, 166, 173, 176, 182, 197, 204, 230, 249, 259, 265, 280, 289, 291, 294, 295, 297, 299, 300, 305, 308, 309, 310, 311, 312, 313, 317, 318, 320, 322, 326, 328, 329, 331, 332, 333, 334, 335, 337, 340, 341, 344, 347, 348, 404, 407, 409, 410, 411, 413, 418, 419, 420, 421, 423, 424, 425, 427, 431, 432, 435, 440, 441, 444, 449, 450, 454, 456, 457, 458, 459, 460, 462, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 556, 558, 559, 563, 568, 569, 570, 571, 577, 579, 583, 584, 586, 587, 588, 589], "2": [0, 6, 9, 10, 13, 14, 17, 18, 19, 20, 22, 23, 28, 31, 33, 34, 37, 45, 125, 126, 129, 147, 166, 167, 176, 204, 230, 249, 289, 291, 300, 308, 309, 310, 311, 312, 313, 317, 320, 322, 326, 328, 329, 331, 332, 333, 334, 335, 337, 340, 341, 344, 347, 348, 404, 407, 408, 409, 410, 411, 413, 418, 421, 423, 424, 425, 427, 435, 436, 440, 441, 444, 449, 450, 457, 458, 459, 462, 467, 468, 473, 475, 477, 479, 481, 482, 483, 485, 486, 487, 489, 490, 491, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 523, 525, 527, 528, 529, 533, 534, 536, 538, 539, 541, 548, 549, 550, 551, 556, 558, 559, 563, 567, 568, 570, 571, 579, 580, 581, 583, 584, 587, 588, 589], "average_degree_connect": [0, 347, 579], "source_degree_typ": 0, "target_degree_typ": 0, "paramet": [0, 2, 6, 9, 15, 16, 17, 30, 45, 46, 90, 109, 123, 163, 181, 186, 204, 246, 264, 269, 287, 289, 290, 291, 292, 294, 296, 298, 299, 302, 308, 310, 313, 316, 320, 321, 322, 329, 334, 337, 341, 346, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 369, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 396, 403, 405, 406, 408, 410, 413, 416, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 432, 434, 435, 436, 438, 439, 440, 441, 445, 446, 450, 451, 454, 456, 458, 459, 461, 462, 463, 465, 466, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 563, 567, 568, 569, 576], "str": [0, 20, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 119, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 331, 332, 333, 335, 347, 348, 349, 355, 356, 362, 363, 364, 366, 373, 374, 375, 378, 380, 381, 382, 383, 386, 387, 416, 418, 419, 434, 436, 550, 556, 558, 562, 563, 569, 584, 589], "target": [0, 6, 17, 22, 24, 80, 204, 308, 311, 320, 326, 327, 336, 337, 341, 343, 347, 349, 410, 412, 418, 421, 492, 494, 513, 516, 548, 569, 579], "base": [0, 4, 6, 9, 11, 12, 13, 14, 18, 32, 34, 46, 123, 125, 126, 128, 129, 294, 298, 305, 308, 309, 310, 311, 313, 315, 318, 320, 322, 325, 329, 336, 337, 338, 339, 340, 341, 344, 346, 347, 348, 370, 376, 404, 406, 408, 410, 411, 412, 421, 492, 531, 546, 556, 568, 569, 573, 579, 588], "v": [0, 2, 6, 7, 9, 10, 13, 14, 15, 18, 20, 22, 24, 33, 37, 45, 204, 230, 280, 301, 305, 312, 316, 318, 321, 322, 329, 337, 340, 341, 346, 347, 348, 349, 404, 407, 408, 409, 410, 413, 416, 418, 419, 420, 421, 427, 450, 475, 478, 483, 485, 489, 495, 498, 503, 506, 513, 516, 518, 550, 556, 562, 563, 567, 568, 569, 579, 583, 587, 588], "sum": [0, 20, 316, 318, 333, 339, 347, 349, 421, 475, 480, 483, 485, 486, 487, 496, 503, 506, 507, 514, 515, 554, 556, 587], "fraction": [0, 347, 421, 475], "pass": [0, 2, 6, 9, 10, 14, 15, 16, 18, 20, 24, 27, 37, 123, 298, 310, 312, 313, 315, 320, 322, 329, 335, 340, 341, 347, 349, 354, 410, 414, 416, 465, 503, 505, 548, 556, 560, 569, 579, 584, 589], "through": [0, 2, 4, 6, 12, 13, 14, 15, 16, 19, 22, 24, 27, 32, 34, 37, 38, 43, 121, 124, 295, 297, 299, 307, 308, 309, 310, 312, 313, 314, 315, 317, 320, 321, 322, 323, 326, 329, 335, 337, 339, 340, 341, 343, 348, 351, 405, 406, 408, 409, 410, 415, 416, 418, 421, 451, 465, 482, 521, 556, 567, 568, 569], "betweenness_centr": [0, 34, 421], "normal": [0, 6, 27, 302, 322, 347, 410, 418, 421, 478, 568], "endpoint": [0, 9, 10, 27, 28, 29, 44, 45, 47, 75, 92, 93, 104, 121, 129, 167, 182, 197, 204, 249, 250, 265, 280, 287, 289, 295, 297, 298, 308, 309, 311, 313, 314, 316, 317, 320, 321, 331, 335, 337, 346, 410, 419, 421, 563, 565, 569, 576, 579, 587, 589], "bool": [0, 6, 14, 15, 20, 48, 51, 56, 57, 59, 63, 75, 81, 82, 83, 87, 90, 93, 158, 172, 216, 246, 264, 266, 269, 288, 292, 294, 301, 316, 335, 346, 347, 349, 393, 401, 418, 421, 428, 438, 440, 441, 450, 479, 489, 495, 499, 515, 556, 558, 563, 568, 589], "whether": [0, 37, 125, 129, 288, 290, 292, 309, 310, 320, 322, 335, 336, 340, 346, 347, 405, 406, 410, 418, 478, 480, 483, 503, 514, 515, 556, 567, 568, 569, 570], "should": [0, 6, 9, 13, 16, 19, 20, 22, 23, 27, 28, 30, 33, 37, 123, 125, 129, 294, 308, 309, 310, 312, 315, 318, 320, 322, 335, 336, 337, 341, 346, 347, 355, 358, 371, 380, 414, 415, 418, 420, 421, 451, 475, 503, 504, 505, 506, 556, 558, 563, 565, 568, 569, 570, 571], "includ": [0, 3, 4, 6, 7, 9, 12, 16, 17, 20, 22, 24, 27, 30, 35, 36, 37, 43, 45, 125, 126, 129, 166, 167, 249, 250, 294, 298, 305, 307, 308, 310, 311, 313, 316, 317, 322, 325, 326, 327, 328, 332, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 406, 407, 410, 412, 418, 421, 436, 475, 483, 489, 499, 548, 555, 556, 567, 568, 569, 576, 577], "count": [0, 6, 33, 173, 202, 203, 204, 257, 285, 286, 289, 294, 308, 310, 312, 313, 316, 318, 321, 322, 329, 337, 339, 346, 347, 408, 409, 413, 414, 417, 421, 431, 489, 556, 569, 583, 587], "an": [0, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 34, 37, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 176, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 298, 300, 302, 305, 308, 309, 310, 311, 312, 313, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 351, 355, 358, 359, 360, 361, 362, 363, 365, 366, 368, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 386, 387, 388, 390, 391, 399, 404, 405, 406, 408, 409, 410, 412, 413, 415, 416, 418, 420, 421, 432, 433, 438, 443, 444, 450, 451, 453, 454, 455, 457, 460, 461, 462, 463, 465, 466, 468, 470, 471, 474, 476, 477, 485, 487, 488, 489, 491, 492, 495, 496, 497, 498, 502, 503, 504, 505, 506, 507, 512, 513, 514, 515, 516, 517, 521, 523, 529, 534, 538, 541, 542, 546, 548, 549, 550, 551, 553, 554, 556, 559, 560, 562, 563, 565, 567, 568, 569, 570, 571, 572, 573, 576], "travers": [0, 6, 13, 15, 17, 298, 309, 310, 316, 318, 321, 326, 336, 337, 338, 339, 404, 407, 410, 412, 416, 419, 550, 556, 565, 568, 569, 570, 579, 587], "It": [0, 2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 24, 27, 29, 34, 36, 37, 41, 43, 125, 126, 290, 291, 292, 298, 299, 302, 305, 308, 309, 310, 312, 313, 315, 316, 318, 320, 321, 322, 325, 326, 332, 335, 337, 338, 339, 340, 341, 342, 343, 346, 347, 351, 397, 404, 405, 406, 410, 412, 414, 418, 419, 421, 425, 480, 484, 508, 509, 513, 516, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 537, 540, 542, 543, 548, 556, 563, 567, 568, 569, 570, 576, 577], "start": [0, 2, 4, 6, 9, 16, 19, 20, 27, 28, 29, 31, 32, 37, 39, 43, 44, 45, 104, 126, 127, 128, 176, 182, 265, 287, 291, 297, 298, 300, 307, 308, 309, 314, 315, 316, 318, 320, 321, 329, 331, 333, 334, 335, 340, 342, 345, 346, 348, 404, 408, 410, 419, 420, 421, 456, 481, 485, 487, 488, 491, 507, 521, 550, 558, 563, 568, 569, 573, 586], "root": [0, 4, 27, 32, 36, 46, 302, 335, 338, 456, 458, 549, 550, 567], "explor": [0, 17, 43, 125, 297, 300, 305, 311, 313, 320, 322, 336, 337, 340, 568], "present": [0, 2, 20, 27, 125, 320, 322, 329, 330, 331, 332, 333, 334, 336, 337, 339, 351, 421, 432, 475, 556, 567, 568], "prior": [0, 12, 34, 313, 320, 322, 325, 336], "move": [0, 4, 6, 298, 315, 338, 410, 513, 516], "next": [0, 6, 9, 12, 14, 16, 24, 29, 30, 33, 34, 321, 322, 326, 329, 330, 335, 336, 341, 404, 405, 408, 410, 412, 414, 415, 416, 482, 550, 562, 565, 568, 569, 571], "level": [0, 6, 12, 38, 123, 176, 259, 305, 310, 313, 336, 338, 341, 347, 412, 466, 513, 514, 553, 568, 569], "int": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 33, 47, 53, 55, 57, 78, 82, 83, 87, 91, 98, 123, 213, 219, 235, 238, 240, 242, 243, 245, 246, 247, 248, 252, 264, 266, 279, 285, 286, 288, 294, 301, 318, 331, 333, 335, 346, 347, 348, 349, 381, 405, 406, 407, 408, 409, 410, 413, 416, 417, 418, 420, 421, 449, 454, 456, 458, 461, 463, 465, 466, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 491, 492, 493, 494, 495, 497, 498, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 517, 518, 519, 520, 551, 556, 558, 563, 565, 569, 579, 587, 589], "evalu": [0, 6, 14, 15, 16, 18, 37, 308, 313, 325, 337, 338, 341, 344, 346, 347, 348, 359, 382, 391, 393, 397, 399, 418, 563, 573, 587], "also": [0, 1, 2, 4, 6, 9, 10, 12, 16, 17, 19, 20, 22, 23, 27, 29, 30, 32, 34, 36, 37, 38, 45, 124, 125, 126, 128, 129, 204, 289, 294, 295, 296, 297, 298, 299, 302, 305, 308, 309, 310, 313, 315, 318, 320, 322, 325, 328, 330, 331, 336, 337, 338, 339, 341, 343, 344, 346, 347, 349, 351, 404, 405, 406, 408, 411, 412, 413, 416, 418, 419, 421, 456, 475, 500, 502, 503, 507, 526, 531, 536, 548, 550, 554, 556, 559, 562, 563, 565, 567, 568, 569, 572, 573, 579], "known": [0, 6, 8, 9, 24, 32, 309, 312, 315, 316, 322, 339, 340, 347, 438, 456, 459, 508, 509, 526, 550, 571], "see": [0, 2, 4, 13, 19, 20, 27, 29, 30, 36, 37, 38, 42, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 121, 125, 129, 147, 167, 197, 295, 297, 298, 299, 302, 309, 312, 315, 318, 321, 322, 325, 335, 342, 347, 348, 351, 397, 399, 405, 406, 408, 413, 416, 418, 454, 464, 469, 475, 478, 479, 480, 481, 483, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 503, 504, 505, 506, 507, 510, 511, 512, 513, 516, 521, 548, 551, 553, 556, 558, 562, 563, 567, 568, 569, 572], "max_round": [0, 347, 567, 579], "10": [0, 13, 15, 16, 17, 20, 27, 31, 123, 126, 129, 295, 302, 304, 305, 310, 314, 318, 320, 322, 328, 329, 331, 332, 333, 334, 337, 344, 347, 405, 406, 407, 409, 410, 416, 418, 421, 423, 424, 425, 459, 465, 475, 478, 480, 489, 490, 491, 492, 494, 498, 503, 507, 511, 527, 533, 538, 551, 556, 563, 567, 569, 577, 579, 583, 587], "maximum": [0, 123, 126, 309, 316, 318, 320, 322, 339, 347, 407, 421, 475, 491, 506, 507, 508, 509, 514, 555, 569], "round": [0, 9, 14, 17, 24, 308, 347, 349, 473, 483], "default": [0, 6, 13, 15, 20, 23, 28, 29, 30, 32, 36, 41, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 123, 125, 126, 127, 129, 147, 197, 204, 287, 289, 291, 294, 295, 297, 298, 299, 302, 305, 308, 309, 311, 312, 313, 318, 320, 322, 328, 331, 333, 335, 344, 346, 347, 348, 349, 366, 375, 397, 398, 401, 405, 406, 410, 417, 418, 420, 421, 423, 424, 425, 428, 450, 452, 453, 456, 458, 459, 461, 463, 465, 466, 468, 470, 471, 474, 475, 478, 479, 480, 481, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 518, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 548, 549, 551, 553, 554, 556, 558, 559, 563, 565, 567, 569, 576, 577, 589], "origin": [0, 4, 6, 9, 12, 13, 22, 124, 310, 313, 318, 320, 326, 331, 332, 341, 346, 348, 375, 404, 406, 418, 419, 475, 497, 503, 542, 550, 554, 556, 562, 563, 569, 570], "reciproc": [0, 421], "n": [0, 19, 20, 30, 33, 38, 46, 47, 67, 75, 92, 93, 104, 108, 118, 123, 125, 166, 204, 257, 289, 295, 308, 310, 312, 314, 316, 320, 322, 325, 329, 337, 341, 344, 347, 348, 408, 410, 413, 415, 421, 431, 435, 436, 438, 442, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 477, 478, 479, 484, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 517, 518, 521, 534, 549, 550, 551, 553, 556], "reachabl": [0, 421], "node": [0, 4, 10, 13, 15, 18, 27, 30, 33, 98, 102, 126, 302, 305, 313, 316, 317, 320, 328, 329, 330, 336, 337, 339, 341, 343, 345, 347, 348, 349, 369, 372, 377, 380, 381, 399, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 442, 444, 446, 448, 449, 450, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 568, 570, 579, 582, 583, 588], "wasserman": 0, "faust": 0, "propos": [0, 3, 6, 12, 14, 24, 34, 325, 336, 338, 339, 341, 343, 408, 414, 565, 568], "improv": [0, 6, 9, 17, 19, 23, 298, 318, 338, 341, 342, 343, 572], "formula": 0, "more": [0, 2, 3, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 20, 27, 29, 30, 32, 34, 36, 37, 38, 41, 45, 46, 121, 126, 127, 204, 294, 295, 297, 298, 299, 300, 302, 305, 308, 310, 311, 312, 313, 315, 318, 320, 322, 325, 326, 327, 328, 329, 335, 336, 338, 339, 340, 341, 342, 343, 346, 347, 348, 351, 404, 405, 408, 409, 410, 414, 415, 418, 421, 454, 495, 502, 503, 517, 518, 550, 556, 558, 563, 567, 568, 569, 572, 573, 576], "than": [0, 13, 15, 18, 23, 24, 29, 30, 33, 37, 125, 298, 302, 309, 310, 313, 316, 320, 322, 324, 329, 335, 336, 339, 340, 342, 343, 347, 406, 408, 410, 417, 421, 431, 465, 473, 475, 477, 482, 484, 495, 497, 506, 563, 568, 569, 572, 573], "one": [0, 2, 6, 9, 10, 12, 13, 14, 15, 19, 20, 22, 24, 29, 30, 36, 37, 41, 124, 126, 176, 204, 259, 265, 289, 294, 298, 302, 305, 307, 309, 310, 313, 316, 318, 320, 322, 326, 329, 335, 337, 340, 341, 343, 346, 347, 349, 355, 356, 396, 404, 405, 406, 407, 408, 410, 414, 418, 421, 430, 454, 455, 458, 459, 462, 471, 472, 475, 484, 485, 490, 492, 493, 494, 495, 496, 498, 513, 516, 524, 527, 531, 534, 540, 541, 542, 548, 550, 552, 556, 562, 563, 565, 567, 568, 569, 572, 583, 587], "compon": [0, 4, 6, 12, 19, 29, 32, 34, 38, 41, 75, 126, 129, 302, 312, 313, 336, 338, 339, 340, 346, 347, 421, 489, 503, 562, 568, 569], "ratio": [0, 13, 322, 548], "actor": [0, 129, 322, 336, 533], "group": [0, 2, 298, 302, 310, 333, 335, 337, 339, 340, 346, 412, 418, 479, 480, 481, 483, 500, 528, 546, 567, 569, 587, 589], "who": [0, 11, 29, 298, 313, 322, 336, 340, 411, 416, 569], "closeness_centr": [0, 34], "wf": 0, "quantifi": 0, "how": [0, 2, 4, 8, 9, 12, 13, 14, 16, 20, 27, 30, 33, 34, 36, 38, 44, 45, 121, 125, 126, 127, 129, 147, 167, 197, 294, 295, 298, 299, 302, 304, 305, 307, 309, 311, 313, 315, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 343, 345, 348, 351, 359, 405, 406, 410, 412, 563, 564, 567, 568, 569, 570, 572, 573, 583], "its": [0, 4, 6, 7, 9, 10, 12, 13, 14, 18, 24, 30, 31, 34, 123, 124, 125, 204, 289, 298, 305, 313, 315, 318, 320, 322, 326, 328, 329, 332, 335, 336, 337, 339, 340, 341, 347, 348, 349, 396, 404, 406, 410, 414, 416, 418, 421, 463, 466, 473, 475, 495, 500, 513, 516, 524, 543, 553, 563, 568, 569, 571], "being": [0, 126, 129, 313, 318, 329, 340, 418, 455, 485, 565, 568, 569, 570], "cliqu": [0, 6, 313, 322, 336, 339, 476, 477, 481, 482, 484, 498], "complet": [0, 14, 31, 33, 34, 127, 289, 310, 313, 315, 318, 322, 335, 338, 404, 406, 410, 431, 456, 457, 459, 461, 462, 468, 473, 482, 513, 516, 540, 556, 569], "have": [0, 2, 4, 6, 8, 9, 11, 12, 13, 15, 19, 20, 23, 24, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 45, 121, 124, 126, 127, 129, 204, 289, 294, 295, 297, 299, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 322, 324, 325, 327, 329, 335, 336, 337, 339, 340, 341, 343, 347, 348, 351, 355, 404, 405, 406, 407, 408, 410, 411, 413, 414, 416, 418, 421, 431, 435, 438, 450, 456, 461, 466, 475, 485, 486, 487, 489, 495, 498, 513, 514, 516, 532, 536, 550, 556, 562, 563, 567, 568, 569, 571, 573, 576, 577, 583], "edg": [0, 6, 7, 9, 12, 13, 15, 17, 18, 19, 22, 24, 30, 33, 37, 45, 46, 67, 68, 77, 92, 124, 126, 147, 153, 166, 204, 230, 236, 249, 289, 291, 298, 301, 309, 310, 313, 315, 316, 318, 320, 326, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 343, 346, 347, 348, 349, 360, 361, 364, 369, 376, 380, 381, 399, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 431, 432, 434, 435, 436, 438, 440, 441, 444, 445, 447, 449, 450, 451, 455, 457, 458, 459, 460, 461, 462, 465, 467, 468, 469, 472, 473, 475, 477, 480, 481, 483, 485, 486, 487, 489, 491, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 513, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 540, 541, 542, 543, 546, 550, 553, 554, 555, 556, 557, 559, 562, 563, 565, 567, 569, 570, 571, 579, 583, 584, 588], "u": [0, 6, 14, 16, 18, 20, 37, 294, 301, 302, 318, 322, 335, 337, 347, 410, 414, 416, 418, 421, 427, 450, 462, 475, 489, 495, 498, 503, 506, 518, 556, 568, 576, 579, 589], "equal": [0, 10, 147, 197, 302, 316, 320, 322, 328, 332, 335, 337, 421, 473, 475, 506, 511, 549, 583], "degree_assortativity_coeffici": [0, 347, 579], "hold": [0, 10, 20, 320, 346, 347, 348, 349, 375, 383, 406, 418, 421, 556, 562], "numer": [0, 20, 45, 129, 313, 316, 318, 320, 336, 338, 339, 347, 348, 421, 556, 562, 568], "valu": [0, 6, 9, 13, 15, 18, 20, 24, 29, 36, 123, 125, 126, 132, 133, 142, 147, 158, 160, 163, 169, 172, 174, 176, 178, 179, 186, 192, 197, 198, 230, 254, 259, 275, 280, 281, 288, 290, 291, 294, 299, 301, 302, 309, 310, 312, 313, 316, 326, 331, 333, 335, 339, 341, 346, 347, 348, 349, 382, 391, 403, 404, 406, 407, 408, 409, 410, 413, 415, 416, 417, 418, 420, 421, 430, 450, 465, 475, 503, 504, 505, 506, 513, 515, 516, 548, 549, 550, 556, 558, 559, 562, 563, 565, 567, 568, 569, 570, 579, 587, 588, 589], "If": [0, 2, 4, 6, 7, 8, 13, 14, 15, 17, 20, 23, 27, 29, 30, 32, 33, 36, 37, 46, 121, 124, 125, 126, 129, 176, 204, 259, 265, 287, 289, 291, 294, 295, 297, 299, 302, 308, 309, 311, 312, 313, 315, 318, 320, 322, 328, 335, 337, 343, 347, 348, 351, 403, 405, 406, 410, 411, 414, 415, 417, 418, 419, 420, 421, 426, 427, 429, 436, 440, 441, 450, 451, 456, 457, 458, 459, 461, 462, 463, 465, 466, 468, 470, 471, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 513, 516, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 548, 551, 552, 554, 556, 558, 559, 562, 563, 565, 568, 569, 570, 576, 577], "fals": [0, 13, 15, 17, 18, 19, 20, 125, 129, 294, 309, 315, 320, 333, 334, 335, 346, 347, 349, 397, 404, 405, 406, 410, 416, 418, 420, 421, 434, 438, 440, 441, 450, 452, 453, 478, 479, 480, 483, 489, 499, 514, 556, 559, 563, 567, 569, 579, 588], "ha": [0, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 23, 28, 29, 31, 34, 37, 41, 126, 204, 289, 294, 298, 299, 302, 305, 308, 310, 311, 312, 313, 315, 316, 318, 319, 322, 326, 329, 330, 331, 335, 336, 337, 338, 340, 341, 342, 343, 346, 347, 348, 349, 351, 396, 404, 405, 406, 407, 408, 410, 413, 414, 415, 416, 418, 419, 421, 438, 440, 441, 444, 449, 450, 456, 471, 473, 475, 486, 490, 495, 503, 504, 505, 506, 507, 513, 516, 522, 523, 527, 528, 532, 538, 540, 543, 546, 548, 550, 554, 556, 560, 562, 563, 569, 571, 573, 583, 584, 587], "adjac": [0, 10, 16, 20, 24, 320, 322, 341, 347, 407, 412, 421, 444, 477, 501, 519, 534, 548, 549, 556, 557, 568], "direct": [0, 9, 10, 15, 48, 59, 83, 124, 126, 309, 313, 322, 326, 329, 332, 335, 337, 338, 341, 346, 347, 367, 397, 404, 406, 410, 413, 416, 418, 421, 426, 431, 437, 452, 463, 476, 477, 478, 479, 480, 483, 487, 488, 490, 499, 500, 501, 502, 513, 514, 523, 550, 554, 556, 557, 559, 563, 567, 568, 570, 584, 588, 589], "three": [0, 6, 10, 12, 14, 18, 30, 34, 38, 41, 124, 126, 313, 322, 335, 336, 338, 343, 344, 351, 405, 408, 409, 410, 413, 414, 415, 416, 421, 450, 455, 462, 538, 543, 552, 556, 569, 573], "separ": [0, 6, 17, 30, 36, 47, 309, 311, 322, 336, 343, 405, 406, 503, 558, 568, 569], "defin": [0, 4, 6, 10, 12, 13, 18, 20, 24, 27, 42, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 124, 125, 126, 128, 129, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289, 298, 300, 302, 308, 309, 313, 315, 316, 318, 320, 322, 325, 328, 331, 335, 336, 337, 338, 340, 346, 347, 351, 366, 404, 405, 408, 410, 413, 415, 416, 421, 458, 480, 482, 505, 562, 563, 567, 568, 569, 583], "name": [0, 2, 4, 6, 12, 16, 17, 20, 22, 23, 27, 28, 29, 30, 32, 33, 37, 38, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 294, 295, 299, 302, 308, 309, 310, 311, 313, 315, 316, 318, 320, 322, 333, 334, 335, 336, 338, 340, 346, 347, 348, 349, 355, 391, 405, 407, 410, 412, 414, 416, 418, 419, 421, 440, 441, 455, 522, 529, 534, 546, 552, 556, 558, 559, 562, 563, 567, 568, 569, 577, 579, 580, 582, 587, 589], "both": [0, 2, 10, 12, 13, 18, 19, 20, 32, 34, 125, 126, 127, 129, 173, 204, 289, 295, 308, 309, 312, 313, 318, 326, 332, 335, 336, 337, 338, 339, 340, 341, 347, 349, 404, 405, 406, 418, 419, 420, 435, 444, 449, 450, 455, 475, 499, 502, 507, 513, 516, 563, 565, 567, 568, 569, 571, 572, 586, 587], "degree_centr": [0, 34, 305, 347, 421, 557, 579], "centrality_typ": [0, 347], "appli": [0, 6, 9, 10, 12, 13, 24, 27, 33, 299, 309, 310, 320, 324, 326, 336, 337, 339, 343, 498, 505, 521, 548, 565, 568, 569, 571, 573], "far": [0, 124, 336, 405], "possibl": [0, 4, 6, 15, 125, 298, 300, 302, 310, 326, 340, 341, 347, 406, 412, 413, 421, 489, 497, 498, 513, 514, 515, 516, 548, 552, 568], "along": [0, 6, 10, 20, 24, 31, 318, 320, 326, 349, 406, 410, 416, 550, 556, 569, 570], "branch": [0, 4, 129, 316, 322, 410, 456, 466, 587], "befor": [0, 4, 17, 22, 23, 27, 29, 30, 37, 121, 123, 124, 126, 129, 289, 294, 295, 299, 313, 315, 320, 322, 329, 331, 346, 347, 351, 404, 410, 417, 456, 458, 459, 461, 463, 466, 468, 470, 471, 474, 485, 487, 488, 490, 492, 493, 494, 500, 501, 502, 508, 509, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 551, 558, 563, 565, 568, 569, 571], "backtrack": 0, "influenc": [0, 27, 313, 421], "relationship": [0, 126, 129, 298, 302, 310, 313, 316, 317, 322, 326, 329, 336, 339, 340, 341, 405, 406, 416, 568, 569], "high": [0, 6, 9, 298, 300, 305, 310, 313, 318, 322, 335, 338, 339, 341, 342, 343, 344, 412, 490, 521, 563, 565], "score": [0, 322, 341], "contribut": [0, 4, 307, 568], "low": [0, 6, 7, 13, 32, 310, 313, 328, 336, 337, 341, 342, 343, 548, 569], "A": [0, 6, 7, 9, 10, 24, 27, 28, 29, 37, 47, 123, 125, 126, 129, 257, 288, 290, 294, 296, 300, 305, 311, 314, 316, 321, 322, 326, 328, 335, 336, 338, 339, 340, 341, 344, 346, 347, 348, 349, 356, 357, 359, 360, 361, 364, 367, 369, 376, 377, 381, 382, 391, 408, 409, 410, 413, 415, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 432, 434, 435, 436, 438, 439, 440, 441, 444, 449, 450, 451, 454, 455, 456, 458, 459, 461, 465, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 491, 495, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 518, 522, 524, 533, 544, 548, 549, 550, 551, 553, 554, 556, 558, 563, 567, 568, 569, 570, 571], "mean": [0, 2, 20, 29, 30, 36, 37, 45, 123, 124, 125, 126, 127, 176, 204, 259, 289, 298, 309, 310, 318, 331, 346, 348, 354, 393, 406, 409, 410, 420, 421, 461, 478, 485, 495, 504, 505, 506, 556, 559, 562, 563, 565, 567, 568, 569, 571, 576], "themselv": [0, 310, 322, 326, 550], "eigenvector_centr": [0, 34, 347, 421, 557, 579], "toler": [0, 313, 347, 421, 475], "doubl": [0, 9, 14, 16, 18, 33, 125, 147, 158, 172, 288, 301, 316, 318, 320, 335, 344, 349, 405, 415, 526, 550, 567, 571, 579, 587, 589], "error": [0, 2, 32, 36, 37, 38, 46, 47, 67, 75, 81, 92, 93, 104, 108, 118, 123, 128, 147, 166, 173, 176, 182, 197, 230, 249, 257, 259, 265, 280, 290, 292, 302, 307, 310, 312, 313, 346, 347, 410, 414, 421, 455, 556, 569], "check": [0, 6, 12, 17, 27, 29, 30, 32, 33, 34, 35, 37, 38, 43, 124, 125, 294, 300, 302, 309, 310, 313, 315, 320, 322, 329, 331, 339, 340, 347, 414, 418, 421, 514, 515, 556, 563, 568, 569, 577, 582, 583], "converg": [0, 6, 9, 14, 17, 24, 341, 344, 347, 421], "number": [0, 8, 9, 13, 19, 20, 24, 28, 30, 33, 38, 45, 121, 123, 125, 126, 166, 249, 294, 295, 305, 309, 311, 312, 318, 319, 320, 322, 326, 330, 331, 333, 337, 339, 341, 344, 346, 347, 349, 406, 407, 408, 409, 410, 413, 417, 421, 431, 436, 438, 447, 448, 449, 454, 455, 457, 459, 462, 466, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 520, 521, 529, 534, 539, 546, 548, 549, 551, 553, 554, 555, 556, 563, 565, 568, 569, 570, 577, 583, 587], "iter": [0, 6, 9, 14, 16, 17, 19, 20, 24, 308, 320, 321, 326, 328, 329, 331, 332, 335, 336, 337, 338, 339, 341, 342, 347, 349, 404, 407, 416, 420, 421, 423, 424, 425, 426, 427, 432, 443, 444, 445, 446, 450, 451, 461, 462, 463, 465, 468, 470, 471, 474, 475, 503, 504, 505, 506, 507, 513, 516, 518, 550, 556, 579, 583, 588], "import": [0, 2, 4, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 29, 30, 33, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 128, 129, 147, 166, 167, 173, 176, 182, 197, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 294, 299, 300, 305, 307, 310, 312, 314, 315, 320, 321, 322, 324, 326, 328, 329, 331, 332, 334, 335, 337, 339, 341, 347, 348, 397, 399, 404, 405, 406, 408, 411, 413, 415, 416, 417, 418, 421, 475, 503, 504, 505, 506, 556, 563, 567, 571, 573, 577, 579, 580, 581, 583, 584, 587, 588, 589], "rate": [0, 124, 298, 300, 336, 342, 347, 503, 505, 506], "two": [0, 2, 6, 9, 13, 16, 17, 18, 19, 29, 37, 126, 129, 294, 298, 302, 305, 309, 310, 313, 315, 316, 318, 320, 322, 326, 327, 335, 337, 339, 340, 341, 343, 344, 404, 405, 406, 407, 408, 410, 412, 414, 416, 418, 421, 427, 450, 457, 458, 460, 462, 463, 467, 484, 495, 496, 503, 504, 505, 506, 507, 511, 513, 516, 517, 522, 523, 531, 549, 550, 555, 556, 567, 568, 569, 576, 583], "hub": [0, 29, 347, 348, 421, 474, 562], "author": [0, 27, 44, 128, 332, 337, 347, 421, 475, 563, 583], "estim": [0, 310, 313, 322, 339, 340, 416, 421], "within": [0, 13, 30, 36, 123, 125, 126, 129, 298, 299, 300, 313, 315, 316, 318, 320, 321, 322, 327, 336, 337, 338, 339, 340, 341, 410, 419, 421, 475, 478, 479, 499, 505, 506, 563, 568, 577, 583, 587], "we": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 41, 45, 121, 123, 124, 125, 126, 129, 147, 176, 197, 204, 259, 289, 294, 295, 297, 298, 299, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 351, 355, 357, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 459, 473, 475, 485, 487, 513, 534, 556, 559, 562, 563, 567, 568, 569, 571, 573, 583, 589], "need": [0, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 37, 41, 45, 46, 47, 75, 92, 93, 104, 123, 124, 125, 126, 129, 167, 182, 204, 249, 250, 265, 289, 294, 302, 305, 308, 309, 310, 315, 322, 325, 326, 327, 328, 331, 335, 336, 337, 338, 340, 341, 343, 346, 347, 351, 404, 405, 406, 408, 410, 413, 414, 415, 417, 418, 490, 503, 508, 514, 534, 550, 556, 559, 565, 568, 569, 571, 572, 573, 579], "rel": [0, 27, 46, 47, 67, 75, 92, 93, 104, 108, 118, 125, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289, 310, 311, 326, 335, 341, 406, 410, 421, 569], "immedi": [0, 6, 298, 310, 342, 347, 349, 410, 421, 559, 563, 569], "under": [0, 9, 10, 14, 17, 24, 38, 45, 121, 126, 298, 308, 313, 322, 328, 335, 336, 347, 351, 410, 412, 413, 421, 568], "consider": [0, 318, 335, 421, 478], "katz_centr": [0, 34, 347, 421, 557, 579], "alpha": [0, 322, 347, 421, 495, 496, 507, 548], "beta": [0, 347, 421, 496, 507], "attenu": [0, 421], "factor": [0, 13, 308, 311, 313, 322, 347, 421, 456, 466, 488, 490, 568], "neighborhood": [0, 6, 336, 338, 341, 347, 410, 414, 421, 499], "maxim": [0, 6, 421, 509, 555], "subgraph": [0, 6, 9, 17, 33, 308, 322, 323, 325, 337, 338, 339, 347, 369, 375, 404, 410, 412, 418, 419, 421, 432, 435, 457, 468, 499, 556, 567, 583, 587], "contain": [0, 2, 4, 6, 8, 17, 20, 23, 27, 32, 37, 38, 121, 124, 125, 128, 290, 291, 292, 297, 299, 302, 305, 309, 310, 313, 316, 319, 320, 322, 326, 329, 330, 333, 335, 336, 337, 339, 341, 343, 344, 346, 349, 351, 404, 405, 408, 410, 413, 414, 415, 416, 418, 421, 423, 424, 425, 432, 435, 436, 451, 461, 462, 463, 465, 468, 483, 508, 509, 513, 514, 556, 559, 560, 563, 567, 568, 569, 577, 581, 587], "found": [0, 4, 9, 16, 17, 18, 36, 129, 147, 166, 173, 197, 230, 249, 257, 280, 294, 302, 308, 309, 321, 322, 326, 327, 338, 344, 397, 417, 475, 517, 518, 554, 556, 563, 567, 568, 569, 573], "recurs": [0, 6, 410, 458], "prune": [0, 313], "less": [0, 2, 6, 13, 17, 27, 309, 315, 316, 320, 335, 347, 410, 417, 421, 473, 484, 495, 497, 569], "kkore": [0, 34], "order": [0, 6, 34, 125, 294, 298, 310, 313, 316, 325, 338, 340, 341, 347, 348, 405, 410, 416, 421, 423, 424, 430, 454, 455, 458, 463, 470, 483, 484, 487, 519, 520, 523, 548, 549, 556, 562, 565, 569, 587], "That": [0, 27, 347, 415, 473, 516, 559, 571], "kshell": [0, 34], "fast": [0, 9, 20, 310, 313, 347, 414], "where": [0, 2, 6, 12, 13, 14, 18, 24, 37, 38, 41, 123, 126, 129, 294, 297, 299, 302, 313, 315, 316, 318, 325, 326, 335, 336, 337, 340, 341, 343, 347, 391, 405, 406, 408, 410, 414, 421, 431, 438, 456, 485, 489, 491, 500, 503, 504, 505, 506, 534, 556, 563, 568, 569, 576, 583, 587], "assign": [0, 7, 9, 15, 18, 20, 36, 37, 129, 299, 309, 318, 327, 335, 337, 339, 341, 346, 347, 349, 421, 475, 483, 485, 487, 489, 503, 506, 511, 556, 559, 562, 565, 568, 569, 589], "unlabel": 0, "dure": [0, 6, 9, 13, 24, 123, 129, 302, 312, 313, 320, 322, 338, 339, 341, 346, 405, 410, 475, 563, 565, 569, 570, 571, 572], "aim": [0, 22, 298, 322, 332, 338, 339, 340, 341, 343], "local": [0, 2, 4, 6, 10, 13, 14, 22, 24, 27, 30, 34, 37, 121, 124, 125, 127, 128, 204, 289, 297, 302, 307, 308, 309, 314, 321, 322, 330, 335, 336, 337, 341, 346, 347, 351, 381, 405, 406, 414, 415, 416, 418, 567, 570, 576, 586, 587], "follow": [0, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 43, 45, 46, 121, 123, 124, 125, 126, 127, 129, 204, 289, 294, 295, 297, 299, 300, 302, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 328, 329, 330, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 351, 355, 404, 405, 406, 407, 408, 410, 413, 414, 416, 418, 420, 455, 475, 485, 489, 495, 498, 508, 509, 515, 518, 539, 552, 556, 563, 565, 567, 568, 569, 570, 572, 573, 576, 577], "specif": [0, 4, 6, 9, 12, 14, 15, 16, 20, 24, 33, 34, 37, 38, 41, 43, 45, 46, 121, 123, 127, 129, 181, 264, 302, 305, 308, 309, 310, 312, 313, 316, 318, 320, 322, 325, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 408, 409, 410, 413, 416, 418, 475, 503, 507, 556, 562, 565, 567, 568, 569, 576], "ldbc": [0, 4, 34, 298, 308, 309, 311, 313, 318, 319, 325, 335, 339, 343, 344, 567, 584, 589], "wai": [0, 1, 4, 6, 10, 14, 20, 29, 36, 37, 45, 126, 298, 299, 302, 305, 309, 310, 318, 321, 325, 338, 340, 341, 408, 410, 412, 414, 421, 475, 541, 548, 550, 556, 563, 567, 568, 570], "exist": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 20, 34, 37, 123, 147, 197, 230, 280, 294, 305, 307, 316, 320, 326, 335, 336, 338, 339, 340, 341, 343, 347, 349, 355, 357, 401, 403, 405, 408, 410, 414, 415, 418, 421, 440, 441, 445, 487, 496, 510, 554, 556, 563, 565, 567], "variant": [0, 31, 341, 344, 418], "networkx": [0, 3, 7, 8, 12, 34, 305, 325, 342, 345, 346, 347, 381, 421, 423, 424, 425, 426, 427, 428, 430, 432, 434, 435, 436, 438, 439, 440, 441, 445, 446, 450, 451, 455, 456, 458, 459, 461, 462, 463, 466, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 496, 499, 500, 501, 502, 507, 508, 509, 518, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 551, 556, 558, 559, 561, 585, 590], "damp": 0, "set": [0, 2, 4, 6, 7, 9, 10, 13, 14, 15, 16, 18, 20, 23, 27, 30, 31, 36, 39, 41, 43, 45, 121, 123, 125, 126, 129, 204, 295, 297, 298, 299, 302, 305, 308, 309, 310, 311, 312, 313, 316, 317, 320, 322, 323, 325, 328, 329, 335, 336, 337, 338, 340, 341, 344, 345, 346, 347, 349, 397, 403, 404, 405, 406, 408, 410, 413, 416, 417, 418, 419, 420, 421, 435, 459, 475, 489, 490, 495, 499, 507, 510, 511, 512, 517, 518, 536, 551, 554, 556, 559, 563, 567, 568, 569, 570, 573, 576, 581, 582, 586], "sampling_path": [0, 34], "source_id": [0, 14], "cutoff": 0, "fix": [0, 6, 126, 320, 322, 326, 328, 341, 396, 548, 569, 571], "rank": [0, 6, 33, 333, 336, 346, 347, 348, 548, 562], "vote": [0, 349], "scheme": [0, 6, 9, 125, 179, 262, 289, 309, 335], "With": [0, 4, 12, 19, 24, 34, 41, 204, 287, 289, 294, 308, 311, 318, 320, 322, 325, 330, 331, 336, 337, 338, 494, 567, 576], "top": [0, 9, 12, 22, 34, 47, 67, 75, 92, 93, 104, 108, 118, 230, 249, 250, 257, 259, 265, 280, 313, 318, 320, 322, 343, 408, 530, 569, 587], "highest": [0, 322, 490], "elect": 0, "num_of_nod": [0, 347], "select": [0, 9, 15, 36, 126, 310, 313, 315, 318, 326, 329, 335, 336, 339, 341, 348, 356, 362, 363, 373, 374, 378, 386, 387, 404, 410, 418, 475, 484, 507, 519, 553, 556, 562, 563, 567, 568, 587], "influenti": 0, "extract": [0, 314, 316, 320, 335, 336, 337, 338, 347, 355, 419, 563, 565, 569], "weakli": [0, 347, 421, 495], "In": [1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 28, 29, 32, 34, 37, 38, 45, 121, 123, 124, 125, 126, 204, 289, 294, 296, 297, 298, 299, 302, 305, 307, 309, 310, 311, 312, 313, 315, 316, 318, 320, 321, 322, 324, 325, 326, 329, 331, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 421, 478, 507, 510, 513, 514, 516, 556, 559, 562, 565, 568, 569, 571, 573, 576], "addit": [1, 4, 6, 9, 10, 12, 15, 18, 20, 24, 32, 34, 37, 124, 129, 204, 297, 299, 305, 310, 311, 312, 313, 316, 318, 320, 322, 324, 325, 326, 329, 335, 338, 344, 366, 382, 405, 406, 407, 408, 418, 550, 556, 569, 573], "built": [1, 3, 4, 8, 9, 12, 15, 18, 20, 22, 32, 34, 36, 41, 121, 129, 294, 295, 298, 302, 311, 312, 313, 315, 316, 322, 336, 337, 341, 342, 344, 345, 404, 418, 492, 493, 494, 565, 567, 573], "provid": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 121, 123, 124, 125, 126, 128, 129, 176, 204, 259, 265, 280, 287, 289, 291, 294, 295, 298, 299, 302, 305, 307, 308, 309, 310, 313, 315, 316, 318, 320, 321, 322, 324, 325, 326, 327, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 365, 404, 406, 410, 411, 412, 416, 421, 452, 453, 475, 503, 504, 505, 506, 553, 556, 558, 563, 565, 567, 568, 569, 570, 573, 576, 579], "run": [1, 2, 4, 6, 8, 9, 12, 13, 19, 20, 24, 27, 29, 30, 31, 32, 38, 44, 46, 121, 127, 128, 129, 169, 176, 182, 204, 230, 259, 265, 287, 289, 299, 302, 309, 311, 313, 314, 315, 318, 321, 324, 327, 330, 331, 335, 336, 337, 338, 341, 343, 345, 346, 347, 348, 382, 393, 410, 414, 415, 416, 418, 419, 508, 509, 559, 560, 563, 568, 569, 570, 571, 572, 573, 576, 577, 579, 581], "your": [1, 2, 4, 7, 8, 12, 13, 14, 20, 23, 24, 27, 29, 30, 31, 32, 36, 38, 41, 45, 121, 124, 129, 204, 289, 294, 295, 297, 298, 299, 300, 302, 311, 312, 313, 314, 315, 318, 321, 326, 327, 328, 330, 331, 337, 343, 345, 347, 351, 406, 411, 415, 416, 465, 485, 556, 563, 565, 568, 579, 587], "own": [1, 4, 6, 8, 12, 15, 24, 34, 36, 37, 129, 204, 294, 295, 300, 308, 313, 315, 318, 324, 325, 339, 345, 351, 396, 408, 411, 416, 475, 485, 563, 568, 569, 573], "design": [1, 4, 6, 7, 12, 13, 15, 18, 27, 123, 125, 126, 289, 294, 298, 300, 305, 307, 312, 318, 322, 328, 329, 330, 331, 338, 340, 341, 342, 343, 346, 404, 406, 412, 421, 556, 569], "extens": [1, 4, 6, 27, 36, 125, 310, 312, 313, 316, 329, 336, 405], "henc": [1, 2, 10, 32, 335, 430, 553, 556, 569], "you": [1, 2, 4, 7, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 45, 46, 121, 123, 124, 125, 127, 129, 166, 176, 204, 259, 265, 287, 289, 294, 295, 297, 298, 299, 302, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 327, 328, 330, 331, 335, 337, 340, 342, 343, 345, 347, 351, 403, 405, 406, 409, 410, 411, 414, 415, 418, 421, 434, 465, 475, 485, 487, 499, 504, 505, 506, 556, 563, 565, 567, 568, 569, 571, 576, 577, 579, 589], "flash": [1, 3, 8, 12, 336], "java": [1, 4, 8, 12, 14, 34, 127, 128, 173, 295, 300, 307, 311, 320, 323, 325, 338, 339, 343, 347, 351, 355, 568, 579], "c": [1, 6, 8, 12, 14, 17, 18, 31, 34, 38, 128, 129, 173, 204, 289, 295, 296, 298, 299, 300, 313, 316, 320, 322, 325, 326, 333, 336, 338, 339, 346, 347, 348, 351, 354, 366, 378, 406, 410, 414, 416, 421, 454, 455, 465, 485, 496, 509, 510, 513, 514, 548, 550, 552, 553, 556, 568, 571, 577, 579, 581, 587], "python": [1, 7, 8, 11, 12, 14, 16, 17, 20, 22, 23, 27, 29, 30, 32, 33, 34, 37, 43, 44, 45, 127, 128, 295, 297, 299, 300, 302, 305, 307, 309, 312, 315, 317, 322, 323, 326, 328, 331, 335, 336, 337, 339, 340, 342, 343, 346, 347, 354, 404, 407, 411, 414, 416, 419, 420, 556, 558, 559, 567, 568, 576, 577, 579, 580, 582, 583, 585, 586, 587, 589], "These": [1, 4, 9, 15, 20, 24, 125, 126, 127, 298, 309, 316, 326, 335, 336, 337, 339, 340, 341, 342, 410, 416, 568, 576], "type": [1, 3, 4, 6, 9, 12, 13, 15, 16, 18, 19, 20, 27, 29, 30, 33, 34, 36, 37, 38, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289, 291, 294, 295, 297, 298, 299, 305, 309, 310, 311, 313, 315, 317, 318, 320, 322, 326, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 344, 346, 347, 348, 354, 355, 357, 358, 362, 363, 366, 367, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 383, 386, 387, 391, 397, 399, 404, 406, 407, 408, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 426, 427, 430, 432, 435, 436, 438, 440, 441, 444, 445, 446, 449, 450, 451, 454, 455, 456, 458, 459, 461, 462, 463, 465, 466, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 513, 514, 515, 516, 517, 518, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549, 550, 551, 552, 553, 557, 558, 560, 561, 563, 565, 568, 569, 571, 580, 583, 588], "queri": [1, 2, 7, 9, 13, 14, 19, 22, 29, 34, 64, 90, 109, 123, 124, 128, 142, 147, 163, 173, 176, 182, 186, 197, 225, 230, 246, 257, 259, 265, 269, 280, 296, 300, 302, 305, 307, 308, 309, 311, 312, 314, 316, 317, 319, 320, 321, 323, 324, 325, 326, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 356, 362, 363, 375, 378, 382, 386, 387, 391, 404, 406, 408, 410, 412, 416, 418, 420, 440, 441, 561, 562, 563, 568, 571, 573, 577, 583], "upon": [1, 2, 9, 14, 127, 289, 298, 316, 343, 418, 569, 570], "pregel": [1, 4, 8, 12, 17, 22, 34, 325, 336, 339, 561, 573, 583, 585], "alreadi": [2, 8, 20, 23, 24, 27, 29, 30, 36, 37, 41, 121, 147, 197, 230, 280, 295, 305, 311, 313, 322, 329, 335, 337, 404, 554, 556, 589], "deploi": [2, 15, 33, 37, 45, 121, 204, 289, 294, 295, 299, 300, 302, 307, 308, 310, 311, 312, 314, 321, 325, 328, 336, 338, 343, 406, 563, 565, 570, 576], "machin": [2, 4, 6, 7, 11, 14, 20, 24, 27, 30, 32, 36, 37, 38, 45, 125, 127, 129, 297, 298, 302, 309, 311, 312, 313, 314, 318, 321, 327, 328, 330, 331, 336, 337, 338, 339, 340, 341, 347, 404, 416, 563, 568], "take": [2, 4, 6, 9, 14, 15, 18, 24, 27, 29, 30, 36, 41, 45, 126, 127, 294, 299, 302, 308, 310, 313, 315, 322, 325, 326, 335, 337, 338, 341, 351, 368, 405, 408, 409, 410, 414, 416, 418, 421, 484, 505, 536, 554, 556, 560, 562, 568, 569, 570, 571], "advantag": [2, 310, 313, 325, 335, 342, 343, 572], "3": [2, 6, 9, 10, 13, 14, 17, 19, 20, 22, 23, 27, 30, 31, 32, 34, 37, 41, 46, 123, 126, 127, 147, 204, 230, 289, 291, 297, 300, 302, 305, 309, 310, 311, 312, 313, 317, 318, 320, 321, 322, 326, 329, 333, 334, 337, 341, 344, 347, 348, 407, 408, 409, 410, 413, 418, 419, 421, 423, 424, 425, 427, 432, 436, 440, 441, 457, 459, 462, 465, 471, 475, 476, 477, 479, 480, 481, 483, 487, 490, 491, 495, 496, 500, 502, 513, 514, 516, 518, 521, 524, 529, 533, 534, 537, 540, 543, 545, 548, 549, 550, 551, 556, 558, 559, 568, 571, 580, 583, 586, 587], "gie": [2, 32, 33, 307, 308, 316, 322, 325, 335, 336, 340, 343, 344, 345, 375, 563, 580, 581, 590], "gle": [2, 32, 307, 325, 328, 329, 330, 336, 341, 343, 345, 580, 581, 588], "address": [2, 9, 14, 17, 23, 31, 297, 302, 313, 318, 333, 336, 341, 569, 587], "differ": [2, 6, 9, 10, 12, 13, 15, 17, 18, 20, 23, 27, 30, 34, 35, 36, 37, 41, 125, 129, 289, 294, 297, 299, 305, 308, 309, 310, 313, 315, 320, 322, 323, 325, 326, 329, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 366, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 475, 479, 480, 481, 503, 506, 513, 533, 548, 556, 561, 563, 565, 567, 568, 569, 570, 571, 572, 573, 576], "complex": [2, 4, 6, 12, 22, 34, 37, 43, 124, 204, 289, 298, 299, 305, 308, 310, 311, 313, 318, 319, 320, 325, 326, 335, 336, 338, 339, 340, 341, 342, 343, 347, 407, 421, 485, 489, 504, 505, 506, 568], "relat": [2, 4, 13, 23, 24, 27, 33, 38, 45, 49, 124, 126, 129, 132, 166, 204, 215, 249, 257, 289, 296, 298, 302, 307, 308, 310, 315, 317, 321, 326, 329, 332, 336, 337, 338, 340, 341, 346, 406, 410, 416, 512, 548, 553, 567, 568, 569], "show": [2, 14, 19, 20, 27, 29, 30, 38, 121, 295, 299, 302, 310, 311, 322, 325, 330, 331, 337, 339, 340, 341, 407, 408, 416, 559, 563, 565, 568], "kubernet": [2, 29, 75, 302, 305, 307, 309, 311, 325, 330, 333, 335, 337, 342, 563, 569, 580, 582, 583, 585, 589, 590], "cluster": [2, 6, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 29, 34, 75, 302, 305, 307, 311, 314, 321, 322, 325, 328, 330, 335, 336, 337, 338, 339, 340, 341, 342, 347, 406, 416, 421, 478, 557, 563, 569, 570, 577, 579, 586], "howev": [2, 6, 9, 11, 13, 15, 20, 24, 30, 37, 123, 126, 289, 295, 298, 302, 305, 309, 310, 312, 313, 315, 316, 318, 320, 322, 326, 335, 336, 341, 343, 405, 406, 407, 412, 421, 485, 556, 568, 569], "scenario": [2, 4, 6, 8, 12, 13, 41, 126, 298, 310, 313, 318, 320, 321, 322, 326, 329, 335, 336, 340, 341, 343, 405, 406, 408], "quit": [2, 30, 289, 315, 475], "common": [2, 6, 12, 15, 30, 147, 166, 167, 173, 182, 197, 294, 310, 315, 322, 326, 329, 335, 336, 338, 339, 340, 341, 343, 404, 405, 412, 413, 427, 548, 550, 556, 567, 568, 577], "intend": [2, 13, 36, 289, 316, 548, 562], "analysi": [2, 7, 8, 11, 13, 310, 313, 321, 322, 325, 335, 341, 342, 344, 345, 347, 509], "offlin": [2, 307, 325, 326, 338, 341, 342, 565], "everi": [2, 6, 23, 123, 126, 320, 322, 329, 341, 346, 410, 421, 423, 424, 425, 440, 441, 459, 473, 536, 543, 556, 562, 568], "dai": [2, 20, 126, 322, 556, 559, 567], "export": [2, 4, 23, 29, 31, 33, 39, 45, 129, 204, 289, 294, 297, 299, 302, 311, 327, 567, 569, 582], "warehous": 2, "without": [2, 4, 6, 9, 14, 22, 27, 29, 30, 34, 37, 265, 309, 313, 318, 320, 336, 338, 343, 351, 364, 405, 407, 408, 409, 410, 431, 468, 482, 489, 495, 496, 503, 504, 505, 506, 507, 556, 559, 563, 568, 569, 571, 587], "real": [2, 6, 9, 12, 13, 34, 294, 305, 309, 313, 318, 320, 325, 336, 337, 339, 341, 548, 567, 569], "time": [2, 6, 9, 12, 13, 14, 17, 19, 20, 23, 27, 29, 30, 33, 34, 37, 123, 126, 127, 176, 204, 259, 265, 289, 299, 302, 308, 310, 311, 312, 313, 316, 318, 320, 322, 325, 329, 333, 334, 335, 337, 340, 341, 344, 347, 405, 406, 410, 421, 454, 455, 491, 492, 493, 494, 504, 505, 506, 508, 509, 518, 521, 556, 568, 569, 571, 583, 587], "sampl": [2, 29, 30, 31, 33, 124, 294, 300, 307, 309, 325, 326, 333, 336, 337, 343, 351, 405, 406, 407, 409, 412, 414, 417, 420, 495, 515, 548, 569, 588], "case": [2, 4, 6, 8, 10, 13, 14, 15, 18, 27, 37, 41, 45, 129, 291, 302, 305, 309, 310, 313, 316, 318, 320, 322, 329, 335, 340, 344, 349, 405, 406, 410, 412, 414, 417, 421, 475, 483, 489, 513, 524, 540, 562, 563, 567, 568, 569, 573, 576], "unnecessari": [2, 6, 9, 322, 568], "capabl": [2, 6, 11, 16, 20, 129, 298, 313, 316, 317, 320, 323, 336, 338, 340, 343, 556], "independ": [2, 6, 30, 336, 343, 405, 419, 432, 435, 483, 510, 556], "document": [2, 10, 27, 29, 33, 35, 36, 38, 43, 44, 45, 127, 128, 129, 294, 295, 299, 300, 302, 311, 313, 315, 316, 317, 320, 321, 323, 325, 327, 341, 347, 404, 405, 411, 563, 564, 569], "walk": [2, 4, 32, 121, 124, 295, 309, 322, 336, 337, 340, 410, 457, 468], "process": [2, 3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 27, 29, 30, 32, 34, 35, 37, 121, 123, 124, 127, 294, 295, 296, 298, 300, 305, 307, 309, 311, 312, 313, 317, 321, 322, 324, 325, 326, 328, 329, 330, 331, 336, 338, 339, 340, 341, 342, 346, 357, 405, 406, 408, 410, 414, 416, 485, 487, 490, 518, 524, 556, 563, 565, 567, 568, 571, 573], "standalon": [2, 23, 27, 32, 302, 307, 311, 312, 313, 322, 335, 336, 570, 576, 589], "self": [2, 309, 322, 335, 391, 404, 407, 410, 421, 431, 444, 483, 485, 487, 489, 495, 503, 504, 505, 506, 507, 556, 557, 559, 563, 569, 584, 588, 589], "manag": [2, 4, 10, 12, 14, 16, 27, 29, 30, 121, 127, 128, 129, 204, 289, 295, 296, 297, 299, 302, 305, 309, 317, 322, 325, 329, 330, 331, 336, 338, 339, 340, 341, 342, 343, 344, 346, 563, 569, 570, 576, 579], "k8": [2, 4, 7, 17, 22, 30, 37, 38, 41, 127, 297, 302, 305, 307, 309, 314, 321, 325, 328, 330, 335, 343, 345, 563, 569, 579, 580, 581, 583, 586, 589], "7": [2, 10, 20, 23, 27, 30, 31, 32, 46, 204, 302, 312, 320, 322, 344, 405, 411, 416, 423, 424, 436, 459, 521, 527, 529, 533, 534, 537, 539, 551, 556, 571, 582, 586, 587], "To": [2, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 29, 30, 32, 34, 36, 37, 45, 123, 124, 125, 127, 129, 204, 289, 294, 295, 297, 298, 299, 302, 305, 309, 310, 313, 322, 324, 325, 326, 327, 329, 331, 332, 335, 336, 337, 341, 343, 344, 347, 351, 404, 405, 406, 408, 410, 411, 412, 414, 416, 421, 434, 485, 487, 492, 494, 503, 506, 546, 550, 556, 558, 562, 563, 565, 568, 569, 572, 573, 576, 577], "get": [2, 4, 6, 12, 16, 18, 19, 20, 27, 29, 30, 31, 32, 33, 34, 38, 41, 43, 44, 45, 47, 67, 75, 92, 93, 104, 108, 127, 128, 147, 166, 167, 173, 182, 197, 230, 249, 250, 257, 265, 280, 287, 288, 290, 291, 292, 298, 300, 302, 307, 309, 310, 311, 316, 322, 326, 329, 335, 340, 342, 345, 347, 348, 349, 367, 404, 407, 408, 409, 410, 413, 418, 419, 420, 421, 454, 475, 546, 556, 562, 563, 565, 568, 569, 573, 576, 577, 579, 582, 583], "instal": [2, 4, 15, 16, 17, 19, 23, 33, 35, 41, 44, 121, 127, 128, 294, 300, 302, 309, 311, 314, 321, 337, 347, 351, 414, 556, 559, 563, 580, 581, 582, 583, 586], "client": [2, 17, 22, 23, 29, 33, 38, 41, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 182, 197, 204, 230, 249, 250, 257, 280, 287, 288, 289, 290, 291, 292, 294, 295, 299, 301, 308, 310, 321, 323, 325, 331, 334, 346, 347, 416, 563, 565, 567, 568, 569, 570, 579, 581, 586], "prepar": [2, 4, 33, 36, 43, 124, 300, 309, 312, 313, 315, 326, 327, 328, 329, 331, 332, 337, 341, 345, 568, 583], "continu": [2, 6, 15, 16, 20, 27, 265, 309, 310, 313, 321, 322, 325, 326, 336, 337, 341, 344, 404, 475, 513, 516, 568, 569, 570], "incas": [2, 309], "doesn": [2, 13, 29, 32, 37, 38, 41, 294, 309, 320, 322, 351, 410, 485, 487, 489, 556, 562, 571], "t": [2, 6, 8, 13, 17, 23, 29, 30, 32, 33, 36, 37, 38, 41, 125, 289, 290, 294, 297, 301, 302, 309, 318, 320, 322, 333, 334, 335, 338, 344, 346, 347, 349, 351, 357, 404, 409, 410, 416, 420, 421, 434, 450, 485, 487, 489, 509, 513, 514, 548, 550, 553, 556, 562, 569, 571, 588], "could": [2, 4, 6, 9, 15, 22, 27, 28, 29, 31, 32, 36, 38, 41, 121, 126, 129, 173, 176, 204, 259, 289, 294, 295, 297, 308, 309, 311, 312, 318, 320, 325, 327, 335, 345, 347, 399, 406, 408, 409, 418, 484, 567, 568, 569, 570], "creat": [2, 9, 10, 12, 13, 16, 17, 19, 23, 27, 29, 30, 31, 34, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 125, 127, 128, 129, 147, 166, 173, 176, 197, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 298, 300, 302, 309, 311, 312, 315, 320, 321, 322, 333, 335, 336, 337, 340, 341, 346, 347, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 381, 384, 385, 391, 397, 398, 399, 408, 410, 413, 415, 418, 419, 434, 456, 458, 459, 461, 462, 463, 465, 466, 468, 470, 471, 473, 474, 475, 477, 478, 480, 483, 485, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 550, 551, 556, 558, 559, 560, 563, 569, 570, 571, 572, 577, 579, 582], "distinct": [2, 313, 316, 320, 336, 337, 340, 461, 523, 549, 568], "method": [2, 15, 16, 17, 18, 20, 22, 23, 29, 46, 47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289, 290, 294, 308, 313, 320, 322, 329, 331, 335, 339, 341, 346, 347, 349, 370, 381, 396, 404, 408, 412, 413, 419, 421, 484, 492, 494, 503, 505, 556, 559, 561, 563, 568, 569, 573, 579], "entir": [2, 9, 34, 298, 310, 322, 337, 341, 410, 421, 556], "discret": [2, 326, 341, 404, 475, 488, 490, 496, 500, 511], "util": [2, 4, 6, 9, 15, 32, 36, 41, 43, 45, 126, 128, 129, 173, 288, 294, 298, 313, 316, 317, 322, 325, 327, 332, 335, 336, 338, 339, 342, 346, 347, 349, 420, 521, 567, 568, 569, 572], "either": [2, 13, 30, 34, 125, 294, 295, 299, 302, 308, 309, 313, 318, 321, 322, 329, 347, 406, 410, 418, 419, 459, 462, 475, 502, 513, 546, 556, 570], "aforement": [2, 289, 335, 339, 341, 405, 410, 569], "per": [2, 125, 298, 309, 318, 568, 569], "prefer": [2, 13, 27, 36, 298, 313, 568], "session": [2, 7, 8, 16, 17, 22, 27, 28, 29, 33, 45, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 280, 287, 289, 294, 299, 302, 305, 312, 315, 319, 321, 322, 325, 328, 330, 333, 335, 337, 345, 347, 348, 366, 397, 398, 399, 401, 403, 418, 419, 556, 560, 561, 567, 569, 571, 576, 577, 579, 580, 581, 583, 584, 587, 589], "class": [2, 4, 9, 15, 17, 18, 20, 22, 23, 46, 47, 67, 75, 92, 93, 104, 108, 118, 129, 147, 166, 167, 173, 176, 182, 197, 204, 289, 294, 316, 322, 329, 332, 335, 337, 341, 346, 347, 348, 349, 354, 404, 405, 418, 419, 420, 421, 465, 534, 556, 560, 563, 568, 569, 570, 579, 588], "option": [2, 4, 6, 13, 15, 27, 29, 31, 32, 37, 41, 46, 47, 48, 49, 50, 51, 52, 53, 55, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 83, 84, 87, 90, 91, 92, 93, 94, 98, 102, 104, 105, 106, 107, 108, 109, 118, 119, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 168, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 193, 194, 197, 198, 200, 202, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276, 277, 280, 281, 283, 285, 287, 289, 291, 299, 300, 308, 309, 311, 313, 314, 315, 316, 318, 320, 321, 322, 325, 327, 333, 335, 338, 340, 343, 347, 348, 351, 354, 375, 381, 382, 383, 393, 403, 405, 408, 410, 418, 419, 421, 423, 424, 425, 440, 441, 450, 456, 458, 459, 461, 463, 465, 466, 468, 470, 471, 474, 478, 479, 480, 483, 485, 487, 488, 490, 491, 492, 493, 494, 496, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 513, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 548, 551, 554, 556, 558, 559, 562, 563, 569, 570], "control": [2, 6, 27, 38, 45, 335, 336, 338, 346, 421, 556, 568, 569], "subset": [2, 6, 20, 129, 298, 313, 318, 320, 332, 337, 462, 473, 562, 563], "launch": [2, 8, 9, 17, 22, 29, 36, 41, 123, 127, 294, 302, 305, 309, 319, 328, 330, 331, 337, 345, 397, 415, 560, 563, 569, 570, 576, 579, 583], "For": [2, 4, 6, 9, 10, 12, 15, 16, 17, 20, 22, 29, 30, 35, 37, 41, 44, 45, 121, 123, 124, 126, 127, 128, 129, 176, 204, 259, 291, 294, 295, 297, 298, 299, 302, 305, 308, 309, 310, 313, 316, 318, 320, 322, 325, 326, 329, 331, 335, 336, 337, 339, 340, 341, 347, 349, 355, 404, 405, 406, 407, 410, 412, 414, 416, 418, 421, 433, 454, 457, 459, 462, 485, 487, 489, 490, 495, 498, 499, 503, 504, 505, 506, 507, 518, 521, 550, 556, 560, 562, 563, 569, 571, 572, 577], "exampl": [2, 7, 10, 15, 16, 18, 19, 20, 27, 31, 37, 41, 123, 124, 126, 129, 204, 289, 294, 299, 305, 307, 308, 309, 312, 313, 315, 316, 318, 321, 322, 323, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 347, 348, 354, 355, 397, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 421, 423, 424, 425, 427, 432, 434, 435, 440, 441, 444, 449, 450, 455, 457, 459, 461, 462, 465, 468, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 491, 492, 494, 496, 499, 503, 504, 505, 506, 507, 513, 516, 521, 546, 548, 549, 550, 551, 554, 556, 558, 559, 560, 562, 563, 567, 568, 569, 570, 571, 576, 577, 579, 583, 588], "set_opt": [2, 7, 15, 17, 19, 29, 38, 302, 312, 315, 328, 331, 332, 333, 334, 337, 577, 582], "show_log": [2, 7, 15, 17, 19, 29, 38, 302, 312, 328, 331, 332, 333, 334, 337, 403, 577, 582], "true": [2, 6, 7, 9, 13, 15, 16, 17, 18, 19, 20, 29, 38, 45, 75, 93, 123, 124, 125, 129, 204, 289, 294, 302, 308, 309, 312, 313, 320, 321, 322, 328, 329, 331, 332, 333, 334, 335, 337, 346, 347, 349, 351, 393, 397, 401, 404, 405, 406, 410, 413, 416, 418, 421, 428, 437, 438, 439, 440, 441, 450, 452, 453, 459, 461, 479, 483, 485, 489, 495, 499, 502, 514, 554, 556, 558, 559, 563, 569, 570, 577, 579, 582, 587, 588, 589], "sess": [2, 16, 17, 22, 27, 29, 30, 33, 204, 230, 249, 250, 257, 259, 265, 280, 289, 294, 305, 315, 331, 332, 333, 335, 347, 348, 393, 397, 418, 419, 563, 567, 571, 577, 579, 580, 581, 583, 584, 587, 589], "enabled_engin": [2, 403, 563], "g": [2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 28, 29, 32, 33, 34, 37, 41, 45, 47, 124, 126, 129, 204, 294, 305, 308, 311, 312, 315, 316, 318, 320, 321, 322, 324, 325, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 355, 399, 404, 406, 407, 408, 409, 410, 411, 413, 414, 416, 418, 419, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 455, 456, 458, 459, 461, 462, 465, 466, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 494, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 513, 516, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 548, 549, 553, 554, 556, 558, 559, 562, 563, 565, 567, 568, 569, 570, 572, 573, 577, 579, 582, 583, 584, 586, 587, 588, 589], "custom": [2, 3, 4, 7, 8, 22, 29, 35, 36, 45, 121, 125, 126, 204, 289, 294, 295, 297, 298, 299, 300, 308, 310, 316, 325, 329, 335, 336, 339, 341, 342, 404, 405, 408, 410, 412, 413, 414, 503, 505, 506, 553, 573], "command": [2, 4, 7, 16, 23, 27, 29, 30, 31, 32, 35, 36, 41, 45, 121, 123, 124, 127, 129, 289, 297, 302, 307, 311, 313, 327, 328, 333, 346, 405, 569, 570, 577], "line": [2, 4, 6, 7, 17, 36, 37, 38, 41, 45, 121, 127, 129, 297, 307, 310, 327, 328, 338, 343, 404, 405, 556, 558, 569, 570, 577, 588], "releas": [2, 27, 31, 32, 35, 124, 287, 295, 302, 318, 331, 344, 513, 516, 562, 563, 569, 582, 586], "replac": [2, 17, 19, 22, 23, 29, 30, 124, 129, 166, 204, 289, 291, 294, 297, 299, 310, 311, 315, 320, 338, 344, 407, 408, 409, 418, 556], "my": [2, 18, 29, 556, 559, 563, 569], "illustr": [2, 4, 29, 124, 125, 126, 129, 299, 322, 326, 332, 333, 334, 339, 341, 407, 533], "Then": [2, 9, 14, 15, 16, 17, 19, 22, 23, 27, 29, 30, 33, 46, 129, 204, 289, 294, 299, 305, 309, 310, 314, 321, 322, 329, 331, 335, 336, 337, 404, 410, 550, 565, 571], "connect": [2, 6, 15, 17, 19, 20, 27, 37, 41, 43, 45, 126, 128, 147, 166, 167, 173, 176, 182, 197, 294, 297, 298, 299, 300, 302, 308, 309, 310, 317, 320, 322, 323, 325, 329, 331, 335, 336, 337, 338, 339, 341, 347, 348, 349, 405, 406, 408, 410, 413, 419, 421, 425, 442, 457, 459, 461, 463, 467, 468, 470, 471, 473, 474, 475, 477, 478, 479, 480, 482, 484, 489, 490, 495, 496, 498, 503, 505, 506, 507, 508, 509, 510, 512, 521, 531, 532, 534, 536, 538, 555, 556, 563, 570, 571, 579, 587], "servic": [2, 27, 28, 29, 38, 39, 43, 45, 46, 104, 125, 127, 128, 166, 176, 182, 249, 259, 265, 287, 291, 294, 299, 300, 308, 314, 321, 325, 331, 336, 337, 339, 341, 346, 563, 570], "detail": [2, 4, 6, 7, 9, 12, 13, 14, 17, 20, 27, 29, 30, 33, 34, 38, 39, 45, 46, 94, 121, 123, 124, 125, 126, 127, 129, 169, 204, 252, 289, 290, 294, 295, 298, 302, 304, 308, 309, 316, 320, 322, 325, 328, 329, 335, 339, 341, 343, 346, 347, 348, 397, 399, 403, 405, 406, 408, 409, 412, 413, 414, 416, 513, 556, 563, 567, 569, 572, 573], "addr": [2, 29, 349, 563], "ip": [2, 29, 297, 309, 311, 321, 563, 569, 587], "port": [2, 23, 29, 38, 45, 121, 129, 204, 287, 289, 295, 297, 298, 299, 302, 309, 311, 315, 321, 333, 335, 346, 563, 569, 587, 589], "mai": [2, 4, 6, 7, 8, 14, 15, 18, 20, 22, 24, 27, 29, 30, 31, 32, 36, 37, 38, 45, 46, 124, 127, 129, 204, 289, 294, 298, 299, 302, 305, 309, 310, 312, 313, 315, 318, 320, 322, 326, 328, 331, 335, 336, 337, 340, 341, 342, 343, 357, 405, 410, 412, 413, 414, 415, 418, 455, 478, 485, 487, 495, 556, 559, 562, 563, 568, 569, 571, 573, 576], "would": [2, 4, 20, 29, 31, 36, 37, 41, 45, 126, 302, 308, 311, 315, 322, 336, 346, 347, 410, 416, 559, 562, 563, 569], "previou": [2, 9, 15, 19, 27, 29, 31, 33, 41, 204, 322, 337, 347, 355, 356, 404, 408, 410, 494, 569], "wcc_result": 2, "wcc": [2, 13, 344, 347, 579, 584], "print": [2, 7, 16, 20, 29, 30, 33, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 294, 297, 299, 302, 305, 309, 312, 313, 314, 315, 321, 322, 328, 329, 331, 332, 333, 334, 335, 337, 347, 348, 407, 409, 410, 413, 416, 418, 419, 421, 434, 483, 551, 556, 559, 567, 569, 576, 577, 584, 587, 589], "to_datafram": [2, 7, 15, 305, 337, 348, 418, 562, 567, 579], "id": [2, 4, 7, 9, 13, 15, 17, 18, 28, 30, 33, 38, 45, 47, 67, 80, 81, 82, 84, 90, 92, 93, 94, 104, 108, 109, 124, 125, 126, 147, 160, 163, 166, 167, 169, 173, 176, 186, 197, 204, 243, 246, 249, 250, 252, 257, 259, 269, 280, 289, 291, 294, 299, 301, 302, 305, 309, 310, 311, 313, 315, 316, 323, 326, 329, 335, 337, 340, 341, 344, 346, 347, 348, 349, 375, 381, 383, 404, 405, 406, 407, 408, 409, 410, 413, 414, 416, 417, 418, 420, 513, 514, 553, 556, 559, 562, 563, 567, 569, 570, 577, 579, 580, 582, 583, 587, 588, 589], "r": [2, 6, 7, 15, 16, 17, 22, 31, 33, 35, 294, 305, 309, 316, 337, 338, 341, 347, 348, 456, 466, 473, 479, 483, 495, 503, 512, 544, 549, 562, 563, 567, 569, 579, 583, 584], "tip": [2, 13, 541], "encount": [2, 32, 37, 121, 129, 289, 294, 298, 302, 339, 357], "fail": [2, 37, 147, 166, 167, 169, 173, 176, 182, 197, 204, 259, 289, 290, 292, 294, 302, 310, 313, 320, 341, 421, 556, 569], "project": [2, 4, 7, 13, 15, 17, 23, 33, 37, 46, 204, 295, 298, 310, 313, 314, 316, 337, 338, 340, 346, 347, 348, 380, 411, 418, 563, 567, 569, 579, 583, 584, 587], "simpl": [2, 7, 9, 15, 16, 17, 20, 27, 30, 32, 33, 124, 125, 173, 204, 288, 289, 302, 307, 310, 312, 313, 318, 320, 322, 328, 335, 336, 337, 340, 347, 348, 380, 404, 406, 419, 421, 485, 487, 490, 491, 513, 514, 515, 516, 518, 530, 548, 556, 562, 569, 579, 582, 583, 587], "empti": [2, 19, 29, 41, 176, 259, 288, 294, 301, 308, 313, 320, 322, 335, 347, 349, 438, 462, 465, 495, 496, 534, 550, 556, 559, 569], "load": [2, 4, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 29, 33, 45, 93, 129, 166, 167, 204, 249, 289, 291, 295, 296, 300, 302, 305, 307, 309, 310, 311, 312, 313, 314, 317, 321, 328, 337, 338, 339, 341, 344, 345, 346, 347, 355, 357, 359, 388, 404, 406, 415, 416, 418, 563, 568], "dataset": [2, 4, 7, 15, 16, 17, 18, 19, 20, 22, 23, 27, 33, 124, 302, 305, 312, 313, 317, 322, 328, 331, 332, 333, 334, 337, 341, 344, 347, 348, 404, 410, 416, 563, 567, 579, 581, 583, 587, 589], "load_modern_graph": [2, 7, 30, 33, 312, 337, 347, 419], "modern": [2, 6, 7, 33, 124, 129, 295, 300, 309, 311, 312, 322, 325, 337, 338, 339, 565, 569, 570], "current": [2, 7, 11, 12, 13, 16, 17, 22, 27, 29, 32, 37, 38, 45, 104, 121, 123, 124, 125, 126, 129, 176, 182, 204, 259, 265, 289, 291, 295, 298, 302, 305, 308, 309, 310, 316, 318, 320, 322, 325, 329, 331, 333, 335, 337, 339, 340, 342, 347, 349, 398, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 418, 419, 548, 551, 556, 563, 568, 569, 576, 579, 586], "e": [2, 4, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 22, 23, 32, 34, 37, 46, 47, 67, 75, 92, 93, 104, 108, 118, 124, 125, 126, 173, 204, 257, 294, 301, 305, 308, 311, 313, 316, 318, 322, 324, 325, 328, 329, 331, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 357, 406, 407, 408, 409, 410, 413, 416, 418, 419, 420, 421, 457, 475, 485, 487, 489, 490, 492, 493, 494, 497, 502, 503, 510, 511, 512, 513, 516, 518, 534, 539, 545, 547, 556, 558, 559, 562, 563, 565, 567, 568, 570, 572, 573, 579, 583, 586, 587, 589], "path": [2, 4, 6, 7, 9, 17, 19, 22, 23, 24, 27, 28, 30, 31, 33, 39, 45, 123, 124, 125, 129, 204, 249, 289, 291, 294, 308, 309, 310, 311, 315, 316, 323, 325, 326, 329, 333, 335, 337, 339, 340, 343, 347, 355, 405, 406, 408, 410, 415, 416, 418, 421, 424, 457, 463, 467, 468, 470, 487, 550, 556, 558, 560, 562, 563, 567, 569, 571, 579, 580, 583, 584, 587], "store": [2, 10, 12, 13, 16, 17, 30, 34, 108, 123, 126, 127, 128, 129, 173, 176, 259, 287, 291, 295, 298, 300, 302, 307, 309, 316, 317, 318, 320, 322, 325, 335, 336, 338, 339, 340, 342, 343, 348, 349, 362, 363, 378, 386, 387, 406, 412, 418, 419, 475, 480, 503, 504, 505, 506, 507, 556, 558, 563, 565, 567, 568, 570, 577, 579, 582], "pod": [2, 27, 28, 29, 30, 38, 41, 75, 102, 287, 302, 305, 309, 331, 335, 563, 569, 577, 580, 582, 583, 589], "elimin": [2, 6, 14, 406], "extran": 2, "resourc": [2, 27, 29, 33, 38, 46, 75, 287, 298, 302, 305, 313, 321, 331, 336, 343, 347, 355, 475, 508, 563, 569, 572, 576, 582], "fewer": 2, "inconveni": 2, "requir": [2, 4, 6, 13, 15, 17, 20, 31, 32, 35, 37, 44, 47, 67, 75, 92, 93, 104, 108, 118, 123, 125, 126, 128, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280, 297, 299, 302, 305, 310, 312, 313, 315, 318, 320, 322, 326, 329, 331, 335, 336, 337, 341, 343, 347, 351, 365, 404, 405, 406, 408, 409, 413, 414, 415, 416, 417, 454, 502, 503, 507, 556, 563, 568, 569, 572, 586], "equival": [2, 20, 302, 316, 318, 320, 322, 410, 475, 512, 556], "function": [2, 4, 6, 9, 12, 14, 16, 17, 19, 20, 24, 34, 36, 43, 121, 126, 129, 294, 297, 298, 302, 313, 315, 316, 318, 320, 321, 322, 326, 335, 336, 338, 341, 343, 346, 410, 414, 421, 454, 455, 462, 465, 485, 487, 492, 503, 504, 505, 506, 507, 515, 551, 554, 555, 556, 557, 558, 561, 567, 568, 573, 576, 579], "when": [2, 4, 6, 9, 10, 13, 20, 23, 24, 27, 29, 30, 31, 37, 46, 47, 67, 75, 92, 93, 104, 108, 118, 123, 125, 126, 129, 204, 289, 294, 297, 298, 299, 302, 305, 309, 310, 315, 316, 320, 321, 322, 326, 329, 331, 336, 338, 339, 341, 343, 344, 347, 348, 349, 357, 391, 397, 405, 406, 407, 408, 409, 410, 413, 414, 415, 417, 418, 420, 421, 465, 475, 495, 503, 504, 505, 506, 512, 556, 558, 559, 563, 565, 567, 568, 569, 571, 576, 577], "close": [2, 6, 27, 29, 30, 33, 43, 287, 300, 321, 329, 331, 336, 347, 406, 416, 419, 558, 563, 569, 583], "free": [2, 9, 37, 294, 302, 329, 343, 496, 503, 513, 516, 518, 549, 555, 563], "delet": [2, 9, 27, 29, 30, 33, 46, 47, 67, 92, 93, 108, 128, 147, 166, 167, 173, 197, 249, 250, 257, 291, 294, 300, 302, 376, 415, 563, 565, 569, 582], "handl": [3, 6, 8, 9, 11, 12, 20, 27, 34, 37, 126, 298, 300, 309, 310, 313, 318, 321, 322, 325, 336, 338, 339, 340, 341, 348, 378, 405, 417, 420, 556, 558, 568, 569], "variou": [3, 4, 8, 12, 14, 15, 20, 24, 30, 34, 38, 41, 123, 127, 129, 298, 308, 310, 313, 318, 322, 325, 326, 336, 337, 338, 339, 341, 342, 368, 418, 521, 568, 573], "algorithm": [3, 4, 7, 8, 12, 13, 14, 20, 24, 30, 302, 305, 310, 313, 324, 326, 329, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 351, 406, 409, 410, 412, 418, 466, 475, 478, 479, 487, 488, 489, 490, 491, 495, 496, 497, 498, 503, 508, 509, 512, 513, 515, 516, 539, 548, 553, 556, 557, 559, 561, 562, 572], "deriv": [3, 12, 34, 337, 340, 346, 348, 418, 421, 565], "grape": [3, 4, 15, 16, 22, 23, 34, 307, 324, 336, 342, 346, 355, 565, 568, 570, 571, 572, 573, 579, 585], "system": [3, 6, 8, 9, 12, 24, 30, 31, 33, 34, 36, 37, 43, 127, 129, 147, 166, 167, 173, 176, 182, 197, 204, 294, 295, 296, 297, 298, 302, 305, 309, 310, 312, 313, 316, 317, 318, 322, 323, 324, 325, 328, 336, 338, 339, 340, 341, 342, 344, 405, 406, 411, 414, 553, 555, 565, 567, 568, 569, 571, 573, 579, 587], "sigmod": [3, 12, 14, 24, 34, 336, 579, 585], "2017": [3, 12, 14, 34, 336, 513, 514, 579], "further": [3, 6, 10, 14, 20, 27, 30, 34, 298, 305, 308, 311, 316, 318, 320, 322, 337, 338, 348, 406, 418, 419, 434, 565, 568], "enhanc": [3, 4, 9, 298, 308, 313, 318, 320, 337], "introduc": [3, 6, 10, 19, 20, 24, 125, 204, 289, 307, 310, 316, 318, 320, 322, 324, 326, 336, 338, 340, 343, 404, 407, 408, 410, 412, 421, 533, 555, 568, 573], "lot": [3, 13, 37, 305, 322, 324, 573], "new": [3, 4, 6, 9, 12, 13, 14, 17, 20, 23, 30, 33, 34, 37, 47, 92, 108, 128, 129, 147, 166, 173, 176, 182, 197, 249, 257, 287, 290, 291, 292, 294, 298, 300, 310, 312, 322, 327, 336, 337, 338, 346, 349, 356, 357, 398, 415, 418, 419, 421, 428, 434, 475, 487, 496, 498, 518, 547, 554, 556, 563, 565, 567, 568, 569, 571, 583], "featur": [3, 6, 9, 12, 23, 32, 34, 204, 289, 300, 308, 316, 324, 326, 328, 331, 332, 336, 337, 340, 341, 342, 343, 346, 351, 404, 405, 412, 416, 418, 556, 563, 568, 573, 583, 588], "storag": [3, 9, 30, 43, 46, 50, 53, 75, 101, 129, 133, 136, 176, 204, 216, 219, 259, 289, 294, 298, 302, 310, 311, 313, 316, 318, 322, 335, 338, 341, 343, 383, 406, 567, 569, 570], "languag": [3, 12, 16, 35, 43, 46, 129, 296, 300, 305, 308, 310, 312, 313, 318, 320, 321, 322, 323, 325, 326, 329, 336, 337, 338, 339, 340, 343, 351, 419, 568, 569, 573], "pattern": [3, 6, 12, 23, 30, 123, 298, 310, 311, 315, 318, 320, 325, 329, 336, 339, 343, 347, 409, 414, 569], "better": [3, 8, 12, 20, 24, 29, 34, 309, 310, 313, 322, 324, 341, 343, 563, 569, 573], "integr": [3, 4, 9, 12, 13, 22, 23, 34, 125, 204, 289, 295, 308, 310, 312, 315, 323, 324, 336, 338, 340, 342, 343, 549, 568, 569, 571, 573], "big": [3, 6, 12, 37, 324, 338, 573], "overview": [3, 23, 34, 295, 300, 313, 322, 337, 565], "architectur": [3, 9, 45, 121, 129, 297, 298, 336, 341, 347], "kei": [3, 4, 13, 20, 27, 124, 125, 126, 147, 150, 151, 197, 204, 230, 233, 234, 280, 289, 291, 300, 308, 309, 312, 313, 316, 317, 320, 322, 335, 338, 340, 341, 342, 347, 348, 349, 380, 381, 382, 391, 407, 410, 416, 418, 421, 450, 499, 503, 504, 505, 506, 554, 556, 558, 559, 562, 563, 568, 569, 579, 589], "concept": [3, 129, 338, 341, 404, 405], "centric": [3, 6, 9, 12, 14, 15, 17, 18, 22, 34, 324, 325, 336, 338, 339, 573], "ingress": [3, 12], "increment": [3, 14, 16, 18, 20, 34, 321, 326, 338, 346, 573], "compat": [3, 7, 12, 13, 15, 19, 20, 23, 32, 34, 129, 297, 302, 305, 309, 312, 313, 316, 323, 325, 326, 328, 329, 330, 331, 332, 337, 341, 342, 345, 347, 412, 419, 562, 563, 565, 567, 583], "tune": [3, 305, 313, 335, 336], "guid": [4, 7, 9, 16, 27, 29, 32, 37, 41, 43, 45, 121, 124, 125, 204, 289, 295, 297, 298, 299, 300, 307, 309, 312, 313, 315, 317, 320, 321, 323, 328, 331, 332, 337, 351, 583], "code": [4, 6, 8, 14, 15, 16, 18, 29, 31, 32, 34, 36, 44, 45, 47, 67, 75, 78, 92, 93, 104, 108, 118, 121, 128, 130, 147, 166, 167, 173, 176, 182, 197, 204, 213, 230, 249, 250, 257, 259, 265, 280, 289, 292, 294, 296, 297, 298, 299, 300, 307, 308, 310, 311, 313, 315, 316, 322, 327, 336, 337, 338, 343, 344, 346, 347, 349, 354, 404, 405, 406, 407, 410, 411, 416, 475, 517, 560, 568, 569, 571, 576], "organ": [4, 44, 45, 129, 315, 320, 322, 325, 326, 341, 345, 404, 406, 408, 412, 413, 492, 494, 533], "identifi": [4, 9, 13, 24, 126, 166, 176, 204, 249, 259, 289, 299, 316, 318, 320, 322, 336, 337, 339, 347, 396, 483, 550, 553, 556, 563, 569, 576, 589], "simplic": [4, 9], "suggest": [4, 13, 310, 315, 322, 323, 335, 338, 475], "prebuilt": [4, 41, 311], "docker": [4, 27, 32, 33, 36, 38, 41, 45, 121, 128, 297, 300, 302, 311, 325, 569, 576, 580, 583, 585, 586], "imag": [4, 29, 36, 38, 45, 98, 127, 129, 302, 311, 313, 325, 327, 333, 344, 407, 563, 576], "necessari": [4, 6, 23, 27, 37, 41, 294, 299, 311, 312, 313, 321, 335, 358, 366, 371, 405, 406, 408, 410, 418, 568, 569, 577], "depend": [4, 13, 17, 22, 27, 30, 35, 36, 37, 41, 45, 128, 204, 297, 302, 308, 311, 313, 314, 315, 321, 322, 327, 328, 338, 341, 347, 410, 478, 483, 569, 576, 579], "shm": [4, 32, 41, 311, 327, 333, 581], "size": [4, 6, 10, 13, 16, 17, 23, 24, 32, 41, 125, 301, 302, 309, 311, 313, 321, 326, 327, 329, 333, 335, 341, 344, 349, 405, 407, 408, 410, 415, 417, 418, 461, 462, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 487, 498, 507, 511, 513, 556, 567, 568, 569, 570, 581], "4096m": [4, 32, 41, 311, 327], "registri": [4, 27, 32, 41, 45, 129, 300, 311, 313, 327, 333, 411, 563, 569, 581], "cn": [4, 23, 27, 29, 31, 32, 41, 45, 124, 129, 311, 313, 327, 333, 335, 411, 569, 580, 581, 589], "hongkong": [4, 27, 32, 41, 45, 129, 311, 313, 327, 333, 569, 581], "aliyunc": [4, 23, 27, 29, 31, 32, 41, 45, 124, 129, 311, 313, 327, 333, 335, 411, 569, 580, 581, 589], "com": [4, 7, 17, 19, 22, 23, 27, 29, 30, 31, 32, 35, 36, 41, 45, 46, 124, 127, 129, 147, 166, 167, 173, 176, 182, 197, 204, 280, 289, 294, 311, 312, 313, 315, 327, 328, 333, 335, 338, 339, 344, 347, 351, 411, 414, 421, 508, 517, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 536, 541, 563, 568, 569, 579, 580, 581, 582, 589], "latest": [4, 14, 17, 32, 37, 38, 39, 41, 42, 45, 127, 129, 295, 311, 313, 315, 327, 328, 568, 569, 581, 586], "altern": [4, 126, 313, 316, 484, 503, 507, 556, 568, 569], "manual": [4, 9, 27, 30, 33, 128, 204, 302, 336, 343, 418, 569], "all": [4, 6, 9, 10, 12, 13, 15, 16, 17, 20, 22, 23, 24, 27, 29, 30, 35, 37, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 121, 123, 125, 126, 129, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289, 291, 295, 297, 298, 299, 302, 308, 309, 310, 312, 313, 316, 318, 320, 321, 322, 327, 329, 331, 333, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 421, 425, 426, 428, 429, 433, 435, 450, 451, 455, 456, 459, 461, 462, 466, 475, 484, 493, 499, 513, 514, 516, 518, 542, 550, 551, 554, 556, 563, 567, 568, 569, 572, 577], "pleas": [4, 9, 12, 14, 16, 17, 23, 24, 27, 30, 32, 33, 34, 37, 41, 45, 46, 121, 123, 124, 129, 173, 176, 204, 259, 289, 294, 295, 297, 298, 299, 302, 311, 313, 315, 318, 329, 331, 335, 337, 404, 405, 406, 408, 409, 410, 411, 414, 416, 567, 569, 573, 576, 583], "environ": [4, 11, 19, 20, 23, 24, 27, 29, 33, 37, 38, 39, 44, 128, 204, 287, 289, 294, 297, 299, 302, 305, 307, 312, 313, 317, 325, 331, 337, 338, 345, 347, 351, 411, 415, 421, 563, 568, 569, 570, 576, 577, 582], "after": [4, 6, 9, 14, 15, 17, 18, 20, 22, 24, 29, 32, 33, 34, 45, 121, 124, 204, 287, 289, 294, 295, 305, 313, 315, 318, 320, 326, 338, 339, 341, 347, 348, 349, 359, 404, 405, 406, 407, 414, 415, 416, 421, 518, 529, 548, 556, 560, 562, 563, 565, 568, 569, 570, 577, 579], "clone": [4, 17, 22, 29, 30, 31, 32, 36, 37, 127, 129, 204, 311, 315, 351, 411, 569, 581], "repositori": [4, 29, 36, 37, 46, 127, 129, 204, 309, 315, 351, 563, 569], "enter": [4, 46, 47, 67, 75, 92, 93, 104, 108, 118, 310, 321], "analytical_engin": [4, 15, 17, 31, 36, 351, 579], "directori": [4, 22, 27, 30, 31, 32, 33, 36, 38, 45, 123, 124, 129, 302, 308, 313, 315, 321, 325, 346, 350, 352, 404, 415, 418, 563, 567, 576, 577, 580, 582, 583], "git": [4, 17, 22, 29, 30, 31, 32, 35, 36, 37, 46, 127, 129, 204, 311, 315, 351, 414, 568, 581], "http": [4, 7, 17, 19, 22, 23, 27, 29, 30, 31, 32, 35, 36, 45, 46, 121, 124, 127, 129, 204, 287, 289, 295, 297, 299, 302, 311, 312, 314, 315, 317, 321, 328, 331, 332, 337, 338, 339, 347, 351, 411, 414, 421, 475, 479, 480, 481, 495, 498, 505, 506, 508, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543, 548, 563, 568, 569, 579, 580, 581, 582, 583, 586, 587, 589], "github": [4, 22, 29, 30, 31, 32, 35, 36, 45, 46, 124, 127, 129, 204, 289, 311, 315, 338, 339, 347, 351, 411, 414, 506, 563, 568, 579, 581, 589], "alibaba": [4, 17, 22, 23, 29, 31, 32, 36, 46, 124, 127, 129, 147, 166, 167, 173, 176, 182, 197, 204, 289, 294, 311, 313, 325, 336, 338, 341, 342, 351, 411, 414, 579, 581, 589], "cd": [4, 17, 22, 29, 31, 32, 35, 36, 45, 127, 129, 204, 295, 308, 311, 313, 314, 321, 351, 411, 414, 416, 569, 576, 577, 579, 581, 587], "sinc": [4, 6, 23, 24, 29, 30, 37, 123, 125, 126, 204, 265, 289, 294, 310, 315, 320, 322, 327, 331, 335, 336, 344, 357, 406, 410, 418, 454, 455, 485, 487, 534, 551, 558, 562, 567, 568, 569], "inherit": [4, 6, 9, 16, 294, 310, 338, 346, 404, 414], "libgrap": [4, 16, 31, 34, 338, 351], "lite": [4, 16, 31, 34, 338, 351], "note": [4, 13, 14, 20, 27, 29, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 294, 299, 308, 310, 313, 315, 316, 320, 322, 326, 331, 332, 335, 337, 338, 339, 347, 348, 349, 357, 396, 398, 406, 410, 418, 421, 430, 431, 434, 438, 451, 452, 453, 454, 455, 456, 462, 463, 468, 471, 473, 475, 476, 477, 478, 480, 482, 484, 485, 487, 488, 489, 490, 491, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 516, 517, 518, 533, 548, 549, 550, 551, 553, 556, 558, 559, 562, 563, 567, 569, 576, 583, 589], "core": [4, 6, 12, 34, 37, 45, 302, 310, 312, 318, 336, 337, 338, 347, 351, 416, 421, 563, 583], "structur": [4, 6, 9, 12, 15, 16, 17, 20, 24, 45, 123, 125, 126, 128, 129, 298, 305, 310, 313, 321, 322, 332, 337, 338, 339, 340, 341, 347, 405, 406, 407, 418, 466, 485, 533, 548, 550, 556, 557, 567, 568, 569, 572], "partition": [4, 301, 414], "worker": [4, 9, 13, 14, 23, 28, 34, 123, 129, 311, 318, 329, 331, 333, 406, 409, 416, 563, 567], "between": [4, 6, 9, 10, 12, 13, 18, 19, 45, 126, 129, 289, 302, 307, 308, 310, 313, 316, 322, 323, 326, 339, 341, 346, 347, 405, 406, 408, 410, 416, 421, 478, 479, 480, 483, 489, 495, 496, 498, 502, 503, 504, 505, 507, 510, 512, 513, 514, 516, 521, 551, 553, 556, 568, 569, 576], "heavili": 4, "reus": [4, 30, 204, 289, 299, 326, 329, 338, 347, 416, 418, 563, 565], "want": [4, 6, 7, 18, 20, 22, 27, 29, 30, 32, 33, 45, 121, 166, 204, 289, 294, 295, 297, 308, 318, 322, 328, 335, 342, 351, 357, 403, 414, 418, 465, 499, 556, 562, 563, 565, 567, 569, 576], "fulli": [4, 125, 326, 329, 340, 347, 357, 498, 568, 579], "recommend": [4, 27, 30, 36, 37, 45, 294, 302, 309, 312, 315, 318, 322, 326, 335, 336, 337, 341, 410], "locat": [4, 23, 27, 36, 38, 125, 126, 179, 262, 291, 297, 309, 311, 316, 322, 327, 335, 340, 350, 352, 406, 407, 418, 569, 570, 576], "like": [4, 14, 15, 18, 19, 20, 23, 24, 27, 29, 32, 36, 37, 41, 45, 121, 123, 124, 126, 129, 294, 299, 302, 305, 309, 310, 312, 315, 322, 323, 325, 327, 335, 336, 337, 341, 342, 343, 345, 346, 347, 405, 410, 414, 416, 418, 475, 485, 487, 495, 556, 562, 563, 565, 567, 568, 569, 570, 589], "therebi": [4, 298, 318], "fledg": [4, 12, 336], "coordin": [4, 15, 27, 29, 35, 37, 38, 41, 44, 123, 127, 295, 297, 307, 312, 331, 346, 418, 468, 563, 569, 576, 577, 580, 581, 583], "while": [4, 6, 12, 19, 20, 29, 34, 121, 125, 126, 127, 204, 265, 289, 298, 305, 308, 309, 313, 314, 316, 318, 320, 321, 322, 326, 336, 338, 339, 340, 342, 343, 405, 410, 416, 452, 453, 513, 516, 518, 550, 556, 565, 568, 569, 577], "": [4, 6, 9, 13, 14, 15, 17, 18, 19, 20, 23, 24, 27, 29, 30, 32, 33, 35, 37, 38, 41, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 123, 124, 125, 126, 129, 147, 173, 182, 197, 204, 230, 257, 265, 280, 289, 294, 295, 298, 299, 302, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 325, 326, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 347, 357, 373, 374, 391, 404, 406, 408, 410, 413, 415, 417, 418, 421, 457, 468, 475, 478, 480, 483, 487, 490, 492, 493, 494, 510, 518, 519, 520, 543, 546, 548, 556, 562, 563, 565, 567, 568, 569, 570, 587, 588], "onli": [4, 6, 9, 12, 13, 14, 15, 17, 18, 20, 22, 23, 27, 29, 30, 34, 36, 123, 124, 125, 126, 129, 176, 204, 259, 265, 287, 289, 291, 294, 298, 305, 309, 310, 316, 318, 320, 322, 325, 326, 328, 329, 335, 336, 337, 338, 339, 340, 341, 343, 346, 347, 348, 349, 351, 355, 404, 405, 406, 408, 409, 410, 411, 418, 419, 421, 440, 441, 450, 476, 477, 502, 503, 507, 515, 528, 549, 550, 556, 562, 563, 567, 568, 569, 570, 573], "ship": 4, "6": [4, 10, 17, 18, 22, 31, 147, 230, 305, 312, 313, 320, 321, 322, 337, 344, 347, 405, 410, 416, 421, 440, 459, 488, 489, 490, 507, 521, 523, 529, 530, 533, 536, 540, 541, 549, 551, 556, 569, 571, 579, 582, 583, 587], "graphalyt": [4, 343], "benchmark": [4, 34, 298, 307, 318, 322, 325, 339, 341, 343, 475], "flatten": [4, 13, 333], "thu": [4, 6, 12, 16, 20, 27, 34, 36, 45, 121, 302, 305, 322, 331, 341, 347, 409, 451, 459, 556, 568], "execut": [4, 6, 9, 12, 14, 15, 17, 23, 24, 27, 29, 41, 46, 124, 126, 129, 204, 289, 295, 296, 297, 298, 299, 305, 308, 309, 310, 311, 312, 313, 317, 320, 322, 325, 337, 338, 340, 341, 346, 347, 348, 375, 410, 414, 418, 419, 421, 516, 560, 563, 565, 569, 571, 577, 579, 583, 587], "written": [4, 12, 20, 126, 129, 322, 336, 338, 340, 534, 565, 568, 571, 579], "giraph": [4, 7, 8, 12, 17, 23, 24, 324, 343, 573], "graphx": [4, 7, 8, 12, 17, 24, 324, 343, 573], "app": [4, 15, 16, 17, 18, 33, 127, 294, 348, 349, 351, 356, 359, 382, 388, 391, 405, 418, 561, 562, 568, 579], "librari": [4, 6, 12, 15, 16, 31, 32, 33, 90, 109, 163, 186, 204, 246, 269, 294, 298, 310, 311, 336, 346, 347, 351, 569], "serv": [4, 27, 43, 129, 204, 289, 299, 302, 313, 315, 318, 325, 337, 338, 341, 406, 569, 576], "layer": [4, 6, 45, 309, 310, 313, 326, 329, 338, 341, 343, 404, 405, 408, 412, 416, 588], "cuda": [4, 344], "suit": [4, 36, 305, 311, 326, 341], "gpu": [4, 338, 411], "acceler": [4, 27, 313, 568], "fragment": [4, 10, 12, 13, 14, 16, 17, 18, 301, 310, 339, 341, 349, 381, 418, 419, 565, 570, 573, 579], "extend": [4, 9, 17, 23, 298, 313, 318, 320, 321, 322, 343, 348, 405, 413, 414, 502, 568, 579], "loader": [4, 22, 311, 334, 346, 357, 368, 561, 570, 584, 585], "mutabl": [4, 129, 338], "io": [4, 27, 30, 33, 41, 294, 338, 339, 347, 415, 418, 506, 563, 569, 572, 586], "io_adaptor": 4, "parallel": [4, 6, 12, 14, 15, 16, 24, 34, 125, 181, 264, 305, 318, 325, 333, 336, 338, 340, 346, 349, 406, 485, 487, 524, 556, 559, 569, 579], "sub": [4, 12, 14, 18, 322, 325, 335, 348, 408, 410, 568, 573], "helper": [4, 576], "thread": [4, 6, 31, 123, 125, 204, 309, 311, 326, 344, 417], "messag": [4, 6, 10, 14, 15, 16, 17, 18, 24, 34, 36, 37, 38, 46, 47, 78, 80, 81, 124, 130, 213, 290, 292, 297, 302, 310, 322, 329, 341, 346, 349, 417, 568, 579], "buffer": [4, 415], "sync": [4, 349, 415, 568], "serial": [4, 294, 320, 321, 346, 418, 563, 568, 587], "vertex_map": [4, 13, 45, 103, 119, 124, 125, 166, 204, 249, 260, 283, 289, 291, 397, 418, 563], "some": [4, 6, 10, 12, 13, 17, 20, 23, 29, 31, 34, 36, 37, 45, 124, 127, 129, 294, 299, 308, 309, 310, 312, 313, 316, 318, 320, 321, 326, 335, 336, 339, 341, 347, 404, 405, 406, 412, 414, 416, 417, 418, 419, 466, 475, 485, 487, 490, 509, 550, 555, 556, 567, 568, 569, 570, 576], "map": [4, 6, 13, 45, 121, 124, 129, 150, 151, 163, 169, 180, 186, 194, 204, 233, 234, 289, 297, 300, 316, 318, 320, 322, 339, 346, 405, 414, 418, 548, 563, 569, 570, 584, 587], "intern": [4, 13, 147, 166, 173, 176, 182, 197, 230, 249, 257, 259, 265, 280, 292, 294, 318, 339, 418, 456, 579, 581], "frame": [4, 341], "wrap": [4, 290, 335, 338, 346, 351], "becaus": [4, 37, 310, 315, 318, 322, 341, 404, 407, 421, 551, 568, 569], "reli": [4, 9, 19, 297, 315, 317, 411, 568], "templat": [4, 9, 15, 28, 299, 301, 308, 333, 346, 568], "inadequ": 4, "usual": [4, 9, 13, 19, 27, 38, 39, 302, 305, 310, 315, 320, 322, 326, 329, 330, 331, 341, 410, 414, 417, 484, 507, 550, 556, 568, 570, 571], "multipl": [4, 6, 12, 14, 17, 29, 30, 41, 43, 125, 126, 129, 176, 204, 259, 289, 298, 308, 309, 310, 316, 320, 325, 326, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 405, 406, 410, 421, 518, 556, 562, 567, 568, 571, 577], "label": [4, 6, 7, 13, 15, 20, 33, 77, 98, 124, 147, 153, 166, 197, 198, 201, 230, 236, 249, 280, 281, 284, 291, 294, 301, 308, 309, 315, 316, 318, 328, 332, 333, 334, 336, 337, 339, 341, 346, 347, 348, 349, 357, 404, 407, 410, 416, 418, 421, 456, 460, 467, 471, 472, 474, 484, 485, 487, 488, 489, 490, 491, 533, 534, 556, 558, 559, 562, 563, 567, 569, 570, 583, 584, 587, 588], "cannot": [4, 27, 30, 129, 302, 320, 322, 326, 341, 343, 346, 347, 351, 406, 418, 475, 514, 515, 562, 563, 569, 571, 582], "determin": [4, 37, 123, 129, 310, 313, 320, 322, 326, 329, 335, 339, 340, 346, 347, 406, 410, 501, 504, 505, 506, 563], "reason": [4, 302, 318, 320, 326, 405, 406, 536], "jit": 4, "technologi": [4, 307, 310, 342], "compil": [4, 15, 31, 32, 34, 123, 128, 294, 298, 299, 300, 302, 309, 310, 311, 313, 316, 321, 336, 347, 359, 568, 569, 571, 577], "associ": [4, 6, 9, 29, 124, 126, 313, 316, 320, 341, 490, 502, 548, 550, 556, 563, 568, 569], "runtim": [4, 6, 17, 23, 31, 127, 128, 129, 297, 299, 310, 336, 338, 339, 340, 346, 347, 351, 568, 581, 582], "wrapper": [4, 314, 321, 323, 325, 340, 346, 359, 365, 418, 419, 568], "facilit": [4, 20, 308, 311, 313, 320, 325, 326, 329, 341, 405, 568, 569], "task": [4, 6, 7, 14, 34, 37, 41, 93, 310, 312, 322, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 405, 416, 568], "api": [4, 8, 15, 16, 18, 22, 24, 30, 34, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 128, 129, 176, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 294, 297, 300, 305, 307, 313, 317, 325, 336, 342, 345, 351, 357, 404, 406, 408, 409, 410, 414, 420, 556, 563, 567, 568, 569, 570, 579, 590], "jar": [4, 8, 22, 23, 35, 39, 204, 313, 347, 569, 579], "read": [4, 8, 20, 24, 37, 125, 287, 291, 294, 298, 305, 308, 314, 316, 319, 330, 335, 336, 338, 404, 405, 410, 415, 416, 418, 454, 455, 554, 556, 557, 561, 563, 565, 569, 587], "about": [4, 7, 12, 14, 17, 30, 34, 37, 38, 46, 147, 167, 197, 294, 297, 309, 311, 312, 322, 323, 327, 328, 336, 341, 342, 346, 347, 410, 414, 415, 562, 563, 567, 572, 579], "cmake": [4, 31, 32, 36, 128, 302, 411], "script": [4, 32, 37, 129, 308, 313, 343, 344, 375, 404, 405, 416, 419, 580], "configur": [4, 15, 16, 17, 23, 27, 31, 35, 37, 38, 39, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 124, 126, 129, 176, 204, 287, 289, 295, 297, 298, 300, 302, 311, 320, 321, 322, 331, 335, 336, 346, 347, 358, 359, 365, 366, 371, 396, 415, 416, 418, 475, 485, 487, 563, 565, 570, 576], "figur": [4, 6, 9, 12, 24, 27, 30, 34, 310, 315, 322, 326, 329, 337, 339, 340, 341, 406, 408, 539, 565], "abov": [4, 6, 7, 9, 13, 14, 15, 16, 19, 22, 27, 30, 32, 33, 124, 204, 291, 294, 305, 308, 309, 312, 318, 320, 322, 324, 328, 335, 339, 340, 404, 405, 406, 410, 414, 459, 475, 495, 518, 552, 562, 569, 571, 573, 577], "well": [4, 6, 8, 9, 12, 13, 18, 20, 27, 29, 34, 126, 297, 308, 310, 313, 315, 318, 325, 326, 335, 337, 338, 339, 340, 341, 345, 410, 418, 426, 459, 507, 556, 565, 569, 572, 573, 577], "thei": [4, 6, 20, 24, 27, 30, 31, 125, 291, 305, 310, 315, 318, 320, 322, 325, 331, 336, 339, 341, 343, 404, 405, 413, 418, 462, 470, 475, 503, 505, 506, 549, 550, 556, 562, 563, 565, 568, 569], "work": [4, 8, 11, 14, 18, 20, 32, 34, 36, 37, 41, 45, 126, 287, 305, 309, 310, 312, 320, 325, 329, 335, 336, 337, 338, 339, 340, 341, 346, 348, 408, 410, 418, 555, 556, 562, 571], "partit": [4, 6, 9, 10, 12, 13, 14, 15, 18, 24, 309, 310, 318, 329, 336, 339, 341, 347, 409, 414, 473, 478, 479, 480, 483, 514, 573], "object": [4, 15, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 147, 148, 154, 163, 169, 174, 180, 186, 192, 194, 197, 201, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 311, 312, 314, 316, 320, 321, 322, 326, 329, 335, 336, 337, 339, 341, 344, 346, 358, 371, 383, 397, 405, 407, 408, 409, 410, 413, 416, 419, 420, 434, 454, 455, 513, 553, 556, 558, 559, 561, 562, 569, 579, 589], "messagemessag": 4, "strategi": [4, 9, 10, 12, 16, 24, 126, 308, 318, 320, 321, 322, 329, 341, 344, 349, 408, 409, 410, 413, 414, 559, 572, 587], "respons": [4, 9, 12, 16, 27, 34, 36, 37, 46, 129, 290, 292, 302, 310, 315, 336, 346, 414, 417, 563, 565], "state": [4, 6, 9, 10, 12, 24, 27, 34, 310, 325, 339, 340, 342, 344, 415, 418, 475, 478, 479, 480, 481, 483, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 503, 504, 505, 506, 507, 510, 511, 512, 516, 548, 551, 553], "synchron": [4, 6, 10, 12, 14, 15, 336, 568], "explicitli": [4, 13, 313, 346, 406, 475, 563, 569], "implicitli": [4, 357], "main": [4, 6, 30, 34, 37, 124, 129, 147, 166, 167, 173, 176, 182, 197, 204, 287, 289, 294, 298, 310, 313, 318, 321, 322, 343, 404, 413, 416, 421, 563, 569, 588, 589], "logic": [4, 6, 9, 14, 16, 17, 204, 289, 310, 313, 320, 322, 325, 338, 340, 344, 407, 567, 568, 569, 577, 579], "access": [4, 6, 12, 14, 27, 29, 30, 31, 38, 127, 294, 296, 298, 300, 302, 308, 309, 311, 315, 320, 321, 322, 326, 329, 335, 336, 338, 339, 340, 341, 405, 406, 407, 408, 409, 410, 415, 416, 418, 556, 559, 563, 565, 567, 568, 569, 570, 577, 589], "send": [4, 6, 10, 18, 24, 308, 311, 339, 349, 568, 579], "receiv": [4, 6, 9, 14, 16, 17, 24, 37, 46, 47, 287, 335, 336, 339, 341, 349, 410, 414, 565, 568, 579], "messagemanag": [4, 17, 579], "call": [4, 6, 12, 13, 16, 17, 19, 24, 46, 47, 67, 75, 92, 93, 104, 108, 118, 127, 128, 176, 204, 259, 289, 291, 297, 298, 302, 313, 316, 318, 320, 322, 329, 346, 349, 404, 406, 410, 413, 414, 419, 451, 465, 466, 496, 507, 536, 548, 556, 559, 563, 568, 569], "encourag": [4, 6, 15, 24, 37], "fork": [4, 127, 129], "repo": [4, 29, 37, 124, 129, 289, 311, 338, 569, 580, 581], "much": [4, 6, 13, 19, 22, 302, 310, 320, 322, 406, 410, 568], "easier": [4, 32, 36, 37, 43, 320, 338, 339, 340, 410, 563], "begin": [4, 15, 16, 30, 129, 204, 289, 291, 301, 305, 315, 316, 319, 322, 337, 348, 349, 495, 562, 568], "small": [4, 9, 11, 13, 20, 298, 305, 313, 318, 322, 339, 340, 343, 421, 476, 477, 503, 546, 557, 563, 569], "chang": [4, 9, 11, 12, 14, 20, 23, 33, 34, 36, 45, 121, 129, 294, 295, 322, 336, 340, 341, 343, 344, 347, 364, 396, 405, 418, 421, 434, 556, 563, 569], "revis": [4, 14, 17, 344], "ad": [4, 6, 9, 13, 15, 17, 19, 29, 37, 291, 308, 313, 316, 325, 326, 341, 343, 344, 355, 356, 406, 418, 423, 424, 434, 492, 493, 494, 496, 550, 556, 565, 587, 589], "gradual": 4, "avoid": [4, 13, 318, 321, 568, 569], "larg": [4, 6, 7, 9, 11, 12, 13, 14, 18, 20, 23, 27, 34, 37, 126, 298, 302, 305, 309, 310, 312, 313, 317, 318, 321, 322, 323, 325, 326, 329, 330, 331, 336, 337, 338, 342, 343, 347, 391, 405, 406, 408, 410, 412, 416, 417, 430, 454, 455, 475, 510, 568, 579], "singl": [4, 6, 7, 11, 14, 15, 17, 20, 24, 27, 36, 37, 41, 126, 129, 176, 259, 288, 297, 299, 302, 309, 313, 316, 318, 320, 322, 327, 328, 330, 331, 336, 337, 339, 340, 347, 348, 404, 418, 429, 436, 458, 462, 467, 477, 482, 499, 505, 550, 552, 556, 563, 567, 571], "commit": [4, 294, 344, 565], "cmakelist": 4, "txt": [4, 31, 35, 308, 579], "artifact": [4, 17, 23, 29, 36, 311, 313, 327], "grape_engin": [4, 38, 381, 577], "togeth": [4, 9, 10, 20, 41, 310, 322, 331, 336, 344, 410, 414, 457], "share": [4, 6, 30, 31, 37, 126, 322, 327, 336, 338, 339, 568, 570, 581], "bunch": [4, 41, 343, 346], "binari": [4, 15, 27, 31, 129, 308, 341], "choos": [4, 6, 12, 22, 34, 41, 126, 309, 310, 313, 320, 322, 325, 326, 336, 341, 404, 405, 495, 496, 534], "install_prefix": [4, 36, 327, 581], "usr": [4, 569], "look": [4, 15, 18, 20, 27, 123, 204, 297, 309, 322, 335, 351, 417, 562, 565, 569, 570], "file": [4, 15, 17, 22, 23, 28, 29, 35, 37, 38, 39, 45, 46, 118, 123, 124, 126, 129, 179, 204, 289, 291, 294, 295, 298, 299, 300, 302, 307, 308, 309, 311, 313, 315, 335, 346, 347, 355, 378, 404, 405, 411, 416, 418, 454, 455, 506, 556, 558, 563, 565, 569, 570, 576, 577, 579, 589], "investig": [4, 6], "ensur": [4, 6, 9, 32, 35, 36, 37, 123, 125, 127, 129, 289, 291, 297, 298, 299, 310, 313, 316, 318, 337, 343, 563], "correct": [4, 6, 14, 37, 38, 308, 310, 315, 410, 418, 421, 568], "unit": [4, 310, 322, 340, 414, 504, 505, 506, 569], "easili": [4, 12, 20, 22, 23, 24, 27, 29, 30, 34, 127, 294, 302, 309, 312, 322, 325, 336, 337, 338, 340, 341, 343, 410, 412, 568], "graphscope_hom": [4, 23, 581], "pwd": [4, 30, 416], "b": [4, 17, 18, 22, 37, 129, 313, 316, 320, 322, 410, 465, 483, 496, 502, 503, 507, 512, 513, 514, 516, 544, 552, 556, 579, 587], "master": [4, 6, 19, 22, 23, 24, 31, 129, 298, 333, 579], "depth": [4, 121, 129, 295, 311, 316, 337, 404, 416, 421, 588], "7br": 4, "gstest": [4, 19, 22, 23, 30, 129, 579, 581], "gs_test_dir": [4, 22, 33, 129], "app_test": 4, "sh": [4, 31, 35, 129, 308, 313, 321, 411, 569, 587], "test_dir": 4, "download": [4, 7, 17, 19, 22, 23, 27, 29, 30, 32, 35, 36, 39, 124, 204, 289, 312, 313, 314, 317, 321, 327, 328, 335, 344, 411, 416, 581], "against": [4, 14, 37, 311, 347, 538], "compar": [4, 19, 310, 313, 316, 318, 320, 322, 339, 344, 346, 347, 407, 475, 562], "ground": [4, 341], "truth": [4, 341], "distribut": [6, 10, 11, 12, 14, 15, 18, 20, 22, 23, 24, 27, 32, 34, 129, 298, 302, 307, 309, 310, 312, 317, 318, 320, 323, 325, 326, 329, 330, 331, 333, 334, 336, 338, 339, 341, 342, 343, 347, 351, 404, 407, 409, 413, 415, 416, 420, 475, 478, 485, 487, 496, 503, 504, 505, 506, 507, 515, 569, 570], "broad": [6, 338], "spectrum": [6, 338, 421, 548], "central": [6, 15, 43, 305, 325, 326, 337, 338, 341, 342, 347, 410, 421, 533, 568], "match": [6, 15, 123, 125, 173, 204, 257, 289, 295, 298, 299, 310, 311, 312, 314, 315, 316, 336, 337, 338, 347, 455, 475, 483, 485, 487, 514, 550, 587], "mine": [6, 15, 336, 338, 339], "philosophi": [6, 24, 338], "step": [6, 9, 14, 15, 27, 29, 30, 31, 32, 33, 36, 37, 295, 300, 309, 310, 311, 312, 314, 318, 321, 323, 325, 326, 333, 334, 335, 336, 337, 338, 340, 349, 404, 405, 406, 408, 410, 413, 416, 475, 483, 495, 548, 569, 577, 589], "stronger": [6, 338], "flexibl": [6, 12, 13, 23, 123, 126, 313, 317, 322, 325, 336, 337, 338, 563, 567], "flow": [6, 338, 339, 404, 546], "oper": [6, 9, 12, 15, 30, 31, 36, 47, 108, 118, 121, 123, 129, 166, 167, 173, 182, 204, 249, 250, 257, 265, 289, 290, 292, 294, 297, 298, 299, 302, 305, 307, 309, 310, 312, 313, 317, 318, 320, 325, 326, 329, 335, 336, 338, 339, 340, 341, 342, 347, 349, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 376, 377, 378, 380, 381, 384, 385, 386, 387, 405, 406, 407, 408, 409, 410, 412, 413, 415, 417, 418, 438, 517, 518, 556, 559, 561, 563, 565, 568, 569, 576], "arbitrari": [6, 320, 322, 338, 408, 483, 487, 503, 504, 505, 506, 556, 559, 569, 587], "beyond": [6, 24, 338, 342, 516], "make": [6, 9, 13, 14, 15, 16, 23, 27, 29, 30, 31, 32, 35, 36, 37, 41, 43, 45, 121, 124, 129, 294, 295, 297, 298, 299, 307, 309, 310, 311, 313, 314, 315, 316, 320, 321, 322, 325, 327, 335, 338, 339, 340, 341, 344, 410, 411, 414, 416, 418, 434, 486, 550, 556, 563, 567, 568, 569, 576, 580, 581], "divers": [6, 10, 12, 34, 126, 307, 310, 338, 339, 405, 565], "easi": [6, 7, 12, 36, 121, 298, 305, 309, 310, 312, 313, 314, 321, 322, 323, 325, 328, 329, 335, 336, 337, 338, 342, 405, 410, 414, 576], "write": [6, 8, 9, 12, 15, 17, 22, 24, 34, 37, 294, 298, 302, 305, 313, 316, 318, 320, 322, 325, 335, 336, 337, 338, 339, 340, 345, 349, 351, 404, 410, 414, 418, 419, 558, 559, 565, 568, 573, 579, 583], "few": [6, 29, 294, 298, 302, 309, 313, 338, 568], "satisfactori": [6, 338, 341], "major": [6, 12, 13, 14, 316, 339, 346], "recent": [6, 308, 408, 569], "framework": [6, 9, 15, 16, 17, 18, 22, 23, 24, 302, 307, 310, 323, 326, 329, 335, 336, 338, 339, 340, 341, 342, 343, 347, 348, 397, 408, 410, 412, 414, 418, 419, 560, 563, 565, 567, 579, 584, 589], "focu": [6, 41, 313, 336, 340, 343, 414], "hand": [6, 30, 33, 310, 318, 320, 536], "point": [6, 13, 14, 22, 37, 43, 45, 129, 287, 310, 313, 318, 320, 329, 339, 404, 459, 484, 513, 516, 556, 567, 569, 570, 571, 576], "breadth": [6, 347, 421], "first": [6, 13, 14, 15, 16, 17, 19, 20, 24, 29, 35, 37, 45, 121, 124, 125, 129, 166, 176, 204, 288, 289, 294, 295, 299, 302, 305, 310, 311, 312, 313, 314, 316, 318, 320, 321, 322, 326, 330, 331, 335, 337, 338, 340, 341, 347, 348, 404, 405, 410, 412, 414, 418, 421, 425, 455, 471, 474, 483, 496, 499, 510, 511, 512, 513, 514, 517, 550, 555, 556, 559, 562, 563, 565, 568, 569, 570, 571], "search": [6, 37, 299, 307, 313, 315, 326, 336, 339, 341, 343, 347, 421, 585], "pagerank": [6, 8, 9, 13, 17, 22, 33, 34, 37, 305, 336, 339, 342, 344, 347, 348, 421, 559, 562, 567, 579], "shortest": [6, 7, 19, 24, 310, 316, 337, 339, 347, 421, 571], "leav": [6, 308, 322, 418, 456, 466], "varieti": [6, 12, 34, 305, 308, 336, 343], "suffer": [6, 305], "effici": [6, 9, 12, 13, 16, 18, 23, 34, 126, 294, 298, 299, 302, 305, 307, 313, 315, 318, 321, 322, 325, 326, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 408, 410, 412, 489, 510, 567, 568, 570, 572], "limit": [6, 9, 13, 22, 47, 126, 295, 300, 302, 309, 313, 314, 315, 316, 318, 323, 326, 339, 340, 341, 343, 344, 563, 582, 587], "phase": [6, 16, 23, 24, 313, 405, 410], "propag": [6, 7, 9, 14, 36, 336, 337, 339, 341, 347, 410, 428, 518], "short": [6, 338, 343, 344, 436, 568, 569], "isvp": 6, "until": [6, 9, 14, 17, 24, 27, 30, 204, 289, 320, 322, 341, 415, 475, 498, 569, 587], "updat": [6, 9, 12, 14, 15, 17, 20, 24, 27, 29, 32, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 129, 147, 173, 197, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 291, 294, 313, 320, 325, 326, 336, 339, 341, 343, 411, 414, 556, 565, 569, 579, 580], "Such": [6, 13, 296, 340, 343, 378, 383, 515, 524], "abstract": [6, 43, 305, 325, 329, 332, 336, 337, 338, 404, 405, 412, 414, 415, 570], "bring": [6, 41, 313], "product": [6, 12, 32, 121, 129, 302, 329, 336, 340, 343, 349, 405, 406, 410, 576, 587], "sacrific": 6, "almost": [6, 22, 322, 491, 568], "infeas": 6, "kind": [6, 9, 12, 13, 15, 27, 33, 34, 124, 126, 294, 302, 308, 322, 333, 335, 337, 338, 343, 346, 348, 408, 410, 414, 415, 553, 562, 567, 569, 571, 572, 580, 582, 586], "At": [6, 12, 14, 15, 20, 34, 37, 45, 204, 310, 321, 322, 405, 415, 569, 571], "advanc": [6, 7, 15, 45, 310, 313, 328, 329, 338, 502], "pose": 6, "challeng": [6, 9, 289, 304, 336, 568], "repres": [6, 9, 12, 15, 123, 125, 126, 289, 292, 305, 310, 315, 318, 322, 326, 328, 329, 332, 335, 336, 337, 338, 339, 341, 344, 346, 347, 348, 355, 382, 405, 406, 407, 408, 410, 414, 416, 418, 462, 495, 503, 504, 505, 506, 507, 515, 522, 525, 529, 537, 546, 548, 550, 551, 556, 560, 563, 568, 569], "non": [6, 9, 27, 129, 320, 343, 346, 349, 407, 445, 446, 466, 485, 487, 490, 514, 518, 525, 543, 556, 557], "ones": [6, 9, 287, 342, 347, 412], "distil": 6, "critic": [6, 13, 326, 347], "context": [6, 15, 17, 18, 20, 27, 31, 46, 47, 67, 75, 92, 93, 104, 108, 118, 121, 124, 126, 295, 299, 318, 338, 340, 347, 349, 354, 355, 356, 362, 363, 378, 383, 386, 387, 389, 398, 401, 414, 418, 421, 546, 561, 563, 568, 576, 579], "fall": 6, "meet": [6, 15, 18, 29, 37, 294, 305, 310, 312, 329, 336, 341, 408, 409, 475, 504, 505, 506, 571, 573], "therefor": [6, 12, 15, 305, 310, 312, 315, 316, 318, 320, 322, 326, 337, 404, 405, 410, 502, 568, 577], "fulfil": [6, 15, 18, 298, 338], "ligra": 6, "By": [6, 13, 17, 20, 30, 36, 45, 123, 125, 127, 295, 302, 305, 308, 313, 318, 320, 322, 323, 328, 335, 339, 341, 342, 405, 406, 421, 556, 565, 568, 576, 577], "must": [6, 13, 24, 27, 30, 37, 54, 124, 125, 126, 137, 220, 302, 309, 320, 322, 336, 346, 348, 357, 405, 406, 408, 409, 410, 418, 420, 421, 434, 473, 475, 483, 486, 496, 498, 500, 503, 505, 507, 515, 518, 554, 556, 558, 562, 568, 569], "race": 6, "schedul": [6, 23, 36, 68, 318, 336, 338, 563], "do": [6, 15, 16, 18, 20, 29, 30, 31, 33, 35, 37, 41, 46, 166, 249, 302, 308, 309, 310, 311, 313, 315, 316, 318, 322, 335, 346, 347, 348, 365, 381, 406, 418, 475, 487, 499, 503, 513, 516, 534, 550, 556, 559, 562, 563, 567, 568, 569, 573, 576], "so": [6, 12, 13, 30, 37, 41, 124, 126, 204, 289, 297, 299, 302, 309, 310, 312, 317, 321, 322, 326, 329, 331, 335, 336, 338, 347, 351, 404, 410, 412, 431, 466, 471, 484, 485, 486, 489, 504, 505, 506, 517, 550, 556, 568, 569, 583], "middlewar": 6, "flashwar": 6, "hide": [6, 305], "automat": [6, 9, 12, 14, 34, 46, 123, 125, 298, 308, 309, 310, 313, 314, 318, 321, 325, 335, 336, 339, 340, 341, 343, 348, 416, 418, 556, 569, 571, 572, 589], "adapt": [6, 22, 123, 294, 298, 310, 313, 341, 343, 344, 571, 572], "70": [6, 15, 587], "40": [6, 15, 344, 406, 407, 409, 483, 549], "commonli": [6, 308, 313, 316, 320, 325, 329, 335], "now": [6, 7, 20, 23, 27, 45, 121, 124, 204, 289, 295, 298, 309, 311, 313, 315, 316, 321, 322, 328, 347, 414, 487, 569, 571, 584], "succinct": [6, 318], "interfac": [6, 9, 11, 12, 17, 18, 19, 22, 23, 34, 43, 45, 128, 129, 204, 289, 302, 305, 307, 310, 313, 322, 323, 324, 326, 329, 336, 339, 340, 341, 342, 343, 346, 351, 406, 407, 408, 410, 411, 412, 413, 556, 563, 573], "help": [6, 9, 12, 13, 16, 17, 32, 37, 38, 45, 121, 295, 299, 315, 318, 320, 322, 333, 335, 339, 340, 414, 418, 568, 570, 576, 580], "demonstr": [6, 16, 124, 294, 309, 310, 313, 325, 330, 332, 336, 337, 339, 341, 343, 348, 404, 416, 418, 563, 568], "up": [6, 13, 20, 23, 37, 121, 129, 295, 315, 320, 322, 325, 327, 329, 342, 349, 414, 417, 455, 459, 483, 550, 568, 569, 586], "92": [6, 421], "bulk": [6, 15, 45, 124, 125, 166, 167, 204, 249, 289, 291], "bsp": [6, 15], "paradigm": [6, 15, 325, 329, 336, 404, 410], "primari": [6, 15, 124, 125, 126, 147, 150, 151, 197, 204, 230, 233, 234, 280, 289, 291, 298, 300, 318, 336, 343, 569], "constitut": [6, 332, 335], "superstep": [6, 16, 17, 24, 349], "vertexsubset": [6, 15], "indic": [6, 13, 24, 37, 38, 125, 126, 129, 265, 298, 309, 322, 335, 338, 339, 340, 344, 355, 405, 407, 410, 418, 462, 465, 475, 478, 479, 480, 481, 483, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 500, 503, 504, 505, 506, 507, 510, 511, 512, 516, 546, 548, 551, 553, 558, 568], "maintain": [6, 10, 14, 35, 36, 125, 299, 318, 320, 336, 339, 340, 569], "onc": [6, 12, 15, 17, 20, 24, 27, 29, 30, 34, 36, 126, 310, 311, 326, 347, 349, 406, 407, 410, 416, 418, 419, 421, 451, 556, 563, 569, 576], "describ": [6, 27, 36, 37, 38, 44, 45, 126, 127, 129, 294, 302, 309, 311, 322, 326, 327, 336, 340, 341, 348, 405, 408, 410, 415, 416, 455, 459, 475, 476, 477, 480, 485, 487, 488, 513, 514, 527, 534, 536, 550, 552, 553, 564, 567, 568, 569, 577, 582], "vsize": [6, 15], "size_t": [6, 13, 301, 346, 349, 415, 565, 568], "vertexmap": [6, 13, 15, 46, 103, 177, 204, 260, 289, 301], "condit": [6, 9, 14, 24, 27, 38, 123, 310, 313, 322, 329, 338, 340, 344, 475, 504, 505, 506, 514, 515, 568], "f": [6, 20, 33, 45, 124, 294, 299, 309, 311, 328, 333, 334, 337, 410, 421, 508, 509, 555, 569, 577, 583], "output": [6, 14, 17, 24, 27, 29, 30, 34, 38, 121, 128, 176, 259, 295, 305, 308, 309, 311, 315, 318, 320, 322, 326, 328, 329, 332, 336, 337, 341, 344, 346, 375, 383, 391, 404, 410, 412, 416, 418, 419, 503, 505, 507, 548, 560, 562, 569, 579, 580, 583, 588], "form": [6, 20, 118, 310, 317, 318, 320, 322, 326, 329, 340, 341, 347, 404, 406, 407, 410, 457, 477, 507, 522, 524, 527, 530, 534, 556, 562], "special": [6, 20, 298, 300, 313, 322, 336, 405, 524, 540, 550, 573], "m": [6, 7, 9, 18, 20, 23, 27, 28, 30, 31, 32, 35, 45, 123, 129, 308, 309, 310, 311, 312, 322, 328, 337, 347, 348, 421, 431, 462, 466, 468, 479, 485, 487, 489, 491, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 535, 544, 548, 549, 553, 556, 569, 579], "omit": [6, 299, 335, 348, 429, 570, 589], "filter": [6, 15, 23, 123, 310, 313, 323, 335, 340, 347, 348, 548, 562, 568, 587], "semant": [6, 310, 329, 409, 568], "unchang": 6, "edgemap": [6, 15, 46, 103, 177, 204, 260, 289], "sourc": [6, 7, 8, 9, 14, 15, 18, 22, 23, 24, 29, 33, 36, 37, 38, 44, 45, 67, 77, 120, 122, 126, 129, 151, 153, 204, 234, 236, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 300, 301, 302, 308, 309, 311, 312, 315, 316, 318, 322, 326, 327, 329, 335, 337, 339, 340, 341, 343, 346, 347, 348, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 401, 403, 406, 407, 408, 409, 410, 416, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 560, 562, 563, 565, 567, 568, 569, 571, 576, 579, 580, 581, 587, 589], "satisfi": [6, 9, 24, 32, 298, 312, 322, 340, 343, 347, 351, 415, 421, 473, 503, 507, 514, 515, 573], "h": [6, 9, 15, 16, 20, 36, 41, 294, 326, 327, 344, 355, 421, 432, 435, 456, 483, 487, 503, 548, 555, 556, 568, 580, 585], "conduct": [6, 15, 322, 344, 410], "allow": [6, 11, 12, 20, 22, 24, 27, 30, 36, 43, 123, 124, 126, 204, 289, 295, 297, 298, 299, 305, 308, 309, 310, 313, 315, 316, 318, 320, 322, 323, 324, 325, 329, 335, 336, 337, 339, 340, 341, 342, 343, 405, 410, 480, 485, 487, 490, 495, 498, 503, 548, 556, 565, 568, 573, 576], "dynam": [6, 12, 34, 294, 296, 298, 310, 325, 336, 338, 339, 341, 347, 358, 371, 476, 477, 559, 565, 569], "even": [6, 8, 20, 310, 315, 322, 338, 339, 412, 418, 421, 485, 495, 513, 515, 516, 556, 568], "virtual": [6, 9, 23, 126, 289, 312, 315, 337, 346, 414, 415], "gener": [6, 9, 13, 14, 17, 27, 34, 41, 45, 46, 80, 81, 120, 122, 126, 129, 204, 290, 293, 294, 299, 305, 307, 310, 313, 317, 318, 320, 322, 326, 329, 335, 336, 337, 338, 339, 341, 347, 356, 404, 405, 406, 410, 416, 418, 420, 421, 556, 557, 561, 563, 565, 567, 568, 569, 570, 571, 577], "index": [6, 12, 13, 31, 45, 55, 124, 125, 152, 166, 204, 235, 249, 289, 294, 301, 307, 326, 329, 335, 341, 346, 347, 348, 406, 407, 415, 418, 420, 421, 430, 454, 455, 485, 487, 488, 489, 491, 568, 585, 589], "pre": [6, 29, 32, 302, 310, 313, 322, 328, 332, 337, 340, 563, 582], "conveni": [6, 29, 289, 302, 309, 315, 322, 326, 338, 410, 554, 556], "revers": [6, 20, 316, 322, 364, 367, 420, 421, 499, 507, 556], "exchang": [6, 14], "chosen": [6, 485, 492, 493, 494, 495, 496, 507, 511, 551], "temporari": 6, "sequenti": [6, 12, 14, 18, 34, 36, 336, 454, 455, 491, 568, 573, 579], "pull": [6, 12, 14, 27, 29, 32, 34, 38, 45, 302, 309, 339, 411, 414, 563, 569, 581], "mode": [6, 15, 27, 32, 36, 45, 121, 127, 297, 302, 313, 321, 330, 333, 335, 346, 347, 348, 397, 404, 408, 414, 416, 418, 558, 563, 569, 573, 577, 589], "push": [6, 12, 34, 37, 123, 300, 310, 339, 414], "anoth": [6, 9, 10, 20, 36, 126, 297, 310, 320, 322, 335, 336, 337, 341, 349, 485, 518, 556, 568, 571, 572], "final": [6, 9, 13, 14, 17, 19, 24, 166, 204, 289, 308, 310, 315, 322, 326, 331, 336, 340, 346, 404, 410, 412, 498, 518, 556, 570], "reduc": [6, 9, 13, 14, 15, 17, 298, 310, 313, 315, 321, 329, 405, 408, 504, 505, 506, 556, 569], "commut": 6, "alwai": [6, 45, 322, 331, 348, 452, 453, 492, 494, 513, 516, 550, 568, 576], "ctrue": 6, "doe": [6, 11, 12, 13, 20, 34, 37, 47, 75, 92, 93, 104, 129, 167, 182, 249, 250, 265, 297, 298, 313, 320, 329, 335, 338, 340, 343, 407, 410, 415, 421, 440, 441, 483, 485, 487, 502, 513, 556, 558, 563, 568], "sometim": [6, 27, 322, 335, 466, 526], "similarli": [6, 19, 20, 126, 294, 297, 311, 322, 339, 421, 459, 485, 487, 503, 506, 513, 556, 577], "suppli": [6, 302, 318, 505], "edgeset": 6, "d": [6, 9, 15, 17, 19, 20, 129, 309, 313, 322, 347, 408, 410, 413, 416, 421, 431, 476, 477, 485, 487, 488, 490, 491, 492, 494, 499, 503, 504, 505, 506, 507, 510, 547, 556, 558, 563], "auxiliari": [6, 15, 16, 322], "union": [6, 418, 484, 584], "minu": [6, 320, 459], "intersect": [6, 313, 340, 557], "add": [6, 15, 19, 20, 23, 29, 33, 37, 147, 197, 204, 230, 280, 289, 291, 295, 302, 308, 316, 320, 322, 335, 337, 346, 349, 356, 357, 366, 405, 416, 418, 423, 424, 425, 475, 482, 495, 513, 516, 518, 534, 556, 559, 563, 568, 569, 580, 583, 584, 589], "getv": [6, 310], "besid": [6, 10, 38, 313, 316, 415, 416], "combin": [6, 14, 18, 34, 126, 307, 310, 313, 322, 325, 336, 337, 340, 404, 405, 406, 410, 556, 563, 572, 579], "primit": [6, 338], "natur": [6, 12, 13, 24, 126, 305, 318, 322], "multi": [6, 31, 127, 307, 318, 322, 325, 326, 329, 336, 338, 340, 341, 342, 343, 347, 408, 410, 412, 565, 569], "tradit": [6, 310, 313, 315, 317, 318, 341, 533], "awkward": 6, "supplement": 6, "perspect": [6, 24, 338], "whole": [6, 9, 12, 24, 34, 298, 309, 310, 322, 326, 336, 338, 340, 341, 412, 567, 569, 572], "pick": [6, 322, 344, 498, 513, 516], "transfer": [6, 305, 307, 325, 340, 342, 587], "intuit": [6, 298, 310, 318, 325, 340, 563], "sever": [6, 9, 15, 17, 20, 23, 30, 33, 36, 37, 38, 47, 57, 80, 82, 298, 307, 310, 316, 322, 325, 326, 329, 335, 336, 339, 341, 342, 344, 348, 404, 410, 412, 414, 415, 421, 462, 556, 562, 563, 568, 569], "shown": [6, 7, 9, 10, 12, 15, 16, 18, 24, 27, 34, 125, 129, 310, 312, 322, 328, 329, 339, 341, 344, 405, 406, 407, 410, 416], "input": [6, 9, 12, 13, 15, 17, 22, 24, 45, 76, 119, 124, 125, 128, 147, 149, 166, 197, 200, 204, 230, 232, 249, 280, 283, 289, 291, 305, 313, 326, 328, 329, 332, 335, 336, 337, 340, 341, 347, 366, 370, 391, 404, 405, 406, 407, 408, 410, 413, 416, 419, 421, 489, 503, 505, 507, 513, 514, 548, 556, 559, 560, 563, 568, 569, 583, 588], "second": [6, 13, 27, 125, 294, 298, 305, 316, 322, 326, 335, 340, 343, 344, 348, 412, 501, 502, 510, 511, 512, 513, 517, 555, 556, 563, 569, 570], "fundament": [6, 9, 126, 310, 338], "modul": [6, 8, 9, 15, 19, 20, 23, 129, 307, 310, 315, 320, 325, 333, 336, 337, 338, 340, 341, 417, 555, 585], "produc": [6, 38, 41, 124, 310, 344, 347, 356, 404, 416, 418, 419, 421, 475, 489, 491, 499, 560, 569], "abil": [6, 12, 34, 315, 318, 322, 329, 336, 569], "activ": [6, 9, 23, 24, 30, 265, 294, 299, 312, 313, 331, 337, 341, 416, 563], "dens": [6, 326, 339, 341, 407, 416], "spars": [6, 13, 326, 341, 404, 407, 483, 556, 559], "dispatch": [6, 34, 336, 346], "kernel": [6, 492], "auto": [6, 14, 16, 34, 294, 301, 322, 349, 565, 568, 570], "switch": [6, 12, 23, 34, 121, 124, 129, 204, 289, 294, 295, 313, 321, 339, 513, 516, 568, 576], "prove": [6, 24, 548], "world": [6, 9, 13, 305, 313, 320, 322, 336, 337, 339, 346, 421, 476, 477, 503], "dual": 6, "edgemapdens": 6, "edgemapspars": 6, "instead": [6, 13, 16, 20, 23, 30, 37, 126, 204, 315, 320, 322, 335, 338, 406, 407, 408, 414, 415, 418, 482, 489, 494, 502, 503, 507, 513, 556, 562, 565, 568], "co": [6, 23, 305, 337, 405, 583], "lead": [6, 17, 24, 302, 313, 322, 341, 485, 487], "broadcast": [6, 346, 568], "mirror": [6, 7, 10, 24, 27, 32, 312, 327, 328], "On": [6, 27, 30, 37, 298, 310, 318, 320, 347, 490, 553, 568], "contrari": 6, "total": [6, 8, 12, 34, 294, 305, 310, 311, 312, 321, 322, 333, 349, 431, 475, 498, 515, 521, 556, 569, 570, 583], "4": [6, 9, 10, 13, 17, 19, 20, 22, 27, 31, 123, 129, 147, 230, 288, 291, 294, 295, 300, 302, 310, 311, 313, 314, 317, 318, 320, 321, 322, 333, 334, 337, 344, 355, 404, 406, 407, 409, 410, 411, 421, 427, 432, 434, 435, 440, 441, 459, 461, 462, 471, 479, 482, 484, 491, 500, 502, 507, 516, 523, 526, 527, 533, 534, 540, 542, 549, 550, 551, 556, 558, 559, 563, 568, 569, 570, 571, 572, 579, 582, 583, 587], "redund": 6, "programm": [6, 17, 336, 351], "scope": [6, 23, 37, 313, 338, 418], "disabl": [6, 31, 129, 311, 315, 344, 563], "develop": [6, 8, 9, 11, 12, 14, 24, 29, 34, 37, 43, 204, 289, 295, 298, 300, 305, 310, 311, 313, 317, 318, 322, 323, 324, 325, 326, 327, 336, 339, 340, 341, 343, 351, 408, 410, 411, 412, 414, 475, 568, 576], "katz": [6, 347, 421], "eigenvector": [6, 347, 421, 548], "harmon": 6, "coeffici": [6, 19, 347, 421], "fluid": 6, "version": [6, 15, 17, 18, 20, 23, 27, 29, 37, 46, 101, 123, 126, 127, 160, 204, 243, 302, 312, 313, 315, 318, 320, 321, 328, 336, 338, 343, 344, 347, 411, 418, 476, 477, 492, 494, 507, 513, 534, 556, 565, 567, 568, 569, 576, 579, 582], "color": [6, 19, 20, 322, 556], "biconnect": 6, "bridg": [6, 307, 338], "seven": [6, 416, 455], "strongli": [6, 36, 45, 312, 315, 322, 410, 495], "cut": [6, 12, 24, 541], "k": [6, 20, 37, 230, 280, 301, 311, 322, 326, 336, 337, 338, 340, 347, 348, 408, 421, 458, 466, 476, 477, 478, 479, 481, 483, 484, 485, 492, 495, 504, 505, 506, 508, 511, 512, 513, 514, 515, 516, 521, 556, 562, 568, 583, 587], "decomposit": [6, 313, 337, 421], "degeneraci": 6, "onion": 6, "minim": [6, 11, 45, 313, 339, 416, 507, 508, 529, 555], "domin": [6, 421, 568], "cycl": [6, 338, 340, 343, 346, 423, 459, 460, 463, 474, 496, 500, 521, 523, 539, 543], "triangl": [6, 33, 313, 322, 337, 340, 347, 421, 518, 522, 526, 530, 542, 557, 579, 583], "acycl": [6, 338, 550], "cyclic": [6, 313, 336, 338, 340, 463], "diamond": [6, 526], "rectangl": 6, "tail": [6, 294, 309, 315, 320, 322, 338, 577], "approxim": [6, 313, 475, 548], "densest": 6, "articlerank": 6, "hyperlink": [6, 347, 421], "induc": [6, 318, 320, 347, 369, 432, 435, 451, 499, 556], "topic": [6, 7, 312, 328, 337, 347, 569], "person": [6, 7, 30, 33, 45, 124, 125, 126, 147, 166, 173, 197, 204, 230, 249, 257, 280, 289, 294, 299, 309, 312, 313, 315, 318, 320, 322, 335, 337, 418, 536, 545, 556, 559, 562, 567, 568, 569, 570, 584, 589], "standard": [6, 35, 43, 295, 297, 307, 310, 313, 322, 323, 335, 338, 419, 489, 504, 505, 506, 568], "diamet": 6, "span": [6, 20], "forest": 6, "center": [6, 322, 471, 474, 499], "four": [6, 9, 12, 20, 332, 337, 338, 346, 404, 407, 416, 503, 507, 568], "random": [6, 28, 31, 329, 331, 336, 344, 408, 409, 410, 413, 416, 457, 468, 475, 478, 479, 480, 481, 483, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 516, 548, 551, 553, 555, 563], "give": [7, 12, 13, 31, 34, 125, 173, 312, 322, 328, 335, 344, 410, 418, 483, 503, 523, 555, 556], "quick": [7, 312, 328, 569, 586], "ll": [7, 13, 20, 29, 124, 125, 328], "python3": [7, 23, 27, 28, 30, 31, 32, 35, 36, 41, 45, 127, 129, 289, 302, 311, 312, 328, 333, 337, 579, 580, 581, 582], "pip": [7, 27, 30, 31, 32, 127, 128, 297, 302, 309, 312, 328, 337, 414, 569, 582, 586], "upgrad": [7, 23, 32, 312, 328, 586], "occur": [7, 9, 14, 32, 302, 320, 328, 569], "veri": [7, 13, 32, 124, 305, 310, 312, 322, 325, 328, 335, 337, 341, 406, 408, 579], "speed": [7, 32, 298, 300, 322, 327, 328, 338, 417, 483, 556], "try": [7, 17, 23, 29, 32, 36, 41, 46, 47, 67, 75, 92, 93, 104, 108, 118, 176, 204, 291, 294, 300, 302, 305, 312, 313, 321, 327, 328, 331, 332, 337, 345, 347, 434, 475, 559, 563, 583], "site": [7, 32, 312, 328], "aliyun": [7, 27, 32, 312, 327, 328, 344, 563, 580], "pypi": [7, 27, 32, 302, 312, 314, 328, 582], "trust": [7, 27, 32, 312, 328], "host": [7, 15, 17, 22, 23, 27, 28, 32, 45, 46, 47, 67, 75, 92, 93, 100, 104, 108, 118, 121, 125, 197, 280, 287, 297, 305, 311, 312, 315, 321, 328, 335, 344, 346, 347, 348, 559, 563, 567, 579, 587, 589], "packag": [7, 8, 11, 17, 18, 20, 22, 23, 27, 29, 30, 36, 45, 46, 121, 127, 129, 204, 289, 297, 302, 308, 309, 312, 313, 328, 337, 414, 503, 505, 556, 559, 569, 576, 581], "everyth": [7, 328, 337, 568], "job": [7, 13, 23, 45, 46, 93, 166, 167, 204, 249, 250, 289, 291, 305, 308, 310, 328, 336, 337, 338, 342, 346, 381, 405, 563, 569], "modern_graph": [7, 30, 33, 45, 124, 125, 129, 166, 204, 289, 309, 312, 337, 570, 576], "gremlin": [7, 29, 33, 106, 129, 204, 302, 305, 308, 309, 310, 311, 312, 313, 319, 323, 326, 329, 336, 337, 338, 342, 343, 345, 375, 410, 419, 563, 569, 577, 582, 583, 585, 590], "apach": [7, 17, 22, 23, 31, 307, 313, 318, 321, 324, 325, 336, 337, 340, 567, 569, 573, 579, 581, 585], "tinkerpop": [7, 295, 305, 307, 309, 311, 312, 321, 325, 337, 338, 419, 569, 585], "org": [7, 17, 23, 46, 204, 294, 295, 302, 314, 321, 328, 331, 332, 333, 337, 339, 347, 421, 479, 480, 481, 495, 498, 505, 518, 522, 523, 524, 525, 527, 528, 529, 535, 536, 537, 538, 540, 541, 542, 543, 548, 569, 579, 582, 583, 587], "doc": [7, 16, 17, 30, 37, 45, 46, 121, 122, 293, 337, 338, 346, 350, 352, 418, 505, 586], "tutori": [7, 8, 12, 14, 24, 29, 309, 311, 312, 319, 325, 330, 335, 337, 339, 341, 416, 505, 573], "trigger": [7, 14, 15, 18, 37, 329, 337, 357, 571], "ret": [7, 18, 321, 337, 579, 584], "selector": [7, 15, 33, 38, 337, 346, 348, 356, 362, 363, 373, 374, 378, 386, 387, 418, 561, 563, 567, 579, 584], "homogen": [7, 326, 335, 337, 341, 406], "pg": [7, 337, 347, 563, 567, 568], "none": [7, 9, 20, 27, 31, 118, 123, 166, 265, 287, 288, 291, 316, 331, 333, 334, 335, 337, 347, 348, 355, 362, 363, 366, 369, 373, 374, 375, 376, 378, 381, 383, 386, 387, 391, 397, 399, 403, 404, 405, 410, 418, 419, 420, 421, 429, 433, 435, 436, 440, 441, 450, 451, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 548, 550, 551, 553, 556, 558, 559, 560, 563, 567, 568, 569, 584, 588, 589], "know": [7, 8, 30, 33, 38, 45, 124, 125, 126, 147, 166, 204, 230, 249, 257, 289, 309, 319, 320, 322, 330, 335, 337, 340, 405, 406, 414, 418, 567, 569, 570, 584, 587, 589], "src": [7, 13, 15, 16, 17, 18, 30, 34, 147, 204, 230, 289, 301, 305, 308, 313, 318, 321, 328, 329, 332, 335, 337, 347, 348, 355, 404, 406, 418, 562, 565, 568, 569, 571, 579, 583, 588, 589], "our": [7, 12, 13, 17, 32, 34, 36, 37, 41, 45, 124, 125, 126, 129, 295, 305, 310, 313, 316, 318, 327, 337, 339, 340, 341, 343, 344, 345, 411, 412, 421, 569, 571, 579], "learn": [7, 27, 32, 36, 37, 38, 41, 45, 305, 310, 312, 325, 329, 330, 331, 333, 338, 339, 342, 345, 399, 405, 408, 409, 410, 411, 414, 416, 561, 563, 583, 585], "technic": [7, 328, 412, 550, 556], "disaggreg": [7, 36], "deploy": [7, 29, 30, 33, 46, 75, 123, 297, 300, 302, 305, 311, 322, 336, 342, 406, 416, 563, 569], "scale": [7, 11, 12, 13, 20, 23, 27, 34, 37, 298, 305, 309, 311, 313, 317, 321, 322, 323, 325, 326, 336, 337, 338, 339, 341, 342, 343, 406, 408, 410, 412, 417, 485, 496, 503, 555, 568], "usag": [7, 17, 29, 31, 32, 36, 37, 44, 75, 100, 127, 128, 297, 320, 322, 323, 327, 328, 329, 348, 407, 408, 409, 413, 418, 475, 556, 563, 569, 570], "section": [8, 13, 27, 29, 123, 125, 126, 127, 308, 313, 319, 322, 326, 330, 336, 410, 411, 418, 455, 568, 569], "assum": [8, 23, 27, 30, 289, 294, 309, 319, 322, 330, 337, 405, 418, 454, 515, 554, 556, 563, 567, 568, 583], "getting_start": [8, 297, 319, 330], "most": [8, 9, 13, 15, 22, 33, 38, 45, 126, 129, 298, 302, 310, 313, 315, 316, 320, 322, 326, 335, 337, 339, 341, 343, 344, 348, 404, 406, 410, 412, 414, 418, 476, 477, 501, 504, 505, 506, 567, 569], "suffici": [8, 17, 302, 318, 336, 405], "louvain": [8, 339, 347, 579], "social": [8, 126, 305, 311, 322, 336, 339, 341, 344, 483, 533, 548, 557], "scientist": [8, 325, 343], "familiar": [8, 14, 16, 29, 310], "manipul": [8, 11, 19, 20, 298, 322, 325, 340, 343, 345, 346, 556], "invok": [8, 9, 12, 14, 15, 17, 24, 34, 289, 298, 299, 316, 335, 346, 408, 409, 413, 563, 579], "pydata": [8, 342], "eco": 8, "still": [8, 24, 27, 34, 38, 305, 313, 322, 339, 434, 563, 568, 569], "directli": [8, 12, 20, 24, 30, 32, 34, 36, 37, 38, 46, 176, 259, 294, 297, 298, 305, 313, 315, 316, 318, 320, 322, 324, 326, 329, 335, 341, 346, 405, 408, 410, 411, 412, 413, 548, 556, 559, 563, 569, 573], "migrat": [8, 310, 328, 331, 332, 337, 338, 343, 565, 583], "transpar": [8, 336], "don": [8, 17, 23, 30, 33, 36, 37, 302, 309, 322, 357, 450, 556, 569], "autom": [9, 29, 338], "abl": [9, 24, 27, 204, 289, 309, 338, 409, 513, 568, 569], "batch": [9, 12, 19, 47, 67, 125, 311, 321, 326, 329, 333, 334, 338, 341, 404, 407, 409, 410, 412, 414, 416, 420, 569, 588], "counterpart": [9, 325, 338], "redesign": [9, 338], "underli": [9, 43, 305, 310, 313, 322, 338, 412, 568], "equip": [9, 313, 324, 325, 338, 344, 573], "polici": [9, 297, 302, 338, 346, 563], "memori": [9, 12, 23, 24, 27, 34, 75, 125, 126, 298, 302, 305, 307, 318, 321, 325, 327, 330, 331, 333, 336, 338, 339, 341, 342, 343, 344, 404, 405, 406, 412, 416, 418, 556, 563, 569, 572, 581, 582], "todai": 9, "static": [9, 16, 31, 147, 166, 167, 173, 176, 182, 197, 204, 249, 290, 292, 294, 313, 321, 346, 569, 571], "recomput": 9, "costli": [9, 318], "consum": [9, 302, 313, 341, 412, 415], "especi": [9, 294, 335], "trillion": 9, "commerc": [9, 336, 339], "constantli": 9, "issu": [9, 17, 32, 37, 129, 294, 302, 305, 309, 312, 313, 321, 338, 339, 343, 479, 480, 481, 545, 582], "involv": [9, 13, 37, 41, 298, 305, 310, 313, 318, 322, 326, 329, 336, 339, 340, 341, 342, 343], "adjust": [9, 12, 123, 302, 318], "old": [9, 12, 14, 32, 34, 315, 563], "typic": [9, 24, 45, 121, 123, 298, 305, 318, 320, 322, 336, 339, 340, 343, 405, 410, 485, 556, 562, 568], "often": [9, 37, 126, 298, 305, 309, 321, 336, 339, 340, 341, 343, 406, 407, 410, 556, 569, 577], "overlap": [9, 563], "intervent": 9, "burden": [9, 15, 406], "expert": 9, "light": 9, "overal": [9, 318, 341], "verifi": [9, 27, 38, 265, 305, 309, 311, 313, 316, 344, 410], "characterist": [9, 313, 318, 329, 336, 341, 404, 409], "deduc": [9, 418, 589], "appropri": [9, 27, 41, 125, 126, 310, 313, 326, 336, 341, 404], "record": [9, 13, 289, 298, 299, 309, 312, 314, 315, 322, 337, 415, 565, 569], "part": [9, 13, 37, 129, 305, 310, 320, 326, 329, 338, 410, 411, 414, 416, 539, 556, 567, 568, 569], "intermedi": [9, 12, 17, 310, 322, 325, 336, 338], "deliv": [9, 587], "There": [9, 10, 12, 34, 37, 38, 124, 302, 309, 310, 322, 337, 339, 340, 341, 347, 406, 409, 410, 412, 556, 562, 563, 568, 569], "reshap": [9, 416], "eas": [9, 12, 34, 312, 341, 343, 344], "achiev": [9, 12, 20, 24, 27, 34, 298, 322, 336, 339, 344, 565], "decid": [9, 406, 503], "due": [9, 129, 302, 313, 336, 343, 410], "among": [9, 126, 129, 291, 308, 310, 322, 336, 343, 346, 415, 421, 550, 569], "fetch": [9, 15, 17, 563, 569, 579], "suffic": 9, "replai": [9, 329, 338, 565, 569], "affect": [9, 13, 30, 36, 37, 556], "area": [9, 15, 298, 315, 507, 553], "readili": 9, "obtain": [9, 14, 17, 29, 30, 124, 310, 311, 313, 314, 321, 325, 326, 329, 332, 337, 341, 405, 409, 410, 412, 531, 534, 550, 556, 563, 569], "simpli": [9, 17, 20, 123, 204, 299, 309, 315, 322, 335, 337, 410, 478, 482, 556], "coincid": 9, "idea": [9, 37, 326, 341, 351, 412], "invalid": [9, 147, 197, 230, 280, 418, 563], "miss": [9, 37, 408, 418, 466, 563], "comparison": [9, 19, 308, 316, 320, 322, 325, 343, 344, 348], "those": [9, 29, 126, 298, 309, 311, 315, 316, 318, 322, 335, 345, 408, 418, 421, 432, 461, 463, 465, 556, 558, 562], "although": [9, 12, 14, 22, 34, 129, 176, 204, 259, 289, 305, 337, 351, 455, 568, 569], "solut": [9, 31, 45, 298, 302, 340, 341, 343, 421, 582], "enough": [9, 329, 405, 408, 475, 563, 567], "caus": [9, 14, 22, 32, 37, 302, 321, 328, 341, 406, 412, 418, 455], "overwhelm": 9, "overhead": [9, 13, 343, 405, 406], "mf": 9, "delta": [9, 12, 13, 33, 37, 347, 418], "php": 9, "mp": 9, "cc": [9, 294, 568, 584], "sswp": 9, "mv": [9, 315], "track": 9, "gcn": [9, 325, 329, 341, 345, 404, 408, 412, 416, 583, 585, 588, 590], "commnet": 9, "me": 9, "keep": [9, 320, 322, 329, 349, 410, 418, 513, 516, 569], "graphsag": [9, 325, 329, 333, 337, 341, 345, 404, 408, 410, 412, 416, 585, 588, 590], "gin": [9, 341], "vldb": [9, 579, 585], "paper": [9, 14, 24, 313, 326, 328, 331, 332, 333, 334, 336, 337, 338, 344, 416, 421, 553, 563, 579, 583], "publish": [9, 14, 24, 29, 313, 336, 337], "2021": [9, 338], "denot": [9, 126, 296, 298, 299, 320, 322, 409, 484, 569], "w": [9, 129, 321, 347, 421, 483, 489, 503, 506, 508, 513, 516, 518, 546, 556, 558, 569, 587], "respect": [9, 16, 38, 307, 310, 316, 320, 335, 336, 337, 340, 341, 347, 366, 383, 391, 407, 410, 421, 462, 475, 522, 556, 562, 568, 569], "initi": [9, 16, 18, 19, 121, 123, 125, 129, 294, 295, 311, 313, 322, 333, 334, 339, 341, 346, 405, 406, 416, 418, 420, 421, 495, 497, 498, 556, 559, 567, 569, 573, 579], "init_v": 9, "init_m": 9, "aggreg": [9, 310, 316, 323, 341, 349, 404, 410, 412, 416, 568, 587], "vector": [9, 301, 326, 332, 337, 341, 346, 349, 404, 412, 414, 421, 503, 507], "element": [9, 13, 126, 316, 320, 322, 339, 346, 405, 408, 410, 418, 421, 451, 483, 528, 550, 562, 563, 568], "specifi": [9, 16, 17, 20, 23, 24, 30, 36, 123, 124, 125, 126, 129, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 287, 289, 290, 291, 292, 294, 298, 299, 308, 309, 313, 316, 318, 320, 325, 329, 333, 337, 339, 347, 349, 355, 362, 363, 373, 374, 378, 382, 386, 387, 403, 404, 405, 407, 410, 413, 418, 420, 421, 432, 440, 441, 462, 475, 485, 487, 488, 491, 492, 499, 503, 504, 505, 506, 507, 513, 516, 518, 521, 534, 553, 556, 558, 562, 563, 567, 569, 570, 576], "addition": [9, 12, 14, 36, 126, 313, 315, 316, 326, 332, 336, 338, 340, 343, 412, 421, 568, 577], "correspond": [9, 10, 13, 15, 17, 18, 37, 41, 45, 129, 308, 310, 313, 315, 318, 320, 322, 325, 329, 335, 340, 343, 347, 381, 404, 405, 406, 407, 409, 410, 414, 418, 421, 454, 455, 485, 487, 488, 489, 490, 491, 503, 549, 550, 552, 556, 558, 559, 565, 569, 577], "iteratorkernel": 9, "void": [9, 14, 15, 16, 17, 24, 147, 166, 167, 173, 176, 182, 197, 204, 294, 301, 346, 565, 568, 569, 570, 579], "m1": [9, 302, 312, 457, 582, 586], "m2": [9, 457], "below": [9, 10, 12, 20, 34, 35, 36, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 125, 129, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 308, 320, 329, 336, 337, 339, 340, 341, 344, 405, 408, 410, 413, 416, 455, 485, 487, 521, 556, 563, 569], "ssspkernel": 9, "public": [9, 15, 16, 17, 27, 147, 166, 167, 173, 176, 182, 197, 204, 294, 297, 337, 344, 346, 414, 569, 579, 583], "dbl_max": 9, "backend": [9, 27, 29, 325, 328, 333, 336, 337, 341, 418, 556, 563, 570, 583], "seamless": [9, 305, 313, 342, 569], "block": [9, 297, 302, 310, 318, 407, 483, 569], "spawn": 9, "adopt": [9, 123, 298, 313, 343, 408, 569], "csc": [9, 567], "csr": [9, 13, 125, 301, 418, 567, 570], "sent": [9, 10, 14, 16, 24, 308, 321], "mainten": [9, 568], "preserv": [9, 13, 348, 418, 518, 548], "effect": [9, 36, 37, 45, 298, 305, 313, 320, 321, 329, 336, 341, 408, 487, 556, 569], "readi": [9, 30, 32, 37, 297, 298, 302, 305, 311, 313, 321, 336, 406, 408, 563, 569, 577], "accept": [9, 47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280, 421, 503, 507, 569, 570], "insert": [9, 14, 126, 147, 230, 310, 376, 569], "newli": [9, 41, 204, 289], "particular": [9, 37, 316, 320, 347, 407, 410, 485], "incid": [9, 20, 318, 320, 322, 432, 433, 475, 497, 546, 556], "encod": [9, 13, 128, 204, 289, 316, 318, 347, 405, 410, 416, 418, 420, 558, 569, 588], "dummi": 9, "furthermor": [9, 308, 321, 322, 325, 336, 343], "proprieti": 9, "deduct": 9, "techniqu": [9, 34, 313, 329, 338, 339, 410], "cancel": [9, 93, 167, 169, 250, 291], "compens": 9, "whose": [9, 24, 291, 315, 322, 408, 410, 421, 426, 446, 528, 532, 548, 550, 551, 567, 568], "proce": [9, 129, 294, 475, 569], "inner": [10, 13, 16, 301, 322, 323, 349, 418, 568], "outer": [10, 14, 301, 316, 349, 471, 568], "cross": [10, 318, 351, 531], "f_": 10, "instanc": [10, 15, 23, 27, 28, 29, 30, 33, 38, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 126, 127, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 294, 297, 298, 299, 300, 302, 308, 309, 313, 318, 320, 322, 331, 336, 337, 339, 340, 344, 346, 347, 348, 355, 357, 359, 375, 382, 399, 407, 418, 456, 458, 459, 461, 463, 465, 466, 468, 470, 471, 474, 485, 487, 488, 490, 492, 493, 494, 496, 500, 501, 502, 508, 509, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 551, 558, 563, 568, 576, 577], "5": [10, 13, 19, 20, 31, 129, 291, 302, 311, 313, 317, 320, 322, 328, 329, 331, 332, 333, 334, 337, 340, 344, 404, 407, 409, 410, 411, 413, 416, 421, 427, 432, 434, 440, 459, 462, 475, 479, 480, 481, 483, 484, 492, 494, 501, 502, 503, 504, 506, 507, 521, 522, 524, 525, 526, 527, 529, 530, 533, 535, 537, 539, 540, 546, 551, 556, 562, 563, 569, 571, 577, 582, 583, 587], "9": [10, 31, 147, 230, 309, 312, 313, 320, 322, 337, 405, 421, 459, 461, 507, 525, 533, 546, 551, 586], "12": [10, 20, 32, 197, 280, 302, 312, 322, 344, 347, 405, 406, 407, 409, 411, 423, 424, 425, 461, 523, 524, 528, 532, 536, 542, 580, 582, 586, 587], "split": [10, 125, 313, 320, 322, 331, 332, 333, 334, 405, 406, 563, 569], "roughli": 10, "across": [10, 14, 34, 35, 36, 297, 298, 318, 333, 336, 338, 339, 343, 568, 570], "divid": [10, 204, 289, 316, 320, 322, 326, 336, 347, 405, 408, 412, 413, 421, 567], "place": [10, 18, 19, 36, 125, 309, 313, 322, 414, 415, 418, 483, 503, 504, 505, 506, 507, 536, 554], "itself": [10, 20, 22, 37, 320, 322, 326, 335, 336, 349, 404, 406, 562, 563, 568], "replic": [10, 311, 497], "resid": [10, 14, 38], "j": [10, 31, 129, 301, 347, 416, 421, 454, 455, 476, 477, 485, 487, 488, 490, 496, 507, 510, 511, 512, 534, 568], "outcom": 10, "outgo": [10, 13, 16, 24, 126, 313, 320, 322, 340, 349, 410, 421, 556, 568], "incom": [10, 13, 14, 16, 34, 45, 126, 320, 322, 346, 349, 421], "consid": [10, 15, 18, 27, 37, 289, 322, 329, 339, 347, 348, 405, 406, 421, 485, 548, 565, 568], "vice": [10, 503], "versa": [10, 503], "compani": [10, 568], "syncstateonoutervertexastarget": 10, "certain": [10, 24, 108, 305, 320, 335, 343, 405, 406, 410, 413, 418, 568, 569], "regardless": [10, 316, 338, 405, 501, 568], "friendli": [11, 12, 37, 307, 313, 325, 339, 341, 342, 343], "research": [11, 313, 329, 341, 546, 563], "particularli": [11, 341, 548], "field": [11, 27, 30, 33, 38, 124, 126, 129, 294, 299, 309, 329, 331, 332, 335, 337, 408, 412, 416, 418, 502, 563, 569, 580, 583], "scienc": [11, 510, 533], "solv": [11, 24, 37, 302, 304, 322, 339], "recast": [12, 14, 34], "ga": 12, "plug": [12, 34, 336], "minor": [12, 14, 34, 325, 336, 341, 344, 571], "cope": [12, 34], "life": [12, 32, 34, 309, 336], "extrem": [12, 27, 336, 412, 457, 468, 568], "fashion": [12, 20], "consist": [12, 13, 20, 24, 30, 34, 35, 36, 43, 126, 310, 318, 320, 322, 325, 326, 329, 338, 339, 341, 343, 344, 346, 347, 349, 407, 408, 410, 412, 458, 459, 460, 471, 474, 482, 528, 550, 563, 565, 567, 568, 569, 570], "format": [12, 13, 20, 22, 34, 35, 45, 47, 68, 70, 124, 125, 126, 176, 178, 259, 261, 289, 305, 307, 313, 316, 322, 326, 333, 335, 341, 342, 344, 347, 375, 382, 404, 407, 410, 412, 415, 416, 418, 419, 556, 558, 563, 565, 581], "unifi": [12, 34, 43, 305, 307, 310, 313, 405, 565], "care": [12, 34, 294, 322, 414, 415, 568], "foreign": [12, 568], "ecosystem": [12, 295, 307, 312, 324, 325, 340, 343, 573], "freedom": 12, "accord": [12, 19, 36, 45, 302, 308, 309, 310, 315, 320, 322, 326, 335, 336, 340, 341, 346, 408, 410, 414, 475, 483, 495, 496, 565, 569], "demand": [12, 298, 310, 339, 568, 569, 573], "sdk": [12, 18, 43, 44, 127, 128, 129, 287, 291, 295, 297, 300, 302, 309, 313, 314, 323, 324, 325, 339, 340, 343, 351, 561, 569, 573, 579], "domain": [12, 315, 336, 341, 503, 504, 505, 506, 507], "dedic": 12, "treat": [12, 14, 20, 34, 322, 418, 556, 558, 563, 576], "immut": [12, 34, 129, 307, 318, 338], "persist": [12, 15, 30, 34, 302, 307, 309, 336, 338, 343, 567], "fortun": [12, 20, 124, 294, 305], "grin": [12, 307], "awar": [12, 37, 123, 302, 309, 313, 320, 338], "introduct": [12, 34, 323, 339, 409, 410, 413, 421, 466, 548, 568], "foundat": [12, 300, 336], "visit": [12, 29, 121, 294, 295, 315, 322, 340, 405], "meanwhil": [12, 305, 325, 341, 568], "compress": [12, 13, 337, 347, 405, 521], "pipelin": [12, 34, 325, 336, 339, 343, 572], "balanc": [12, 406, 456], "link": [12, 31, 37, 38, 126, 302, 304, 310, 313, 318, 326, 341, 344, 347, 418, 421, 458, 479, 481, 482, 492, 493, 494, 553, 556, 563], "popular": [12, 22, 29, 296, 305, 335, 337, 340, 341, 404, 416, 569], "freeli": [12, 24], "background": [12, 304], "interoper": [12, 568], "panda": [12, 305, 315, 346, 348, 362, 373, 418, 556, 585], "mar": [12, 27, 305, 320, 338, 563], "fastffi": [12, 351], "via": [12, 14, 17, 18, 20, 22, 23, 24, 27, 32, 43, 46, 204, 289, 294, 295, 297, 298, 302, 309, 313, 316, 317, 318, 320, 323, 324, 325, 336, 338, 340, 343, 346, 457, 468, 475, 551, 554, 556, 573, 579], "emploi": [12, 24, 34, 313, 318, 332, 338, 339], "captur": [12, 341], "20": [12, 13, 27, 29, 32, 34, 309, 312, 320, 322, 325, 344, 347, 348, 406, 407, 409, 418, 475, 503, 504, 525, 527, 556, 579, 580, 586, 587], "100": [12, 34, 129, 315, 322, 328, 331, 332, 337, 347, 416, 421, 478, 485, 489, 496, 505, 556, 563, 569, 583, 587], "build": [12, 15, 31, 34, 35, 37, 44, 46, 125, 127, 128, 204, 302, 310, 313, 315, 321, 325, 326, 335, 338, 346, 347, 357, 359, 406, 410, 412, 414, 415, 418, 504, 505, 506, 548, 563, 565, 576, 581, 588], "been": [12, 17, 23, 24, 28, 29, 33, 37, 45, 129, 204, 289, 294, 299, 302, 308, 310, 311, 312, 313, 315, 320, 322, 324, 326, 336, 338, 339, 340, 341, 343, 347, 396, 408, 410, 418, 419, 421, 475, 498, 548, 560, 573], "go": [13, 327, 416, 483, 536, 569], "impact": [13, 340], "dive": 13, "arrowfrag": [13, 16, 346, 570], "vineyard": [13, 15, 16, 23, 28, 31, 33, 301, 302, 307, 309, 318, 325, 330, 331, 336, 342, 343, 346, 348, 378, 383, 386, 387, 418, 419, 563, 568, 569, 577, 579, 582, 583, 584, 587, 589], "basic": [13, 16, 20, 45, 124, 125, 129, 313, 340, 404, 407, 412, 414, 415, 416, 475, 485, 490, 562], "member": [13, 16, 320, 322, 346, 546], "string": [13, 17, 23, 33, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 124, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 197, 198, 200, 201, 202, 203, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 291, 294, 299, 309, 313, 315, 316, 318, 320, 335, 346, 347, 349, 354, 391, 405, 406, 407, 408, 409, 410, 413, 415, 416, 417, 418, 420, 421, 436, 440, 441, 450, 548, 550, 552, 556, 558, 565, 567, 568, 569, 570, 579, 587, 589], "consecut": 13, "hashmap": [13, 301, 418], "arrai": [13, 17, 288, 301, 316, 326, 335, 341, 346, 347, 348, 407, 408, 410, 413, 416, 556, 559, 571, 579], "o2g_": 13, "fragment_id": 13, "_": [13, 30, 37, 314, 320, 335, 347, 418, 421, 556, 559, 579, 582, 584, 589], "vertex_label": [13, 346, 349], "perfect": [13, 129, 418], "int64_t": [13, 301, 309, 335, 346, 347, 418, 571, 589], "std": [13, 14, 15, 294, 301, 346, 565, 570], "string_view": 13, "uint64_t": [13, 16, 418, 565], "oid_arrays_": [13, 301], "topologi": [13, 326, 329, 338, 407, 412, 553, 565, 567, 568], "row": [13, 125, 309, 313, 326, 341, 405, 418, 549, 569], "matrix": [13, 335, 341, 347, 412, 421, 483, 501, 516, 519, 548, 556, 559], "src_type": [13, 407], "edge_typ": [13, 45, 62, 85, 124, 126, 166, 204, 224, 244, 249, 257, 289, 328, 331, 332, 337, 404, 406, 407, 408, 409, 410, 413, 416, 420, 568, 583, 588], "pair": [13, 20, 312, 316, 318, 322, 346, 347, 349, 403, 416, 455, 460, 461, 467, 483, 501, 507, 556, 559, 562, 568, 570], "indptr": 13, "ie_lists_": [13, 301], "edge_label": [13, 230, 231, 237, 291, 315, 346, 349, 563], "neighbor_vertex_id": 13, "edge_table_index": 13, "tabl": [13, 123, 129, 300, 308, 318, 322, 326, 335, 344, 404, 406, 418, 563, 565, 567, 568, 570], "uint32_t": [13, 346, 418], "num_edg": 13, "ie_offsets_lists_": [13, 301], "offset": [13, 301, 346, 407, 415, 459, 569], "slice": [13, 310, 348, 418, 562], "ie_list": 13, "ie_offset": 13, "num_vertic": 13, "oe_lists_": [13, 301], "oe_offsets_lists_": [13, 301], "oe_list": 13, "oe_offset": 13, "edge_tables_": [13, 301], "vertex_tables_": [13, 301], "oid_t": [13, 15, 16, 301, 346], "vid_t": [13, 15, 16, 301, 346], "sizeof": 13, "uint8_t": 13, "load_factor": 13, "observ": [13, 23, 289, 302, 313], "practic": [13, 16, 28, 297, 310, 318, 326, 329, 336, 341, 405, 406, 408, 569], "load_factori": 13, "15": [13, 302, 322, 331, 332, 334, 344, 406, 407, 409, 410, 516, 538, 549, 556, 563], "extra": [13, 37, 302, 309, 311, 421, 517, 582], "column": [13, 18, 33, 45, 54, 124, 126, 137, 150, 151, 166, 204, 220, 233, 234, 249, 289, 300, 301, 305, 310, 318, 326, 335, 337, 341, 346, 348, 349, 356, 405, 415, 418, 549, 565, 569, 570, 579, 583, 589], "edge_id": 13, "uniqu": [13, 125, 126, 204, 289, 299, 310, 315, 316, 318, 320, 335, 336, 337, 338, 347, 395, 396, 405, 409, 414, 415, 418, 421, 523, 529, 562, 569, 570], "kept": [13, 320, 322, 346], "summari": [13, 343, 436], "argument": [13, 23, 30, 129, 175, 258, 259, 320, 322, 329, 333, 335, 421, 423, 424, 425, 454, 462, 492, 499, 503, 504, 505, 506, 507, 534, 556, 559, 562, 563, 569, 570, 579], "use_perfect_hash": [13, 346, 397, 418, 563], "load_from": [13, 22, 30, 418, 563, 567], "realli": 13, "margin": 13, "former": [13, 339], "globalvertexmap": 13, "later": [13, 18, 20, 32, 33, 312, 315, 322, 340, 418, 563, 568, 569, 586], "localvertexmap": 13, "suitabl": [13, 126, 336, 343, 406, 410, 416, 475, 569, 572], "dozen": 13, "hundr": [13, 485, 496], "repeatedli": [13, 310, 339], "add_vertic": [13, 305, 315, 335, 418, 556, 559, 560, 583, 584, 589], "sure": [13, 23, 27, 30, 41, 45, 121, 124, 294, 295, 297, 299, 311, 313, 315, 322, 410, 414, 416, 563, 569], "fairli": [13, 312], "8": [13, 20, 31, 32, 33, 35, 37, 46, 127, 129, 197, 204, 280, 288, 289, 297, 302, 309, 312, 315, 320, 322, 325, 328, 344, 347, 405, 459, 482, 501, 524, 533, 535, 541, 545, 551, 553, 556, 558, 569, 571, 582, 587], "absolut": 13, "int32_t": [13, 335, 418, 589], "vid_typ": [13, 33, 346, 397, 418, 563], "compact_edg": [13, 346, 397, 418, 563], "compact": [13, 346, 418], "varint": [13, 418], "half": [13, 418], "generated_eid": 13, "save": [13, 18, 28, 29, 124, 309, 406, 418, 421, 569], "interact": [13, 27, 29, 33, 36, 37, 38, 41, 43, 44, 122, 124, 126, 128, 147, 166, 167, 173, 176, 182, 197, 204, 259, 287, 289, 291, 296, 298, 305, 308, 309, 310, 311, 314, 315, 317, 319, 321, 322, 323, 325, 335, 336, 338, 339, 342, 343, 345, 375, 418, 497, 546, 561, 563, 576, 583, 587], "vertex_id": [13, 24, 305, 335, 589], "retain_oid": [13, 309, 335, 346, 397, 418, 563, 570, 589], "gain": [13, 37], "signific": [13, 338, 343], "arrowprojectedfrag": [13, 15, 16, 346, 355], "implicit": [13, 559], "arrowflattenfrag": 13, "thought": [13, 484], "view": [13, 20, 24, 45, 121, 295, 300, 335, 336, 367, 429, 433, 452, 453, 556, 559, 565, 577], "mainli": [13, 125, 129, 310, 316, 322, 343, 412], "purpos": [13, 43, 322, 336, 568], "penalti": 13, "arrowprojectfrag": 13, "r1": [13, 348, 571, 572], "r2": [13, 348, 571, 572], "r3": [13, 348, 571], "projected_g": 13, "_project_to_simpl": [13, 16, 17, 22], "otherwis": [13, 33, 291, 294, 322, 339, 347, 405, 409, 410, 411, 421, 438, 475, 495, 505, 554, 556, 563, 568, 569], "express": [14, 15, 24, 310, 313, 316, 317, 318, 329, 338, 340, 348, 405, 407, 410, 507, 556, 587], "modifi": [14, 20, 24, 28, 123, 298, 308, 309, 316, 321, 360, 361, 376, 377, 411, 434, 487, 554, 567, 568], "adher": [14, 35, 126, 568], "think": [14, 24], "principl": [14, 414], "privileg": 14, "experienc": [14, 340], "inform": [14, 15, 16, 19, 27, 29, 38, 45, 75, 121, 204, 289, 291, 295, 297, 302, 310, 311, 313, 315, 316, 318, 332, 337, 339, 341, 342, 351, 365, 404, 405, 406, 407, 410, 412, 414, 418, 421, 436, 454, 495, 517, 518, 546, 556, 563, 565, 569, 576], "hop": [14, 310, 318, 320, 322, 325, 326, 329, 336, 340, 341, 404, 408, 410, 412, 413, 414, 416], "slow": [14, 312], "consequ": [14, 336, 339], "piec": [14, 296, 307, 415, 563], "destin": [14, 33, 77, 124, 125, 126, 150, 153, 233, 236, 309, 315, 316, 322, 326, 335, 337, 346, 348, 364, 405, 406, 407, 409, 410, 416, 418, 420, 562, 567, 568, 569, 589], "abovement": 14, "peval": [14, 16, 17, 18, 34, 339, 346, 354, 573, 579], "incev": [14, 16, 17, 18, 34, 339, 346, 354, 573, 579], "assembl": [14, 34, 310, 338, 339, 346, 418], "unlik": [14, 17, 317, 326, 329, 336, 556], "modif": [14, 22, 294, 313, 325, 336, 341, 418, 559], "convent": [14, 37, 302, 489, 515, 577], "taught": [14, 322], "colleg": 14, "textbook": 14, "answer": [14, 34, 37, 302, 315, 336, 569], "collect": [14, 34, 42, 46, 47, 313, 316, 320, 321, 322, 340, 341, 342, 416, 556], "partial": [14, 16, 18, 34, 320, 346, 348, 405, 498, 573], "intricaci": 14, "fixpoint": 14, "monoton": 14, "guarante": [14, 125, 309, 329, 343, 405, 413, 421, 491, 556], "accur": [14, 313, 315], "long": [14, 17, 30, 33, 38, 288, 294, 313, 315, 318, 320, 322, 338, 343, 347, 410, 568, 569, 579, 587], "const": [14, 15, 16, 294, 301, 346, 349, 414, 415, 568, 569, 570], "fragment_t": [14, 15, 16, 346], "frag": [14, 17, 18, 301, 354, 565, 570, 579], "context_t": [14, 15, 16, 346], "ctx": [14, 17, 22, 346, 567, 579], "message_manager_t": [14, 16, 346], "vertex_t": [14, 16, 301, 346], "native_sourc": [14, 18, 579], "getinnervertex": [14, 346], "partial_result": 14, "getoutgoingadjlist": [14, 16, 17, 301, 346, 565, 579], "get_neighbor": 14, "min": [14, 18, 24, 57, 82, 313, 316, 349, 579, 587], "static_cast": [14, 16, 294, 301, 565], "get_data": [14, 301], "isoutervertex": [14, 346], "put": [14, 16, 17, 22, 46, 47, 108, 126, 129, 147, 173, 197, 204, 230, 257, 280, 288, 289, 414], "channel": [14, 16, 37], "syncstateonoutervertex": 14, "els": [14, 16, 18, 147, 166, 167, 173, 176, 182, 197, 204, 289, 301, 322, 406, 416, 418, 514, 568, 569, 579], "next_modifi": 14, "inner_vertic": [14, 16], "innervertic": [14, 16, 17, 301, 346, 565, 579], "parallelprocess": [14, 16], "thread_num": [14, 16], "tid": [14, 16], "msg": [14, 16, 24, 290, 322, 349, 568], "atomic_min": 14, "curr_modifi": 14, "foreach": [14, 16], "distv": [14, 18, 579], "ndistu": 14, "outer_vertic": 14, "outervertic": [14, 301, 346], "dijkstra": [14, 18, 339, 421, 579], "checkout": [14, 37, 411], "seri": [15, 322, 341, 346, 410, 568], "strong": [15, 297, 310, 339], "typenam": [15, 16, 131, 135, 138, 145, 155, 159, 165, 200, 202, 301, 346], "frag_t": [15, 16, 346], "yourapp": 15, "flashappbas": 15, "v_type": 15, "install_flash_work": 15, "flashvertexdatacontext": 15, "v_res_typ": 15, "sync_all_": 15, "re": [15, 37, 123, 289, 297, 309, 321, 322, 340, 407, 410, 414, 416, 562, 571], "shared_ptr": [15, 301, 346, 565, 570], "fw_t": 15, "fw": 15, "Or": [15, 17, 19, 22, 29, 36, 41, 127, 129, 299, 315, 322, 335, 563, 579, 589], "global": [15, 24, 124, 310, 318, 320, 322, 341, 397, 418, 548, 563, 570, 576, 587], "flashglobaldatacontext": 15, "g_res_typ": 15, "let": [15, 18, 19, 41, 125, 309, 310, 322, 335, 341, 518, 562], "bfsflash": 15, "bfs_type": 15, "value_t": 15, "di": 15, "o_sourc": 15, "oid2flashid": 15, "definemapv": 15, "init": [15, 16, 17, 18, 125, 129, 178, 289, 301, 331, 335, 346, 347, 349, 354, 404, 406, 407, 411, 414, 416, 556, 559, 565, 573, 579, 588, 589], "vset_t": 15, "ctruev": 15, "definefv": 15, "definemap": 15, "cond": [15, 464], "len": [15, 320, 322, 331, 333, 406, 421, 430, 461, 478, 480, 483, 485, 486, 490, 556], "ed": [15, 23, 489, 503, 510, 533, 539], "ctruee": 15, "rather": [15, 18, 125, 298, 322, 335, 340, 342, 343, 421, 475, 517, 568], "py": [15, 32, 36, 41, 45, 46, 47, 67, 75, 92, 93, 104, 108, 118, 127, 129, 289, 311, 333, 404, 411, 416, 563, 569, 576, 579, 580, 581, 588], "project_to_simpl": 15, "not_compatible_for": 15, "arrow_properti": [15, 30, 358, 559], "dynamic_properti": [15, 371, 559], "def": [15, 18, 23, 289, 314, 328, 331, 332, 333, 334, 335, 337, 354, 404, 406, 407, 408, 409, 410, 413, 416, 462, 569, 579, 583, 584, 588, 589], "arg": [15, 147, 166, 167, 173, 176, 182, 197, 204, 294, 331, 333, 346, 347, 348, 349, 382, 400, 407, 408, 409, 410, 413, 416, 420, 563, 569], "appasset": [15, 18, 354, 355, 359, 561, 579], "algo": [15, 16, 17, 22, 23, 347, 355], "flash_bf": 15, "vertex_data": [15, 16, 281, 347, 355], "gscoordin": [15, 28, 36, 45], "builtin": [15, 19, 20, 121, 295, 299, 557, 559, 561], "gs_conf": [15, 16, 355], "yaml": [15, 16, 28, 29, 38, 45, 120, 122, 123, 125, 126, 128, 129, 289, 293, 295, 299, 309, 321, 333, 347, 355, 563, 567, 569, 587], "cpp_flash": 15, "class_nam": [15, 16, 355], "compatible_graph": [15, 16, 355], "immutableedgecutfrag": 15, "log": [15, 17, 46, 75, 86, 94, 123, 169, 252, 302, 307, 308, 331, 332, 336, 338, 568, 570, 582], "p2p": [15, 17, 22, 23], "network": [15, 27, 126, 297, 302, 305, 307, 311, 322, 326, 330, 332, 336, 337, 339, 342, 343, 344, 345, 347, 404, 405, 406, 408, 410, 412, 416, 421, 476, 477, 483, 485, 489, 492, 493, 494, 497, 509, 533, 544, 545, 547, 548, 553, 557, 571, 582], "load_p2p_network": [15, 16, 17, 18, 305, 347, 348, 579], "attribut": [15, 19, 126, 318, 329, 332, 337, 339, 341, 346, 347, 380, 391, 406, 407, 409, 412, 416, 417, 420, 421, 423, 424, 425, 440, 441, 450, 462, 475, 480, 499, 503, 504, 505, 506, 507, 510, 511, 512, 546, 548, 550, 553, 554, 556, 557, 559, 565], "convert": [15, 20, 23, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 129, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289, 294, 299, 316, 326, 347, 362, 363, 373, 374, 386, 387, 404, 405, 412, 416, 476, 477, 534, 551, 556, 558, 559, 565], "simple_graph": [15, 16], "dist": [15, 17, 295, 308, 314, 347, 348, 411, 414, 503, 505, 507, 563, 579, 587], "codegen": [15, 46, 129, 310], "bit": [15, 312, 316, 320, 322, 567], "longer": [15, 331, 349, 563], "retriev": [15, 128, 291, 307, 315, 316, 318, 320, 337, 338, 348, 362, 363, 373, 374, 378, 382, 386, 387, 407, 408, 410, 416, 421, 562, 569, 570], "displai": [15, 297, 313, 321, 405], "vertex_rang": [15, 348, 362, 363, 373, 374, 378, 386, 387, 418, 562], "end": [15, 16, 301, 305, 308, 316, 320, 322, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 343, 348, 349, 410, 415, 421, 435, 444, 449, 450, 463, 475, 558, 562, 568, 573], "sort_valu": 15, "pip3": [16, 19, 23, 35, 36, 37, 45, 121, 127, 289, 297, 302, 314, 321, 576, 580, 582, 586], "degre": [16, 19, 20, 301, 305, 322, 329, 347, 349, 407, 408, 413, 421, 430, 455, 456, 475, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 501, 513, 514, 515, 516, 550, 556, 557, 569], "vertexdatacontext": [16, 17, 346, 421, 579], "myappcontext": 16, "explicit": [16, 346, 500, 556, 563], "parallelmessagemanag": [16, 17, 579], "param1": [16, 197, 280], "setvalu": [16, 17, 579], "vertex_array_t": [16, 346], "variabl": [16, 29, 33, 39, 41, 126, 204, 287, 289, 294, 297, 299, 302, 311, 320, 354, 475, 563, 569, 570, 582], "And": [16, 18, 23, 29, 31, 36, 38, 305, 310, 312, 322, 335, 344, 347, 348, 409, 414, 559, 562, 563, 569], "zero": [16, 126, 338, 347, 405, 410, 421, 438, 456, 465, 498, 550, 551, 570], "myapp": 16, "parallelappbas": [16, 17, 579], "parallelengin": [16, 17, 579], "install_parallel_work": 16, "constexpr": [16, 346], "messagestrategi": [16, 18, 346, 349, 579], "message_strategi": [16, 346], "ksynconoutervertex": [16, 18, 346, 349, 579], "loadstrategi": [16, 346], "load_strategi": [16, 346], "kbothoutin": [16, 346], "initchannel": 16, "noth": [16, 349, 365, 418, 420, 556], "forc": [16, 37, 335, 576], "forcecontinu": [16, 17, 579], "getincomingadjlist": [16, 301, 346], "counter": [16, 322], "runnabl": [16, 17, 23, 90, 163, 246, 294], "content": [16, 47, 67, 75, 92, 93, 104, 108, 118, 126, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280, 294, 305, 313, 322, 332, 335, 337, 421, 553, 567, 589], "my_app": [16, 18, 579], "cpp_pie": [16, 347, 355], "context_typ": [16, 346, 347, 355], "dynamicprojectedfrag": 16, "codebas": [16, 35, 44, 128], "my_app_context": 16, "zip": [16, 124, 295, 314, 315, 321, 355, 503, 507, 556, 587], "jr": 16, "load_app": [16, 17, 18, 22, 579], "path_to_your_gar_resourc": 16, "to_numpi": [16, 17, 22, 347, 348, 418, 562, 579], "demo": [17, 22, 23, 45, 312, 351, 563, 569, 577, 579], "turn": [17, 298, 302, 315, 344, 351, 550, 577], "verbos": [17, 23, 38, 123, 302, 577], "cluster_typ": [17, 22, 101, 102, 315, 335, 347, 348, 563, 567, 579, 589], "add_lib": [17, 22, 563], "home": [17, 22, 23, 28, 38, 125, 302, 305, 335, 346, 411, 412, 414, 415, 417, 418, 421, 465, 576, 577, 579, 581, 589], "19": [17, 22, 23, 32, 127, 295, 297, 302, 314, 322, 344, 406, 407, 409, 577, 582, 586], "shade": [17, 22, 23, 579], "java_pi": [17, 347], "threadnum": [17, 579], "info": [17, 38, 105, 123, 129, 166, 249, 302, 312, 322, 333, 349, 418, 556, 559, 563, 568, 569, 570, 577], "avail": [17, 23, 29, 30, 41, 124, 125, 204, 289, 296, 297, 305, 313, 315, 316, 318, 321, 329, 335, 338, 344, 347, 403, 416, 504, 505, 506, 556, 563, 565, 568, 579], "mvn": [17, 22, 129, 204, 308, 351, 569], "clean": [17, 32, 129, 204, 305, 308, 312, 313, 315, 337, 351, 414, 568], "dskiptest": [17, 129, 351], "pom": [17, 23, 204, 569], "xml": [17, 23, 346, 569], "groupid": [17, 23, 204, 313, 569, 579], "artifactid": [17, 23, 204, 313, 569, 579], "shall": [17, 23], "fat": 17, "plugin": [17, 23, 313, 569, 579], "spark": [17, 567], "drastic": 17, "great": [17, 23, 37, 569], "suppos": [17, 322, 550, 568], "traversecontext": [17, 579], "overrid": [17, 294, 335, 346, 404, 414, 576, 579], "ifrag": [17, 579], "parallelcontextbas": [17, 579], "adjlist": [17, 346, 349, 567, 579], "nbr": [17, 20, 301, 346, 349, 556, 579], "dst": [17, 18, 30, 147, 204, 230, 289, 305, 318, 329, 335, 348, 404, 407, 418, 420, 562, 565, 568, 579, 588, 589], "largest": [17, 322, 421, 501, 579], "vertexarrai": [17, 346, 349, 579], "math": [17, 328, 332, 337, 421, 505, 506, 583, 585], "max": [17, 316, 349, 417, 421, 579, 587], "pars": [17, 310, 335, 347, 405, 565, 569], "maxiter": [17, 579], "jsonobject": [17, 579], "gsvertexarrai": [17, 579], "createfficontext": [17, 579], "containskei": [17, 579], "getinteg": [17, 579], "javadoc": [17, 35], "proper": [17, 37], "javaapp": [17, 561, 579], "But": [17, 309, 322, 335, 343, 351, 556, 562], "rememb": [17, 22, 23, 30, 33, 45, 121, 124, 204, 289, 297, 299, 569, 576], "pack": [17, 23, 308, 579], "param": [17, 23, 29, 90, 109, 163, 186, 246, 259, 269, 287, 291, 294, 302, 312, 315, 333, 347, 367, 368, 382, 397, 399, 403, 410, 416, 563, 569, 579], "bother": 17, "click": [17, 36, 37, 313, 329, 406, 407, 410, 580], "pure": [18, 346, 573], "just": [18, 19, 23, 27, 45, 121, 124, 125, 294, 295, 297, 302, 305, 309, 313, 320, 322, 343, 351, 414, 418, 556, 559, 563, 569, 571], "udf": [18, 354, 562, 579], "decor": [18, 579], "vd_type": [18, 349, 354, 579], "md_type": [18, 349, 354, 579], "youralgorithm": [18, 579], "staticmethod": [18, 354, 579], "statu": [18, 27, 29, 30, 38, 43, 45, 46, 47, 67, 75, 80, 92, 93, 94, 98, 104, 105, 108, 115, 118, 124, 128, 129, 147, 166, 167, 169, 173, 176, 182, 183, 197, 204, 230, 249, 250, 252, 257, 259, 265, 266, 280, 287, 289, 290, 291, 300, 302, 331, 414, 415, 421, 569, 573, 577], "cython": [18, 34, 302, 382, 561, 579], "sssp_pie": [18, 579], "v_label_num": [18, 570, 579], "vertex_label_num": [18, 294, 349, 565, 570, 579], "v_label_id": [18, 349, 579], "init_valu": [18, 349, 579], "1000000000": [18, 347, 579], "pieaggregatetyp": [18, 349, 579], "kminaggreg": [18, 349, 579], "register_sync_buff": [18, 349, 579], "get_config": [18, 349, 563, 579], "declar": [18, 204, 287, 289, 297, 310, 320, 322, 325, 340, 343, 406, 579], "get_inner_nod": [18, 349, 579], "break": [18, 37, 204, 289, 298, 321, 416, 579], "set_node_valu": [18, 349, 579], "e_label_num": [18, 301, 570, 579], "edge_label_num": [18, 349, 565, 570, 579], "e_label_id": [18, 579], "get_outgoing_edg": [18, 349, 579], "third": [18, 129, 335, 336, 340, 418, 541, 542], "get_int": [18, 288, 294, 349, 579], "get_node_valu": [18, 349, 579], "iv": [18, 579], "inner_nod": [18, 349, 579], "v_dist": [18, 579], "u_dist": [18, 301, 579], "classic": [18, 329, 409, 557], "yourpregelalgorithm": [18, 579], "sssp_pregel": [18, 579], "set_valu": [18, 349, 579], "src_id": [18, 125, 301, 329, 405, 406, 407, 409, 410, 413, 416, 420, 579], "cur_dist": [18, 579], "new_dist": [18, 579], "outgoing_edg": [18, 349, 579], "vote_to_halt": [18, 349, 579], "sin": [18, 579], "m_pi": [18, 579], "translat": [18, 37, 315, 336], "generate_eid": [18, 309, 335, 346, 397, 418, 563, 570, 579, 589], "test": [18, 23, 29, 33, 43, 44, 124, 128, 166, 173, 204, 249, 257, 294, 297, 299, 300, 302, 307, 309, 312, 313, 322, 325, 328, 331, 332, 337, 341, 404, 414, 416, 420, 440, 441, 475, 556, 558, 563, 568, 569, 580, 581, 583, 588], "futur": [18, 123, 126, 204, 289, 298, 308, 316, 320, 322, 335], "to_gar": [18, 579], "tmp": [18, 19, 28, 38, 45, 129, 166, 309, 311, 378, 383, 416, 418, 563, 567, 569, 577, 579, 582], "my_sssp_pregel": [18, 579], "gar": [18, 347, 355, 579], "construct": [19, 287, 290, 291, 292, 298, 300, 322, 326, 329, 335, 336, 337, 338, 346, 397, 404, 405, 406, 407, 408, 418, 419, 423, 424, 464, 485, 487, 488, 490, 496, 500, 501, 502, 510, 513, 514, 515, 516, 518, 534, 538, 542, 548, 550, 563, 567, 570], "expand": [19, 298, 310, 313, 322, 323, 408, 410, 557], "add_edges_from": [19, 20, 440, 556], "add_nod": [19, 20, 556, 559], "number_of_nod": [19, 20, 421, 465, 549, 556], "number_of_edg": [19, 20, 430, 465, 549, 556], "sort": [19, 20, 301, 310, 322, 421, 427, 455, 459, 462, 465, 490, 491, 549, 550, 556, 568], "connected_compon": [19, 421], "nx": [19, 20, 305, 358, 360, 361, 364, 367, 369, 371, 376, 377, 381, 384, 385, 418, 421, 556, 558, 559], "add_nodes_from": [19, 20, 556], "red": [19, 20, 37, 315, 405, 556], "green": [19, 20, 36, 37], "add_edg": [19, 20, 291, 305, 315, 335, 418, 434, 440, 441, 444, 449, 450, 556, 559, 583, 584, 589], "1415": [19, 20], "all_pairs_shortest_path": 19, "sp": [19, 296], "dict": [19, 20, 27, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289, 347, 348, 375, 383, 403, 406, 407, 410, 418, 419, 503, 504, 505, 506, 513, 514, 534, 556, 562, 563, 569], "draw": [19, 298, 322, 503, 506], "matplotlib": [19, 322], "with_label": 19, "font_weight": 19, "bold": [19, 344], "twitter": [19, 344], "wget": [19, 22, 23, 29, 35, 124, 289, 295, 314, 411, 587], "raw": [19, 22, 23, 124, 125, 129, 289, 291, 309, 310, 326, 373, 374, 406, 412, 414, 415, 420], "githubusercont": [19, 22, 23, 124, 289], "p": [19, 20, 31, 36, 129, 173, 204, 299, 315, 320, 322, 337, 338, 347, 406, 416, 421, 479, 480, 481, 483, 492, 493, 494, 497, 498, 500, 502, 504, 505, 506, 507, 510, 512, 587], "o": [19, 22, 23, 27, 30, 33, 38, 294, 346, 416, 421, 438, 489, 491, 496, 504, 505, 506, 508, 509, 510, 556, 569, 580, 583], "gs_nx": 19, "g1": [19, 418, 560, 571, 572], "read_edgelist": [19, 558], "expandvar": [19, 22], "nodetyp": [19, 558], "create_us": [19, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 485, 486, 487, 488, 490, 492, 493, 494, 496, 500, 501, 502, 508, 509, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 551, 558], "g2": [19, 418, 556, 560, 571, 572], "ret_g": 19, "ret_nx": 19, "lack": [20, 32, 313, 315, 320, 342, 421], "hashabl": [20, 436, 451, 513, 556, 558], "float": [20, 89, 96, 158, 172, 288, 316, 318, 320, 331, 335, 344, 347, 404, 405, 406, 407, 415, 416, 417, 421, 475, 478, 479, 480, 481, 483, 494, 495, 496, 497, 498, 503, 504, 505, 506, 507, 510, 511, 512, 548, 556, 558, 563, 567, 571, 587, 588, 589], "tupl": [20, 322, 335, 405, 406, 407, 416, 418, 421, 440, 441, 450, 462, 503, 507, 513, 552, 556, 558, 563], "though": [20, 294, 475, 556, 569], "yield": [20, 204, 299, 313, 410, 416, 503, 507, 556], "node_attribute_dict": 20, "discuss": [20, 294, 302, 322, 421, 568, 582], "incorpor": [20, 129], "path_graph": [20, 421, 432, 434, 435, 441, 556, 558], "grown": [20, 465, 498, 556], "unpack": [20, 321, 346, 556], "ebunch": [20, 556], "dictionari": [20, 287, 296, 347, 391, 421, 503, 504, 505, 506, 513, 514, 515, 516, 556, 558, 567], "11": [20, 27, 30, 31, 32, 47, 68, 129, 309, 312, 322, 328, 344, 347, 405, 406, 407, 409, 423, 424, 425, 461, 556, 569, 577], "complaint": 20, "clear": [20, 37, 313, 320, 322, 360, 361, 456, 458, 459, 461, 463, 465, 466, 468, 470, 471, 474, 485, 487, 488, 490, 492, 493, 494, 496, 500, 501, 502, 508, 509, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 551, 556, 558, 569], "quietli": [20, 451, 556], "ignor": [20, 313, 421, 432, 451, 556, 563], "spam": 20, "stage": [20, 302, 307, 326, 342, 343, 410, 568], "seen": [20, 121, 295, 310, 336, 568], "report": [20, 302, 308, 344, 381, 479, 480, 481, 556, 559], "adj": [20, 349, 421, 556], "item": [20, 29, 125, 295, 300, 333, 336, 405, 406, 407, 410, 416, 421, 556, 569], "One": [20, 310, 316, 336, 340, 341, 342, 343, 347, 408, 410, 487, 496, 550, 569], "nbunch": [20, 429, 433, 435, 451, 556], "remove_nod": [20, 556], "remove_nodes_from": [20, 556], "remove_edg": [20, 556], "remove_edges_from": [20, 485, 487, 556], "instanti": [20, 347, 416, 571], "digraph": [20, 418, 423, 433, 435, 440, 441, 444, 449, 450, 461, 478, 479, 480, 483, 487, 488, 490, 492, 493, 494, 495, 499, 550, 551, 552, 554, 557, 558, 559], "edgelist": [20, 534, 558], "subscript": [20, 556], "notat": [20, 123, 125, 521, 523, 525, 527, 529, 535, 537, 556], "yellow": [20, 405], "blue": [20, 405, 556], "undirect": [20, 126, 335, 341, 347, 367, 406, 410, 418, 421, 427, 431, 453, 476, 477, 483, 485, 492, 494, 497, 499, 500, 501, 503, 504, 505, 506, 507, 513, 518, 522, 523, 526, 529, 530, 532, 538, 551, 553, 556, 570], "twice": [20, 534, 556], "fg": [20, 570], "add_weighted_edges_from": [20, 440, 556], "125": [20, 405, 489, 500], "75": [20, 322, 328, 331, 332, 337, 344, 421, 479, 480, 481, 483, 563, 583], "375": 20, "eattr": [20, 556], "wt": 20, "attach": [20, 346, 405, 492, 495], "fridai": [20, 556, 559], "mondai": 20, "5pm": [20, 556], "2pm": [20, 556], "room": [20, 556], "714": [20, 556], "to_direct": [20, 418, 476, 477, 492, 494, 556], "represent": [20, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 126, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 298, 310, 336, 338, 341, 418, 554, 556, 567], "dg": [20, 325, 341], "dgv": 20, "as_view": [20, 452, 453, 556], "shallow": 20, "out_edg": [20, 433, 556], "in_degre": [20, 329, 331, 408, 410, 413, 416, 487, 513, 514, 556], "predecessor": [20, 426, 499, 550, 556], "successor": [20, 393, 426, 493, 494, 499, 556], "out_degre": [20, 487, 513, 514, 556], "feel": [20, 37, 294, 302], "inconsist": [20, 344], "inde": [20, 22], "lump": 20, "danger": 20, "probabl": [20, 37, 320, 329, 341, 347, 408, 413, 478, 479, 480, 481, 483, 485, 489, 492, 494, 495, 496, 497, 498, 503, 504, 505, 506, 507, 510, 512], "to_undirect": [20, 418, 492, 494, 556], "theoret": 20, "load_ldbc": [20, 322, 567, 587], "foo": [20, 556], "famou": [22, 23, 555], "hadoop": [22, 569], "stop": [22, 27, 30, 46, 104, 182, 204, 265, 289, 291, 313, 338, 342, 346, 421], "open": [22, 36, 37, 129, 294, 297, 311, 321, 323, 329, 340, 343, 416, 558, 568, 569], "actual": [22, 23, 28, 120, 121, 122, 124, 126, 204, 289, 293, 295, 311, 313, 318, 320, 322, 329, 350, 352, 409, 507, 556, 559, 567, 577], "vertexinputformat": 22, "edgeinputformat": 22, "vformat": [22, 418], "p2pvertexinputformat": 22, "eformat": [22, 418], "p2pedgeinputformat": 22, "graphscope_sess": [22, 418], "31": [22, 23, 305, 335, 406, 407, 409, 589], "v_prop": [22, 346, 380], "vdata": 22, "e_prop": [22, 346, 380], "giraph_sssp": 22, "sourceid": 22, "faster": [22, 421], "toward": [22, 313, 569], "offici": [22, 308, 309, 311, 312, 321, 340], "pl": 22, "snapshot": [22, 308, 313, 318, 343, 565, 569], "writabl": 22, "degrad": [22, 343], "procedur": [22, 29, 46, 108, 123, 127, 128, 173, 176, 257, 259, 287, 291, 295, 298, 300, 309, 310, 316, 322, 357, 498], "except": [22, 46, 47, 67, 75, 92, 93, 104, 108, 118, 204, 289, 290, 291, 292, 294, 298, 302, 321, 328, 331, 332, 335, 337, 342, 409, 416, 434, 451, 455, 466, 475, 485, 487, 536, 556, 563, 568, 583], "right": [22, 316, 320, 335, 414, 457, 466, 468, 489, 554], "inputformat": 22, "sparksess": 23, "gssparksess": 23, "experi": [23, 32, 37, 305, 310, 313, 325, 339, 341, 343, 344, 478], "proceed": [23, 27, 121, 295, 478, 496], "side": [23, 37, 80, 81, 310, 320, 321, 347, 366, 406, 459, 568], "venv": [23, 312, 337], "virtualenv": [23, 289], "pyspark_venv": 23, "bin": [23, 31, 129, 308, 311, 312, 313, 321, 322, 336, 337, 430, 569, 577, 581, 587], "pyspark_venv_g": 23, "tar": [23, 29, 31, 308, 313, 569], "gz": [23, 31, 308, 313, 558, 569], "upload": [23, 45, 46, 118, 124, 125, 291, 294, 309], "pyspark_driver_python": 23, "pyspark_python": 23, "archiv": [23, 336, 567, 587], "oss": [23, 29, 31, 124, 335, 346, 411, 418, 569, 579, 580, 589], "beij": [23, 29, 31, 326, 341, 405, 569, 580], "fixm": 23, "yuansi": 23, "env": [23, 302, 312, 333, 337, 411], "var": [23, 33, 38, 302, 335, 416, 569, 577, 589], "gs_jar": 23, "l": [23, 29, 35, 45, 121, 129, 295, 329, 341, 408, 476, 477, 479, 480, 481, 488, 489, 490, 492, 493, 494, 497, 504, 505, 506, 507, 509, 513, 514, 515, 516, 545, 548, 556, 576, 577], "lib": [23, 31, 204, 296, 311, 313, 355, 569], "7077": 23, "master_url": 23, "conf": [23, 311, 313, 321, 346, 569, 587], "executor": [23, 35, 38, 309, 311, 336, 419, 577], "driver": [23, 27, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 280, 289, 294, 299, 317, 321, 335, 383, 418, 569, 587], "2g": 23, "10g": [23, 581], "minregisteredresourcesratio": 23, "bfstest": 23, "placehold": [23, 316], "url": [23, 29, 94, 169, 252, 311, 418, 419, 569, 587], "rdd": 23, "classifi": [23, 326, 328, 332, 337, 341, 416, 579], "maven": [23, 128, 308, 313, 351, 569, 579], "conflict": [23, 312, 322, 328, 418, 546, 569], "correctli": [23, 37, 294, 299, 302, 325, 421, 569], "resolv": [23, 28, 302, 335, 418, 570], "goal": [23, 298, 300, 310, 316, 326, 338, 341, 568], "reloc": 23, "shadedpattern": 23, "vineyardmemori": 23, "memorystr": 23, "builder": [23, 301, 310, 462, 569], "config": [23, 27, 28, 31, 45, 46, 73, 93, 123, 124, 287, 308, 309, 311, 313, 321, 333, 381, 391, 403, 404, 417, 420, 560, 563, 565, 569, 570, 587, 588], "socket": [23, 28, 30, 311, 346, 570], "bound": [23, 126, 173, 204, 257, 289, 318, 320, 322, 340, 382, 475, 563, 568, 571], "vineyardsock": 23, "filepath": [23, 194], "sock": [23, 28, 311], "gssubmitjar": 23, "grapegraph": 23, "togsgraph": 23, "vd": 23, "classtag": 23, "grapegraphimpl": 23, "loadgraphtog": 23, "vfilepath": 23, "efilepath": 23, "numpartit": 23, "shell": [23, 35, 299, 309, 311, 313, 317, 340, 347], "grow": [24, 298, 305, 313, 325, 336, 475, 485, 492, 493, 494, 555, 568], "capac": [24, 33, 311, 556, 563], "indivis": 24, "succinctli": 24, "oppos": [24, 329], "orient": [24, 329, 343, 413, 569], "googl": [24, 35, 292, 339, 581], "powergraph": [24, 343, 344], "wa": [24, 29, 30, 37, 92, 287, 320, 322, 338, 344, 410, 421, 475, 490, 503, 504, 505, 506, 555, 569], "2010": [24, 344, 347, 421, 481, 548, 553], "sequenc": [24, 316, 320, 322, 347, 418, 455, 475, 485, 486, 487, 488, 489, 490, 491, 507, 513, 514, 517, 550, 551, 556, 557, 570], "conceptu": 24, "behavior": [24, 123, 129, 320, 322, 335, 349, 563], "becom": [24, 305, 322, 329, 556, 568, 569], "inact": 24, "again": [24, 302, 320, 335, 571, 576], "termin": [24, 36, 315], "halt": [24, 340, 349, 495], "individu": [24, 309, 311, 332, 337], "messageiter": [24, 349], "mindist": 24, "issourc": 24, "inf": 24, "done": [24, 125, 326, 329, 405, 416, 421, 518, 570], "getvalu": [24, 147, 166, 167, 173, 176, 182, 197, 204, 294, 301], "mutablevalu": 24, "outedgeiter": 24, "getoutedgeiter": 24, "sendmessageto": 24, "votetohalt": 24, "drop": [24, 37, 302, 569], "dramat": 24, "face": [24, 31, 310, 322, 339, 541, 542], "power": [24, 204, 289, 299, 313, 316, 317, 320, 322, 325, 340, 347, 421, 475, 485, 533, 556], "law": [24, 475, 485], "gather": [24, 308, 563], "scatter": [24, 406], "accumul": [24, 294, 329, 550], "workload": [27, 36, 298, 305, 307, 310, 311, 313, 318, 319, 322, 325, 336, 338, 344, 569, 571, 572], "grpc": [27, 28, 31, 106, 302, 346, 580, 582], "linux": [27, 30, 31, 36, 129, 297, 309, 328, 344, 351, 586], "maco": [27, 30, 36, 129, 297, 302, 312, 580, 582, 583, 586], "skip": [27, 31, 35, 313, 340, 351, 569], "minikub": [27, 29, 30, 569], "instruct": [27, 29, 30, 33, 37, 44, 45, 127, 129, 294, 295, 298, 309, 311, 312, 313, 314, 315, 321, 337, 340, 346, 359, 410], "platform": [27, 32, 37, 43, 127, 129, 297, 307, 309, 310, 328, 342, 343, 344, 351, 405, 547, 563], "desktop": [27, 569, 583], "server": [27, 29, 47, 67, 75, 80, 81, 92, 93, 104, 108, 118, 129, 147, 166, 176, 197, 230, 249, 259, 280, 291, 292, 297, 308, 310, 311, 315, 318, 321, 323, 325, 329, 334, 336, 338, 340, 345, 409, 414, 415, 416, 569, 581, 587], "kubectl": [27, 29, 30, 33, 38, 302, 309, 569, 577, 582], "kube": [27, 563], "apivers": [27, 33, 333], "v1": [27, 33, 35, 46, 47, 67, 75, 92, 93, 104, 108, 118, 129, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289, 302, 320, 322, 328, 331, 332, 333, 337, 340, 404, 521, 534, 559, 582, 583, 588], "certif": 27, "ca": 27, "crt": 27, "last": [27, 30, 322, 410, 415, 418, 478, 550, 577], "16": [27, 31, 309, 311, 318, 322, 344, 404, 406, 407, 409, 411, 512, 535, 549, 588], "2023": [27, 47, 68, 577], "44": [27, 344, 406, 407, 409, 549], "05": [27, 483, 496], "cst": 27, "sig": [27, 579, 586], "28": [27, 320, 322, 326, 341, 344, 406, 407, 409, 553], "cluster_info": 27, "172": [27, 344], "21": [27, 31, 47, 68, 305, 322, 344, 347, 406, 407, 409, 529, 569], "67": [27, 344, 347], "111": 27, "8443": 27, "context_info": 27, "namespac": [27, 28, 29, 30, 33, 38, 294, 333, 563], "profil": [27, 313, 587], "encapsul": [27, 204, 289, 299, 325, 326, 404, 410, 563], "entranc": [27, 129, 410], "tag": [27, 41, 127, 320, 322, 344, 483, 563, 569, 581], "intranet": 27, "internet": [27, 29, 31, 297, 315, 322, 339, 553, 555], "might": [27, 123, 126, 289, 302, 421, 513, 556, 572], "k8s_image_registri": [27, 33, 563], "k8s_image_repositori": [27, 563], "k8s_image_tag": [27, 33, 333, 563], "fit": [27, 298, 305, 309, 330, 331, 351], "increas": [27, 38, 123, 302, 305, 318, 406, 454, 455, 463, 485, 487, 495, 513, 516, 518, 568], "cpu": [27, 75, 129, 302, 309, 333, 334, 411, 563, 572, 582], "num_work": [27, 28, 33, 333, 334, 403, 563, 587], "k8s_engine_cpu": [27, 403, 563], "32": [27, 318, 320, 344, 406, 407, 409, 417, 421, 567], "k8s_engine_mem": [27, 302, 333, 403, 563, 582], "256gi": 27, "vineyard_shared_mem": [27, 302, 333, 403, 563, 582], "preexist": 27, "k8s_client_config": [27, 563], "disk": [27, 124, 298, 302, 309, 336, 569], "test_data": [27, 328, 332, 337, 580, 583], "testingdata": [27, 30, 33, 580, 583], "k8s_volum": [27, 30, 33, 403, 563, 580, 583], "constructor": [27, 335, 456, 458, 459, 461, 463, 465, 466, 468, 470, 471, 474, 485, 487, 488, 490, 492, 493, 494, 496, 500, 501, 502, 508, 509, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 551, 558], "vm": [27, 30, 346], "copi": [27, 29, 30, 297, 309, 336, 338, 343, 364, 421, 428, 432, 434, 435, 493, 499, 554, 556, 559, 567, 568, 569, 570, 571], "hostpath": [27, 30, 33, 309, 563, 580, 583], "expandus": [27, 580, 583], "mountpath": [27, 30, 33, 333, 563, 580, 583], "expect": [27, 34, 37, 294, 302, 308, 335, 351, 485, 487, 489, 559, 563], "monitor": [27, 29, 325], "wait": [27, 123, 124, 169, 204, 289, 302, 313, 563], "finish": [27, 124, 204, 301, 321, 331, 349, 406, 409, 569], "remov": [27, 29, 121, 147, 166, 197, 249, 280, 295, 320, 322, 347, 351, 411, 428, 434, 436, 482, 485, 487, 489, 531, 534, 550, 556, 569], "remain": [27, 298, 316, 320, 335, 339, 405, 410, 490, 517], "statefulset": [27, 569], "svc": [27, 309], "left": [27, 36, 123, 316, 320, 347, 418, 421, 457, 489], "service_port": 28, "63800": 28, "launcher_typ": [28, 45], "operator_launch": 28, "gae_endpoint": 28, "60001": 28, "instance_id": [28, 45, 570], "0000": [28, 305, 322], "rpc_port": 28, "9600": 28, "sai": [28, 41], "configmap": [28, 333], "mount": [28, 30, 33, 302, 310, 335, 415, 563, 580, 582, 583], "ideal": [29, 37, 126, 298, 343], "deploy_graphscope_on_self_managed_k8": 29, "chart": [29, 302, 309, 311, 322, 569, 580, 582], "minut": [29, 302, 310], "succe": 29, "past": [29, 126, 310, 571], "noteport": 29, "node_ip": [29, 569], "ojsonpath": 29, "hostip": 29, "node_port": 29, "spec": [29, 33, 333, 346, 416], "nodeport": [29, 333, 563, 569, 583], "echo": [29, 31], "listen": [29, 297, 298, 311, 346], "statement": [29, 410, 569], "ident": [29, 348, 364, 452, 453, 457, 528, 548, 550, 556], "expos": [29, 297, 308, 318, 324, 408, 419, 563, 573], "reconnect": [29, 563], "disconnect": [29, 121, 295, 421, 497, 498, 513, 516, 563, 576], "sess2": 29, "comment": [29, 37, 305, 315, 316, 322, 335, 405, 556, 558, 559, 567, 584, 589], "homepag": 29, "remot": [29, 36, 204, 321, 333, 334, 351, 419, 563, 587], "cater": [29, 336], "tgz": 29, "unzip": [29, 295, 308, 313, 314, 315, 321, 587], "zxvf": 29, "bundl": [30, 563], "aliv": 30, "reserv": 30, "simplifi": [30, 43, 309, 313, 336, 337, 338, 340, 342, 405, 410, 568], "etcd": [30, 302, 309, 563, 565, 580], "replica": [30, 309, 333], "etcd_replica": 30, "greater": [30, 33, 316, 320, 347, 406, 421, 475, 506, 563, 568], "ag": [30, 33, 45, 124, 125, 126, 166, 197, 204, 249, 257, 280, 289, 310, 318, 320, 322, 326, 341, 404, 405, 418, 562, 577, 587, 588], "33": [30, 298, 320, 406, 407, 409, 546, 549], "vineyardd": [30, 33, 311], "vineyardctl": [30, 563], "v6d": [30, 31, 309, 335, 563], "blob": [30, 302, 579], "cmd": [30, 346, 563], "readm": [30, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 351], "md": [30, 295, 308, 416], "notic": [30, 33, 309, 318, 322, 336, 410, 418, 549, 556, 563, 571], "charact": [30, 125, 547, 552, 558], "vineyard_deploy": 30, "restart": [30, 46, 104, 182, 204, 265, 289, 291, 294, 299, 313, 577], "etcd0": 30, "73m": 30, "5db59987f": 30, "vr2fg": 30, "beforehand": 30, "onto": 30, "stai": [30, 313], "k8s_namespac": [30, 33, 403, 563], "k8s_vineyard_deploy": [30, 33, 403, 563], "reload": [30, 569], "vineyard_id": [30, 33, 418, 577], "new_sess": 30, "22731319746904674": 30, "objectid": [30, 33, 346, 418, 563, 568, 570], "softwar": [30, 33, 125, 299, 309, 312, 320, 325, 336, 418, 570], "successfulli": [30, 47, 67, 75, 92, 93, 104, 108, 124, 147, 176, 197, 204, 230, 259, 280, 289, 297, 311, 313, 315, 326, 331, 475, 569], "folder": [31, 38, 45, 129, 333, 335, 568], "cento": [31, 32, 302, 312, 344, 582, 586], "82": [31, 344], "boost": [31, 325, 336, 346], "perl": 31, "v3": [31, 340, 344], "24": [31, 197, 280, 309, 322, 344, 406, 407, 409, 523, 541, 549], "openmpi": [31, 344], "gflag": 31, "glog": 31, "arrow": [31, 125, 301, 346, 358, 371, 418, 559], "74": [31, 344, 547], "openssl": [31, 302, 582], "zlib": 31, "protobuf": [31, 42, 292], "49": [31, 322, 344, 406, 407, 409], "13": [31, 35, 322, 344, 405, 406, 407, 409, 461, 502], "libclang": 31, "curl": [31, 321], "lo": [31, 321], "czf": 31, "mkdir": [31, 129, 302, 416, 582], "workdir": 31, "xzf": 31, "yum": 31, "scl": 31, "rh": [31, 301], "y": [31, 32, 322, 333, 334, 347, 502, 503, 507], "devtoolset": 31, "python38": 31, "opt": [31, 36, 123, 129, 310, 311, 327, 416], "bash": [31, 129, 313, 320, 333, 577, 581], "euxo": 31, "pipefail": 31, "dir": [31, 291, 308, 569], "prefix": [31, 37, 296, 302, 308, 311, 316, 320, 333, 418, 550, 568, 587], "ld_library_path": 31, "lib64": 31, "py2": 31, "py3": [31, 581], "manylinux2010_x86_64": 31, "whl": [31, 411, 414], "x86_64": [31, 45, 127, 297, 333], "licens": [31, 581], "dbuild_shared_lib": 31, "ON": 31, "dcmake_prefix_path": 31, "dcmake_install_prefix": 31, "boost_1_74_0": 31, "bootstrap": 31, "filesystem": [31, 405], "program_opt": 31, "regex": [31, 320], "chrono": 31, "atom": [31, 569], "date_tim": [31, 126], "b2": 31, "openssl_1_1_1h": 31, "fpic": 31, "cpp": [31, 129, 142, 163, 186, 294], "darrow_comput": 31, "darrow_with_utf8proc": 31, "off": [31, 310, 336, 541, 569], "darrow_csv": 31, "darrow_filesystem": 31, "darrow_ipc": 31, "darrow_build_benchmark": 31, "darrow_build_exampl": 31, "darrow_build_integr": 31, "darrow_build_util": 31, "darrow_build_test": 31, "darrow_enable_timing_test": 31, "darrow_fuzz": 31, "darrow_jemalloc": 31, "darrow_build_shar": 31, "darrow_build_stat": 31, "mpi": [31, 346], "cxx": 31, "dlopen": 31, "nproc": 31, "dgrpc_instal": 31, "dgrpc_build_test": 31, "dgrpc_build_csharp_ext": 31, "dgrpc_build_grpc_csharp_plugin": 31, "dgrpc_build_grpc_node_plugin": 31, "dgrpc_build_grpc_objective_c_plugin": 31, "dgrpc_build_grpc_php_plugin": 31, "dgrpc_build_grpc_python_plugin": 31, "dgrpc_build_grpc_ruby_plugin": 31, "dgrpc_backwards_compatibility_mod": 31, "dgrpc_protobuf_provid": 31, "dgrpc_zlib_provid": 31, "dgrpc_ssl_provid": 31, "dopenssl_root_dir": 31, "dcmake_cxx_flag": 31, "fpermiss": 31, "dbuild_vineyard_test": 31, "dbuild_vineyard_python_bind": 31, "j4": 31, "dnetworkx": 31, "denable_java_sdk": 31, "dbuild_test": 31, "ubuntu": [32, 129, 297, 302, 309, 312, 411, 580, 582, 586], "04": [32, 129, 302, 309, 312, 322, 344, 411, 580, 582, 586], "intel": [32, 312, 580, 582, 586], "appl": [32, 302, 312, 556, 580, 582, 586], "silicon": [32, 312, 580, 582], "jdk": [32, 309, 312, 324, 573, 579], "wheel": [32, 302, 474, 540, 582, 585], "manylinux2014": [32, 581], "abi": 32, "wish": [32, 37, 295], "nightli": [32, 302, 582], "tidi": 32, "quickli": [32, 36, 298, 313, 325, 337, 340, 341, 343, 416, 563], "insid": [32, 38, 45, 125, 302, 320, 322, 347, 355, 405, 417, 418, 531, 562, 563, 587], "apt": [32, 411], "ipython": 32, "tensorflow": [32, 325, 326, 328, 331, 332, 336, 337, 341, 342, 404, 405, 406, 409, 410, 412, 416, 583], "tool": [32, 35, 36, 45, 121, 127, 129, 295, 297, 298, 305, 307, 309, 317, 323, 325, 327, 336, 503, 505, 565, 568, 569, 570, 586], "gsctl": [32, 41, 43, 124, 127, 128, 129, 289, 295, 297, 299, 300, 307, 311, 327, 580, 581], "dep": [32, 35, 128, 576, 580, 581], "fly": [32, 298, 337], "clang": [32, 35, 312, 581], "essenti": [32, 125, 126, 294, 302, 316, 320, 325, 340, 342], "arm": [32, 129], "preliminari": 32, "yet": [32, 204, 289, 297, 314, 320, 348, 513, 516, 556, 562, 569], "calcul": [33, 310, 320, 322, 347, 349, 407, 421, 475, 507], "period": [33, 569], "restor": [33, 563, 569], "persistentvolum": [33, 569], "dump": [33, 347, 383], "cat": [33, 45, 333, 334, 569, 577], "eof": [33, 45], "metadata": [33, 45, 71, 117, 124, 125, 129, 166, 167, 173, 180, 194, 249, 250, 257, 263, 277, 302, 333, 346, 418, 556, 565, 569], "1gi": 33, "accessmod": 33, "readwriteonc": 33, "storageclassnam": 33, "importantli": 33, "lost": [33, 563], "persistentvolumeclaim": [33, 563, 569], "matchlabel": 33, "request": [33, 45, 46, 204, 289, 291, 294, 302, 335, 346, 375, 406, 414, 417, 419, 450, 556, 563, 569, 582], "extern": [33, 37, 294, 329, 336, 563, 569], "ccc": 33, "sub_graph": [33, 318, 337, 583, 584], "haslabel": [33, 305, 312, 318, 322, 337, 587], "simple_g": [33, 337, 579, 583], "pr_result": 33, "tc_result": 33, "add_column": [33, 337, 346, 418, 579, 583, 584], "tc": [33, 337, 583], "997255889378630": 33, "997163552113975": 33, "store_graphs_to_pvc": 33, "graphid": [33, 140, 147, 166, 173, 176, 182, 184, 185, 197, 204, 249, 294, 563], "pvc_name": [33, 563], "schema": [33, 45, 46, 54, 92, 124, 125, 129, 137, 139, 160, 166, 204, 220, 249, 257, 289, 291, 294, 298, 301, 310, 311, 315, 316, 317, 318, 322, 331, 332, 335, 347, 405, 406, 415, 418, 556, 565, 567, 568, 569, 570, 584, 587, 589], "oid_typ": [33, 335, 346, 347, 375, 397, 418, 563, 589], "ulong": 33, "lang": [33, 35, 125, 312, 315, 320, 337, 419], "eid": [33, 301, 315, 418, 569], "restore_graphs_from_pvc": 33, "anymor": 33, "nativ": [34, 123, 294, 307, 310, 317, 336, 340, 342, 343], "behind": [34, 331, 568, 571, 576, 577], "scene": [34, 310, 331, 413], "lower": [34, 310, 313, 318, 320, 322, 340, 475, 482, 495], "cost": [34, 310, 313, 322, 336, 340, 421, 569], "ownership": 34, "cach": [34, 313, 326, 333, 339, 343, 556], "layout": [34, 339, 569], "were": [34, 37, 322, 344, 507, 569], "outperform": [34, 313, 325, 339, 341, 342, 343], "art": [34, 325, 339, 342, 344], "voderank": 34, "average_degree_assort": 34, "degree_assort": 34, "guidelin": [35, 37, 298], "promot": 35, "readabl": [35, 320, 556], "qualiti": [35, 37, 341], "black": [35, 581], "enforc": 35, "rule": [35, 46, 47, 123, 129, 299, 310, 313, 322, 329, 339, 408, 414, 418, 455, 565], "cpplint": 35, "flake8": 35, "fmt": 35, "lint": [35, 37], "makefil": 35, "graphscope_clformat": 35, "graphscope_cpplint": 35, "dev": [35, 43, 44, 128, 300, 307, 333, 580, 581], "pushd": 35, "isort": 35, "diff": 35, "popd": 35, "interactive_engin": [35, 36, 129, 311, 321], "check_format": 35, "files_to_format": 35, "aosp": 35, "toolchain": [36, 45, 327], "devcontain": 36, "json": [36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 147, 166, 167, 173, 182, 197, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 308, 309, 311, 316, 563, 565, 569, 570], "setup": [36, 37, 46, 289, 302, 418, 563, 581], "visual": [36, 37, 298, 336], "studio": 36, "collabor": [36, 336, 568], "stabl": [36, 347, 418, 565, 569, 586], "haven": [36, 289, 297, 322], "navig": [36, 568, 576], "icon": 36, "bottom": [36, 466], "corner": 36, "window": [36, 322, 586], "reopen": 36, "marketplac": 36, "prompt": [36, 315, 321], "shift": [36, 316, 320, 322, 421, 521], "ctrl": 36, "made": [36, 37, 45, 309, 313, 329, 344, 405, 408, 414, 421, 516, 568], "rebuild": 36, "subcommand": [36, 45, 327], "assembli": [36, 311], "learning_engin": 36, "graphlearn": [36, 38, 326, 328, 331, 332, 333, 337, 404, 405, 406, 410, 411, 416, 417, 420, 563, 577, 583, 588], "compos": [36, 38, 129, 326, 329, 337, 339, 343], "alon": [36, 310, 318, 576], "circul": [36, 459], "edit": [36, 37, 45, 315, 502, 539, 576], "entrypoint": [36, 576, 583], "plai": [36, 310, 324, 345, 415, 420, 573], "thank": [37, 305, 315, 336], "interest": [37, 322, 325, 339, 569], "focus": [37, 313, 322, 336, 342, 344, 410, 548, 569], "eager": [37, 347, 348, 397, 399, 418, 563], "contributor": [37, 549], "welcom": [37, 295], "engag": [37, 297, 336, 337], "good": 37, "particip": [37, 123], "join": [37, 123, 313, 316, 322, 333, 406, 416, 457, 460, 468, 475, 484, 485, 498, 500, 503, 504, 505, 506, 507, 515, 516, 556, 568], "ask": [37, 307], "question": [37, 307, 317, 322, 582], "ve": [37, 309, 314, 321, 336], "hasn": [37, 322], "confirm": [37, 313], "concis": [37, 318, 340, 419], "descript": [37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 294, 299, 309, 310, 316, 320, 329, 333, 335, 405, 408, 413, 414, 418, 513, 521, 569], "relev": [37, 123, 124, 411, 450, 556, 567], "reproduc": [37, 556], "yourself": 37, "why": [37, 302, 322, 347], "saw": 37, "incomplet": 37, "inaccur": 37, "knowledg": [37, 305, 315, 326, 341, 412], "submiss": 37, "fact": [37, 310, 315, 513, 516], "page": [37, 120, 121, 122, 124, 293, 295, 307, 338, 347, 350, 352, 466, 481, 545, 585], "button": [37, 315], "tbf": [37, 306, 344, 564, 575, 578], "isn": [37, 318, 409], "someon": 37, "approach": [37, 298, 313, 315, 318, 325, 326, 336, 338, 340, 341, 409, 485, 498, 553, 568], "spend": 37, "secret": [37, 335, 563, 580, 589], "accident": 37, "hook": 37, "titl": [37, 124, 322, 332, 337], "grammar": 37, "spell": [37, 125], "500": [37, 47, 67, 75, 92, 93, 104, 108, 118, 129, 147, 166, 173, 176, 182, 197, 230, 249, 257, 259, 265, 280, 475], "word": [37, 322, 332, 337, 340, 341, 416, 418, 556], "42": [37, 322, 344, 406, 407, 409, 479, 481, 491, 549], "ticket": 37, "chines": 37, "everyon": 37, "beginn": [37, 340], "patch": 37, "rest": [37, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 128, 129, 300, 556, 569], "attain": 37, "brief": [37, 294, 304], "valid": [37, 129, 291, 299, 308, 310, 313, 331, 332, 341, 354, 404, 451, 475, 497, 503, 552, 563, 565], "typo": 37, "feat": 37, "inv": [37, 410, 416, 587], "refactor": 37, "gulp": 37, "broccoli": 37, "npm": [37, 569], "ci": 37, "perf": 37, "neither": 37, "nor": 37, "chore": 37, "routin": [37, 421, 556], "insight": [37, 45, 305, 339, 341, 576], "feedback": [37, 305], "discourag": 37, "rebas": 37, "workflow": [37, 45, 129, 305, 336, 341, 342, 346], "upstream": [37, 410], "leas": 37, "ping": [37, 579], "await": 37, "unfamiliar": 37, "acronym": 37, "glossari": [37, 300, 307, 549], "approv": 37, "date": [37, 126, 316, 322, 567, 568, 569], "todo": [37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 127, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 295, 316, 333, 334, 414], "dongz": 37, "potenti": [37, 298, 326, 336, 568], "concern": [37, 336, 343, 568], "reach": [37, 302, 318, 322, 340, 410, 415, 418, 421, 498, 513, 516, 568], "action": 37, "realiti": [37, 410], "uncommon": 37, "infrastructur": 37, "vital": 37, "inspect": [37, 38, 335, 563, 569], "failur": [37, 343], "stream": [38, 302, 309, 320, 321, 322, 326, 410, 415, 418], "stdout": 38, "log_level": [38, 123, 129, 333, 403], "permiss": [38, 46, 126, 302, 355, 582], "consol": [38, 309, 311, 315, 323, 325, 335, 340, 419, 569, 585], "frontend": [38, 39, 101, 129, 309, 311, 312, 314, 321, 569, 577], "event": [38, 475], "involvedobject": 38, "warn": [38, 123, 556], "pinpoint": 38, "exec": [38, 569, 577], "diagnost": 38, "forward": [38, 298, 326, 328, 329, 331, 332, 337, 341, 410, 569, 583], "browser": [38, 322], "explain": [38, 313, 322, 405, 563, 568, 587], "leverag": [39, 204, 313, 317, 318, 324, 325, 338, 340, 351, 548, 565, 569, 573], "opentelemetri": 39, "javaag": 39, "agent": 39, "protocol": [39, 294, 314, 317, 335, 343, 563], "java_tool_opt": 39, "TO": 39, "otel_service_nam": 39, "compris": [41, 124, 129, 316, 318, 332, 336, 409], "busi": [41, 308, 310, 322, 326, 335, 336, 337, 343], "e2": [41, 535], "coupl": [41, 338, 343, 536, 565], "entri": [43, 287, 310, 313, 320, 322, 329, 331, 420, 421, 468, 485, 487, 488, 513, 515, 516, 534, 576], "swagger": 43, "shield": 43, "understand": [43, 44, 124, 125, 128, 294, 322, 329, 340, 404, 410, 418, 568], "flex": [43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 124, 129, 204, 289, 293, 294, 298, 300, 316, 576], "destroi": [43, 300, 576], "arch": 45, "amd64": [45, 127], "vscode": 45, "openapi": [45, 46, 120, 122, 129, 293], "middl": [45, 425], "http_port": 45, "8080": [45, 121, 123, 127, 295], "referenc": [45, 129, 348], "pytest": [45, 46, 289], "test_interact": 45, "storedprocedur": [45, 139, 160], "127": [45, 121, 204, 289, 295, 297, 299, 308, 311, 344, 569], "explan": [45, 126, 298, 313, 347, 408], "test_graph": [45, 124, 204, 249, 257, 289], "vertex_typ": [45, 62, 85, 124, 126, 166, 204, 224, 244, 249, 257, 289], "type_nam": [45, 46, 48, 52, 59, 66, 67, 69, 72, 83, 91, 92, 119, 124, 125, 126, 166, 204, 214, 218, 221, 228, 238, 242, 248, 249, 257, 283, 285, 289], "property_nam": [45, 51, 63, 87, 124, 125, 126, 166, 204, 217, 227, 247, 249, 257, 289, 322, 348, 349, 562], "property_typ": [45, 51, 63, 87, 124, 126, 166, 204, 217, 227, 247, 249, 257, 289], "primitive_typ": [45, 79, 99, 124, 126, 166, 204, 241, 249, 256, 257, 259, 289], "dt_signed_int64": [45, 124, 126, 158, 166, 172, 204, 249, 257, 289], "long_text": [45, 95, 111, 124, 126, 166, 204, 249, 253, 257, 271, 289], "dt_signed_int32": [45, 124, 126, 158, 166, 172, 204, 249, 257, 259, 289], "primary_kei": [45, 48, 52, 59, 66, 83, 91, 124, 126, 166, 204, 218, 228, 248, 249, 257, 289, 569], "vertex_type_pair_rel": [45, 48, 59, 83, 124, 126, 166, 204, 214, 221, 242, 249, 257, 289], "source_vertex": [45, 49, 69, 77, 124, 125, 126, 166, 204, 215, 236, 249, 257, 286, 289], "destination_vertex": [45, 49, 69, 77, 124, 125, 126, 166, 204, 215, 236, 249, 257, 286, 289], "many_to_mani": [45, 124, 126, 132, 166, 204, 249, 257, 289], "dt_doubl": [45, 124, 126, 158, 166, 172, 204, 249, 257, 289], "bind": [45, 67, 121, 347, 568], "submit": [45, 93, 124, 128, 167, 176, 259, 291, 294, 298, 300, 310, 314, 315, 320, 321, 322, 337, 340, 405, 406, 419, 565, 569, 583], "datasourc": [45, 46, 67, 124, 178, 335, 589], "graph_id": [45, 46, 61, 67, 92, 93, 104, 105, 107, 108, 147, 166, 167, 173, 176, 197, 204, 223, 230, 249, 250, 257, 259, 265, 267, 268, 280, 289, 291, 294, 563], "csv": [45, 124, 166, 204, 249, 289, 300, 305, 309, 313, 315, 335, 418, 556, 559, 567, 569, 570, 583, 584, 589], "column_map": [45, 54, 76, 119, 124, 125, 166, 204, 220, 232, 249, 283, 289], "edge_map": [45, 76, 103, 124, 125, 166, 204, 232, 249, 260, 289, 291], "type_triplet": [45, 76, 124, 125, 166, 204, 232, 249, 289], "person_knows_person": [45, 124, 125, 166, 204, 249, 289, 569], "source_vertex_map": [45, 76, 124, 125, 166, 204, 232, 249, 289], "destination_vertex_map": [45, 76, 124, 125, 166, 204, 232, 249, 289], "loaderjob": [45, 124], "job_config": 45, "loading_config": [45, 68, 124, 125, 260, 289, 291], "import_opt": [45, 70, 124, 125, 261, 289], "overwrit": [45, 124, 125, 178, 563, 569], "delimit": [45, 124, 125, 309, 313, 418, 558, 570, 584], "header_row": [45, 124, 125, 309, 418, 570], "openapitool": 46, "pythonclientcodegen": 46, "git_user_id": 46, "git_repo_id": 46, "sudo": [46, 289, 411, 580, 581], "apiexcept": [46, 47, 67, 75, 92, 93, 104, 108, 118, 176, 290, 292], "pprint": [46, 47, 67, 75, 92, 93, 104, 108, 118], "localhost": [46, 47, 67, 75, 92, 93, 104, 108, 118, 129, 295, 311, 314, 321, 333, 335, 563, 589], "apicli": [46, 47, 67, 75, 92, 93, 104, 108, 118, 176, 563], "api_cli": [46, 47, 67, 75, 92, 93, 104, 108, 118, 563], "api_inst": [46, 47, 67, 75, 92, 93, 104, 108, 118], "alertapi": 46, "create_alert_receiver_request": [46, 47, 56], "createalertreceiverrequest": [46, 47], "api_respons": [46, 47, 67, 75, 92, 93, 104, 108, 118], "create_alert_receiv": 46, "uri": [46, 47, 67, 75, 92, 93, 104, 108, 118, 129, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289, 291, 314, 335, 418, 567, 589], "post": [46, 47, 67, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289, 302, 322, 335, 410, 475, 589], "alert": [46, 47], "delete_alert_message_in_batch": 46, "delete_alert_receiver_by_id": 46, "receiver_id": [46, 47], "delete_alert_rule_by_id": 46, "rule_id": [46, 47], "list_alert_messag": 46, "list_alert_receiv": 46, "list_alert_rul": 46, "update_alert_message_in_batch": 46, "update_alert_receiver_by_id": 46, "update_alert_rule_by_id": 46, "datasourceapi": 46, "bind_datasource_in_batch": 46, "get_datasource_by_id": 46, "unbind_edge_datasourc": 46, "unbind_vertex_datasourc": 46, "deploymentapi": 46, "get_deployment_info": 46, "get_deployment_pod_log": 46, "get_deployment_resource_usag": 46, "get_deployment_statu": 46, "get_storage_usag": 46, "graphapi": 46, "create_edge_typ": [46, 59, 221], "create_graph": [46, 249, 257, 289, 291], "create_vertex_typ": [46, 66, 228], "delete_edge_type_by_nam": 46, "delete_graph_by_id": 46, "delete_vertex_type_by_nam": 46, "get_graph_by_id": 46, "get_schema_by_id": 46, "import_schema_by_id": 46, "list_graph": [46, 249, 291], "jobapi": 46, "delete_job_by_id": 46, "job_id": [46, 58, 93, 124, 167, 204, 249, 250, 251, 289, 291], "get_dataloading_job_config": 46, "dataload": [46, 93, 166, 167, 204, 249, 250, 289, 333, 334], "get_job_by_id": 46, "list_job": [46, 250, 291], "submit_dataloading_job": 46, "serviceapi": 46, "get_service_status_by_id": 46, "list_service_statu": 46, "restart_servic": [46, 265, 291], "start_servic": [46, 265, 289, 291], "stop_servic": [46, 265, 289, 291], "storedprocedureapi": 46, "create_stored_procedur": 46, "storedproc": [46, 108, 123, 127, 294, 296, 299], "delete_stored_procedure_by_id": 46, "stored_procedure_id": [46, 65, 108], "get_stored_procedure_by_id": 46, "list_stored_procedur": 46, "update_stored_procedure_by_id": 46, "utilsapi": 46, "upload_fil": [46, 291], "baseedgetyp": [46, 204, 289], "baseedgetypevertextypepairrelationsinn": [46, 48, 59, 83, 131, 138, 159, 204, 214, 221, 242, 289], "baseedgetypevertextypepairrelationsinnerxcsrparam": [46, 49, 132, 204, 215, 289], "basepropertymeta": [46, 204, 289], "basevertextyp": [46, 204, 289], "basevertextypexcsrparam": [46, 52, 66, 91, 135, 145, 165, 204, 218, 228, 248, 289], "columnmap": [46, 76, 119, 149, 200, 204, 232, 283, 289], "columnmappingcolumn": [46, 54], "createalertrulerequest": [46, 47], "createdataloadingjobrespons": [46, 93], "createedgetyp": [46, 62, 92, 141, 204, 224, 289], "creategraphrequest": [46, 92, 166, 204, 249, 257, 289, 291], "creategraphrespons": [46, 92, 166, 204, 249, 289, 291], "creategraphschemarequest": [46, 60, 92, 139, 204, 222, 289], "createpropertymeta": [46, 59, 66, 138, 145, 204, 221, 228, 289], "createstoredprocrequest": [46, 60, 108], "createstoredprocrespons": [46, 108], "createvertextyp": [46, 62, 92, 141, 204, 224, 289], "dataloadingjobconfig": [46, 93], "dataloadingjobconfigedgesinn": [46, 68], "dataloadingjobconfigloadingconfig": [46, 68], "dataloadingjobconfigloadingconfigformat": [46, 70], "dataloadingjobconfigverticesinn": [46, 68], "dataloadingmrjobconfig": [46, 93], "datetyp": [46, 204, 289], "edgemappingtypetriplet": [46, 76, 149, 204, 232, 289], "gsdatatyp": [46, 51, 63, 87, 97, 134, 144, 164, 171, 176, 192, 204, 217, 227, 247, 255, 259, 275, 289], "getalertmessagerespons": [46, 47], "getalertreceiverrespons": [46, 47], "getalertrulerespons": [46, 47], "getedgetyp": [46, 85, 161, 204, 244, 289], "getgraphrespons": [46, 92, 166, 183, 204, 249, 266, 289, 291], "getgraphschemarespons": [46, 84, 92, 160, 166, 204, 243, 249, 289, 291], "getpodlogrespons": [46, 75], "getpropertymeta": [46, 83, 91, 159, 165, 204, 242, 248, 289], "getresourceusagerespons": [46, 75], "getstorageusagerespons": [46, 75], "getstoredprocrespons": [46, 84, 108], "getvertextyp": [46, 85, 161, 204, 244, 289], "jobstatu": [46, 93, 167, 204, 250, 289, 291], "longtext": [46, 188, 204, 289], "nodestatu": [46, 102], "podstatu": [46, 102], "primitivetyp": [46, 158, 176, 204, 259, 289], "resourceusag": [46, 88], "runningdeploymentinfo": [46, 75], "runningdeploymentstatu": [46, 75], "schemamap": [46, 67, 160, 166, 204, 243, 249, 289, 291], "servicestatu": [46, 104, 182, 204, 265, 289, 291], "servicestatussdkendpoint": [46, 105], "startservicerequest": [46, 104, 182, 204, 265, 289, 291, 294], "storedproceduremeta": [46, 204, 289], "stringtyp": [46, 204, 289], "stringtypestr": [46, 79, 110, 158, 187, 204, 241, 270, 289], "temporaltyp": [46, 204, 289], "temporaltypetempor": [46, 79, 112, 158, 189, 204, 241, 272, 289], "timestamptyp": [46, 204, 289], "updatealertmessagestatusrequest": [46, 47], "updatestoredprocrequest": [46, 108], "uploadfilerespons": [46, 118, 204, 289, 291], "inc": 46, "No": [47, 67, 75, 92, 93, 104, 108, 118, 125, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280, 302, 320, 556], "200": [47, 67, 75, 92, 93, 104, 108, 118, 129, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280, 322, 404, 562, 572, 588], "back": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 322, 325, 331, 414, 568, 576], "message_id": [47, 115], "message_ids_exampl": 47, "comma": [47, 405], "id1": [47, 587], "id2": [47, 587], "id3": 47, "Not": [47, 67, 75, 92, 93, 104, 108, 147, 166, 167, 173, 182, 197, 230, 249, 250, 257, 265, 280, 298, 556, 569], "receiver_id_exampl": 47, "rule_id_exampl": 47, "alert_typ": 47, "start_tim": [47, 94, 105, 252, 266], "end_tim": [47, 94, 252], "get_alert_message_respons": [47, 80], "alert_type_exampl": 47, "status_exampl": 47, "severity_exampl": 47, "start_time_exampl": 47, "02": [47, 68, 322, 483], "56": [47, 68, 322, 344, 455, 549], "30": [47, 68, 322, 344, 406, 407, 409, 480, 525, 527, 532, 569, 587], "end_time_exampl": 47, "quot": [47, 125], "get_alert_receiver_respons": [47, 81], "get_alert_rule_respons": [47, 82], "update_alert_message_status_request": [47, 115], "create_alert_rule_request": [47, 57], "base_edge_typ": [48, 214], "base_edge_type_inst": [48, 214], "from_json": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286], "to_json": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286], "base_edge_type_dict": [48, 214], "to_dict": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286], "base_edge_type_from_dict": 48, "from_dict": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289], "x_csr_param": [49, 52, 66, 91, 125, 126, 215, 218, 228, 248, 261], "base_edge_type_vertex_type_pair_relations_inn": [49, 215], "base_edge_type_vertex_type_pair_relations_inner_inst": [49, 215], "base_edge_type_vertex_type_pair_relations_inner_dict": [49, 215], "base_edge_type_vertex_type_pair_relations_inner_from_dict": 49, "edge_storage_strategi": [50, 126, 216], "base_edge_type_vertex_type_pair_relations_inner_x_csr_param": [50, 216], "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_inst": [50, 216], "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_dict": [50, 216], "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_from_dict": 50, "nullabl": [51, 63, 87], "default_valu": [51, 63, 87], "base_property_meta": [51, 217], "base_property_meta_inst": [51, 217], "base_property_meta_dict": [51, 217], "base_property_meta_from_dict": 51, "base_vertex_typ": [52, 218], "base_vertex_type_inst": [52, 218], "base_vertex_type_dict": [52, 218], "base_vertex_type_from_dict": 52, "max_vertex_num": [53, 126, 219], "base_vertex_type_x_csr_param": [53, 219], "base_vertex_type_x_csr_params_inst": [53, 219], "base_vertex_type_x_csr_params_dict": [53, 219], "base_vertex_type_x_csr_params_from_dict": 53, "var_properti": [54, 220, 233, 234], "align": [54, 123, 124, 125, 126, 137, 220, 295, 310, 320, 329, 340, 404, 407, 408, 507, 568], "column_mapping_inst": [54, 220], "column_mapping_dict": [54, 220], "column_mapping_from_dict": 54, "column_mapping_column": 55, "column_mapping_column_inst": 55, "column_mapping_column_dict": 55, "column_mapping_column_from_dict": 55, "webhook_url": [56, 81], "at_user_id": [56, 81], "is_at_al": [56, 81], "create_alert_receiver_request_inst": 56, "create_alert_receiver_request_dict": 56, "create_alert_receiver_request_from_dict": 56, "metric_typ": [57, 80, 82], "conditions_descript": [57, 82], "frequenc": [57, 82, 430], "create_alert_rule_request_inst": 57, "create_alert_rule_request_dict": 57, "create_alert_rule_request_from_dict": 57, "create_dataloading_job_respons": [58, 93], "create_dataloading_job_response_inst": 58, "create_dataloading_job_response_dict": 58, "create_dataloading_job_response_from_dict": 58, "create_edge_type_inst": [59, 221], "create_edge_type_dict": [59, 221], "create_edge_type_from_dict": 59, "stored_procedur": [60, 84, 222, 243], "var_schema": [60, 84, 222, 243], "create_graph_request": [60, 92, 222, 249, 257, 289], "create_graph_request_inst": [60, 222], "create_graph_request_dict": [60, 222], "create_graph_request_from_dict": 60, "create_graph_respons": [61, 92, 223], "create_graph_response_inst": [61, 223], "create_graph_response_dict": [61, 223], "create_graph_response_from_dict": 61, "create_graph_schema_request": [62, 92, 224], "create_graph_schema_request_inst": [62, 224], "create_graph_schema_request_dict": [62, 224], "create_graph_schema_request_from_dict": 62, "create_property_meta": [63, 227], "create_property_meta_inst": [63, 227], "create_property_meta_dict": [63, 227], "create_property_meta_from_dict": 63, "create_stored_proc_request": [64, 108], "create_stored_proc_request_inst": 64, "create_stored_proc_request_dict": 64, "create_stored_proc_request_from_dict": 64, "create_stored_proc_respons": [65, 108], "create_stored_proc_response_inst": 65, "create_stored_proc_response_dict": 65, "create_stored_proc_response_from_dict": 65, "create_vertex_type_inst": [66, 228], "create_vertex_type_dict": [66, 228], "create_vertex_type_from_dict": 66, "schema_map": [67, 103, 249, 260, 291], "graph_id_exampl": [67, 92, 93, 104, 108], "400": [67, 92, 93, 104, 108, 129, 147, 166, 173, 197, 230, 249, 257, 280, 562], "bad": [67, 92, 93, 104, 108, 147, 173, 197, 230, 257, 280, 313], "source_vertex_typ": [67, 92], "destination_vertex_typ": [67, 92], "unbind": 67, "ourc": 67, "type_name_exampl": [67, 92], "source_vertex_type_exampl": [67, 92], "destination_vertex_type_exampl": [67, 92], "repeat": [68, 318, 340, 341, 410, 416, 490, 495, 498, 518, 521, 587], "dataloading_job_config": [68, 93], "dataloading_job_config_inst": 68, "dataloading_job_config_dict": 68, "dataloading_job_config_from_dict": 68, "dataloading_job_config_edges_inn": 69, "dataloading_job_config_edges_inner_inst": 69, "dataloading_job_config_edges_inner_dict": 69, "dataloading_job_config_edges_inner_from_dict": 69, "dataloading_job_config_loading_config": 70, "dataloading_job_config_loading_config_inst": 70, "dataloading_job_config_loading_config_dict": 70, "dataloading_job_config_loading_config_from_dict": 70, "dataloading_job_config_loading_config_format": 71, "dataloading_job_config_loading_config_format_inst": 71, "dataloading_job_config_loading_config_format_dict": 71, "dataloading_job_config_loading_config_format_from_dict": 71, "dataloading_job_config_vertices_inn": 72, "dataloading_job_config_vertices_inner_inst": 72, "dataloading_job_config_vertices_inner_dict": 72, "dataloading_job_config_vertices_inner_from_dict": 72, "dataloading_mr_job_config": [73, 93], "dataloading_mr_job_config_inst": 73, "dataloading_mr_job_config_dict": 73, "dataloading_mr_job_config_from_dict": 73, "date32": [74, 113, 126, 146, 190, 229, 273], "date_typ": [74, 229], "date_type_inst": [74, 229], "date_type_dict": [74, 229], "date_type_from_dict": 74, "running_deployment_info": [75, 101], "pod_nam": [75, 569, 577, 582], "from_cach": 75, "deprec": [75, 418, 436, 534], "get_pod_log_respons": [75, 86], "pod_name_exampl": 75, "component_exampl": 75, "get_resource_usage_respons": [75, 88], "running_deployment_statu": [75, 102], "groot": [75, 307, 318, 336, 343], "get_storage_usage_respons": [75, 89], "edge_mapping_inst": [76, 232], "edge_mapping_dict": [76, 232], "edge_mapping_from_dict": 76, "edge_mapping_type_triplet": [77, 236], "edge_mapping_type_triplet_inst": [77, 236], "edge_mapping_type_triplet_dict": [77, 236], "edge_mapping_type_triplet_from_dict": 77, "error_inst": 78, "error_dict": 78, "error_from_dict": 78, "tempor": [79, 112, 158, 189, 241, 272, 316, 320], "gs_data_typ": [79, 241], "gs_data_type_inst": [79, 241], "gs_data_type_dict": [79, 241], "gs_data_type_from_dict": 79, "alert_nam": 80, "trigger_tim": 80, "get_alert_message_response_inst": 80, "get_alert_message_response_dict": 80, "get_alert_message_response_from_dict": 80, "get_alert_receiver_response_inst": 81, "get_alert_receiver_response_dict": 81, "get_alert_receiver_response_from_dict": 81, "get_alert_rule_response_inst": 82, "get_alert_rule_response_dict": 82, "get_alert_rule_response_from_dict": 82, "type_id": [83, 91, 238, 242, 248, 285], "get_edge_typ": [83, 242], "get_edge_type_inst": [83, 242], "get_edge_type_dict": [83, 242], "get_edge_type_from_dict": 83, "store_typ": [84, 243], "creation_tim": [84, 98, 101, 243, 246], "data_update_tim": [84, 243], "schema_update_tim": 84, "get_graph_respons": [84, 92, 243], "get_graph_response_inst": [84, 243], "get_graph_response_dict": [84, 243], "get_graph_response_from_dict": 84, "get_graph_schema_respons": [85, 92, 244], "get_graph_schema_response_inst": [85, 244], "get_graph_schema_response_dict": [85, 244], "get_graph_schema_response_from_dict": 85, "get_pod_log_response_inst": 86, "get_pod_log_response_dict": 86, "get_pod_log_response_from_dict": 86, "property_id": [87, 247, 349], "get_property_meta": [87, 247], "get_property_meta_inst": [87, 247], "get_property_meta_dict": [87, 247], "get_property_meta_from_dict": 87, "cpu_usag": [88, 96, 98], "memory_usag": [88, 96, 98], "get_resource_usage_response_inst": 88, "get_resource_usage_response_dict": 88, "get_resource_usage_response_from_dict": 88, "storage_usag": 89, "get_storage_usage_response_inst": 89, "get_storage_usage_response_dict": 89, "get_storage_usage_response_from_dict": 89, "bound_graph": [90, 246], "get_stored_proc_respons": [90, 108], "get_stored_proc_response_inst": 90, "get_stored_proc_response_dict": 90, "get_stored_proc_response_from_dict": 90, "get_vertex_typ": [91, 248], "get_vertex_type_inst": [91, 248], "get_vertex_type_dict": [91, 248], "get_vertex_type_from_dict": 91, "delete_schedul": 93, "job_id_exampl": 93, "successfuli": 93, "mapreduc": [93, 569], "job_statu": [93, 94, 252], "logview": 94, "job_status_inst": [94, 252], "job_status_dict": [94, 252], "job_status_from_dict": 94, "long_text_inst": [95, 253], "long_text_dict": [95, 253], "long_text_from_dict": 95, "disk_usag": 96, "node_statu": 96, "node_status_inst": 96, "node_status_dict": 96, "node_status_from_dict": 96, "parameter_inst": [97, 255], "parameter_dict": [97, 255], "parameter_from_dict": 97, "restart_count": 98, "timestamp": [98, 100, 113, 114, 126, 190, 191, 273, 274, 567, 569], "component_belong_to": 98, "pod_statu": 98, "pod_status_inst": 98, "pod_status_dict": 98, "pod_status_from_dict": 98, "primitive_type_inst": [99, 256], "primitive_type_dict": [99, 256], "primitive_type_from_dict": 99, "resource_usag": 100, "resource_usage_inst": 100, "resource_usage_dict": 100, "resource_usage_from_dict": 100, "instance_nam": 101, "running_deployment_info_inst": 101, "running_deployment_info_dict": 101, "running_deployment_info_from_dict": 101, "running_deployment_status_inst": 102, "running_deployment_status_dict": 102, "running_deployment_status_from_dict": 102, "schema_mapping_inst": [103, 260], "schema_mapping_dict": [103, 260], "schema_mapping_from_dict": 103, "service_statu": [104, 105, 266], "start_service_request": [104, 107, 265, 267, 289, 291], "sdk_endpoint": 105, "service_status_inst": [105, 266], "service_status_dict": [105, 266], "service_status_from_dict": 105, "cypher": [106, 123, 124, 127, 128, 129, 142, 163, 173, 186, 257, 287, 294, 299, 300, 308, 309, 310, 311, 312, 313, 315, 317, 336, 337, 338, 342, 343, 419, 563], "hqp": [106, 129], "service_status_sdk_endpoint": 106, "service_status_sdk_endpoints_inst": 106, "service_status_sdk_endpoints_dict": 106, "service_status_sdk_endpoints_from_dict": 106, "start_service_request_inst": [107, 267], "start_service_request_dict": [107, 267], "start_service_request_from_dict": 107, "stored_procedure_id_exampl": 108, "update_stored_proc_request": [108, 116], "stored_procedure_meta": [109, 269], "stored_procedure_meta_inst": [109, 269], "stored_procedure_meta_dict": [109, 269], "stored_procedure_meta_from_dict": 109, "string_typ": [110, 270], "string_type_inst": [110, 270], "string_type_dict": [110, 270], "string_type_from_dict": 110, "string_type_str": [111, 271], "string_type_string_inst": [111, 271], "string_type_string_dict": [111, 271], "string_type_string_from_dict": 111, "temporal_typ": [112, 272], "temporal_type_inst": [112, 272], "temporal_type_dict": [112, 272], "temporal_type_from_dict": 112, "temporal_type_tempor": [113, 273], "temporal_type_temporal_inst": [113, 273], "temporal_type_temporal_dict": [113, 273], "temporal_type_temporal_from_dict": 113, "time_stamp_typ": [114, 274], "time_stamp_type_inst": [114, 274], "time_stamp_type_dict": [114, 274], "time_stamp_type_from_dict": 114, "update_alert_message_status_request_inst": 115, "update_alert_message_status_request_dict": 115, "update_alert_message_status_request_from_dict": 115, "update_stored_proc_request_inst": 116, "update_stored_proc_request_dict": 116, "update_stored_proc_request_from_dict": 116, "file_path": [117, 277], "upload_file_respons": [117, 118, 277], "upload_file_response_inst": [117, 277], "upload_file_response_dict": [117, 277], "upload_file_response_from_dict": 117, "filestorag": [118, 291], "bytearrai": [118, 288], "multipart": 118, "vertex_mapping_inst": [119, 283], "vertex_mapping_dict": [119, 283], "vertex_mapping_from_dict": 119, "stub": [120, 122, 293, 344, 350, 352, 485, 513, 516], "openapi_coordin": [120, 122], "execu": 121, "redeploi": 121, "what": [121, 123, 295, 302, 309, 322, 323, 340, 415, 502, 556, 562, 568], "gs_interactive_default_graph": [121, 294, 295, 299], "shutdown": [121, 295, 333], "uninstal": [121, 295, 302, 309, 582], "v0": [123, 344, 411, 559], "admin": [123, 127, 128, 129, 265, 287, 291, 297, 298, 313, 418, 569], "7777": [123, 127, 129, 204, 289, 297, 299], "10000": [123, 127, 129, 204, 289, 297, 299, 553], "7687": [123, 127, 129, 204, 289, 297, 298, 299, 308, 309, 311, 314, 315], "meta": [123, 127, 129, 291, 311, 313, 316, 326, 335, 346, 407, 408, 567, 569], "8081": [123, 127], "7778": [123, 127], "7688": [123, 127], "10001": [123, 127, 405, 406, 407, 409], "tailor": [123, 313], "interactive_config": 123, "unconfigur": 123, "glimps": 123, "fatal": 123, "verbose_level": 123, "compute_engin": [123, 129], "thread_num_per_work": [123, 129], "planner": [123, 129, 299, 313], "is_on": [123, 129], "rbo": [123, 129, 310, 313], "filtermatchrul": [123, 129, 313], "filterintojoinrul": [123, 129, 313], "notexisttoantijoinrul": 123, "query_timeout": [123, 129], "20000": 123, "timeout": [123, 302, 311, 312, 569], "millisecond": [123, 126, 316, 320, 344, 567], "hierarchi": [123, 125], "propertynam": [123, 134, 144, 164, 569], "databas": [123, 128, 129, 296, 302, 308, 310, 313, 316, 317, 320, 322, 336, 338, 340, 342, 344, 569, 579], "benefit": [123, 321, 335, 339, 568], "throughput": [123, 298, 300, 308, 310, 336, 342, 343, 569], "claus": [123, 298, 317], "calcit": [123, 309, 313], "notmatchtoantijoinrul": [123, 129], "transform": [123, 310, 313, 322, 346, 358, 371, 548, 556, 557, 561, 567], "anti": [123, 316, 336, 340, 343], "3000000": [123, 311, 312, 569], "repli": [123, 322], "definit": [124, 129, 320, 336, 421, 502, 503, 505], "comprehens": [124, 204, 289, 298, 308, 313, 336, 342, 344, 345], "consult": [124, 127], "dataourc": 124, "xxx": [124, 308, 312, 315, 414, 418, 563, 579], "desc": [124, 299, 320, 322], "hangzhou": [124, 335, 405, 589], "taglin": 124, "born": 124, "acted_in": [124, 313], "review": [124, 336, 347, 421, 485, 503], "wrote": 124, "graph_algo": 124, "seek": [124, 415], "larger": [124, 298, 313, 318, 322, 332, 503], "imdb": 124, "delv": 125, "deeper": [125, 313], "thorough": [125, 308], "data_sourc": [125, 261, 289, 291], "col_nam": 125, "disregard": 125, "examin": [125, 337], "modern_graph_import": 125, "showcas": 125, "dissect": 125, "prepend": [125, 294], "build_csr_in_mem": [125, 264], "use_mmap_vector": [125, 264], "quote_char": 125, "double_quot": 125, "escape_char": 125, "block_siz": 125, "4mb": 125, "dst_id": [125, 405, 406, 407, 409, 410, 416, 420], "person_created_softwar": 125, "dd_graph": 125, "your_proj_nam": 125, "table_nam": 125, "partition_col_nam": 125, "partition_nam": 125, "src_user_id": 125, "dst_user_id": 125, "mandatori": [125, 126, 337, 405], "ye": [125, 305, 556], "escap": 125, "char": [125, 126, 239, 271, 415, 418, 568], "header": [125, 309, 418, 568, 569], "null_valu": 125, "recogn": [125, 568, 569], "null": [125, 316, 320, 421, 438, 454, 455, 462, 469, 521, 551, 556], "batch_siz": [125, 329, 331, 333, 334, 404, 408, 409, 410, 413, 416, 572, 588], "mmap_vector": 125, "mmap_arrai": 125, "triplet": [125, 126, 318], "outlin": [125, 311, 316], "seamlessli": [125, 204, 289, 295, 305, 309, 313, 317, 323, 325, 336, 342, 343], "encompass": [126, 314, 321, 332], "friendship": 126, "peopl": [126, 310, 315, 322, 556, 569], "since_d": 126, "terminologi": [126, 316], "delin": 126, "plan": [126, 129, 298, 299, 310, 313, 316, 336, 338, 339, 340, 351, 569, 577], "dt_unsigned_int32": [126, 158, 172], "dt_unsigned_int64": [126, 158, 172], "var_char": [126, 271, 278], "fixed_char": [126, 239], "character": [126, 408], "exclus": [126, 316], "symbol": 126, "skill": 126, "profici": [126, 322], "one_to_on": [126, 132], "one_to_mani": [126, 132], "many_to_on": [126, 132], "mmap": 126, "48": [126, 305, 344, 406, 407, 409, 508, 509, 555], "only_in": [126, 133], "only_out": [126, 133], "both_out_in": [126, 133], "pertain": [126, 309], "dt_bool": [126, 158, 172], "dt_float": [126, 158, 172], "categor": [126, 129, 298, 329], "subtyp": 126, "length": [126, 288, 294, 301, 305, 316, 320, 322, 335, 340, 347, 408, 421, 460, 462, 467, 489, 510, 514, 520, 542, 551, 556, 589], "unlimit": 126, "text": [126, 176, 259, 341, 349, 457], "fixed_length": [126, 240], "desir": [126, 299, 318, 418, 475, 497, 517, 519, 520], "restrict": 126, "max_length": [126, 279], "uint32": [126, 316], "situat": [126, 320, 322, 325, 405, 406, 569], "df_yyyy_mm_dd": 126, "iso": 126, "fomat": 126, "2019": [126, 549], "01": [126, 322, 328, 332, 334, 337, 347, 405, 421, 480, 583], "date_format": 126, "tf_hh_mm_ss_sss": 126, "00": [126, 308, 322], "000": [126, 309, 322, 344], "time_format": 126, "tzf_utc": 126, "tzf_offset": 126, "time_zone_format": 126, "dtf_yyyy_mm_dd_hh_mm_ss_sss": 126, "date_time_format": 126, "int32": [126, 316, 328, 332, 337, 405, 407, 415, 416, 567, 583], "1970": 126, "time32": 126, "midnight": 126, "int64": [126, 316, 335, 349, 375, 397, 405, 407, 408, 413, 415, 416, 418, 563, 567, 589], "000000": 126, "zone": [126, 316], "signifi": [126, 440, 441], "integ": [126, 130, 136, 152, 155, 157, 159, 160, 162, 163, 164, 165, 169, 181, 183, 196, 197, 202, 203, 288, 313, 316, 320, 421, 456, 459, 460, 461, 462, 463, 465, 467, 468, 470, 471, 474, 475, 478, 479, 480, 481, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 521, 534, 548, 549, 550, 551, 553, 556, 567, 569], "januari": 126, "timezon": 126, "albeit": 126, "previous": [126, 322, 492, 493, 494, 567, 568], "mention": [126, 320, 322, 567, 568, 577], "crucial": [126, 129, 336], "component_typ": 126, "overflow": 126, "truncat": [126, 541, 542, 543, 548], "flexbuild": [127, 576], "arm64": [127, 297], "qemu": 127, "slower": 127, "buildx": 127, "manifest": 127, "your_image_registri": 127, "adminservic": 128, "setuptool": 128, "regist": [128, 173, 176, 204, 289, 295, 296, 298, 310, 313, 335, 346, 349, 378, 563], "decod": [128, 204, 289, 404, 405, 406, 416, 588], "debian": 129, "redhat": 129, "22": [129, 322, 344, 406, 407, 409, 418, 549, 567], "x86": 129, "seastar": 129, "incompat": [129, 507, 568], "gen_code_from_plan": 129, "physic": [129, 299, 309, 310, 313, 336, 347, 421, 479, 480, 481, 503, 567], "graph_db": [129, 294], "graphdb": [129, 294], "hqps_db": 129, "http_server": 129, "httpd": 129, "hiactor": [129, 336], "dockerfil": [129, 325, 411], "openapi_interact": [129, 293], "immutable_graph": 129, "rt_mutable_graph": 129, "mutable_csr": [129, 160, 181, 264], "third_parti": 129, "parti": [129, 336, 536], "lego": 129, "clariti": [129, 316], "gaia": [129, 308, 336, 587], "ir": [129, 309, 310, 311, 336, 338], "submodul": [129, 411, 414, 568], "pexperiment": 129, "build_test": 129, "build_doc": 129, "build_odps_fragment_load": 129, "odp": [129, 179, 300, 405], "use_pthash": 129, "hash": [129, 405, 418], "optimize_for_host": 129, "accuraci": [129, 313, 333, 334, 341], "establish": [129, 295, 297, 305, 569], "workspac": [129, 333], "github_workspac": 129, "flex_data_dir": 129, "tmp_interactive_workspac": 129, "interactive_workspac": 129, "schema_fil": 129, "bulk_load_fil": 129, "bulk_load": [129, 249, 250, 289, 291], "cp": [129, 309, 311, 553, 568], "glog_v": 129, "akin": 129, "hous": [129, 336, 530, 531], "temp_workspac": 129, "graph_meta": 129, "indices_lock": 129, "job_meta": 129, "plugin_meta": 129, "plugins_lock": 129, "running_graph": 129, "subsequ": [129, 308, 309, 310, 311, 313, 321, 347, 405, 406], "hqps_admin_test": 129, "default_graph": 129, "interactive_config_test": 129, "mcsr": 129, "metadata_stor": 129, "reader": [129, 415], "interv": [129, 316, 475, 507, 563], "1000": [129, 204, 320, 347, 406, 421, 553, 556, 569], "statist": [129, 166, 249, 289, 291, 310, 313, 316, 322, 407], "86400000": 129, "default_listen_address": 129, "bolt_connector": [129, 298], "gremlin_connector": 129, "8182": [129, 308, 309, 311, 321, 569], "40000": 129, "gremlin_script_language_nam": 129, "antlr_gremlin_calcit": [129, 309], "http_servic": 129, "admin_port": 129, "query_port": 129, "interactive_serv": 129, "engine_config": [129, 563], "maintan": 129, "subprocess": 129, "bodi": [129, 176, 259, 410, 414, 522], "ok": [129, 289, 290, 292, 346], "invalid_argu": 129, "unsupported_oper": 129, "not_found": 129, "404": [129, 147, 166, 173, 197, 230, 249, 257, 280], "already_exist": 129, "409": [129, 147, 197, 230, 280], "permission_deni": 129, "403": 129, "codegen_error": 129, "invalid_schema": 129, "101": [129, 347, 585], "illegal_oper": 129, "102": [129, 416, 552], "internal_error": 129, "103": 129, "invalid_import_fil": 129, "104": 129, "io_error": 129, "105": [129, 344, 476, 477], "query_fail": 129, "106": 129, "vertextypepairrel": [131, 138, 159], "sourcevertex": [132, 153, 203], "destinationvertex": [132, 153, 203], "xcsrparam": [132, 135, 145, 165, 178], "edgestoragestrategi": 133, "sortoncompact": 133, "boolean": [133, 163, 181, 183, 186, 316, 320, 335, 347, 349, 406, 410, 421, 440, 441, 478, 480, 483, 514, 554, 567], "oemut": 133, "iemut": 133, "propertytyp": [134, 144, 164], "primarykei": [135, 145, 165], "maxvertexnum": 136, "edgemappingsourcevertexmappingsinnercolumn": [137, 150, 151, 204, 220, 233, 234, 289], "createprocedurerequest": [139, 173, 204, 222, 257, 289, 291, 294], "vertextyp": [141, 161], "edgetyp": [141, 161, 558], "procedureid": [143, 173, 176], "interactive_admin_endpoint": [147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 287, 289, 294, 297, 299], "deleteedg": 147, "edgerequest": [147, 199, 204, 230, 282, 289, 291], "edgerequest3": 147, "srclabel": [147, 148, 154, 569], "dstlabel": [147, 148, 154, 569], "edgelabel": [147, 148, 154, 320, 368], "srcprimarykeyvalu": [147, 148, 154], "dstprimarykeyvalu": [147, 148, 154], "addpropertiesitem": [147, 197], "123": [147, 230, 405], "edgerequest4": 147, "233": [147, 230], "arraylist": 147, "addedgerespons": 147, "isok": [147, 166, 167, 173, 176, 182, 197, 204, 294], "println": [147, 166, 167, 173, 176, 182, 197, 204, 294, 569], "getstatusmessag": [147, 166, 167, 173, 176, 182, 197, 204, 294], "edgedata": [147, 204, 230, 289], "getedgerespons": 147, "getproperti": 147, "getnam": [147, 197], "parsedoubl": 147, "tostr": [147, 204, 346, 570], "assert": [147, 197, 230, 249, 250, 257, 259, 265, 280, 289, 294, 321, 347, 568], "updateedgerequest": 147, "updateedgerespons": 147, "typetriplet": 149, "sourcevertexmap": 149, "edgemappingsourcevertexmappingsinn": [149, 204, 232, 289], "destinationvertexmap": 149, "edgemappingdestinationvertexmappingsinn": [149, 204, 232, 289], "typeid": [155, 159, 165, 202], "vertextypepairstatist": [155, 204, 238, 289], "_char": [156, 188], "fixedcharchar": [156, 188, 204, 239, 271, 289], "fixedlength": 157, "signed_int32": [158, 172, 176], "unsigned_int32": [158, 172], "signed_int64": [158, 172], "unsigned_int64": [158, 172], "dt_string": [158, 172], "storetyp": 160, "creationtim": [160, 163], "dataupdatetim": 160, "getprocedurerespons": [160, 173, 204, 243, 257, 289, 291], "dataimportconfig": 160, "totalvertexcount": 162, "totaledgecount": 162, "vertextypestatist": 162, "vertexstatist": [162, 204, 245, 289], "edgetypestatist": 162, "edgestatist": [162, 204, 245, 289], "boundgraph": 163, "updatetim": 163, "propertyid": 164, "getallgraph": 166, "getr": [166, 167, 173], "got": [166, 167, 173, 249], "privat": [166, 204], "modern_graph_schema_json": 166, "fromjson": [166, 204], "rep": [166, 204], "getgraphid": [166, 204], "badrequest": [166, 249], "jobrespons": [166, 204, 249, 289, 291], "modern_graph_bulk_loading_json": 166, "throw": [166, 173, 176, 204, 259, 294, 409], "ioexcept": [166, 204, 294], "getjobid": [166, 204], "deleter": [166, 173], "getgraphresponseresult": 166, "getgraphstatisticsrespons": [166, 204, 249, 289, 291], "503": [166, 249], "unavail": [166, 249], "getschema": 166, "jobid": [167, 168, 204, 250], "histori": [167, 250, 320, 322, 340], "bulkload": [167, 204, 289], "graphmanagementapi": [167, 204, 289], "getjobr": 167, "getjobstatu": [167, 204, 289], "getjobsr": 167, "starttim": [169, 183], "endtim": 169, "procedure_id": [173, 204, 226, 257, 289, 291], "createprocedurerespons": [173, 204, 257, 289, 291, 294], "cppstoredprocedur": [173, 176, 259], "cypherstoredprocedur": [173, 176, 259], "testprocedur": [173, 176, 204, 289], "typeenum": [173, 204, 294], "resp": [173, 204, 230, 249, 250, 257, 259, 265, 280, 289, 294], "runtimeexcept": [173, 204, 294], "listr": 173, "updateprocedurerequest": [173, 204, 257, 289, 291], "setdescript": [173, 294], "updater": 173, "querynam": [175, 308], "typedvalu": [175, 176, 204, 258, 259, 289], "attempt": [176, 259, 305, 309, 339, 340, 343, 556], "irresult": 176, "collectiveresult": [176, 259, 291], "proto": [176, 259, 346, 366, 391], "creation": [176, 259, 325, 406, 480], "queryrequest": [176, 204, 259, 289, 291], "setquerynam": 176, "addargumentsitem": 176, "primitivetypeenum": 176, "queryr": 176, "plain": [176, 259, 341], "exit": [176, 294, 321, 333, 347, 587], "byte": [176, 288, 291, 294, 316, 347, 355, 415], "loadingconfig": 177, "schemamappingloadingconfig": [177, 204, 260, 289], "schemamappingloadingconfigxcsrparam": [178, 204, 261, 289], "schemamappingloadingconfigdatasourc": [178, 204, 261, 289], "importopt": 178, "schemamappingloadingconfigformat": [178, 204, 261, 289], "buildcsrinmem": 181, "usemmapvector": 181, "metric": [182, 265, 308, 341, 503, 504, 505, 506, 507], "statisticsen": 183, "boltport": 183, "hqpsport": 183, "gremlinport": [183, 309], "varchar": [188, 204, 289], "varcharvarchar": [188, 195, 204, 271, 278, 289], "maxlength": 196, "deletevertex": 197, "vertexedgerequest": [197, 204, 280, 289, 291], "vertexrequest": [197, 199, 204, 280, 282, 289, 291], "primarykeyvalu": [197, 201], "mike": [197, 280], "addvertexrequestitem": 197, "addvertexrespons": 197, "vertexdata": [197, 204, 280, 289, 291], "value1": [197, 280, 309, 335, 589], "param2": [197, 280], "value2": [197, 280, 309], "getvertexrespons": 197, "updatevertexrequest": 197, "cindi": [197, 280], "updatevertexrespons": 197, "gradl": 204, "ossrh": 204, "interactive_stored_proc_endpoint": [204, 287, 289, 297, 299], "interactive_cypher_endpoint": [204, 287, 289, 297, 299], "neo4j": [204, 287, 289, 295, 296, 297, 298, 307, 309, 311, 312, 314, 315, 316, 338, 343, 344, 419, 567], "gettingstart": [204, 298], "neo4jsess": 204, "getneo4jsess": [204, 287, 289, 299], "persson": [204, 289], "test_graph_schema_json": 204, "creategraph": [204, 289], "programmat": [204, 289], "reprens": 204, "replas": 204, "reop": 204, "test_graph_bulk_loading_json": 204, "getstatu": 204, "statusenum": 204, "sleep": [204, 289, 416], "catch": [204, 294, 569], "interruptedexcept": 204, "printstacktrac": [204, 294], "infom": 204, "complelet": [204, 289], "defini": 204, "createprocedur": [204, 289, 294], "procnam": 204, "invokd": 204, "term": [204, 289, 296, 326], "moment": [204, 289, 316, 351, 569], "startservic": [204, 289, 294], "startservicerespons": [204, 294], "starservic": 204, "gremlincli": 204, "getgremlincli": 204, "deletegraphrespons": 204, "deletegraph": [204, 289], "five": [204, 289], "categori": [204, 289, 316, 320, 326, 328, 329, 337, 341, 416], "proceduremanagementapi": [204, 289], "jobmanagementapi": [204, 289], "servicemanagementapi": [204, 289], "queryserviceapi": [204, 289], "vertexapi": [204, 289], "edgeapi": [204, 289], "getgraphmeta": [204, 289], "getgraphschema": [204, 289], "listgraph": [204, 289], "canceljob": [204, 289], "getjobbyid": [204, 289], "listjob": [204, 289], "deleteprocedur": [204, 289], "getprocedur": [204, 289], "listprocedur": [204, 289], "updateprocedur": [204, 289], "getservicestatu": [204, 289], "restartservic": [204, 289], "stopservic": [204, 289], "callprocedur": [204, 289, 294], "callprocedureoncurrentgraph": [204, 289], "addvertex": [204, 289], "getvertex": [204, 289, 346], "updatevertex": [204, 289], "addedg": [204, 289], "getedg": [204, 289], "updateedg": [204, 289], "defaultsess": 204, "apiresponsewithcod": [204, 289], "fixedchar": [204, 289], "authent": [204, 289, 311, 314, 342, 569], "gs_interact": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 299], "api_response_with_cod": 213, "api_response_with_code_inst": 213, "api_response_with_code_dict": 213, "api_response_with_code_form_dict": 213, "python_sdk": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295], "base_edge_type_form_dict": 214, "base_edge_type_vertex_type_pair_relations_inner_form_dict": 215, "sort_on_compact": 216, "oe_mut": 216, "ie_mut": 216, "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_form_dict": 216, "base_property_meta_form_dict": 217, "base_vertex_type_form_dict": 218, "base_vertex_type_x_csr_params_form_dict": 219, "column_mapping_form_dict": 220, "create_edge_type_form_dict": 221, "create_graph_request_form_dict": 222, "create_graph_response_form_dict": 223, "create_graph_schema_request_form_dict": 224, "create_procedure_request": [225, 257], "create_procedure_request_inst": 225, "create_procedure_request_dict": 225, "create_procedure_request_form_dict": 225, "create_procedure_respons": 226, "create_procedure_response_inst": 226, "create_procedure_response_dict": 226, "create_procedure_response_form_dict": 226, "create_property_meta_form_dict": 227, "create_vertex_type_form_dict": 228, "date_type_form_dict": 229, "edge_request": [230, 237, 282, 291], "src_label": [230, 231, 237, 291, 309, 335, 418, 559, 563, 569, 570, 583, 584], "dst_label": [230, 231, 237, 291, 309, 335, 418, 559, 563, 569, 570, 583, 584], "src_primary_key_valu": [230, 231, 237, 291], "dst_primary_key_valu": [230, 231, 237, 291], "modelproperti": [230, 231, 237, 280, 281, 284], "is_ok": [230, 249, 250, 257, 259, 265, 280, 289, 290, 292, 294], "get_valu": [230, 249, 250, 257, 259, 265, 280, 289, 290], "edge_data": [231, 381, 571], "edge_data_inst": 231, "edge_data_dict": 231, "edge_data_form_dict": 231, "edge_mapping_form_dict": 232, "edge_mapping_destination_vertex_mappings_inn": 233, "edge_mapping_destination_vertex_mappings_inner_inst": 233, "edge_mapping_destination_vertex_mappings_inner_dict": 233, "edge_mapping_destination_vertex_mappings_inner_form_dict": 233, "edge_mapping_source_vertex_mappings_inn": 234, "edge_mapping_source_vertex_mappings_inner_inst": 234, "edge_mapping_source_vertex_mappings_inner_dict": 234, "edge_mapping_source_vertex_mappings_inner_form_dict": 234, "edge_mapping_source_vertex_mappings_inner_column": 235, "edge_mapping_source_vertex_mappings_inner_column_inst": 235, "edge_mapping_source_vertex_mappings_inner_column_dict": 235, "edge_mapping_source_vertex_mappings_inner_column_form_dict": 235, "edge_mapping_type_triplet_form_dict": 236, "edge_request_inst": 237, "edge_request_dict": 237, "edge_request_form_dict": 237, "vertex_type_pair_statist": [238, 286], "edge_statist": 238, "edge_statistics_inst": 238, "edge_statistics_dict": 238, "edge_statistics_form_dict": 238, "fixed_char_inst": 239, "fixed_char_dict": 239, "fixed_char_form_dict": 239, "fixed_char_char": 240, "fixed_char_char_inst": 240, "fixed_char_char_dict": 240, "fixed_char_char_form_dict": 240, "gs_data_type_form_dict": 241, "get_edge_type_form_dict": 242, "data_import_config": 243, "get_graph_response_form_dict": 243, "get_graph_schema_response_form_dict": 244, "total_vertex_count": 245, "total_edge_count": 245, "vertex_type_statist": 245, "edge_type_statist": 245, "get_graph_statistics_respons": 245, "get_graph_statistics_response_inst": 245, "get_graph_statistics_response_dict": 245, "get_graph_statistics_response_form_dict": 245, "update_tim": 246, "get_procedure_respons": 246, "get_procedure_response_inst": 246, "get_procedure_response_dict": 246, "get_procedure_response_form_dict": 246, "get_property_meta_form_dict": 247, "get_vertex_type_form_dict": 248, "test_graph_def": [249, 257, 289], "reesult": 249, "delete_graph": [249, 289, 291], "get_graph": 249, "get_graph_meta": [249, 291], "get_graph_statist": [249, 291], "get_graph_schema": [249, 291], "test_graph_datasourc": [249, 289], "bulk_load_request": [249, 250, 289], "cancel_job": [250, 291], "loading_resp": 250, "get_job": [250, 289, 291], "job_respons": 251, "job_response_inst": 251, "job_response_dict": 251, "job_response_form_dict": 251, "job_status_form_dict": 252, "long_text_form_dict": 253, "model_properti": 254, "model_property_inst": 254, "model_property_dict": 254, "model_property_form_dict": 254, "parameter_form_dict": 255, "primitive_type_form_dict": 256, "create_procedur": [257, 289, 291, 294], "create_proc_request": [257, 289, 294], "test_procedur": [257, 289, 294, 299], "proc_id": [257, 259, 291], "delete_procedur": [257, 291], "get_procedur": [257, 291], "list_procedur": [257, 291], "update_procedur": [257, 291], "update_procedure_request": [257, 276], "update_proc_req": 257, "proc": [257, 296, 508, 509, 513, 514, 555], "query_nam": [258, 259], "query_request": 258, "query_request_inst": 258, "query_request_dict": 258, "query_request_form_dict": 258, "call_procedur": [259, 291], "req": [259, 414], "call_procedure_curr": [259, 291], "schema_mapping_form_dict": 260, "schema_mapping_loading_config": 261, "schema_mapping_loading_config_inst": 261, "schema_mapping_loading_config_dict": 261, "schema_mapping_loading_config_form_dict": 261, "schema_mapping_loading_config_data_sourc": 262, "schema_mapping_loading_config_data_source_inst": 262, "schema_mapping_loading_config_data_source_dict": 262, "schema_mapping_loading_config_data_source_form_dict": 262, "schema_mapping_loading_config_format": 263, "schema_mapping_loading_config_format_inst": 263, "schema_mapping_loading_config_format_dict": 263, "schema_mapping_loading_config_format_form_dict": 263, "schema_mapping_loading_config_x_csr_param": 264, "schema_mapping_loading_config_x_csr_params_inst": 264, "schema_mapping_loading_config_x_csr_params_dict": 264, "schema_mapping_loading_config_x_csr_params_form_dict": 264, "get_service_statu": [265, 291], "verif": [265, 310, 336], "stop_r": 265, "statistics_en": 266, "bolt_port": 266, "hqps_port": 266, "gremlin_port": [266, 569], "service_status_form_dict": 266, "start_service_request_form_dict": 267, "stop_service_request": 268, "stop_service_request_inst": 268, "stop_service_request_dict": 268, "stop_service_request_form_dict": 268, "stored_procedure_meta_form_dict": 269, "string_type_form_dict": 270, "string_type_string_form_dict": 271, "temporal_type_form_dict": 272, "temporal_type_temporal_form_dict": 273, "time_stamp_type_form_dict": 274, "typed_valu": 275, "typed_value_inst": 275, "typed_value_dict": 275, "typed_value_form_dict": 275, "update_procedure_request_inst": 276, "update_procedure_request_dict": 276, "update_procedure_request_form_dict": 276, "upload_file_response_form_dict": 277, "var_char_inst": 278, "var_char_dict": 278, "var_char_form_dict": 278, "var_char_var_char": 279, "var_char_var_char_inst": 279, "var_char_var_char_dict": 279, "var_char_var_char_form_dict": 279, "vertex_edge_request": [280, 282, 291], "vertex_request": [280, 282, 284, 291], "primary_key_valu": [280, 284, 291], "vertex_data_inst": 281, "vertex_data_dict": 281, "vertex_data_form_dict": 281, "vertex_edge_request_inst": 282, "vertex_edge_request_dict": 282, "vertex_edge_request_form_dict": 282, "vertex_mapping_form_dict": 283, "vertex_request_inst": 284, "vertex_request_dict": 284, "vertex_request_form_dict": 284, "vertex_statist": 285, "vertex_statistics_inst": 285, "vertex_statistics_dict": 285, "vertex_statistics_form_dict": 285, "vertex_type_pair_statistics_inst": 286, "vertex_type_pair_statistics_dict": 286, "vertex_type_pair_statistics_form_dict": 286, "admin_endpoint": 287, "stored_proc_endpoint": 287, "cypher_endpoint": 287, "gremlin_endpoint": [287, 321, 569], "__init__": [287, 288, 290, 291, 292, 347, 404, 411, 418, 419, 420, 556, 557, 559, 563, 569, 588], "getdefaultsess": 287, "getneo4jendpoint": 287, "bolt": [287, 295, 298, 311, 314, 315, 340], "read_endpoints_from_env": 287, "endian": 288, "littl": [288, 309, 320, 322], "get_byt": [288, 294], "put_byt": [288, 294], "put_doubl": 288, "put_int": [288, 294], "put_long": 288, "put_str": [288, 294], "byte_arrai": [288, 316], "get_doubl": [288, 349], "get_long": 288, "get_str": [288, 294, 349], "is_empti": 288, "assist": [289, 311, 317, 339], "har": 289, "isol": [289, 318, 421, 517, 569], "build_proto": 289, "graph_nam": [289, 311], "dictionali": 289, "pyyaml": [289, 580], "yaml_str": 289, "python_dict": 289, "safe_load": 289, "afterward": 289, "interpret": [289, 305, 336, 421], "elif": [289, 416], "rais": [289, 291, 294, 302, 310, 313, 347, 355, 357, 391, 403, 410, 418, 419, 421, 427, 436, 440, 441, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 495, 497, 500, 501, 502, 513, 516, 548, 551, 552, 556, 559, 563], "uncom": 289, "proc_nam": 289, "forbid": 289, "getgraphstatist": 289, "from_except": [290, 292], "from_respons": [290, 292], "apirespons": [290, 292], "get_statu": 290, "get_status_messag": 290, "is_error": [290, 292], "admin_uri": 291, "stored_proc_uri": 291, "add_vertex": 291, "call_procedure_current_raw": 291, "call_procedure_raw": [291, 294], "ensure_param_str": 291, "param_nam": [291, 298, 299], "get_edg": [291, 407], "get_vertex": 291, "try_upload_fil": 291, "file1": 291, "file2": 291, "update_edg": 291, "update_vertex": 291, "upload_and_replace_input_inplac": 291, "enum_type_wrapp": 292, "enumtypewrapp": 292, "0x7f2963736e20": 292, "statuscod": 292, "returnd": 292, "get_cod": 292, "get_messag": 292, "server_internal_error": 292, "apart": [294, 335, 503], "count_vertic": 294, "app_bas": 294, "graph_db_sess": 294, "app_util": 294, "readappbas": 294, "writeappbas": 294, "countvertic": 294, "graphdbsess": 294, "deseri": [294, 568], "transact": [294, 318, 336, 342, 343, 344, 565, 569, 579], "txn": 294, "getreadtransact": 294, "label_nam": [294, 348, 562], "has_vertex_label": 294, "label_id": [294, 301, 346, 348, 349, 381], "get_vertex_label_id": 294, "getvertexnum": 294, "createapp": 294, "db": [294, 308, 313], "deleteapp": 294, "cast": [294, 328, 332, 335, 337, 416, 568, 583], "versu": 294, "th": [294, 299, 322, 408, 421, 534], "too": [294, 298, 309, 322, 343, 406, 475, 556], "mayb": [294, 322], "hard": [294, 305, 320, 330, 331, 517, 568], "app_path": 294, "app_cont": 294, "nio": 294, "net": [294, 421, 475], "urisyntaxexcept": 294, "junit": 294, "jupit": 294, "createproceduretest": 294, "setnam": 294, "appfilepath": 294, "notexist": 294, "appfilecont": 294, "readallbyt": 294, "isempti": 294, "setqueri": 294, "settyp": 294, "readtransact": 294, "inserttract": 294, "updatetransact": 294, "contact": [294, 302], "cypherapp": 294, "himself": 294, "callabl": 294, "procedurenam": 294, "labelnam": [294, 587], "callprocedureraw": 294, "startserviceongraph": 294, "num": [294, 301, 311, 318, 321, 322, 417, 568], "administr": [295, 533], "graph_data": 295, "breakdown": [295, 300], "connector": [295, 298, 314, 322], "opencyph": [295, 338], "supported_cyph": [295, 298], "storp": 296, "sproc": 296, "stopro": 296, "storeproc": 296, "subroutin": 296, "rdbm": [296, 315], "wikipedia": [296, 339, 347, 518, 522, 523, 524, 525, 527, 528, 529, 535, 536, 537, 538, 540, 541, 542, 543, 549], "sole": [297, 313, 315, 316], "theori": [297, 329, 408, 416], "mac": [297, 351, 581, 583], "installt": 297, "apiserv": 297, "streamlin": [297, 320], "screen": [297, 571], "coordinator_port": 297, "secur": [297, 326, 341, 342], "firewal": 297, "concurr": [298, 300, 318, 336, 406], "impress": [298, 300], "Its": [298, 300, 302, 338, 535, 568], "timefram": [298, 300], "emphas": [298, 300, 343], "stand": [298, 343, 408, 409, 568], "shoulder": 298, "pivot": 298, "pillar": 298, "qp": [298, 308, 309, 318, 322, 342, 569], "snb": [298, 322, 335, 584, 589], "180": 298, "87": [298, 344, 547], "op": [298, 348, 358, 360, 361, 362, 363, 365, 366, 368, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 386, 387, 388, 390, 391, 414, 556, 560, 563], "boast": 298, "highlight": [298, 308, 316, 336, 340], "laid": 298, "triumph": 298, "ten": [298, 313, 339, 343, 408], "thousand": 298, "swiftli": 298, "versatil": [298, 308, 342, 568], "craft": 298, "expans": [298, 313, 340, 341, 413, 587], "prowess": 298, "prime": [298, 500, 502], "gql": [298, 310, 313, 336, 343], "scalabl": [298, 309, 321, 339, 340, 341, 342, 343, 553], "possess": 298, "massiv": [298, 310, 340], "offload": [298, 569], "excess": [298, 313], "slave": 298, "constraint": [298, 313, 316, 322, 323, 340], "portion": [298, 322, 339, 340, 348, 418], "occurr": [298, 315, 340], "ddl": 298, "acid": [298, 342], "movi": [299, 300, 313, 338, 406], "parameter": 299, "personnam": 299, "softwareid": 299, "softwarenam": 299, "marko": [299, 318, 320, 322], "solid": [300, 524, 541, 542], "prerequisit": 300, "complic": [300, 305, 310, 322, 348], "entiti": [300, 318, 322, 332, 337, 341, 405], "helm": [300, 302, 307, 309, 569, 580, 582], "\u6807\u7b7e": 301, "\u8868\u793a\u67d0\u4e00\u7c7b\u9876\u70b9\u6216\u8005\u8fb9": 301, "\u5c5e\u6027": [301, 587, 589], "\u8868\u793a\u9876\u70b9\u6216\u8fb9\u6240\u5173\u8054\u7684\u6570\u636e": 301, "\u539f\u59cbid": 301, "oid": [301, 346, 348, 349], "\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684id": 301, "\u4e0d\u540c\u6807\u7b7e\u7684\u9876\u70b9\u5141\u8bb8\u6709\u76f8\u540c\u7684oid": 301, "\u5b50\u56feid": 301, "fid": [301, 346, 349, 381, 565], "\u5b50\u56fe\u7684\u552f\u4e00\u7f16\u53f7": 301, "\u5206\u533a\u5668": 301, "\u80fd\u591f\u786e\u5b9a\u9876\u70b9oid\u5230\u5206\u533aid": 301, "\u7684\u6620\u5c04": 301, "\u5b50\u56fe": 301, "\u901a\u8fc7\u5207\u8fb9\u5f97\u5230\u7684\u5b50\u56fe": 301, "\u5b58\u50a8\u4e86\u9876\u70b9": 301, "\u8fb9": [301, 579], "\u9876\u70b9\u6570\u636e": 301, "\u8fb9\u6570\u636e\u7b49\u4fe1\u606f": 301, "\u5185\u90e8\u70b9": 301, "\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 301, "\u5916\u90e8\u70b9": 301, "\u4e0d\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 301, "\u672c\u5730id": 301, "lid": [301, 346, 381], "\u53ea\u5728\u67d0\u4e2afragment\u5185\u90e8\u6709\u610f\u4e49": 301, "\u5168\u5c40id": 301, "gid": [301, 346, 381], "\u80fd\u591f\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u9876\u70b9": 301, "\u88abfragment\u5171\u8bc6": 301, "\u7528\u4e8e\u5b58\u50a8gid": 301, "oid\u7684\u6620\u5c04\u5173\u7cfb": 301, "\u7684\u8282\u70b9": 301, "\u5b58\u5728\u4ee5\u4e0b\u7f16\u7801\u65b9\u5f0f": 301, "gid\u7f16\u7801": 301, "\u5176\u4e2d": [301, 579, 584], "\u548c": [301, 410, 579, 581, 582, 583, 584, 586, 587, 588, 589], "\u5171\u540c\u7ec4\u6210": 301, "\u67d0\u4e00\u7c7b\u9876\u70b9\u5728\u67d0\u4e2a": 301, "\u7684\u9876\u70b9": 301, "\u5e8f\u53f7": 301, "lid\u7f16\u7801": 301, "\u586b\u5145": 301, "\u603b\u662f": 301, "\u6309\u7167\u6267\u884c\u6d41\u7a0b\u7f16\u53f7": 301, "\u63cf\u8ff0\u4e86\u8f7d\u56fe\u7684\u4e3b\u8981\u903b\u8f91": 301, "\u5206\u4e3ahashpartitioner\u548csegmentedpartition": 301, "\u521d\u59cb\u5316\u4ed6\u4eec\u9700\u8981\u7ed9\u51fafragment\u7684\u6570\u91cf": 301, "segmentedpartitioner\u8fd8\u9700\u7ed9\u51fa\u5168\u90e8\u7684oid": 301, "\u6bcf\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u4e00\u90e8\u5206\u70b9": 301, "\u8fb9\u6587\u4ef6": 301, "\u5f97\u5230\u591a\u4e2avertex": 301, "\u548cedg": 301, "etabl": 301, "\u5176\u4e2dvtable\u6309\u7167\u9876\u70b9\u6807\u7b7e": 301, "\u5206\u7ec4": 301, "etable\u5148\u6309\u7167\u8fb9\u6807\u7b7e": 301, "\u540c\u4e00\u4e2a\u8fb9\u6807\u7b7e\u4e0b\u9762\u53c8\u6309\u7167src\u548cdst\u7684\u9876\u70b9\u6807\u7b7e\u5206\u7ec4": 301, "\u539f\u59cb\u7684\u9876\u70b9\u8868": 301, "\u8fb9\u8868": 301, "\u6bcf\u4e2a\u8fdb\u7a0b\u6301\u6709\u90e8\u5206\u7684\u6570\u636e": 301, "partial_v_t": 301, "partial_e_t": 301, "table\u5305\u542boid": 301, "table\u5305\u62ecsrc\u548cdst\u7684oid": 301, "\u8bbf\u95eevtable\u7684oid\u5217": 301, "\u6839\u636eoid\u67e5\u8be2partit": 301, "\u5c06\u8868\u4e2d\u7684\u8bb0\u5f55\u5206\u53d1\u7ed9\u9876\u70b9\u7684\u62e5\u6709\u8005": 301, "\u4eceshuffle\u540e\u7684vtable\u53d6\u51faoid\u6267\u884cal": 301, "gather\u64cd\u4f5c": 301, "\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u591f\u83b7\u53d6\u7684\u6240\u6709oid": 301, "\u6839\u636efrag\u6570\u91cf": 301, "label\u6570\u91cf\u548c\u5168\u90e8oid": 301, "\u6bcf\u4e2a\u8fdb\u7a0b\u6784\u5efavertex": 301, "fid_t": [301, 346], "fnum_": 301, "label_id_t": [301, 346], "label_num_": 301, "hashmapbuild": 301, "cur_gid": 301, "id_parser_": 301, "generateid": 301, "\u8d77\u59cbgid": 301, "vnum": 301, "\u904d\u5386\u5168\u90e8\u5185\u90e8\u70b9": 301, "\u751f\u6210gid": 301, "emplac": 301, "getview": 301, "\u6309\u7167elabel\u904d\u5386\u6bcf\u4e00\u5f20edg": 301, "\u83b7\u53d6\u5230src\u548cdst\u7684label": 301, "\u8bbf\u95ee\u6bcf\u4e2asrc\u7684oid": 301, "\u6839\u636epartitioner\u83b7\u53d6fid": 301, "\u6839\u636efid": 301, "id\u548coid\u67e5\u8be2gid": 301, "\u751f\u6210gid\u6570\u7ec4": 301, "\u5904\u7406dst\u7684\u903b\u8f91\u540c\u7406": 301, "\u5f97\u5230src\u548cdst\u4e24\u4e2agid\u6570\u7ec4\u540e": 301, "\u66ff\u6362\u6389\u539fetable\u7684oid\u6570\u7ec4": 301, "\u5bf9etable\u6267\u884cshuffl": 301, "\u5c06\u76f8\u5e94\u7684\u884c\u4f20\u8f93\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b": 301, "\u5c06shuffle\u8fc7\u7684vtable\u548cetable\u9001\u7ed9basicarrowfragmentbuilder\u6784\u5efacsr": 301, "\u5904\u7406\u9876\u70b9": 301, "\u521d\u59cb\u5316id": 301, "parser": [301, 310, 333], "\u521d\u59cb\u5316ivnum": 301, "ovnum\u548ctvnum\u6570\u7ec4": 301, "\u6309\u7167vertex": 301, "label\u5206\u7ec4": 301, "\u904d\u5386\u6bcf\u4e00\u79cd\u9876\u70b9": 301, "\u5411vertex": 301, "map\u67e5\u8be2\u672cfragment\u7684\u5185\u90e8\u70b9\u6570\u91cf": 301, "\u5e76\u8bbe\u7f6e\u5bf9\u5e94\u7684ivnum": 301, "\u5c06vertex": 301, "table\u5408\u5e76\u6210\u4e00\u4e2achunk\u4fbf\u4e8e\u540e\u7eed\u8bbf\u95ee": 301, "vid_parser_": 301, "vertex_label_num_": 301, "resiz": 301, "ivnums_": 301, "ovnums_": 301, "tvnums_": 301, "combinechunk": 301, "default_memory_pool": 301, "vm_ptr_": 301, "getinnervertexs": [301, 346], "fid_": 301, "\u5904\u7406\u8fb9\u5305\u62ec\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4": 301, "\u904d\u5386\u6bcf\u4e00\u79cd\u8fb9": 301, "\u901a\u8fc7src": 301, "gid\u5217\u548cdst": 301, "gid\u5217\u67e5\u8be2\u51fa\u672cfragment\u6240\u6709\u7684\u5916\u90e8\u70b9": 301, "\u5e76\u6309\u7167vertex": 301, "edge_t": [301, 405, 416], "table\u5408\u5e76\u6210\u4e00\u4e2achunk": 301, "\u627e\u51fa\u672cfragment\u5168\u90e8\u5916\u90e8\u70b9\u7684gid": 301, "collect_outer_vertic": 301, "dynamic_pointer_cast": [301, 570], "converttoarrowtyp": [301, 346], "arraytyp": [301, 346], "chunk": [301, 391, 418, 567], "\u6839\u636e\u5916\u90e8\u70b9\u7684gid": 301, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efagid\u5230lid\u7684\u6620\u5c04\u4e0e\u53bb\u91cd\u7684gid\u6570\u7ec4": 301, "\u5916\u90e8\u70b9\u7684lid\u7531label": 301, "id\u548c\u9876\u70b9\u5e8f\u53f7\u7ec4\u6210": 301, "\u9876\u70b9\u5e8f\u53f7\u4eceivnum\u5f00\u59cb\u8ba1\u6570": 301, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u586b\u5145ovnum\u548ctvnum": 301, "ovg2l_maps_": 301, "ovgid_lists_": 301, "cur_list": 301, "collected_ovgids_": 301, "\u6392\u5e8fgid": 301, "cur_map": 301, "buildertyp": 301, "vec_build": 301, "\u751f\u6210\u5916\u90e8\u70b9\u7684lid": 301, "\u5176\u4e2dfid\u4e3a0": 301, "offset\u4eceivnum\u5f00\u59cb\u7f16\u53f7": 301, "cur_id": 301, "\u5904\u7406\u7b2c\u4e00\u4e2a\u5143\u7d20": 301, "append": [301, 322, 331, 332, 333, 334, 337, 349, 404, 415, 416, 487, 550, 583, 588], "cur_list_length": 301, "\u627e\u5230\u4e0d\u91cd\u590d\u7684\u4e24\u4e2agid": 301, "\u6839\u636e\u4e0a\u4e00\u6b65\u6784\u6210\u7684gid\u5230lid\u7684\u6620\u5c04": 301, "\u5c06src\u548cdst\u7684gid\u90fd\u8f6c\u6362\u6210lid": 301, "\u5220\u9664edg": 301, "table\u7684src\u5217\u548cdst\u5217": 301, "gid\u5230lid\u8f6c\u6362\u51fd\u6570": 301, "generate_local_id_list": 301, "gid_list": 301, "lid_list": 301, "vec": 301, "getfid": 301, "\u751f\u6210\u5185\u90e8\u70b9lid": 301, "getlabelid": 301, "getoffset": 301, "\u67e5\u8be2g2l": 301, "\u901a\u8fc7gid\u627e\u5230\u5916\u90e8\u70b9lid": 301, "\u6839\u636esrc\u548cdst\u5217\u7684gid\u751f\u6210lid": 301, "edge_src_": 301, "edge_dst_": 301, "table\u7684src\u5217\u548cgid\u5217": 301, "\u53ea\u4fdd\u7559\u5c5e\u6027": 301, "tmp_table0": 301, "removecolumn": 301, "\u6784\u5efacsr": 301, "\u5bf9\u4e8e\u6709\u5411\u56fe": 301, "\u6784\u5efa\u51fa\u8fb9\u548c\u5165\u8fb9\u4e24\u4e2acsr": 301, "\u9996\u5148\u6784\u5efa\u51fa\u8fb9csr": 301, "\u7edf\u8ba1\u6bcf\u79cd\u6e90\u9876\u70b9\u7684\u51fa\u5ea6": 301, "\u6784\u5efarow": 301, "offset\u6570\u7ec4": 301, "\u8bbf\u95ee\u6bcf\u6761\u8fb9": 301, "\u4f7f\u7528row": 301, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9nbr\u7684\u5730\u5740": 301, "\u586b\u5145dst": 301, "lid\u548ceid\u5230nbr": 301, "\u6309\u7167\u76ee\u7684\u9876\u70b9\u7684lid": 301, "\u5c06\u6bcf\u4e00\u4e2a\u6e90\u9876\u70b9\u7684\u76ee\u7684\u9876\u70b9\u6392\u5e8f": 301, "generate_directed_csr": 301, "vid_array_t": [301, 346], "src_list": 301, "dst_list": 301, "fixedsizebinaryarrai": 301, "int64arrai": 301, "edge_offset": 301, "actual_edge_num": 301, "v_label": [301, 346, 565], "edge_num": [301, 381, 583, 587], "src_list_ptr": 301, "raw_valu": 301, "dst_list_ptr": 301, "\u8ba1\u7b97\u6e90\u9876\u70b9\u7684\u5ea6": 301, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efarow": 301, "tvnum": 301, "offset_vec": 301, "degree_vec": 301, "int64build": 301, "podarraybuild": 301, "nbr_unit_t": [301, 346], "edge_build": 301, "v_offset": 301, "\u83b7\u53d6\u76ee\u7684\u9876\u70b9\u6307\u9488": 301, "ptr": 301, "mutablepoint": 301, "\u586b\u5145\u76ee\u7684\u9876\u70b9lid": 301, "\u5176\u4e2deid\u7528\u4e8e\u4e4b\u540e\u83b7\u53d6\u8fb9\u4e0a\u7684\u5c5e\u6027": 301, "vid": [301, 346, 418], "eid_t": [301, 346], "\u66f4\u65b0offset": 301, "\u6307\u5411\u6e90\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u51fa\u8fb9": 301, "\u5bf9\u4e34\u63a5\u70b9\u6309\u7167lid\u6392\u5e8f": 301, "offsets_ptr": 301, "lh": 301, "\u6784\u5efa\u5165\u8fb9csr\u548c\u51fa\u8fb9\u540c\u7406": 301, "\u5bf9\u4e8e\u65e0\u5411\u56fe": 301, "\u51fa\u8fb9\u548c\u5165\u8fb9\u5171\u7528\u4e00\u4e2acsr": 301, "\u903b\u8f91\u548c\u6709\u5411\u56fe\u7c7b\u4f3c": 301, "\u4f46\u662f\u8981\u540c\u65f6\u7edf\u8ba1\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9\u7684\u5ea6\u6765\u6784\u5efarow": 301, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u6e90\u9876\u70b9\u7684nbr\u586b\u5145\u5165\u8fb9\u7684src": 301, "lid\u548ceid": 301, "\u540c\u65f6\u8fd8\u8981\u4f7f\u7528offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9\u7684nbr\u586b\u5145dst": 301, "\u5c01\u88c5": 301, "seal": [301, 325, 341], "\u51c6\u5907\u597d\u9876\u70b9\u6570\u91cf": 301, "ovgid\u548cg2l_map\u540e": 301, "\u5c06\u4ed6\u4eec\u5c01\u88c5\u6210\u5404\u79cdvineyardobject": 301, "\u6839\u636emetadata\u4ecevineyard\u67e5\u8be2\u548c\u6784\u5efa\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4f5c\u4e3aarrowfragment\u7684\u6210\u5458": 301, "\u4e5f\u5c31\u662f\u8bf4": [301, 580], "\u4ee5\u4e0b\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728vineyard\u4e2d\u7684": 301, "\u5f53\u524dfragment": 301, "fragment\u603b\u6570": 301, "directed_": 301, "\u662f\u5426\u4e3a\u6709\u5411\u56fe": 301, "\u9876\u70b9\u79cd\u7c7b\u6570\u91cf": 301, "edge_label_num_": 301, "\u8fb9\u79cd\u7c7b\u6570\u91cf": 301, "propertygraphschema": 301, "schema_": 301, "\u5185\u90e8\u548c\u5916\u90e8\u70b9\u603b\u6570": 301, "\u9876\u70b9\u5c5e\u6027\u8868": 301, "\u4e0d\u5305\u542bid\u5217": 301, "\u5916\u90e8\u70b9gid": 301, "gid\u5230lid\u6620\u5c04": 301, "\u8fb9\u5c5e\u6027": 301, "csr\u7ed3\u6784\u7684column": 301, "\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709oe_lists_\u88ab\u4f7f\u7528": 301, "csr\u7ed3\u6784\u7684row": 301, "vertex_map_t": [301, 346], "\u5269\u4e0b\u7684\u6210\u5458\u5c06\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\u6765\u6784\u5efa": 301, "edge_tables_columns_": 301, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u5c5e\u6027\u5217\u5730\u5740": 301, "flatten_edge_tables_columns_": 301, "\u540c\u4e0a": 301, "vertex_tables_columns_": 301, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u5c5e\u6027\u5217\u5730\u5740": 301, "ie_ptr_lists_": 301, "oe_ptr_lists_": 301, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u6bcf\u4e00\u79cd\u5165": 301, "\u51fa\u8fb9\u7684\u8d77\u59cb\u5730\u5740": 301, "\u4e5f\u5c31\u662fcolumn": 301, "index\u7684\u8d77\u59cb\u5730\u5740": 301, "ie_offsets_ptr_lists_": 301, "oe_offsets_ptr_lists_": 301, "\u51fa\u8fb9\u7684row": 301, "offset\u8d77\u59cb\u5730\u5740": 301, "offset\u7684\u8d77\u59cb\u5730\u5740": 301, "\u4ee5\u4e0b\u662f\u6bcf\u4e00\u79cd\u9876\u70b9": 301, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u6e90\u9876\u70b9fid": 301, "\u76ee\u7684\u9876\u70b9fid": 301, "\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9fid\u6784\u6210\u7684csr\u7ed3\u6784": 301, "idst_": 301, "odst_": 301, "iodst_": 301, "idoffset_": 301, "odoffset_": 301, "iodoffset_": 301, "\u4ee5\u4e0b\u5185\u5bb9\u63cf\u8ff0\u4e86\u8bbf\u95ee\u9876\u70b9": 301, "\u9876\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e\u7684api\u548c\u5b9e\u73b0": 301, "\u5185\u90e8\u70b9\u8303\u56f4\u7531\u8d77\u59cblid\u548c\u7ec8\u6b62lid\u6784\u6210": 301, "lid\u7684\u7f16\u7801\u5305\u542b\u4e86\u9876\u70b9label": 301, "id\u548c\u9876\u70b9\u5e8f\u53f7": 301, "\u5185\u90e8\u70b9\u7684\u9876\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 301, "ivnum": 301, "\u5916\u90e8\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 301, "\u5168\u90e8\u9876\u70b9\u5e8f\u53f7\u4e3a": 301, "vertex_range_t": [301, 346], "\u751f\u6210lid\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u8303\u56f4": 301, "\u7ed3\u675f\u8303\u56f4\u662f\u5f00\u533a\u95f4": 301, "\u6839\u636e\u9876\u70b9lid\u83b7\u53d6\u9876\u70b9\u7c7b\u578b": 301, "\u5c5e\u6027id": 301, "\u5217\u53f7": 301, "\u83b7\u53d6\u5230\u5217\u6307\u9488": 301, "\u7136\u540e\u4ecelid\u83b7\u53d6\u5230\u9876\u70b9\u5e8f\u53f7": 301, "\u884c\u53f7": 301, "\u5373\u53ef\u8bbf\u95ee\u5230\u9876\u70b9\u7684\u67d0\u4e2a\u5c5e\u6027": 301, "getdata": [301, 346], "prop_id_t": [301, 346], "prop_id": 301, "property_graph_util": [301, 346], "valuegett": 301, "\u8bbf\u95ee\u51fa\u8fb9\u9700\u8981\u7ed9\u51fa\u6e90\u9876\u70b9lid\u548c\u67d0\u4e00\u79cd\u8fb9\u7684\u7c7b\u578b": 301, "\u800c\u6e90\u9876\u70b9\u7684\u7c7b\u578b\u5df2\u7ecf\u88ablid\u7f16\u7801\u6240\u5305\u542b": 301, "\u6240\u4ee5\u4e0d\u7528\u7ed9\u51fa": 301, "adj_list_t": [301, 346], "e_label": [301, 346], "\u83b7\u53d6\u6e90\u9876\u70b9lid": 301, "\u83b7\u53d6\u6e90\u9876\u70b9\u7c7b\u578b": 301, "\u83b7\u53d6\u6e90\u9876\u70b9\u5e8f\u53f7": 301, "offset_arrai": 301, "\u8bbf\u95eerow": 301, "oe": 301, "\u83b7\u53d6\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 301, "\u751f\u6210adjlist\u5bf9\u8c61": 301, "\u5206\u522b\u4e3a\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 301, "\u7ed3\u675f\u5730\u5740": 301, "\u8fb9\u5c5e\u6027\u5217\u5730\u5740": 301, "\u548c\u51fa\u8fb9\u540c\u7406": 301, "\u53ea\u9700\u8981\u628aoe\u76f8\u5173\u53d8\u91cf\u540d\u6362\u6210ie\u5373\u53ef": 301, "ie": 301, "\u56e0\u4e3a\u5728adjlist\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u51fa\u8fb9\u5c5e\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740": 301, "\u6bcf\u6761\u51fa\u8fb9\u8fd8\u5305\u542b\u4e86\u8fb9id": 301, "\u5bf9\u5e94\u5230\u884c\u53f7": 301, "\u56e0\u6b64\u518d\u7ed9\u51fa\u5c5e\u6027\u7684\u5217\u53f7\u5c31\u80fd\u591f\u53bb\u5f97\u5230\u5177\u4f53\u7684\u6570\u636e": 301, "\u4f8b\u5982": [301, 579, 583, 587, 589], "\u83b7\u53d6edg": 301, "struct": [301, 346, 479, 512], "\u83b7\u53d6\u5c5e\u6027\u5217\u7684\u5730\u5740": 301, "\u548ceid\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5c5e\u6027": 301, "edata_arrays_": 301, "nbr_": 301, "8g": [302, 333], "18": [302, 312, 322, 344, 406, 407, 409, 418, 421, 479, 528, 533, 537, 539, 542, 548, 567, 579, 582, 586], "debug": [302, 333, 405, 410, 563, 569, 577], "silent": [302, 556, 577], "did": [302, 416], "role": [302, 310, 324, 333, 338, 406, 415, 421, 507, 545, 553, 569, 573, 577, 582], "rolebind": [302, 582], "recycl": 302, "alloc": [302, 318, 327, 331], "seem": [302, 322], "stuck": 302, "consumpt": 302, "poor": [302, 412], "acquir": [302, 314, 321], "mostli": [302, 311, 382], "visibl": [302, 349], "volum": [302, 309, 321, 333, 479, 480, 481, 491, 500, 545, 563, 568], "cloud": [302, 342, 343, 569], "k8s_vineyard_mem": [302, 333, 403, 563, 582], "shape": [302, 328, 329, 332, 337, 346, 348, 407, 408, 409, 410, 413, 416, 420, 478, 583], "forth": 302, "smaller": [302, 313, 318, 322, 344, 419, 421, 477, 478, 482], "shared_mem": [302, 582], "grpcio": [302, 582], "grpc_python_build_system_openssl": [302, 582], "scipi": [302, 503, 504, 505, 506, 556, 559, 582], "anaconda": [302, 582], "workaround": 302, "openbla": 302, "tri": [302, 305, 331, 340, 485, 491], "pkgconfig": 302, "cmake_prefix_path": 302, "brew": 302, "deni": [302, 355, 582], "pv": [302, 309, 563, 569, 582], "nf": [302, 415, 582], "appear": [302, 310, 322, 347, 461, 463, 465, 468, 470, 497, 498, 556, 582], "kafka": [302, 565, 569, 582], "zookeep": [302, 582], "crashloopbackoff": [302, 582], "bitnami": [302, 582], "755": 302, "1001": [302, 569], "brutal": 302, "chmod": [302, 321, 582], "777": [302, 344, 582], "eleg": [302, 305], "grant": [302, 553], "timeout_second": [302, 403, 563, 582], "600": [302, 344, 563, 582], "enterpris": 302, "proxi": [302, 582], "properli": [302, 318], "wrong": 302, "resolut": [302, 569], "occup": 302, "hostnam": [302, 582], "no_proxi": [302, 582], "suffix": [302, 308, 320], "flush": 302, "forcibli": 302, "slack": [302, 582], "dingtalk": [302, 582], "happi": 302, "90": [304, 344], "traffic": 305, "web": [305, 347, 421, 489, 503, 508, 549], "ever": [305, 329], "amount": [305, 321, 327, 341, 408, 410, 412], "hidden": [305, 338, 339, 341, 404, 588], "attract": 305, "attent": [305, 341, 410], "difficult": [305, 405, 415, 569], "obstacl": 305, "curv": [305, 339], "sql": [305, 310, 316, 320, 322, 323], "deep": [305, 329, 336, 404, 409, 410, 412, 432, 435, 544, 556], "gnn": [305, 307, 326, 328, 329, 332, 336, 337, 342, 343, 404, 408, 409, 410, 412, 413, 563, 585, 588], "train": [305, 315, 326, 328, 329, 330, 336, 337, 342, 343, 345, 406, 409, 410, 412, 413, 416, 420, 563, 583, 588], "fist": 305, "mount_dataset": [305, 335], "ran": [305, 331], "p2p_network": 305, "embed": [305, 326, 332, 337, 341, 405, 412], "inter": [305, 417, 475, 478], "wherea": [305, 475, 568], "numpi": [305, 322, 326, 346, 348, 363, 374, 383, 407, 408, 410, 411, 412, 413, 416, 418, 420, 421, 548, 556, 559, 585], "datafram": [305, 335, 348, 362, 373, 383, 386, 418, 556, 579, 589], "head": [305, 309, 315, 320, 322], "creationd": [305, 320, 322, 335, 567, 584, 589], "locationip": [305, 335, 589], "browserus": [305, 322, 335, 589], "618475290625": 305, "2011": [305, 322, 489], "08": [305, 344, 421], "17t14": 305, "26": [305, 320, 322, 333, 344, 406, 407, 409, 505], "59": [305, 344], "961": 305, "210": [305, 344, 552], "17": [305, 322, 344, 406, 407, 409, 579], "chrome": [305, 322], "618475290626": 305, "17t11": 305, "570": 305, "comment_replyof_com": 305, "274877907301": 305, "274877907299": 305, "274877907302": 305, "pd": [305, 315, 335, 589], "df_v": [305, 335, 579, 589], "read_csv": [305, 315, 335, 589], "sep": [305, 315, 335, 418, 589], "df_e": [305, 335, 589], "graphcomput": [307, 587], "gl": [307, 329, 342, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417], "neural": [307, 326, 336, 337, 342, 343, 345, 404, 405, 408, 410, 412, 416], "posit": [307, 322, 341, 342, 404, 410, 421, 466, 485, 487, 488, 490, 491, 495, 503, 504, 505, 506, 507, 551, 554, 568, 571], "frequent": [307, 336, 339, 569], "gopt": 307, "graphar": [307, 418], "gart": 307, "gap": 307, "oltp": [307, 336, 338], "style": [307, 325, 336, 561], "act": [308, 320, 404, 553, 556, 576, 588], "latenc": [308, 310, 318, 321, 336, 342, 343], "notabl": [308, 316], "assess": [308, 341, 416, 533], "accommod": [308, 343], "kuzudb": 308, "ic": 308, "bi": [308, 322, 339, 342], "lsqb": [308, 313], "benchark": 308, "mix": [308, 320, 347, 568], "fill": [308, 417, 457, 468, 478, 512], "substitution_paramet": 308, "robin": [308, 454, 455], "bench": [308, 313], "expected_result": 308, "kuzu": 308, "ldbc_queri": 308, "bi_queri": 308, "intellig": [308, 310, 322, 336, 343, 513, 516], "lsqb_queri": 308, "anywher": 308, "xvf": 308, "job_benchmark": 308, "13a": 308, "resultcount": 308, "executetimem": 308, "3638": 308, "32a": 308, "266": 308, "9a": 308, "3669": 308, "5c": 308, "8603": 308, "3a": 308, "613": 308, "35": [308, 320, 322, 344, 406, 407, 409, 416, 483, 533, 549], "7068": 308, "253": 308, "5122": 308, "13623": 308, "4676": 308, "avg": [308, 316, 320, 421], "p50": 308, "p90": 308, "p95": 308, "p99": 308, "sytem": 308, "path_to_db": 308, "example_db": 308, "job_db": 308, "substitut": 308, "custom_queri": 308, "custom_constant_queri": 308, "latter": [308, 320, 322, 339], "cypher_queri": 308, "exemplifi": [308, 569], "job_expect": 308, "wonder": 309, "throughout": [309, 310, 320], "smoothli": 309, "easiest": 309, "websit": [309, 339, 475], "untar": 309, "tree": [309, 338, 456, 458, 466, 486, 492, 494, 504, 505, 506, 519, 520, 557, 563, 589], "claim": [309, 538, 568, 569], "pvc": [309, 563, 569], "your_release_nam": 309, "grep": 309, "awk": 309, "cypherport": 309, "v6d_modern_load": [309, 311], "data_path": [309, 570], "store_data_path": [309, 311], "thing": [309, 410, 576], "key1": 309, "key2": 309, "token": [309, 320], "column_typ": 309, "infer": [309, 313, 335, 341, 342], "filed1": 309, "filed2": 309, "unexpect": 309, "troubl": 309, "correspondingli": [309, 329, 513, 516], "v6d_ldbc_loader": 309, "replicacount": [309, 569], "hdf": [309, 335, 383, 415, 418, 569, 579, 589], "pegasusworkernum": 309, "pegasustimeout": 309, "durat": [309, 316, 320], "pegasusbatchs": 309, "1024": [309, 311, 320, 567], "pegasusoutputcapac": 309, "frontendquerypersecondlimit": 309, "2147483647": [309, 569], "gremlinscriptlanguagenam": 309, "antlr_gremlin_travers": 309, "inher": 310, "manufactur": 310, "upcom": [310, 313], "sticki": 310, "shelv": 310, "hybrid": [310, 568, 569], "dedupl": 310, "higher": [310, 313, 342, 421, 431, 495, 569], "hope": [310, 322, 569], "trade": [310, 336, 569], "inevit": 310, "realist": [310, 548], "lengthi": 310, "account": [310, 340, 554, 587], "80": [310, 344, 535], "decoupl": [310, 336, 343], "upper": [310, 320, 322, 326, 340, 475, 568], "briefli": [310, 341], "algebra": [310, 545], "edgeexpans": 310, "pathexpans": 310, "legal": 310, "predic": [310, 322], "arithmet": [310, 320, 322], "aspect": [310, 322, 343], "firstli": [310, 318, 322, 335, 343], "down": [310, 334, 473], "cbo": [310, 313], "glogu": 310, "shuffl": [310, 320, 333, 334, 410, 416, 420], "plu": [310, 320, 322, 459, 531], "unaccept": 310, "come": [310, 315, 318, 322, 325, 335, 337, 338, 341, 342, 344, 407, 522, 559], "end2end": 311, "sf": [311, 313, 322], "v6d_object_id": 311, "unsur": [311, 315], "vineyard_ipc_socket": [311, 570], "gie_test_hom": 311, "rpc": [311, 333, 346, 417, 563, 569], "1234": 311, "11234": 311, "pegasu": [311, 318, 336], "gaia_executor": 311, "log4r": [311, 569], "yml": [311, 567, 569], "usernam": [311, 569], "password": [311, 569], "auth": [311, 314, 421, 569], "djna": 311, "kill": [311, 563], "pkill": 311, "gcc": [312, 344, 586], "64": [312, 321, 329, 409, 410, 487, 567, 587], "chip": [312, 586], "straightforward": [312, 337], "hereaft": [312, 322, 337], "q1": [312, 315, 322, 337], "q2": [312, 322, 337], "q3": [312, 322, 337], "someth": [312, 556], "453": 312, "pppp": 312, "startup": 312, "3000": 312, "entr": 312, "ee": 312, "syntact": [312, 318, 323, 340], "sugar": [312, 318, 323, 340], "excel": [313, 342], "novel": [313, 547], "lightweight": 313, "serverless": 313, "year": [313, 315, 320, 322, 337, 339, 583], "academ": [313, 332, 337, 583], "prestigi": 313, "confer": [313, 328, 337, 408, 579], "barrier": [313, 333], "mainstream": [313, 329, 408, 409], "embedd": 313, "occupi": [313, 318], "mb": [313, 569], "person_follows_person": 313, "person_acted_in_movi": 313, "joindecompositionrul": 313, "bias": [313, 320], "favor": 313, "extendintersectrul": 313, "expandgetvfusionrul": 313, "dbm": [313, 343], "default_databas": 313, "unitl": 313, "apoc": 313, "cardin": 313, "evid": 313, "precis": [313, 335, 341, 548], "hinder": 313, "absenc": 313, "priorit": 313, "promptli": 313, "squar": [313, 322, 483, 502, 530, 531, 534, 549], "AND": [313, 316, 320, 337, 349], "worst": [313, 340], "wco": 313, "expandinto": 313, "filterpushdown": 313, "kean": 313, "gun": 313, "35mb": 313, "graphbuildersdk": 313, "systempath": 313, "basedir": 313, "studi": [313, 322, 332, 337, 343, 502, 504], "reconfigur": 313, "ldbc1": 313, "Be": 313, "clearquerycach": 313, "significantli": [313, 315, 318, 339, 342], "rapidli": [313, 336, 408], "tend": [313, 485], "narrow": [313, 475], "holist": [313, 338], "suboptim": 313, "isomorph": [313, 322, 341, 406, 410, 535, 557], "space": [313, 326, 341, 405, 406, 410, 421, 455, 503, 504, 505, 506, 507], "graphdatabas": 314, "routingcontrol": 314, "print_top_10": 314, "execute_queri": 314, "routing_": 314, "simpler": [314, 321, 322, 556], "nowadai": 315, "shortcom": [315, 318, 322], "gpt": 315, "materi": 315, "mislead": 315, "hot": 315, "cold": 315, "workabl": 315, "openai": 315, "novic": 315, "dream": 315, "chamber": 315, "25": [315, 322, 328, 332, 337, 344, 406, 407, 409, 478, 480, 483, 502, 549, 583], "langchain": 315, "316": 315, "suchun": 315, "sv": 315, "nodes_set": 315, "stone_story_nodes_rel": 315, "vid_field": [315, 335, 418, 584], "edges_set": 315, "stone_story_edg": 315, "edges_sets_": 315, "src_field": [315, 335, 418, 584], "dst_field": [315, 335, 418, 584], "daughter_in_law_of_grandson_of": 315, "wife_of": 315, "api_kei": 315, "query_to_cyph": 315, "langchain_prompt": 315, "son": 315, "baoyu": 315, "jia": 315, "\u8d3e\u5b9d\u7389\u662f\u8c01\u7684\u513f\u5b50": 315, "cypher_sent": 315, "son_of": 315, "q": [315, 321, 408, 410, 416, 498, 502], "\u8d3e\u5b9d\u7389": 315, "lastli": 315, "\u8d3e\u653f": 315, "stori": 315, "syntax": [316, 318, 320, 329, 340, 348, 410, 556, 562], "compli": [316, 410], "unaddress": 316, "regard": [316, 322, 332, 568], "keyword": [316, 423, 424, 425, 492, 499, 503, 504, 505, 506, 507, 556, 559, 562, 563], "insensit": [316, 320], "capit": 316, "lowercas": 316, "letter": [316, 550], "slightli": [316, 411, 475, 562], "elabor": [316, 343], "uint64": [316, 397, 418, 563], "datetim": 316, "citizen": 316, "unsupport": [316, 318, 320], "conceiv": [316, 503], "inner_typ": 316, "mathemat": [316, 488, 490, 498, 500, 502, 511], "averag": [316, 320, 332, 337, 347, 421, 475], "summar": [316, 322, 326], "subtract": [316, 320], "divis": [316, 320], "modulo": [316, 320, 500], "exponenti": [316, 320, 322, 341, 503, 505, 506], "multipli": [316, 320, 543], "inequ": 316, "NOT": [316, 320, 568], "sensit": [316, 548], "WITH": [316, 320], "conjunct": 316, "disjunct": 316, "OR": [316, 318, 320, 349, 556], "xor": [316, 320], "negat": [316, 320], "bitopr": 316, "scalar": [316, 414, 421], "listliter": 316, "fold": [316, 568, 587], "mapliter": 316, "elementid": [316, 320], "startnod": 316, "endnod": 316, "1287230400000": 316, "shortestpath": 316, "AS": [316, 318, 553, 557], "BY": [316, 318], "unfold": [316, 322, 347], "unset": 316, "invoc": 316, "interconnect": [317, 339, 406], "tcp": [317, 333], "empow": [317, 323, 340], "llm": 317, "sentenc": [317, 320, 322], "websocket": [318, 587], "worth": [318, 332, 410, 418, 556], "mutat": 318, "lambda": [318, 322, 404, 410, 416, 421, 492, 503, 505, 506, 507, 588], "groovi": 318, "currenttimemilli": [318, 569, 587], "expr": [318, 320, 322, 587], "secondari": 318, "rocksdb": [318, 569], "therein": 318, "council": [318, 344], "birthdai": [318, 335, 589], "differenti": 318, "123456": [318, 326, 341, 569], "hasid": 318, "secondli": [318, 343], "path_expand": 318, "concret": [318, 347, 348, 418], "endv": [318, 322, 340, 587], "path_opt": [318, 320, 322, 340, 587], "pathexpand": 318, "27": [318, 320, 322, 344, 406, 407, 409, 537], "hasstep": 318, "groupcount": [318, 587], "age_cnt": 318, "age_sum": 318, "scan": [318, 568], "propertyidvalu": 318, "moreov": [318, 320, 336, 340, 342, 568], "propertyidvalue1": 318, "propertyidvalue2": 318, "inE": [318, 410, 587], "worker_num": 318, "convers": [318, 404, 405, 565], "deal": [318, 335, 339, 408], "advis": 318, "prevent": [318, 434], "monopol": 318, "conquer": 319, "retain": [320, 497, 570], "meant": [320, 322], "vertexid": 320, "inject": 320, "edgeid": 320, "propertykei": 320, "accessor": 320, "eq": [320, 322, 340, 347, 587], "neq": [320, 587], "gt": [320, 322, 587], "lt": [320, 322, 587], "gte": [320, 322, 337, 583, 587], "lte": [320, 337, 583, 587], "outsid": [320, 587], "textp": [320, 587], "startingwith": [320, 587], "endingwith": [320, 587], "rko": 320, "ark": 320, "notstartingwith": [320, 587], "notendingwith": [320, 587], "notcontain": [320, 587], "unequ": 320, "nest": 320, "wheretravers": 320, "startkei": 320, "alter": [320, 556], "opposit": [320, 410, 484, 531], "nottravers": 320, "duplic": [320, 322, 483, 485, 487, 556, 557], "deduplabel": 320, "composit": [320, 322], "de": [320, 331], "impli": 320, "flat": 320, "br": 320, "selectkei": 320, "roll": [320, 322, 325], "accompani": 320, "aggregatefunc": 320, "emit": [320, 322, 404, 407, 410, 416, 588], "ascend": [320, 322], "asc": [320, 322], "toss": 320, "merg": [320, 410], "uniontravers": 320, "matchsent": 320, "binder": 320, "__": [320, 321, 322, 337, 410, 583, 587], "graphnam": 320, "unrol": 320, "linear": [320, 490, 492, 548, 568], "result_opt": [320, 322, 587], "all_v": [320, 322, 587], "lengthrang": 320, "keyvaluepair": 320, "trail": 320, "end_v": [320, 322, 587], "all_v_": 320, "vada": 320, "josh": 320, "29": [320, 322, 406, 407, 409], "lop": 320, "72057594037927939": 320, "rippl": 320, "72057594037927941": 320, "peter": 320, "ongo": 320, "liter": 320, "1l": 320, "0f": 320, "0d": 320, "2l": 320, "IN": [320, 338], "isnul": 320, "month": 320, "bitwis": 320, "startswith": 320, "ma": 320, "endswith": 320, "ko": 320, "substr": [320, 587], "preced": [320, 556, 569], "parenthes": 320, "unari": 320, "modulu": 320, "membership": [320, 556], "34": [320, 322, 344, 406, 407, 409, 549], "729": 320, "1225": 320, "841": 320, "alias": 320, "k1": 320, "k2": 320, "v2": [320, 322, 328, 340, 404, 534, 588], "simplepath": [320, 587], "imper": [320, 340], "reflect": [320, 568, 576], "sack": [320, 587], "guidanc": 321, "gremlinpython": [321, 569], "sy": [321, 416], "gremlin_python": [321, 569], "graph_travers": 321, "driver_remote_connect": 321, "driverremoteconnect": [321, 569], "remoteconn": [321, 569], "withremot": [321, 569], "oom": 321, "vast": 321, "mitig": 321, "risk": [321, 336], "queue": [321, 349], "graph_url": [321, 419, 569, 587], "stopiter": 321, "resultiterationbatchs": 321, "addcontactpoint": [321, 569], "resultset": [321, 569], "hasnext": 321, "dlcdn": 321, "your_endpoint_address": 321, "your_endpoint_port": 321, "classnam": [321, 587], "ser": [321, 587], "gryomessageserializerv1d0": [321, 587], "serializeresulttostr": [321, 587], "x": [321, 322, 333, 334, 344, 347, 404, 410, 416, 421, 459, 492, 500, 502, 503, 507, 531, 588], "realm": 322, "audit": 322, "toolsuit": 322, "primarili": [322, 340, 568], "simul": [322, 381, 416], "conclus": 322, "confid": 322, "intric": 322, "permit": [322, 556], "3k": 322, "gremlin_queri": 322, "190376": 322, "787074": 322, "sf1": 322, "432345564227583365": 322, "504403158265495622": 322, "576460752303435306": 322, "432345564227579434": 322, "hastyp": 322, "504403158265495612": 322, "144115188075855941": 322, "issubclassof": 322, "504403158265495553": 322, "confus": [322, 504, 505, 506], "mechan": [322, 338, 341, 343, 565, 573], "belong": [322, 341, 347, 348, 349, 418, 546, 549, 556, 562, 569], "distinguish": [322, 336, 404, 405, 406, 568], "worri": 322, "havelabel": 322, "216172782113783808": 322, "216172782113784710": 322, "label1": 322, "label2": 322, "forum": 322, "72057594037936036": 322, "360287970189718653": 322, "360287970189718655": 322, "joseph": 322, "firstnam": [322, 335, 567, 584, 589], "yacin": 322, "01t00": 322, "curiou": 322, "38416": 322, "pyplot": 322, "plt": 322, "comment_cont": 322, "comment_length": 322, "histogram": 322, "hist": [322, 430], "50": [322, 344, 503, 505, 506], "607c8e": 322, "grid": [322, 549], "axi": [322, 346, 347, 348, 363, 387, 416, 562], "xlabel": 322, "ylabel": 322, "gender": [322, 335, 589], "person_gend": 322, "male": 322, "femal": 322, "male_count": 322, "female_count": 322, "216172782113784483": 322, "around": [322, 419], "432345564227569033": 322, "288230376151712472": 322, "144115188075856168": 322, "144115188075860911": 322, "72057594037934114": 322, "hasmoder": 322, "studyat": 322, "workat": 322, "islocatedin": 322, "432345564227582847": 322, "hasinterest": 322, "504403158265496227": 322, "864691128455136658": 322, "1008806316530991636": 322, "360287970189645858": 322, "en": [322, 339, 347, 518, 522, 523, 524, 525, 527, 528, 529, 535, 536, 537, 538, 540, 541, 542, 543], "e1": 322, "citi": [322, 326, 339, 341], "ispartof": 322, "countri": 322, "288230376151711797": 322, "216172782113784555": 322, "14": [322, 344, 406, 407, 409, 461, 521, 529, 541, 556], "exactli": [322, 326, 340, 347, 421, 466, 475, 489, 534, 562, 569], "432345564227569357": 322, "432345564227570524": 322, "288230376151712984": 322, "144115188075861043": 322, "replyof": [322, 567, 584], "54336": 322, "33411": 322, "360287970189700805": 322, "59465": 322, "33403": 322, "awai": 322, "ineffect": 322, "illeg": 322, "simple_path": 322, "hascreat": 322, "nation": 322, "china": 322, "np": [322, 407, 410, 416, 420, 571], "market": 322, "japan": 322, "browsers_us": 322, "browser_list": 322, "firefox": 322, "safari": 322, "browser_count": 322, "autopct": 322, "1f": 322, "univers": [322, 336, 421, 454, 455, 502, 512, 544, 548], "person1": 322, "person2": 322, "university1": 322, "university2": 322, "216172782113784481": 322, "216172782113784279": 322, "144115188075858884": 322, "216172782113784361": 322, "216172782113784291": 322, "144115188075858879": 322, "216172782113784642": 322, "216172782113784473": 322, "216172782113784328": 322, "144115188075858700": 322, "216172782113784700": 322, "216172782113784331": 322, "144115188075860619": 322, "216172782113784375": 322, "216172782113784333": 322, "144115188075858813": 322, "216172782113784593": 322, "216172782113784688": 322, "144115188075860870": 322, "216172782113784047": 322, "216172782113784692": 322, "144115188075862429": 322, "23": [322, 406, 407, 409], "216172782113784192": 322, "216172782113784107": 322, "216172782113784171": 322, "regular": [322, 495, 500, 501, 502, 524, 529, 532, 537, 540, 541, 542, 543], "butterfli": 322, "notion": 322, "matchanalyticsalgorithm": 322, "matchoptimizationalgorithm": 322, "216172782113784587": 322, "216172782113784363": 322, "144115188075860919": 322, "216172782113784532": 322, "216172782113784400": 322, "144115188075861858": 322, "216172782113784491": 322, "216172782113784401": 322, "144115188075858086": 322, "216172782113784598": 322, "216172782113784629": 322, "144115188075858881": 322, "216172782113783931": 322, "216172782113784657": 322, "144115188075858708": 322, "pa": 322, "pb": 322, "216172782113783809": 322, "216172782113784011": 322, "360287970189640007": 322, "360287970189640008": 322, "360287970189640009": 322, "2012": [322, 515], "216172782113783812": 322, "216172782113783882": 322, "36": [322, 344, 406, 407, 409, 461, 541, 549, 581], "360287970189640010": 322, "37": [322, 344, 406, 407, 409, 421, 549, 581], "216172782113784105": 322, "38": [322, 344, 406, 407, 409, 549, 581], "41": [322, 344, 406, 407, 409, 496, 549], "43": [322, 406, 407, 409, 421, 523, 549, 579], "216172782113783814": 322, "216172782113783962": 322, "360287970189640135": 322, "52": [322, 549], "216172782113784199": 322, "54": [322, 344, 496, 549], "216172782113784038": 322, "216172782113783816": 322, "216172782113784144": 322, "175": 322, "360287970189640462": 322, "72057594037927936": 322, "144115188075855872": 322, "288230376151711744": 322, "432345564227567616": 322, "504403158265495555": 322, "india": 322, "hasmemb": 322, "8248": 322, "8101": 322, "imposs": 322, "2822": 322, "tag1": 322, "tag2": 322, "37164": 322, "432": 322, "property1": 322, "property2": 322, "lastnam": [322, 335, 567, 584, 589], "donati": 322, "luigi": 322, "hall": 322, "costa": 322, "carlo": 322, "khan": 322, "meera": 322, "mahinda": 322, "eli": 322, "94": 322, "228": [322, 344], "emb": [322, 404, 588], "dom": 322, "pedro": 322, "ii": 322, "condariuc": 322, "bonomi": 322, "anyth": 322, "david": [322, 457, 468, 533], "silva": 322, "guliyev": 322, "tagclass": 322, "504403158265495552": 322, "504403158265495554": 322, "504403158265495556": 322, "504403158265495557": 322, "504403158265495558": 322, "504403158265495559": 322, "504403158265495560": 322, "504403158265495561": 322, "504403158265495562": 322, "504403158265495563": 322, "504403158265495564": 322, "504403158265495565": 322, "504403158265495566": 322, "504403158265495567": 322, "504403158265495568": 322, "504403158265495569": 322, "504403158265495570": 322, "504403158265495571": 322, "504403158265495572": 322, "504403158265495573": 322, "504403158265495574": 322, "504403158265495575": 322, "504403158265495576": 322, "504403158265495577": 322, "504403158265495578": 322, "504403158265495579": 322, "504403158265495580": 322, "504403158265495581": 322, "504403158265495582": 322, "504403158265495583": 322, "504403158265495584": 322, "504403158265495585": 322, "504403158265495586": 322, "504403158265495587": 322, "504403158265495588": 322, "504403158265495589": 322, "504403158265495590": 322, "504403158265495591": 322, "504403158265495592": 322, "504403158265495593": 322, "504403158265495594": 322, "504403158265495595": 322, "504403158265495596": 322, "504403158265495597": 322, "504403158265495598": 322, "504403158265495599": 322, "504403158265495600": 322, "504403158265495601": 322, "504403158265495602": 322, "504403158265495603": 322, "504403158265495604": 322, "504403158265495605": 322, "504403158265495606": 322, "504403158265495607": 322, "504403158265495608": 322, "504403158265495609": 322, "504403158265495610": 322, "504403158265495611": 322, "504403158265495613": 322, "504403158265495614": 322, "504403158265495615": 322, "504403158265495616": 322, "504403158265495617": 322, "504403158265495618": 322, "504403158265495619": 322, "504403158265495620": 322, "504403158265495621": 322, "q4": 322, "690": 322, "134313148716225": 322, "216172782113783811": 322, "216172782113783813": 322, "216172782113784707": 322, "216172782113784708": 322, "216172782113784709": 322, "216172782113783910": 322, "216172782113784104": 322, "216172782113784207": 322, "216172782113784318": 322, "216172782113784305": 322, "216172782113784597": 322, "216172782113784693": 322, "216172782113784018": 322, "216172782113784092": 322, "216172782113784108": 322, "216172782113784161": 322, "216172782113784162": 322, "73": [322, 344, 502], "216172782113783875": 322, "216172782113783932": 322, "216172782113784057": 322, "216172782113784068": 322, "216172782113784065": 322, "216172782113784235": 322, "216172782113784247": 322, "meaning": [322, 335, 348, 418], "449": 322, "454": [322, 344], "216172782113783810": 322, "descend": [322, 550], "216172782113784082": 322, "216172782113784169": 322, "216172782113784267": 322, "216172782113784368": 322, "216172782113784376": 322, "216172782113783938": 322, "216172782113784405": 322, "216172782113783980": 322, "216172782113783844": 322, "216172782113783901": 322, "216172782113783935": 322, "216172782113784439": 322, "216172782113784315": 322, "216172782113784374": 322, "216172782113784601": 322, "216172782113784431": 322, "216172782113783815": 322, "216172782113783817": 322, "216172782113783971": 322, "216172782113784154": 322, "216172782113784381": 322, "216172782113783933": 322, "earlier": [322, 507, 569], "216172782113783819": 322, "216172782113783826": 322, "216172782113783836": 322, "query2": 322, "09": [322, 344], "07": [322, 331, 344, 475, 483], "hastag": 322, "count1": 322, "count2": 322, "jet_li": 322, "zhang_yim": 322, "faye_wong": 322, "tsui_hark": 322, "bruce_le": 322, "johnny_depp": 322, "tom_cruis": 322, "jackie_chan": 322, "query3": 322, "moder": 322, "infinit": [322, 517], "seriou": 322, "song": 322, "containerof": 322, "message_count": 322, "824633725780": 322, "08t02": 322, "334": [322, 344], "album": 322, "hao": 322, "wang": [322, 488, 490], "19791209300479": 322, "755914248304": 322, "02t20": 322, "03": [322, 344, 577], "344": 322, "wall": 322, "lin": 322, "lei": 322, "24189255811275": 322, "824633725045": 322, "03t18": 322, "633": 322, "893353201782": 322, "28t23": 322, "53": [322, 344, 549], "251": 322, "1030792152809": 322, "03t09": 322, "47": [322, 333, 334, 344, 406, 407, 409], "414": 322, "chen": 322, "32985348833887": 322, "07t07": 322, "038": 322, "zhang": [322, 579], "yang": [322, 579], "15393162789707": 322, "query4": 322, "membercount": 322, "country_count": 322, "personcount": 322, "72057594037932503": 322, "72057594037932473": 322, "72057594037932489": 322, "72057594037932494": 322, "72057594037932501": 322, "72057594037934803": 322, "72057594037934804": 322, "72057594037935005": 322, "72057594037928132": 322, "72057594037935879": 322, "288230376151711799": 322, "country_top100_forums_dict": 322, "personcountforum": 322, "72057594037935702": 322, "72057594037930685": 322, "72057594037932114": 322, "72057594037934231": 322, "72057594037935703": 322, "72057594037935730": 322, "72057594037935734": 322, "72057594037932509": 322, "72057594037935707": 322, "72057594037935708": 322, "72057594037935711": 322, "72057594037935714": 322, "72057594037935719": 322, "72057594037935729": 322, "72057594037935731": 322, "72057594037935724": 322, "72057594037929560": 322, "72057594037931546": 322, "72057594037931545": 322, "72057594037932479": 322, "72057594037932485": 322, "72057594037932505": 322, "72057594037932511": 322, "72057594037935710": 322, "72057594037935722": 322, "72057594037929246": 322, "72057594037928266": 322, "72057594037935713": 322, "72057594037934308": 322, "72057594037934313": 322, "72057594037934302": 322, "72057594037930430": 322, "72057594037934303": 322, "72057594037932482": 322, "72057594037935147": 322, "72057594037935148": 322, "72057594037935157": 322, "72057594037927973": 322, "72057594037929386": 322, "72057594037934315": 322, "72057594037935720": 322, "72057594037935015": 322, "72057594037934300": 322, "72057594037930861": 322, "72057594037934319": 322, "72057594037931542": 322, "72057594037929583": 322, "72057594037933324": 322, "72057594037929182": 322, "72057594037929739": 322, "72057594037934829": 322, "72057594037935658": 322, "72057594037935660": 322, "72057594037935674": 322, "72057594037935682": 322, "72057594037935683": 322, "72057594037935672": 322, "72057594037927978": 322, "72057594037935163": 322, "72057594037935014": 322, "72057594037931544": 322, "72057594037934297": 322, "72057594037927979": 322, "72057594037932474": 322, "72057594037934384": 322, "72057594037932639": 322, "72057594037934380": 322, "72057594037935146": 322, "72057594037935152": 322, "72057594037928134": 322, "72057594037928674": 322, "72057594037929248": 322, "72057594037931240": 322, "72057594037931247": 322, "72057594037931256": 322, "72057594037930958": 322, "72057594037930963": 322, "72057594037931259": 322, "72057594037931260": 322, "72057594037931262": 322, "72057594037929365": 322, "72057594037929419": 322, "72057594037929421": 322, "72057594037929431": 322, "72057594037929434": 322, "72057594037929437": 322, "72057594037929446": 322, "72057594037929447": 322, "72057594037929449": 322, "72057594037929450": 322, "72057594037935166": 322, "72057594037929519": 322, "72057594037929451": 322, "72057594037929452": 322, "72057594037935046": 322, "72057594037932339": 322, "72057594037932481": 322, "72057594037934294": 322, "72057594037932389": 322, "72057594037932976": 322, "72057594037930870": 322, "72057594037931266": 322, "72057594037928092": 322, "72057594037928495": 322, "72057594037929510": 322, "72057594037929517": 322, "72057594037929961": 322, "72057594037929965": 322, "72057594037930242": 322, "72057594037930248": 322, "72057594037930250": 322, "72057594037930313": 322, "72057594037931547": 322, "72057594037935686": 322, "72057594037929052": 322, "72057594037929053": 322, "72057594037929055": 322, "72057594037929057": 322, "72057594037929060": 322, "72057594037934811": 322, "72057594037934813": 322, "72057594037934816": 322, "72057594037934821": 322, "72057594037934822": 322, "72057594037934823": 322, "72057594037934828": 322, "72057594037934835": 322, "72057594037934837": 322, "72057594037934975": 322, "72057594037934976": 322, "72057594037935032": 322, "72057594037935038": 322, "72057594037935045": 322, "72057594037935664": 322, "72057594037935673": 322, "72057594037935678": 322, "72057594037935685": 322, "72057594037931549": 322, "72057594037931550": 322, "72057594037931552": 322, "72057594037931554": 322, "72057594037931557": 322, "72057594037931560": 322, "72057594037931566": 322, "72057594037935671": 322, "72057594037935670": 322, "72057594037934977": 322, "72057594037931543": 322, "72057594037929518": 322, "72057594037935679": 322, "72057594037931575": 322, "72057594037932438": 322, "72057594037932878": 322, "72057594037932886": 322, "72057594037932888": 322, "72057594037927982": 322, "72057594037930526": 322, "72057594037930535": 322, "72057594037930546": 322, "72057594037930976": 322, "72057594037930536": 322, "72057594037931358": 322, "72057594037930366": 322, "72057594037931574": 322, "72057594037932435": 322, "72057594037935020": 322, "72057594037935864": 322, "72057594037933861": 322, "72057594037932440": 322, "72057594037927981": 322, "72057594037931349": 322, "72057594037931366": 322, "72057594037932885": 322, "72057594037927980": 322, "72057594037930529": 322, "72057594037930532": 322, "72057594037931304": 322, "72057594037932433": 322, "72057594037932441": 322, "72057594037934547": 322, "query11": 322, "live": 322, "startdat": 322, "enddat": 322, "216172782113784091": 322, "216172782113784250": 322, "216172782113784403": 322, "216172782113784537": 322, "216172782113784122": 322, "query14": 322, "country1": 322, "country2": 322, "subscor": 322, "award": [322, 579], "chile": 322, "p1": 322, "p2": 322, "case1": 322, "case2": 322, "case3": 322, "case4": 322, "216172782113784153": 322, "216172782113784100": 322, "216172782113783956": 322, "216172782113784673": 322, "216172782113784252": 322, "216172782113784263": 322, "216172782113784193": 322, "216172782113784242": 322, "216172782113784623": 322, "216172782113784498": 322, "216172782113784251": 322, "216172782113784538": 322, "216172782113784167": 322, "216172782113783864": 322, "216172782113784613": 322, "216172782113784116": 322, "faq": 323, "paral": 323, "javasdk": [324, 573], "transit": [325, 525, 553], "magnitud": [325, 338], "superior": [325, 337, 339, 343], "rich": [325, 336, 339, 341, 406, 408], "neg": [325, 326, 404, 408, 410, 412, 416, 421, 440, 518], "gsl": [325, 326, 336, 406, 407, 408, 409, 413, 420], "gat": [325, 341, 404, 412, 588], "deepwalk": [325, 404, 588], "trans": [325, 404, 588], "pyg": [325, 326, 329, 330, 341, 342, 343], "flexibli": [325, 336, 341, 343], "pytorch": [325, 326, 333, 336, 341, 410, 412], "onlin": [325, 338, 341, 342, 565, 569], "fed": [325, 337, 341], "ek": 325, "aw": [325, 344, 580], "ack": 325, "failov": [325, 343], "concentr": [325, 343, 460], "industri": [326, 336, 341, 343, 344], "feasibl": [326, 341], "preprocess": [326, 416], "uniformli": [326, 493, 494, 495, 503, 504, 505, 506, 507, 551], "lookup": [326, 341, 416, 556], "topolog": [326, 406], "nn": [326, 328, 331, 332, 333, 334, 337, 341, 347, 404, 416, 583, 588], "ego": [326, 341, 412, 557, 588], "dimension": [326, 332, 337, 341, 405, 407, 408], "conv": [326, 329, 341], "edge_index": [326, 329, 333, 334], "carri": 326, "predict": [326, 332, 336, 337, 341], "asynchron": 326, "tensor": [326, 329, 346, 347, 348, 387, 404, 408, 412, 414, 560, 562], "plaintext": 326, "clearli": [326, 341], "dimens": [326, 328, 331, 332, 337, 341, 405, 503, 504, 505, 506, 548, 583], "batchgraph": 326, "mini": [326, 341], "loss": [326, 328, 331, 332, 333, 334, 337, 341, 416, 583, 588], "mind": 326, "classif": [326, 330, 337, 341, 345, 404, 405, 416], "trainer": [326, 328, 331, 332, 337, 404, 583, 588], "hk": 327, "rm": [327, 416], "4g": 327, "aarch64": 328, "processor": 328, "egographsag": [328, 331, 337, 583], "349": [328, 332, 337, 583], "venu": [328, 337], "www": [328, 331, 332, 337, 421, 475, 529, 538, 541, 569, 583], "tf": [328, 329, 331, 332, 337, 404, 405, 410, 411, 416, 583, 588], "disable_v2_behavior": [328, 331, 332, 337, 583], "importerror": [328, 331, 332, 337, 583], "load_ogbn_mag": [328, 331, 332, 335, 337, 583, 589], "egosagesuperviseddataload": [328, 332, 337, 583], "localtrain": [328, 331, 332, 337, 583], "node_typ": [328, 331, 332, 337, 404, 406, 407, 410, 413, 416, 420, 583, 588], "class_num": [328, 332, 337, 404, 583, 588], "features_num": [328, 331, 332, 337, 404, 583, 588], "hops_num": [328, 332, 337, 404, 583, 588], "nbrs_num": [328, 331, 332, 337, 583], "epoch": [328, 329, 331, 332, 333, 334, 337, 404, 409, 567, 583, 588], "hidden_dim": [328, 331, 332, 337, 404, 416, 583, 588], "256": [328, 332, 333, 334, 337, 344, 485, 545, 569, 583], "in_drop_r": [328, 332, 337, 583], "learning_r": [328, 331, 332, 337, 416, 583], "reset_default_tf_graph": [328, 332, 337, 583], "act_func": [328, 332, 337, 583], "relu": [328, 332, 337, 583], "dropout": [328, 331, 332, 337, 416, 583], "train_data": [328, 331, 332, 337, 583], "mask": [328, 332, 337, 420, 583], "train_embed": [328, 332, 337, 583], "src_ego": [328, 331, 332, 337, 583], "train_label": [328, 332, 337, 583], "reduce_mean": [328, 332, 337, 404, 416, 583, 588], "sparse_softmax_cross_entropy_with_logit": [328, 332, 337, 404, 416, 583, 588], "logit": [328, 332, 337, 416, 583], "adamoptim": [328, 331, 332, 337, 416, 583], "test_embed": [328, 332, 337, 583], "test_label": [328, 332, 337, 583], "test_indic": [328, 332, 337, 583], "argmax": [328, 332, 333, 334, 337, 583], "output_typ": [328, 332, 337, 391, 560, 583], "test_acc": [328, 332, 333, 334, 337, 583], "div": [328, 332, 337, 583], "reduce_sum": [328, 332, 337, 583], "float32": [328, 332, 333, 334, 337, 407, 416, 583], "obgn": [328, 332], "mag": [328, 332, 337, 583], "paper_featur": [328, 337, 583], "feat_": [328, 331, 332, 333, 334, 337, 583], "128": [328, 331, 332, 333, 334, 337, 416, 583], "lg": [328, 331, 332, 337, 399, 563, 577, 583], "cite": [328, 331, 332, 337, 583], "gen_label": [328, 331, 332, 337, 399, 563, 583], "val": [328, 331, 332, 337, 404, 420, 563, 583, 588], "85": [328, 331, 332, 337, 344, 347, 563, 583], "seed": [329, 404, 412, 416, 475, 478, 479, 480, 481, 483, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 503, 504, 505, 506, 507, 510, 511, 512, 513, 516, 548, 551, 553], "sampler": [329, 331, 409, 412, 414], "perceptu": 329, "unsupervis": [329, 331, 345, 404, 410, 412, 413, 563], "putback": 329, "outofrangeerror": [329, 409, 410, 416], "evolv": [329, 336, 569], "neighborsampl": [329, 408], "edge_weight": [329, 408, 410], "random_with_replac": 329, "topk": [329, 408, 410], "pad": [329, 408], "expand_factor": [329, 408, 413], "sparsenod": [329, 407, 408, 410], "sparseedg": [329, 407, 408, 410], "layer1": [329, 408], "layer2": [329, 408], "neighbor_sampl": [329, 408], "bui": [329, 336, 407, 408, 409, 410, 413, 416], "i2i": [329, 408, 410], "layer_nod": [329, 408], "int_attr": [329, 407, 408, 409, 413, 416], "layer_edg": [329, 408], "float_attr": [329, 407, 408, 409, 413, 416], "egograph": [329, 341, 404, 412, 588], "negativesampl": [329, 413], "node_weight": [329, 410, 413], "edge_sampl": [329, 409, 413], "negative_sampl": [329, 404, 413, 588], "neg_nod": [329, 413], "heterogen": [329, 332, 337, 339, 341, 405, 406, 407, 408, 410], "randomli": [329, 410, 475, 481, 485, 487, 496, 498, 503, 506, 511, 553], "outv": [329, 404, 408, 410, 416, 587, 588], "overs": 329, "citat": [330, 332, 333, 334, 337, 345, 416, 583], "revisit": [330, 331, 345], "ho2": 330, "with_dataset": [331, 333, 403, 563, 589], "k8s_service_typ": [331, 333, 403, 563, 583], "loadbalanc": [331, 563, 583], "k8s_image_pull_polici": [331, 333, 403, 563], "cell": [331, 549], "metainfo": 331, "obgn_mag": 331, "ogbn_mag_smal": [331, 335, 583, 589], "chose": [331, 332], "i_featur": [331, 332], "argpars": [331, 333], "tfg": 331, "egosageunsuperviseddataload": 331, "parse_arg": [331, 333], "argumentpars": [331, 333], "egosag": 331, "add_argu": [331, 333], "output_dim": [331, 404, 588], "neg_num": 331, "0001": 331, "agg_typ": 331, "drop_out": 331, "neg_sampl": 331, "temperatur": 331, "dim": [331, 333, 334, 503, 504, 505, 506], "src_emb": [331, 404, 588], "dst_emb": 331, "dst_ego": 331, "neg_dst_emb": 331, "neg_dst_ego": 331, "unsupervised_softmax_cross_entropy_loss": 331, "ogbn": [332, 333, 334, 337, 583], "microsoft": [332, 337, 583], "institut": [332, 337, 583], "accomplish": [332, 337, 475], "word2vec": [332, 337, 583], "load_ogbn_arxiv": [333, 334], "num_server_nod": 333, "num_client_nod": 333, "ogbn_arxiv": [333, 334], "8gi": 333, "ifnotpres": [333, 563], "0a20240115": 333, "glt_graph": [333, 334], "graphlearn_torch": [333, 334], "node_featur": [333, 334], "node_label": [333, 334, 563], "edge_dir": [333, 334], "random_node_split": [333, 334], "num_val": [333, 334], "num_test": [333, 334], "num_client": [333, 334], "manifest_path": 333, "client_folder_path": 333, "kubeflow": [333, 415], "pytorchjob": 333, "torch": [333, 334], "pytorchreplicaspec": 333, "restartpolici": 333, "onfailur": 333, "imagepullpolici": 333, "node_rank": 333, "master_addr": [333, 334], "volumemount": 333, "emptydir": 333, "medium": 333, "sizelimit": 333, "num_worker_replica": 333, "my_pod_nam": 333, "group_mast": 333, "valuefrom": 333, "fieldref": 333, "fieldpath": 333, "distributeddataparallel": 333, "torch_geometr": [333, 334], "glt": [333, 334], "gl_torch_graph": 333, "gltorchgraph": 333, "no_grad": [333, 334], "test_load": [333, 334], "dataset_nam": [333, 334], "eval": [333, 334, 560], "y_true": [333, 334], "enumer": [333, 334, 346], "devic": [333, 334, 344], "del": [333, 334, 418, 556], "y_pred": [333, 334], "keepdim": [333, 334], "run_client_proc": 333, "num_serv": [333, 334], "client_rank": [333, 334], "server_rank_list": 333, "training_pg_master_port": 333, "init_cli": [333, 334], "master_port": [333, 334], "server_client_master_port": [333, 334], "num_rpc_thread": [333, 334], "client_group_nam": 333, "k8s_glt_client": 333, "is_dynam": [333, 334], "current_ctx": 333, "get_context": 333, "init_process_group": 333, "gloo": 333, "world_siz": 333, "init_method": 333, "train_load": [333, 334], "distneighborload": [333, 334], "num_neighbor": [333, 334], "input_nod": [333, 334], "collect_featur": [333, 334], "to_devic": [333, 334], "worker_opt": [333, 334], "remotedistsamplingworkeropt": [333, 334], "server_rank": 333, "worker_devic": [333, 334], "worker_concurr": [333, 334], "buffer_s": [333, 334], "256mb": 333, "prefetch_s": [333, 334], "workload_typ": [333, 334], "in_channel": [333, 334], "hidden_channel": [333, 334], "num_lay": [333, 334], "out_channel": [333, 334], "device_id": 333, "adam": [333, 334], "lr": [333, 334], "001": 333, "arxiv": [333, 334, 421, 464, 479, 480, 481, 495, 548], "zero_grad": [333, 334], "log_softmax": [333, 334], "nll_loss": [333, 334], "backward": [333, 334, 341, 410, 507, 563], "03d": [333, 334], "04f": 333, "4f": [333, 334], "shutdown_cli": [333, 334], "__name__": [333, 416], "__main__": [333, 416], "supervis": [333, 337, 345, 405, 408, 416, 563, 583], "sage": 333, "9997": 333, "train_loader_master_port": 333, "9998": 333, "test_loader_master_port": 333, "9999": 333, "9001": 333, "9002": 333, "9003": 333, "9004": 333, "k8s_launch": 333, "ogb": 334, "nodeproppr": 334, "unsqueez": 334, "acc": 334, "512": [334, 410], "1gb": 334, "shut": 334, "trivial": [335, 343, 472], "bucket": [335, 563, 579], "_e": [335, 418, 565, 589], "ldbc_sampl": [335, 569, 587, 589], "person_0_0": [335, 569, 584, 589], "didn": [335, 344], "person_knows_person_0_0": [335, 569, 584, 589], "comment_0_0": [335, 584, 589], "person_likes_comment_0_0": [335, 589], "unseen": [335, 341, 571], "person_likes_post_0_0": [335, 589], "post_0_0": [335, 589], "ndarrai": [335, 348, 363, 374, 407, 408, 410, 413, 418, 420, 556, 589], "comment_replyof_comment_0_0": [335, 584, 589], "col_0": [335, 589], "col_1": [335, 589], "coo": [335, 567, 589], "array_v": [335, 589], "col": [335, 589], "array_": [335, 589], "s3": [335, 418, 589], "hood": 335, "distributedli": [335, 406, 412, 414, 415, 416], "fsspec": [335, 589], "kwarg": [335, 347, 348, 355, 366, 378, 382, 383, 400, 403, 413, 418, 419, 420, 563], "ds1": [335, 589], "datafil": [335, 589], "ds2": [335, 589], "graphscope_bucket": [335, 589], "ds3": [335, 589], "9000": [335, 569, 589], "extra_conf": [335, 589], "conf1": [335, 589], "d34": [335, 589], "client_kwarg": [335, 589], "region_nam": [335, 589], "east": [335, 589], "ossf": [335, 589], "subclass": [335, 346, 556], "abstractfilesystem": [335, 589], "abstractbufferfil": 335, "_upload_chunk": [335, 589], "_initiate_upload": [335, 589], "_fetch_rang": [335, 589], "register_implement": [335, 589], "protocol_nam": [335, 589], "protocol_file_system": [335, 589], "direction": 335, "exce": [335, 514, 515], "super": [335, 347, 406, 410], "modular": [336, 548], "seller": 336, "buyer": [336, 340], "fraudul": 336, "sell": 336, "suspici": 336, "fraud": [336, 343], "feed": [336, 399, 404, 407, 410, 416, 420, 563, 588], "webui": 336, "necessit": 336, "diversifi": 336, "ingest": [336, 569], "rapid": 336, "analyst": 336, "resembl": [336, 548, 553, 555], "olap": 336, "gen": [336, 410], "dataflow": [336, 338], "arriv": 336, "financi": 336, "billion": [336, 339, 343], "preval": 336, "miniconda": 337, "scientif": 337, "field_of_studi": [337, 583], "subject": 337, "4307": [337, 583], "with_cyph": [337, 563], "n1": 337, "n2": 337, "proven": 337, "2014": [337, 421, 583], "2020": [337, 583], "ret1": [337, 583], "k_core": [337, 347, 421, 557, 579, 583], "ret2": [337, 583], "kcore": [337, 583], "downstream": [337, 410], "train_sag": 337, "130": [337, 583], "effortlessli": 337, "conduit": 337, "simultan": [337, 343, 565], "icde2023": 338, "sigmod2017": [338, 579, 585], "gra": 338, "ph": 338, "arallel": 338, "ngine": 338, "opensourc": 338, "raph": 338, "nalysi": 338, "elat": 338, "ransact": 338, "loos": [338, 343, 565], "mysql": [338, 565], "nutshel": [338, 565], "exploit": [338, 565], "ahead": [338, 565], "wal": [338, 565], "etriev": 338, "terfac": 338, "portabl": [338, 568], "rust": [338, 568, 569], "handler": [338, 563], "chive": 338, "guardian": 338, "galaxi": 338, "steal": 338, "tackl": [338, 339], "imbal": 338, "nvlink": 338, "acut": 338, "asymmetr": 338, "innov": 338, "speedup": 338, "cncf": 338, "sandbox": 338, "soon": [338, 342, 343, 344, 407], "amplifi": 338, "sophist": 338, "dissoci": 338, "ly": 338, "dag": [338, 347, 348, 366, 418, 556, 560, 563], "laptop": 338, "loop": [338, 421, 431, 444, 483, 485, 487, 489, 495, 503, 504, 505, 506, 507, 513, 516, 556, 557, 587], "correl": [338, 421], "subtask": 338, "earli": 338, "nsdi": [338, 585], "legaci": 338, "interchang": 338, "memoiz": 338, "vldb2021": 338, "artial": 338, "ncrement": 338, "transport": 339, "protein": [339, 497], "uncov": 339, "vari": [339, 405], "unless": [339, 408, 556], "discov": 339, "discoveri": [339, 341, 563, 569], "rough": 339, "accordingli": [339, 396], "snap": 339, "stanford": [339, 547], "cs224w": 339, "constitu": 339, "bellman": [339, 421], "ford": [339, 421], "wiki": [339, 347, 518, 522, 523, 524, 525, 527, 528, 529, 535, 536, 537, 538, 540, 541, 542, 543], "s_algorithm": 339, "towardsdatasci": 339, "9bd8951e7da": 339, "road": [339, 571], "logist": 339, "deliveri": 339, "media": 339, "nontrivi": [339, 528], "steep": 339, "sought": 339, "monei": [340, 343], "launder": [340, 343], "exact": [340, 485, 487, 583], "exclud": 340, "heurist": [340, 483], "purchas": 340, "bolder": 340, "border": 340, "sens": [340, 548, 563], "embrac": 340, "grasp": 340, "drug": 341, "likelihood": 341, "biologi": 341, "valuabl": 341, "bioinformat": 341, "chemic": 341, "promis": 341, "driven": [341, 548, 568], "carefulli": 341, "rewind": 341, "stack": 341, "convolut": [341, 412], "weigh": 341, "choic": [341, 568, 569], "huge": [341, 571], "gradient": 341, "recal": 341, "f1": [341, 418], "irregular": 341, "unstructur": 341, "pool": 341, "hardwar": [341, 572], "undergo": 341, "perceiv": 341, "maxgraph": [342, 585], "2x": 342, "elast": [342, 569], "encrypt": 342, "geminigraph": [343, 344], "plato": [343, 344], "empir": 343, "enjoi": 343, "janusgraph": 343, "nebula": 343, "relaunch": [343, 569], "recoveri": 343, "coars": 343, "grain": 343, "invest": 343, "trace": [343, 347], "dgl": 343, "nebular": 343, "movement": [343, 410], "grade": 344, "r6": 344, "8xlarg": 344, "alibabacloud": 344, "ec": 344, "xl": 344, "a038f97": 344, "170e7d3": 344, "21009d6": 344, "v4": 344, "mpich": 344, "fair": 344, "huge_pag": 344, "jemalloc": 344, "o3": 344, "determinist": [344, 349, 563, 569], "cdlp": [344, 347, 579], "load_direct": 344, "load_undirected_from_direct": 344, "reformat": 344, "mark": [344, 421], "datagen": 344, "9_0": 344, "fb": 344, "62": 344, "9_1": 344, "78": [344, 475, 549], "9_2": 344, "zf": 344, "88": [344, 488, 490], "60": [344, 421, 549, 569], "61": 344, "176": [344, 512], "graph500": 344, "71": [344, 421, 493, 497, 503], "79": [344, 488, 490], "friendster": 344, "97": 344, "39": [344, 406, 407, 409, 421, 549, 579, 581], "86": 344, "57": 344, "126": [344, 489], "98": 344, "83": 344, "66": 344, "1695": 344, "2742": 344, "3600": 344, "425": 344, "55": [344, 455], "lcc": 344, "521": 344, "51": [344, 549], "296": 344, "1859": 344, "201": [344, 552], "842": 344, "68": 344, "competitor": 344, "pagerank_loc": 344, "65": 344, "72": 344, "84": 344, "63": [344, 492, 494], "gunrock": 344, "0c9a96": 344, "grout": 344, "5ce160": 344, "v7": 344, "v10": 344, "gn6v": 344, "c8g1": 344, "16xlarg": 344, "8x": 344, "16gb": 344, "nvidia": 344, "v100": 344, "gb": 344, "soc": [344, 476, 477], "livejournal1": 344, "89": 344, "9345": 344, "215": [344, 545], "560": 344, "3029": 344, "129": [344, 511], "389": 344, "155": 344, "0549": 344, "sinaweibo": 344, "168": 344, "1649": 344, "647": 344, "orkut": 344, "121": 344, "193": 344, "658": 344, "3201": 344, "7677": 344, "137": [344, 483], "2139": 344, "319": 344, "261": 344, "69": [344, 543, 549], "235": 344, "567": 344, "283": 344, "073": 344, "6619": 344, "45": [344, 406, 407, 409, 485], "150": 344, "87299": 344, "162": 344, "60403": 344, "9676": 344, "141": 344, "347": 344, "7772": 344, "0118": 344, "306": 344, "8618": 344, "9134": 344, "467": 344, "60801": 344, "8666": 344, "3501": 344, "870": 344, "6451": 344, "198": 344, "829": 344, "5036": 344, "229": 344, "024": 344, "483": 344, "178": 344, "5593": 344, "807": 344, "367": 344, "6946": 344, "2339": 344, "jupyt": [345, 563], "notebook": [345, 563], "jupyterlab": 345, "playground": [345, 590], "bipartit": [345, 404, 406, 462, 510, 511, 512, 544, 588], "grapeengin": 346, "vineyardserv": 346, "grapeinst": 346, "graphscopeserv": 346, "inlin": 346, "dag_fil": 346, "dagfil": 346, "rundagfil": 346, "subscrib": 346, "charg": 346, "commspec": [346, 565, 568, 570], "comm_spec": [346, 565, 568, 570], "vineyard_socket": 346, "bl": 346, "dispatchresult": 346, "onrec": 346, "commanddetail": 346, "gsobject": 346, "objectmanag": 346, "appentri": 346, "icontextwrapp": 346, "ifragmentwrapp": 346, "projector": 346, "propertygraphutil": 346, "objecttyp": 346, "putobject": 346, "obj": 346, "removeobject": 346, "getobject": [346, 569, 570], "hasobject": 346, "analyticalserv": 346, "startserv": 346, "stopserv": 346, "engineconfig": 346, "tojsonstr": 346, "vineyard_rpc_endpoint": 346, "enable_java_sdk": 346, "setcommand": 346, "enum": 346, "aggregatepolici": 346, "kpickfirst": 346, "kpickfirstnonempti": 346, "krequireconsist": 346, "kconcat": 346, "kpickfirstnonemptygraphdef": 346, "kmergegraphdef": 346, "worker_id": 346, "error_cod": 346, "set_error": 346, "has_large_data": 346, "set_graph_def": 346, "graphdefpb": 346, "graph_def": 346, "set_data": 346, "large_data": 346, "inarch": 346, "arc": 346, "aggregate_polici": 346, "fragmentwrapp": 346, "addcolumn": 346, "vdata_t": 346, "edata_t": 346, "arrowvertexmap": 346, "internaltyp": 346, "arrowprojectedfragmentbas": 346, "bareregist": 346, "internal_oid_t": 346, "property_graph_typ": 346, "eid_typ": 346, "vertexrang": [346, 349], "inner_vertices_t": 346, "outer_vertices_t": 346, "vertices_t": 346, "sub_vertices_t": 346, "nbr_t": 346, "arrow_projected_fragment_impl": 346, "compact_nbr_t": 346, "compactnbr": 346, "nbrunit": 346, "compact_adj_list_t": 346, "compactadjlist": 346, "const_adj_list_t": 346, "const_compact_adj_list_t": 346, "property_vertex_map_t": 346, "arrowprojectedvertexmap": 346, "label_id_typ": 346, "prop_id_typ": 346, "property_graph_t": 346, "eid_array_t": 346, "data_t": 346, "inner_vertex_array_t": 346, "outer_vertex_array_t": 346, "objectmeta": 346, "preparetorunapp": 346, "prepareconf": 346, "fnum": [346, 349], "vertex_prop_id": 346, "edge_prop_id": 346, "mirrorvertic": 346, "getid": 346, "getinternalid": 346, "getfragid": 346, "typedarrai": 346, "value_typ": 346, "gid2vertex": 346, "vertex2gid": 346, "getinnerverticesnum": 346, "getouterverticesnum": 346, "getverticesnum": 346, "getedgenum": [346, 570], "getinedgenum": [346, 570], "getoutedgenum": [346, 570], "getoutgoingedgenum": 346, "getincomingedgenum": 346, "gettotalverticesnum": 346, "isinnervertex": 346, "getoutervertex": 346, "getinnervertexid": 346, "getinnervertexinternalid": 346, "getoutervertexid": 346, "getoutervertexinternalid": 346, "gid2oid": 346, "oid2gid": 346, "innervertexgid2vertex": 346, "outervertexgid2vertex": 346, "getoutervertexgid": 346, "getinnervertexgid": 346, "compact_": 346, "enable_if": 346, "getincominginnervertexadjlist": 346, "getoutgoinginnervertexadjlist": 346, "getincomingoutervertexadjlist": 346, "getoutgoingoutervertexadjlist": 346, "src_fid": 346, "dst_fid": 346, "getlocaloutdegre": 346, "getlocalindegre": 346, "destlist": 346, "iedest": 346, "iedestss": 346, "oedest": 346, "oedestss": 346, "ioedest": 346, "ioedestss": 346, "getvertexmap": 346, "get_out_edges_ptr": 346, "get_in_edges_ptr": 346, "get_oe_offsets_begin_ptr": 346, "get_oe_offsets_end_ptr": 346, "get_ie_offsets_begin_ptr": 346, "get_ie_offsets_end_ptr": 346, "get_edata_array_accessor": 346, "get_vdata_array_accessor": 346, "get_arrow_frag": 346, "vertex_map_id": 346, "local_vertex_map": [346, 570], "getoid": 346, "getgid": 346, "offset2lid": 346, "getoffsetfromlid": 346, "getlidfromgid": 346, "getfidfromgid": 346, "oid_t_": 346, "vid_t_": 346, "arrowfragmentload": 346, "efil": [346, 570], "vfile": [346, 570], "graph_info": 346, "leaf": [346, 348, 393, 421, 466, 550], "table_vec_t": 346, "loadvertexedget": 346, "loadvertext": 346, "loadedget": 346, "loadfrag": 346, "loadfragmentasfragmentgroup": 346, "addlabelstofrag": 346, "frag_id": [346, 565, 570], "adddatatoexistedvlabel": 346, "adddatatoexistedelabel": 346, "addlabelstofragmentasfragmentgroup": 346, "extendlabeldata": 346, "extend_typ": 346, "initpartition": 346, "doxygenclass": 346, "arrowfragmentappend": 346, "doxygen": 346, "runner": [346, 579], "_build": 346, "appbas": 346, "defaultmessagemanag": 346, "need_split_edg": 346, "konlyout": 346, "propertyappbas": 346, "propertymessagemanag": 346, "propertyautoappbas": 346, "propertyautomessagemanag": 346, "app_t": 346, "defaultwork": 346, "parallelenginespec": 346, "pe_spec": 346, "defaultparallelenginespec": 346, "getcontext": 346, "ostream": 346, "parallelpropertywork": 346, "parallelpropertymessagemanag": 346, "propertyautowork": 346, "pointer": 346, "appfram": 346, "creatework": 346, "deletework": 346, "lib_path": 346, "worker_handl": 346, "queryarg": 346, "query_arg": [346, 391, 560], "context_kei": 346, "frag_wrapp": 346, "functiontyp": 346, "argsnum": 346, "argsunpack": 346, "datatyp": 346, "argtypeat": 346, "defaultpropertywork": 346, "ctx_t": 346, "ctxwrapperbuild": 346, "contextwrapp": 346, "vertexpropertycontext": [346, 579], "contextbas": 346, "labeledvertexdatacontext": 346, "contextdatatyp": 346, "icolumn": 346, "get_column": 346, "get_typed_column": 346, "vertex_properti": [346, 347, 349], "properties_map": 346, "vertexdatacontextwrapp": 346, "ivertexdatacontextwrapp": 346, "fragment_wrapp": 346, "unique_ptr": 346, "tondarrai": 346, "todatafram": 346, "tovineyardtensor": 346, "tovineyarddatafram": 346, "toarrowarrai": 346, "tensorcontext": [346, 348], "set_shap": 346, "tensor_t": 346, "tensorcontextwrapp": 346, "itensorcontextwrapp": 346, "cmake_extra_opt": 347, "asset": 347, "labeled_vertex_data": 347, "dynamic_vertex_data": 347, "labeled_vertex_properti": 347, "cpp_pregel": 347, "cython_pi": 347, "cython_pregel": 347, "appdagnod": [347, 382, 388], "bytesio": [347, 355], "is_compat": 347, "graphdagnod": [347, 359, 373, 374, 390, 397, 399, 418, 419, 563], "invalidargumenterror": [347, 563], "scannererror": 347, "incorrect": 347, "signatur": [347, 410, 556], "full_jar_path": [347, 579], "java_app_class": [347, 579], "neccessari": 347, "resouc": 347, "__call__": 347, "qualifi": [347, 579], "app_asset": [347, 359, 365], "app_nod": 347, "__del__": 347, "unload": [347, 370, 388, 390], "attribute_assortativity_coeffici": [347, 579], "assort": 347, "ref": [347, 568], "joint": [347, 513, 514, 515, 516, 557], "newman": [347, 421, 485, 487, 548], "026126": 347, "2003": [347, 421, 478, 485, 496, 504], "numeric_assortativity_coeffici": [347, 579], "analog": 347, "k_": [347, 457, 521], "rac": 347, "s_i": 347, "sum_": [347, 421, 489], "w_": [347, 421, 489], "ij": [347, 421], "k_j": 347, "valueerror": [347, 403, 418, 421, 495, 552, 563], "barrat": 347, "barth\u00e9lemi": 347, "pastor": 347, "satorra": 347, "vespignani": 347, "pna": 347, "3747": 347, "3752": 347, "2004": [347, 510], "average_shortest_path_length": [347, 421, 557, 579], "frac": [347, 421, 431, 489], "vertexdatacontextdagnod": [347, 348], "avg_clust": [347, 579], "degree_threshold": 347, "threshold": [347, 503, 504, 505, 506], "1e9": 347, "unweight": [347, 421], "foster": 347, "grassberg": 347, "paczuski": 347, "107": [347, 509], "10815": 347, "1e": [347, 416, 421, 475], "06": [347, 421], "html": [347, 421, 505, 508, 517, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 536, 538], "gv": 347, "hits_algorithm": 347, "vertexpropertycontextdagnod": [347, 348], "is_simple_path": [347, 579], "nonempti": 347, "biject": [347, 551], "smallest": [347, 508, 528, 538], "pairwis": 347, "k_shell": [347, 579], "katz_centrality_numpi": [347, 421], "auttenu": 347, "maximun": 347, "min_progress": 347, "progress_tri": 347, "progress": [347, 500], "met": 347, "blondel": 347, "et": [347, 553], "al": [347, 553], "stat": [347, 503, 505], "mech": 347, "10008": 347, "2008": [347, 475, 498], "sotera": 347, "lpa_u2i": [347, 579], "labeledvertexpropertycontextdagnod": [347, 348], "pagerank_nx": [347, 579], "max_it": [347, 421, 475], "tol": [347, 421, 475], "solver": 347, "voterank": [347, 579], "unsign": [347, 569], "basecontextdagnod": [348, 418], "bound_app": [348, 365], "contextdagnod": 348, "to_vineyard_tensor": [348, 562, 579], "to_vineyard_datafram": [348, 562, 579], "lazi": [348, 418, 563], "sg": 348, "resultdagnod": [348, 383], "r4": [348, 571], "62586": 348, "alphabet": [348, 562], "tensorcontextdagnod": 348, "quer": 348, "labeledvertexdatacontextdagnod": 348, "column_nam": [348, 562], "labeld": 348, "context_nod": 348, "result_schema": 348, "dynamicvertexdatacontext": 348, "dag_nod": 348, "edge_label_id": 349, "edge_label_nam": 349, "incoming_edg": 349, "register_aggreg": 349, "pregelaggregatortyp": 349, "aggr_typ": 349, "get_aggregated_valu": 349, "get_total_vertices_num": 349, "vertex_property_num": 349, "vertex_label_nam": 349, "vertex_label_id": 349, "edge_property_num": 349, "get_vertex_label_by_id": 349, "get_vertex_label_id_by_nam": 349, "get_edge_label_by_id": 349, "get_edge_label_id_by_nam": 349, "edge_properti": 349, "get_vertex_property_id_by_nam": 349, "vertex_property_nam": [349, 568], "get_vertex_property_by_id": 349, "vertex_property_id": 349, "get_edge_property_id_by_nam": 349, "edge_property_nam": 349, "get_edge_property_by_id": 349, "edge_property_id": 349, "kboolandaggreg": 349, "kbooloraggreg": 349, "kbooloverwriteaggreg": 349, "overwritten": 349, "kdoubleminaggreg": 349, "kdoublemaxaggreg": 349, "kdoublesumaggreg": 349, "kdoubleproductaggreg": 349, "kdoubleoverwriteaggreg": 349, "kint64minaggreg": 349, "kint64maxaggreg": 349, "kint64sumaggreg": 349, "kint64productaggreg": 349, "kint64overwriteaggreg": 349, "ktextappendaggreg": 349, "kalongoutgoingedgetooutervertex": 349, "kalongincomingedgetooutervertex": 349, "kalongedgetooutervertex": 349, "get_total_nodes_num": 349, "get_nodes_num": 349, "get_inner_nodes_num": 349, "get_outer_nodes_num": 349, "outer_nod": 349, "get_node_fid": 349, "is_inner_nod": 349, "is_outer_nod": 349, "get_nod": [349, 407], "get_outer_nod": 349, "get_node_id": 349, "get_incoming_edg": 349, "has_child": 349, "child": [349, 458, 550], "has_par": 349, "parent": [349, 351, 391, 396, 550], "get_indegre": 349, "get_outdegre": 349, "kmaxaggreg": 349, "ksumaggreg": 349, "kproductaggreg": 349, "koverwriteaggreg": 349, "subproject": 351, "scratch": 351, "never": [351, 556], "hopefulli": 351, "inspir": [351, 556], "dmaven": 351, "antrun": 351, "jni": 351, "gae_java": 352, "graphscope_typ": 354, "graphscopetyp": 354, "myalgorithm": 354, "filenotfounderror": 355, "permissionerror": 355, "typeerror": [355, 391, 563], "arrowproperti": [356, 418], "subrang": 356, "loader_op": 357, "notimplementederror": 357, "run_app": [362, 363, 378, 386, 387], "copy_typ": 364, "session_id": [366, 370, 391, 418, 419, 556, 560], "graph_typ": [366, 556], "graphtyp": [366, 556, 565, 570], "view_typ": 367, "vertex_or_edge_label_list": 368, "graph_util": 368, "vertexlabel": 368, "op_typ": [370, 391, 560], "uiliti": 370, "interactive_queri": [375, 563], "gremlin_script": [375, 419], "request_opt": [375, 419], "interactivequerydagnod": 375, "modify_typ": [376, 377], "attr": [376, 377, 391, 410, 423, 424, 425, 556, 559], "type_pb2": [376, 377, 381], "nx_add_edg": 376, "nx_del_edg": 376, "nx_update_edg": 376, "nx_add_nod": 377, "nx_del_nod": 377, "nx_update_nod": 377, "fd": [378, 383, 579], "storage_opt": [378, 383], "write_opt": [378, 383], "adaptor": 378, "result_path": [378, 383], "vertex_collect": 379, "edge_collect": 379, "report_typ": 381, "variati": 381, "node_num": [381, 583, 587], "has_nod": [381, 556], "has_edg": [381, 556], "node_data": 381, "neighbors_by_nod": 381, "succs_by_nod": 381, "preds_by_nod": 381, "neighbors_by_loc": 381, "succs_by_loc": 381, "preds_by_loc": 381, "deg_by_nod": 381, "in_deg_by_nod": 381, "out_deg_by_nod": 381, "deg_by_loc": 381, "in_deg_by_loc": 381, "out_deg_by_loc": 381, "nodes_by_loc": 381, "loc": 381, "multigraph": [381, 421, 423, 431, 435, 444, 449, 450, 476, 477, 485, 487, 500, 501, 502, 556, 559], "multidigraph": [381, 423, 435, 444, 449, 450, 487, 495, 496, 554, 556], "large_attr": [391, 560], "types_pb2": [391, 556], "operationtyp": 391, "opdef": [391, 395], "attrvalu": [391, 418, 587], "largeattrvalu": 391, "op_def_pb2": 395, "incoming_data": [397, 418, 563], "as_default": [397, 563], "alia": [402, 404, 410, 556, 563, 588], "k8s_gs_imag": [403, 563, 581], "k8s_etcd_imag": 403, "k8s_image_pull_secret": [403, 563], "k8s_coordinator_cpu": [403, 563], "k8s_coordinator_mem": [403, 563], "k8s_vineyard_cpu": [403, 563], "k8s_mars_worker_cpu": [403, 563], "k8s_mars_worker_mem": [403, 563], "k8s_mars_scheduler_cpu": [403, 563], "k8s_mars_scheduler_mem": [403, 563], "with_mar": [403, 563], "k8s_waiting_for_delet": [403, 563], "dataset_download_retri": 403, "k8s_deploy_mod": [403, 563], "kv": 403, "cooper": [404, 418], "\u02bbegograph": 404, "\u02bbegotensor": 404, "sample_se": [404, 588], "positive_sampl": [404, 588], "receptive_fn": [404, 588], "egotensor": [404, 412, 588], "egoflow": [404, 412, 588], "cora": [404, 416, 588], "node_t": [404, 405, 416, 588], "edge_table_with_self_loop": [404, 588], "train_tabl": [404, 588], "val_tabl": [404, 588], "test_tabl": [404, 588], "dataset_fold": [404, 588], "attr_typ": [404, 405, 406, 416, 588], "1433": [404, 416, 588], "attr_delimit": [404, 405, 406, 588], "learningbasedmodel": [404, 588], "categorical_attrs_desc": [404, 588], "_sample_se": [404, 588], "_positive_sampl": [404, 588], "_receptive_fn": [404, 588], "ego_flow": [404, 588], "src_ego_spec": [404, 588], "pos_src_ego_tensor": [404, 588], "identityencod": [404, 588], "widendeepencod": [404, 588], "feature_encod": [404, 588], "gcnconv": [404, 588], "sparseegographencod": [404, 588], "_encod": [404, 588], "conv_lay": [404, 588], "_supervised_loss": [404, 588], "full_graph_mod": [404, 588], "localtftrain": [404, 588], "model_fn": [404, 416, 588], "load_graph": [404, 588], "server_id": [404, 588], "server_count": [404, 406, 416, 588], "tracker": [404, 416, 588], "conclud": 404, "bought": 405, "saturdai": 405, "morn": 405, "bigint": 405, "shanghai": 405, "localfilesystem": 405, "pai": [405, 410, 411], "tab": 405, "s2": [405, 521], "215340": 405, "933091": 405, "grei": 405, "362519": 405, "097545": 405, "chapter": [405, 406, 408, 502, 539], "dscript": 405, "dentryfil": 405, "dtabl": 405, "prj": 405, "flag": [405, 406], "define_str": 405, "node_sourc": 405, "edge_sourc": 405, "bucket_s": 405, "greatli": [405, 406, 568], "your_attr_typ": 405, "you_delimit": 405, "scr_id": 405, "feature1": 405, "10002": [405, 406, 407, 409], "feature2": 405, "10003": [405, 406, 407, 409], "feature3": 405, "124": 405, "\u02bbitem_node_decod": 405, "\u02bbuser_node_decod": 405, "\u02bbedge_decod": 405, "item_node_decod": 405, "user_node_decod": 405, "edge_decod": [405, 416], "graph_object": 405, "commod": 406, "swing": [406, 407], "30001": [406, 407, 409], "30002": [406, 407, 409], "30003": [406, 407, 409], "table_1": 406, "table_2": 406, "dest": 406, "10004": [406, 407], "20001": [406, 407, 409], "20003": [406, 407, 409], "20004": [406, 407, 409], "46": [406, 407, 409, 421, 543], "ui_decod": 406, "uv_decod": 406, "table_3": 406, "table_4": 406, "click_v": 406, "task_index": [406, 416], "task_count": 406, "atyp": 406, "job_nam": [406, 416], "worker_host": 406, "respond": 406, "necessarili": [406, 518], "serious": 406, "decreas": [406, 485, 487], "speak": 406, "client_count": [406, 416], "wait_for_clos": [406, 416], "matter": [406, 562], "get_topologi": 407, "dst_type": 407, "figure1": 407, "topo": 407, "print_al": 407, "string_attr": 407, "src_node": 407, "dst_node": 407, "dense_shap": 407, "__next__": 407, "table1": 407, "u_nod": 407, "table2": 407, "table3": 407, "click_edg": 407, "table4": 407, "conduc": 408, "recept": [408, 412], "ai": 408, "meta_path": 408, "layer_id": 408, "famili": [408, 421, 459, 517, 545], "random_without_replac": 408, "ueri": 408, "default_neighbor_id": 408, "set_default_neighbor_id": [408, 417], "xx": 408, "set_padding_mod": 408, "circular": [408, 410, 460], "nodesampl": 409, "node_sampl": 409, "by_ord": 409, "node_from": [409, 420], "edge_src": [409, 420], "edge_dst": [409, 420], "edgesampl": 409, "matur": 410, "dl": 410, "sheer": 410, "sink": 410, "generatortyp": [410, 420], "won": [410, 571], "cursor": 410, "ingo": 410, "query\u5bf9\u8c61": 410, "outneg": [410, 413], "inneg": [410, 413, 416], "candid": [410, 413], "u2i": 410, "ouv": 410, "func": 410, "edeg": 410, "src_1hop": 410, "dst_1hop": 410, "neg_i": 410, "neg_i_1hop": 410, "params_list": 410, "arrang": 410, "anonym": [410, 548], "src_attr": 410, "neg_attr": 410, "encode_fn": [410, 416], "src_atr": 410, "outnegv": 410, "gen1": 410, "gen2": 410, "circumst": 410, "foewa": 410, "from_gener": [410, 416], "make_one_shot_iter": [410, 416], "get_next": [410, 416], "zhangjiak": 411, "cp27": 411, "cp27mu": 411, "linux_x86_64": 411, "autoconf": 411, "automak": 411, "libtool": 411, "your_wheel_nam": [411, 414], "test_cpp_ut": 411, "test_python_ut": 411, "fastgcn": [412, 588], "graphsaint": 412, "amd": 412, "object_typ": 413, "oprequest": 414, "oprespons": 414, "params_": 414, "tensors_": 414, "redirect": [414, 494], "rewrit": 414, "till": [414, 563], "happen": [414, 568, 571], "stitch": 414, "myoper": 414, "register_oper": 414, "opnam": 414, "randomsampl": 414, "xxxsampler": 414, "litestr": 415, "getfiles": 415, "getrecordcount": 415, "register_file_system": 415, "myfilesystem": 415, "registr": 415, "ppi": 416, "train_supervis": 416, "gen_test_data": 416, "getopt": 416, "argv": 416, "cur_path": 416, "dirnam": 416, "rf": 416, "\u4f60\u9700\u8981\u628agen_test_data": 416, "py\u653e\u5230shell\u811a\u672c\u540c\u4e00\u76ee\u5f55\u4e0b": 416, "fi": 416, "case_bas": 416, "genetic_algorithm": 416, "neural_network": 416, "probabilistic_method": 416, "reinforcement_learn": 416, "rule_learn": 416, "bag": 416, "1033": 416, "103482": 416, "103515": 416, "31336": 416, "1061127": 416, "05882353": 416, "1106406": 416, "n_featur": 416, "node_decod": 416, "n_class": 416, "140": [416, 479], "n_hop": 416, "n_epoch": 416, "tripl": 416, "graph_object_cn": 416, "sample_gen": 416, "input_fn": 416, "sample_input_fn": 416, "float64": 416, "tensorshap": 416, "layer_featur": 416, "aggregate_fn": 416, "self_vec": 416, "neigh_vec": 416, "raw_feat_layer_index": 416, "layer_index": 416, "variable_scop": 416, "_layer": 416, "auto_reus": 416, "neigh_weight": 416, "get_vari": 416, "self_weight": 416, "output_shap": 416, "get_shap": 416, "neigh_mean": 416, "from_neigh": 416, "matmul": 416, "from_self": 416, "add_n": 416, "leaky_relu": 416, "depth_to_encod": 416, "h_self_vec": 416, "h_neighbor_vec": 416, "features_column": 416, "feature_column": 416, "numeric_column": 416, "loss_fn": 416, "train_op": 416, "global_step": 416, "get_global_step": 416, "estimatorspec": 416, "modekei": 416, "set_xxx": 417, "set_yyi": 417, "other_model": 417, "nbr_id": 417, "set_default_int_attribut": 417, "set_default_float_attribut": 417, "set_default_string_attribut": 417, "set_inter_threadnum": 417, "intra": [417, 475, 478], "set_intra_threadnum": 417, "16mb": 417, "reset": 417, "enlarg": 417, "set_rpc_message_max_s": 417, "objectnam": 418, "degener": 418, "unspecifi": [418, 433], "consolidate_column": 418, "result_column": 418, "consolid": [418, 570, 577], "weight0": 418, "weight1": 418, "graph_nod": 418, "detach": 418, "varaibl": 418, "lexic": 418, "classmethod": 418, "graphar_store_in_loc": [418, 567], "save_to": [418, 567], "graphar_graph_nam": [418, 567], "graphar_file_typ": [418, 567], "parquet": [418, 567], "orc": [418, 567], "graphar_vertex_chunk_s": [418, 567], "graphar_edge_chunk_s": [418, 567], "graphschema": [418, 556], "schema_path": 418, "currrent": 418, "object_id": [418, 419, 420], "filetyp": 418, "ordinari": 418, "f0": 418, "graph_build": 418, "group_id": 418, "member_s": 418, "leader_student_id": 418, "student": 418, "member_student_id": 418, "group_for_teacher_stud": 418, "group_nam": 418, "establish_d": 418, "teacher_in_charge_id": 418, "teacher": 418, "lesson_num": 418, "avg_scor": 418, "student_id": 418, "salari": 418, "teacher_id": 418, "both_in_out": 418, "unambigu": 418, "interactivequeri": [419, 561, 563, 587], "frontend_gremlin_endpoint": 419, "frontend_cypher_endpoint": 419, "gremlin_url": 419, "lifetim": 419, "traversal_sourc": 419, "graphtraversalsourc": 419, "cypher_driv": 419, "cypher_url": 419, "gremlin_cli": 419, "runtimeerror": [419, 563], "modern_graph_data_dir": 419, "tolist": [419, 569], "dtype": 420, "pywrap": 420, "nodefrom": 420, "get_handl": 420, "worker_count": 420, "base64": 420, "nstart": 421, "poweriterationfailedconverg": 421, "langvil": 421, "meyer": 421, "survei": [421, 509], "cites": 421, "ist": 421, "psu": 421, "edu": 421, "713792": 421, "jon": 421, "kleinberg": 421, "authorit": 421, "journal": [421, 490, 498, 515, 546, 549, 553], "acm": [421, 496, 547, 579], "604": 421, "1999": [421, 476, 477], "doi": [421, 491, 498, 533], "1145": 421, "324133": 421, "324140": 421, "cornel": 421, "kleinber": 421, "pdf": [421, 503, 505, 506], "load_centr": 421, "in_degree_centr": [421, 557], "networkxnotimpl": 421, "out_degree_centr": [421, 557], "equat": 421, "ax": 421, "eigenvalu": [421, 501], "virtu": 421, "perron": 421, "frobeniu": 421, "theorem": [421, 500, 512], "0e": 421, "strength": 421, "2f": 421, "networkxpointlessconcept": [421, 551], "networkxerror": [421, 427, 434, 436, 440, 441, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 491, 497, 500, 501, 502, 513, 516, 548, 556, 559], "eigenvector_centrality_numpi": 421, "discern": 421, "phillip": 421, "bonacich": 421, "american": 421, "sociologi": 421, "1170": 421, "1182": 421, "1986": [421, 545], "leonidzhukov": 421, "hse": 421, "socialnetwork": 421, "oxford": [421, 454, 455, 504, 548], "press": [421, 454, 455, 502, 544, 547, 548], "usa": [421, 508, 509, 555], "pp": [421, 485, 488, 489, 490, 503, 509, 510, 547, 553], "169": 421, "x_i": 421, "a_": 421, "x_j": 421, "lambda_": 421, "distant": 421, "penal": 421, "strictli": [421, 475], "invers": [421, 500], "phi": 421, "sqrt": [421, 501], "adjacency_spectrum": 421, "720": 421, "leo": 421, "sociometr": 421, "psychometrika": 421, "1953": 421, "springer": [421, 510], "1007": [421, 455, 491], "bf02289026": 421, "has_path": [421, 557], "djikstra": 421, "floyd": 421, "warshal": 421, "bfs_edg": [421, 557], "depth_limit": 421, "core_numb": 421, "vladimir": 421, "batagelj": 421, "matjaz": 421, "zaversnik": 421, "ab": [421, 479, 480, 481, 495, 503, 507, 548, 550], "0310049": 421, "c_u": 421, "deg": [421, 475, 489, 556], "geometr": [421, 543, 557], "vw": 421, "hat": 421, "uv": [421, 489], "uw": 421, "tot": 421, "2deg": 421, "leftrightarrow": 421, "complete_graph": [421, 427, 556], "saram\u00e4ki": 421, "kivel\u00e4": 421, "onnela": 421, "kaski": 421, "kert\u00e9sz": 421, "027105": 421, "2007": [421, 503, 549], "jponnela": 421, "web_docu": 421, "a9": 421, "intens": 421, "coher": 421, "motif": 421, "065103": 421, "2005": [421, 497, 503], "sign": 421, "costantini": 421, "perugini": 421, "plo": 421, "e88669": 421, "fagiolo": 421, "76": 421, "026107": 421, "average_clust": [421, 557], "count_zero": 421, "c_v": 421, "nonzero": [421, 485, 502], "marcu": 421, "kaiser": 421, "0802": 421, "2512": 421, "g_to_add_to": [423, 424, 425], "nodes_for_cycl": 423, "add_path": [423, 425, 556], "add_star": [423, 424], "nodes_for_path": 424, "add_cycl": [424, 425], "nodes_for_star": 425, "star": [425, 462, 471], "cnbor": 427, "with_data": 428, "empty_graph": [428, 469], "width": 430, "2m": [431, 509], "err": 434, "frozen": [434, 439], "unfreez": 434, "frozen_graph": 434, "unfrozen_graph": 434, "is_frozen": 434, "neighbour": 436, "freez": [439, 557], "nodelist": [444, 483], "selfloop_edg": [444, 449, 485, 487], "number_of_selfloop": [444, 450], "selfloop": [449, 450, 483, 489], "nloop": 449, "nodes_with_selfloop": [449, 450], "datadict": [450, 556], "datavalu": 450, "attrnam": [450, 587], "edgeit": 450, "ekei": 450, "graph_atlas_g": 454, "linearli": [454, 470], "ronald": [454, 455, 545], "wilson": [454, 455], "1998": [454, 455], "111223": 455, "112222": 455, "automorph": [455, 528], "graph_atla": 455, "expens": 455, "popul": [455, 456, 458, 459, 461, 463, 466, 468, 470, 471, 474, 485, 487, 488, 490, 492, 493, 494, 500, 501, 502, 508, 509, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 542, 543, 551, 558], "book": 455, "violat": 455, "lexicograph": 455, "nondecreas": 455, "001111": 455, "000112": 455, "1008": 455, "3333444": 455, "3333336": 455, "1012": 455, "1213": 455, "1244555": 455, "1244456": 455, "perfectli": 456, "ari": [456, 466], "height": 456, "children": [456, 466, 550], "barbel": [457, 468], "bell": 457, "p_": [457, 489, 503], "mere": [457, 468], "aldou": [457, 468], "jim": [457, 468], "binomi": 458, "leftmost": 458, "ci_n": 459, "x_1": 459, "x_2": 459, "x_m": 459, "mod": [459, 473, 502, 521], "subfamili": 459, "ladder": [460, 467], "cl_n": 460, "k_n": 461, "is_direct": [461, 556], "subset_s": 462, "multipartit": [462, 473], "tripartit": 462, "bc": 462, "complete_bipartite_graph": 462, "c_n": 463, "hierarch": 464, "dorogovtsev": 464, "goltsev": 464, "mend": 464, "mat": 464, "0112143": 464, "kw": [465, 563], "unknown": [465, 568], "abc": 465, "rightmost": 466, "jame": 466, "andrew": 466, "storer": 466, "birkhaus": 466, "boston": 466, "2001": [466, 479, 487, 492, 494, 502, 511, 569], "225": [466, 556], "lollipop": 468, "k_m": 468, "p_n": [468, 470], "etext": 468, "turan": 473, "disjoint": [473, 484, 522], "2r": 473, "tau1": 475, "tau2": 475, "mu": 475, "average_degre": 475, "min_degre": 475, "max_degre": 475, "min_commun": 475, "max_commun": 475, "lfr": 475, "mathrm": 475, "expon": 475, "reassign": [475, 513], "affili": [475, 583], "random_st": [475, 478, 479, 480, 481, 483, 485, 487, 489, 491, 492, 493, 494, 495, 496, 497, 498, 503, 504, 505, 506, 507, 510, 511, 512, 516, 548, 551, 553], "exceededmaxiter": 475, "250": 475, "frozenset": [475, 558], "rewir": [475, 477, 481, 513, 516], "wire": 475, "robust": 475, "somewhat": 475, "andrea": 475, "lancichinetti": 475, "santo": [475, 479, 480, 481], "fortunato": [475, 479, 480, 481], "filippo": 475, "radicchi": 475, "phy": [475, 487, 492, 493, 494, 497], "rev": [475, 487, 492, 493, 494, 497], "046110": 475, "santofortunato": 475, "caveman": [476, 477, 481], "unclear": [476, 477], "connected_caveman_graph": [476, 482], "watt": [476, 477, 487], "phenomenon": [476, 477], "amer": [476, 477], "493": [476, 477], "527": [476, 477], "caveman_graph": 477, "p_in": [478, 479, 480], "p_out": [478, 479, 480], "gaussian": [478, 504, 505, 506], "drawn": [478, 506], "varianc": 478, "probabilti": [478, 481], "random_partition_graph": [478, 483], "ulrik": 478, "brand": 478, "marco": 478, "gaertler": 478, "dorothea": 478, "wagner": 478, "11th": 478, "europ": 478, "symp": 478, "plant": [479, 480], "random_partition_model": 479, "condon": 479, "karp": 479, "algor": 479, "116": 479, "486": [479, 480, 481], "174": [479, 480, 481], "0906": [479, 480, 481], "0612": [479, 480, 481], "relax": 481, "februari": 481, "num_cliqu": 482, "clique_s": 482, "ring": 482, "stochast": [483, 557], "densiti": [483, 485, 503, 505], "symmetr": [483, 502, 525, 529, 535, 537, 548], "300": [483, 552], "prob": 483, "450": 483, "quotient_graph": 483, "relabel": 483, "245": 483, "348": 483, "405": 483, "051": 483, "022": 483, "planted_partition_graph": 483, "gaussian_random_partition_graph": 483, "gnp_random_graph": [483, 510, 511, 512], "holland": 483, "laskei": 483, "leinhardt": 483, "blockmodel": 483, "109": 483, "1983": 483, "windmil": 484, "contract": 484, "wd": 484, "deg_sequ": [485, 486, 487, 488, 490], "pseudograph": [485, 487], "nonneg": [485, 487], "is_graph": [485, 491], "graphic": [485, 487, 490, 491], "realiz": [485, 487, 490, 513, 514, 515, 516, 543, 568], "poisson": 485, "constant": [485, 587], "siam": [485, 490, 496], "167": 485, "random_sequ": 485, "random_powerlaw_tree_sequ": 485, "5000": [485, 569], "actual_degre": 485, "in_degree_sequ": 487, "out_degree_sequ": 487, "directed_random": 487, "configuration_model": [487, 488, 491], "finit": [487, 489, 502], "strogatz": 487, "026118": 487, "din": 487, "dout": 487, "in_deg_sequ": 488, "out_deg_sequ": 488, "kleitman": [488, 490], "valenc": [488, 490], "1973": [488, 490], "w_0": 489, "w_1": 489, "ldot": 489, "w_u": [489, 503, 506], "w_v": [489, 503, 506], "sum_k": 489, "w_k": 489, "z": [489, 502, 503, 507], "mathcal": 489, "ne": 489, "uu": 489, "fan": [489, 503, 579], "chung": [489, 503], "lu": [489, 579], "ann": 489, "combinator": [489, 549], "145": 489, "2002": 489, "joel": 489, "miller": 489, "aric": [489, 503], "hagberg": [489, 503], "waw": [489, 503], "alan": 489, "friez": 489, "paul": 489, "horn": 489, "pawe\u0142": 489, "pra\u0142at": 489, "lnc": 489, "6732": 489, "115": 489, "havel": 490, "hakimi": 490, "networkxexcept": 490, "resort": 490, "496": 490, "506": 490, "1962": [490, 508, 509, 555], "d_m": 491, "uniform": [491, 503, 512], "networkxunfeas": 491, "moshen": 491, "bayati": 491, "jeong": 491, "han": 491, "kim": 491, "amin": 491, "saberi": 491, "algorithmica": 491, "58": 491, "860": 491, "910": 491, "s00453": 491, "009": 491, "9340": 491, "gn": [492, 555], "a_k": 492, "krapivski": [492, 493, 494, 497], "redner": [492, 493, 494], "066123": [492, 494], "gnc": 493, "growth": [493, 553], "036118": 493, "2005k": 493, "gnr": 494, "probabilii": 494, "self_loop": 495, "preferenti": 495, "proport": 495, "peterson": [495, 538], "nichola": 495, "bori": 495, "pittel": 495, "preprint": 495, "1311": 495, "5961": 495, "2013": [495, 515], "gamma": 496, "delta_in": 496, "delta_out": 496, "bia": 496, "bollob\u00e1": 496, "borg": 496, "chay": 496, "riordan": 496, "fourteenth": 496, "annual": 496, "symposium": 496, "132": [496, 511], "139": 496, "diverg": [497, 557], "retent": 497, "disallow": 497, "ispolatov": 497, "yuryev": 497, "061911": 497, "inclus": 498, "knudsen": 498, "michael": 498, "carsten": 498, "wiuf": 498, "markov": 498, "chain": 498, "1155": 498, "190836": 498, "radiu": [499, 504, 505, 506], "chordal": 500, "chord": [500, 514], "mildli": 500, "lubotzki": 500, "invari": 500, "birkh\u00e4us": 500, "verlag": 500, "basel": 500, "1994": 500, "marguli": 501, "gabber": 501, "galil": 501, "palei": 502, "pz": 502, "f_q": 502, "odd": 502, "bolloba": 502, "cambridg": 502, "theta": [503, 506], "po": [503, 504, 505, 506, 507], "p_dist": [503, 505], "geograph": [503, 506], "rectangular": [503, 507], "ge": [503, 507], "prone": 503, "le": [503, 507, 547], "euclidean": [503, 504, 505, 506, 507], "taxicab": [503, 507], "expovari": [503, 506], "masuda": 503, "miwa": 503, "konno": 503, "036108": 503, "milan": 503, "bradonji\u0107": 503, "allon": 503, "percu": 503, "giant": 503, "antoni": 503, "bonato": 503, "209": 503, "216": 503, "cube": [504, 505, 506, 524, 541], "kdtree": [504, 505, 506], "minkowski": [504, 505, 506], "infin": [504, 505, 506], "erd\u0151": [504, 505, 506], "r\u00e9nyi": [504, 505, 506], "twenti": 504, "2d": [504, 505, 506, 556, 559], "deviat": [504, 505, 506], "gauss": [504, 505, 506], "penros": [504, 505], "mathew": [504, 505], "soft": 505, "exp": [505, 507], "annal": 505, "2016": 505, "986": 505, "1028": 505, "summat": 506, "nodethr": 506, "cole": 506, "maclean": 506, "blog": 506, "thesi": [506, 512], "waxman": 507, "x_min": 507, "y_min": 507, "x_max": 507, "y_max": 507, "Their": 507, "rout": 507, "multipoint": 507, "ieee": [507, 515, 516, 548, 553], "1988": 507, "1617": 507, "1622": 507, "harari": [508, 509, 557], "h_": [508, 509], "ceil": 508, "kn": 508, "hnm_harary_graph": 508, "weisstein": 508, "eric": 508, "mathworld": [508, 517, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 536], "wolfram": [508, 517, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 536], "hararygraph": 508, "nat": [508, 509, 555], "acad": [508, 509, 555], "sci": [508, 509, 555], "1142": [508, 509, 555], "1146": [508, 509, 555], "floor": 509, "hkn_harary_graph": 509, "boesch": 509, "satyanarayana": 509, "suffel": 509, "reliabl": 509, "synthesi": 509, "99": [509, 587], "2009": [509, 549], "uniform_random_intersection_graph": [510, 511], "nikoletsea": 510, "raptopoulo": 510, "spiraki": 510, "icalp": 510, "\u0131az": 510, "karhum": 510, "aki": 510, "lepist": 510, "sannella": 510, "vol": [510, 553], "3142": 510, "lectur": 510, "1029": 510, "1040": 510, "godehardt": 511, "jaworski": 511, "electron": [511, 549], "singer": 512, "cohen": 512, "1995": 512, "phd": 512, "john": [512, 529], "hopkin": 512, "scheinerman": 512, "evolut": 512, "2000": 512, "156": 512, "nkk": [513, 514], "degree_seq": 513, "n_edges_add": 513, "li": [513, 516], "unsatur": 513, "proof": 513, "tillman": [513, 514, 516], "markopoul": [513, 514, 515, 516, 548], "butt": [513, 514, 548], "gjoka": [513, 514, 515, 516], "2k": [513, 514], "kdd": [513, 514], "seconnd": 514, "joint_degre": [515, 516], "diagon": [515, 531], "joint_degree_graph": 515, "kurant": 515, "5k": 515, "infocom": [515, 516, 548], "stanton": 515, "pinar": 515, "prescrib": 515, "experiment": [515, 563], "n_th": 517, "m_1": 517, "singleton": [517, 556], "m_2": 517, "m_i": 517, "mycielskian": 517, "m_": 517, "mycielskigraph": 517, "p_2": 517, "chromat": [518, 549], "2n": 518, "bigcup": 518, "nonisomporph": 519, "adjanc": 519, "matric": [519, 548], "nonisomorph": 520, "shift_list": 521, "cubic": [521, 524, 525, 528, 529, 535, 537, 538, 543], "lcf": [521, 523, 525, 527, 529, 535, 537], "lederberg": 521, "coxet": 521, "frucht": [521, 528], "hamiltonian": [521, 523, 528, 529, 532, 537, 543], "symmetri": [521, 528], "dodecahedral_graph": 521, "desargues_graph": 521, "heawood_graph": 521, "pappus_graph": 521, "s1": 521, "sk": 521, "v_current": 521, "shiftlist": 521, "heawood": [521, 529], "lcfnotat": 521, "bull": 522, "planar": [522, 525, 526, 528], "pendant": 522, "leg": 522, "chv\u00e1tal": 523, "370": 523, "chv": 523, "c3": [523, 535, 536], "a1tal_graph": 523, "chvatalgraph": 523, "platon": [524, 527, 532, 536, 540, 542], "skeleton": [524, 527, 541, 542], "hypercub": 524, "aris": 524, "desargu": 525, "desarguesgraph": 525, "kite": [526, 533], "diamondgraph": 526, "dodecahedr": 527, "dodecahedron": 527, "regular_dodecahedron": 527, "dodecahedralgraph": 527, "fruchtgraph": 528, "cage": 529, "perci": 529, "nonplanar": 529, "girth": 529, "heawoodgraph": 529, "win": [529, 538], "tue": [529, 538], "nl": [529, 538], "aeb": [529, 538], "housegraph": [530, 531], "pentatop": 531, "icosahedr": 532, "icosahedron": 532, "icosahedralgraph": 532, "krackhardt": 533, "andr": 533, "beverlei": 533, "carol": 533, "dian": 533, "fernando": 533, "garth": 533, "heather": 533, "ik": 533, "jane": 533, "polit": 533, "landscap": 533, "cognit": 533, "quarterli": 533, "342": [533, 556], "369": 533, "2307": 533, "2393394": 533, "jstor": 533, "june": 533, "1990": 533, "graph_descript": 534, "ltype": 534, "adjacencylist": 534, "from_dict_of_list": 534, "from_edgelist": 534, "xlist": 534, "c_4": 534, "w2": 534, "vk": 534, "wk": 534, "vj": 534, "wj": 534, "moebiu": 535, "kantor": 535, "m\u00f6biu": 535, "petersen": [535, 538], "b6biu": 535, "93kantor_graph": 535, "octahedr": 536, "octahedron": 536, "shake": 536, "hi": [536, 546, 555], "her": 536, "partner": 536, "handshak": 536, "cocktail": 536, "octahedralgraph": 536, "tur": 536, "a1n_graph": 536, "special_cas": 536, "pappu": 537, "juliu": 538, "counterexampl": [538, 543], "bridgeless": 538, "colour": 538, "drg": 538, "maze": 539, "sedgewick": 539, "3rd": 539, "tetrahedr": 540, "k4": 540, "w4": 540, "grpah": 540, "tetrahedron": [540, 542, 543], "archimedean": [541, 542], "octagon": 541, "triangular": 541, "truncated_cub": 541, "coolmath": 541, "polyhedra": 541, "hexagon": 542, "equilater": 542, "truncated_tetrahedron": 542, "tutt": 543, "polyhedr": 543, "tait": 543, "conjectur": 543, "polyhedron": 543, "davi": 544, "southern": 544, "women": 544, "gardner": 544, "1941": 544, "south": 544, "chicago": 544, "il": 544, "florentin": 545, "breiger": 545, "philippa": 545, "pattison": 545, "cumul": 545, "dualiti": 545, "septemb": 545, "zachari": 546, "karat": 546, "club": 546, "mr": [546, 549], "offic": 546, "wayn": 546, "fission": 546, "anthropolog": 546, "452": 546, "473": 546, "1977": 546, "coappear": 547, "miser": 547, "knuth": 547, "1993": 547, "graphbas": 547, "combinatori": 547, "york": 547, "spectral": [548, 557], "forg": 548, "sgf": 548, "eigenstructur": 548, "synthes": 548, "percentag": 548, "telecommun": 548, "bernoulli": 548, "baldesi": 548, "1801": 548, "01715": 548, "karate_club_graph": 548, "sud": 549, "81": 549, "810": 549, "herzberg": 549, "murti": 549, "polynomi": 549, "am": 549, "708": 549, "717": 549, "sander": 549, "torsten": 549, "7pp": 549, "2529816": 549, "encyclopedia": 549, "dec": 549, "nil": 550, "arboresc": 550, "downward": 550, "synthet": 550, "trie": 550, "recov": [550, 563], "pr\u00fcfer": 551, "from_prufer_sequ": 551, "forest_str": 551, "triad_nam": 552, "003": 552, "012": 552, "021d": 552, "021u": 552, "021c": 552, "111d": 552, "111u": 552, "030t": 552, "030c": 552, "120d": 552, "120u": 552, "120c": 552, "triadic_censu": 552, "autonom": [553, 555], "elmokashfi": 553, "tier": 553, "mid": 553, "adv": 553, "bidirect": 553, "peer": 553, "commerci": 553, "agreement": 553, "kvalbein": 553, "dovroli": 553, "bgp": 553, "1250": 553, "1261": 553, "octob": 553, "reweight": 554, "mathematician": 555, "frank": 555, "incoming_graph_data": [556, 559], "default_label": [556, 559], "to_networkx_graph": 556, "110": 556, "protect": 556, "bracket": 556, "shortcut": 556, "nbrsdict": 556, "miscellan": 556, "__contains__": 556, "__getitem__": 556, "adj_dict": 556, "atlasview": 556, "__iter__": 556, "niter": 556, "__len__": 556, "nnode": 556, "u_of_edg": 556, "v_of_edg": 556, "ebunch_to_add": 556, "wn2898": 556, "node_for_ad": 556, "nodes_for_ad": 556, "hello": 556, "k3": 556, "attrdict": 556, "behav": 556, "idiom": 556, "foovalu": 556, "adj_it": 556, "nbrdict": 556, "adjlist_inner_dict_factori": 556, "neighbordict": 556, "adjlist_outer_dict_factori": 556, "adjlistdict": 556, "clear_edg": 556, "deepcopi": 556, "fresh": [556, 565], "__class__": 556, "degreeview": 556, "nd_view": 556, "edge_attr_dict_factori": 556, "neighborattrdict": 556, "edge_subgraph": 556, "edgeview": 556, "edgedataview": 556, "ddict": 556, "get_edge_data": 556, "edge_dict": 556, "safe": 556, "graph_attr_dict_factori": 556, "graph_cache_factori": 556, "keyerror": 556, "edge_ind": 556, "data_dictionari": 556, "is_multigraph": 556, "nbunch_it": 556, "exhaust": 556, "possibli": 556, "node_attr_dict_factori": 556, "nodeattrdict": 556, "node_dict_factori": 556, "nodedict": 556, "nodeview": 556, "nodedataview": 556, "nodedata": 556, "bar": 556, "nedg": 556, "Will": 556, "nodes_for_remov": 556, "set_edge_data": 556, "set_node_data": 556, "set_item": 556, "adjedgeattr": 556, "dd": 556, "nodeattr": 556, "netowrkx": 556, "to_undirected_class": 556, "taken": 556, "itertool": 556, "mg": 556, "nd_iter": 556, "outedgeview": 556, "in_edg": 556, "outedgedataview": 556, "has_predecessor": 556, "has_successor": 556, "indegreeview": 556, "inedgeview": 556, "outdegreeview": 556, "pred": 556, "succ": 556, "_convert_arrow_to_dynam": [557, 559], "atla": 557, "triad": 557, "mycielski": 557, "sudoku": 557, "utf": [558, 569], "filenam": [558, 569], "rb": 558, "bz2": 558, "uncompress": 558, "whitespac": 558, "obsolet": 558, "write_edgelist": 558, "fh": 558, "textlin": 558, "parse_edgelist": 558, "read_adjlist": 558, "marker": 558, "v_0": 559, "v_1": 559, "add_label": 560, "talk": 562, "output_to_cli": [562, 579], "person_id": [562, 569], "deregist": 563, "256mi": 563, "4gi": 563, "5gi": 563, "__enter__": 563, "__exit__": 563, "exc_typ": 563, "exc_valu": 563, "exc_tb": 563, "unregist": 563, "preemptiv": 563, "burstabl": 563, "qo": 563, "preempt": 563, "k8s_vineyard_imag": 563, "fallback": 563, "512mi": 563, "etcd_addr": 563, "etcd01": 563, "etcd02": 563, "etcd03": 563, "4mi": 563, "k8s_coordinator_pod_node_selector": 563, "tinyurl": 563, "3nx6k7ph": 563, "k8s_engine_pod_node_selector": 563, "path1": 563, "path2": 563, "claimnam": 563, "dangling_timeout_second": 563, "heartbeat": 563, "dangl": 563, "config_fil": 563, "reject": 563, "resource_nam": 563, "sigint": 563, "sigterm": 563, "signal": 563, "get_vineyard_object_mapping_t": 563, "recreat": 563, "restore_from_pvc": 563, "kubeconfig": 563, "run_fetch": 563, "lock": 563, "store_to_pvc": 563, "backup": [563, 569], "maxwel": 565, "binlog": 565, "buildgartfrag": 565, "etcd_endpoint": 565, "gartfrag": 565, "etcd_client": 565, "make_shar": 565, "mpi_comm_world": 565, "schema_kei": 565, "gart_schema_p": 565, "to_str": 565, "edge_config_str": 565, "as_str": 565, "gart_blob_m": 565, "_p": 565, "config_str": 565, "edge_config": 565, "inner_vertices_it": 565, "elabel": [565, 570], "edge_it": 565, "hive": 567, "ordered_by_sourc": 567, "ordered_by_dest": 567, "textual": 567, "unix": [567, 582], "ldbc_graphar": 567, "4096": 567, "ldbc_subgraph_graphar": 567, "ldbc_subgraph": 567, "ldbc__graphar": 567, "test_graphar": 567, "broader": 568, "ffi": 568, "agnost": 568, "grin_": 568, "partitioned_graph": 568, "edge_type_nam": 568, "boundari": 568, "sync_properti": 568, "grin_partitioned_graph": 568, "grin_partit": 568, "grin_graph": 568, "grin_get_local_graph_from_partit": 568, "grin_edge_typ": 568, "etyp": 568, "grin_get_edge_type_by_nam": 568, "grin_vertex_type_list": 568, "src_vtype": 568, "grin_get_src_types_from_edge_typ": 568, "dst_vtype": 568, "grin_get_dst_types_from_edge_typ": 568, "src_vtypes_num": 568, "grin_get_vertex_type_list_s": 568, "dst_vtypes_num": 568, "grin_vertex_typ": 568, "grin_get_vertex_type_from_list": 568, "grin_vertex_properti": 568, "dst_vp": 568, "grin_get_vertex_property_by_nam": 568, "grin_null_vertex_properti": 568, "grin_vertex_property_t": 568, "dst_vpt": 568, "grin_get_vertex_property_table_by_typ": 568, "grin_datatyp": 568, "dst_vp_dt": 568, "grin_get_vertex_property_data_typ": 568, "grin_vertex_list": 568, "__src_vl": 568, "grin_get_vertex_list": 568, "_src_vl": 568, "grin_select_type_for_vertex_list": 568, "src_vl": 568, "grin_select_master_for_vertex_list": 568, "src_vl_num": 568, "grin_get_vertex_list_s": 568, "grin_vertex": 568, "grin_get_vertex_from_list": 568, "ifdef": 568, "grin_trait_select_edge_type_for_adjacent_list": 568, "grin_adjacent_list": 568, "_adj_list": 568, "grin_get_adjacent_list": 568, "grin_direct": 568, "adj_list": 568, "grin_select_edge_type_for_adjacent_list": 568, "adj_lsit": 568, "endif": 568, "al_sz": 568, "grin_get_adjacent_list_s": 568, "ifndef": 568, "grin_edg": 568, "grin_get_edge_from_adjacent_list": 568, "grin_get_edge_typ": 568, "grin_equal_edge_typ": 568, "grin_get_neighbor_from_adjacent_list": 568, "grin_get_value_from_vertex_property_t": 568, "grin_vertex_ref": 568, "uref": 568, "grin_get_vertex_ref_for_vertex": 568, "u_master_partit": 568, "grin_get_master_partition_from_vertex_ref": 568, "send_valu": 568, "fragment_group_id": [568, 570], "get_partitioned_graph_by_object_id": 568, "local_partit": 568, "grin_get_local_partition_list": 568, "pnum": 568, "grin_get_partition_list_s": 568, "grin_get_partition_from_list": 568, "disclaim": 568, "sacrif": 568, "boilerpl": 568, "ineffici": 568, "enorm": 568, "grin_assume_all_vertex_property_local_complet": 568, "grin_assume_master_vertex_property_local_complet": 568, "grin_assume_by_type_all_vertex_property_local_complet": 568, "grin_assume_by_type_master_vertex_property_local_complet": 568, "assumpt": 568, "wider": 568, "undefin": 568, "tell": 568, "granular": 568, "grin_frag": 568, "storagespecif": 568, "vertexhandl": 568, "goe": 568, "grin_edge_list": 568, "grin_partition_list": 568, "grin_enable_": 568, "_list_arrai": 568, "vertexlist": 568, "grin_enable_vertex_list_arrai": 568, "vl": 568, "idx": 568, "sz": 568, "caller": 568, "_list_iter": 568, "grin_enable_vertex_list_iter": 568, "grin_vertex_list_iter": 568, "grin_get_vertex_list_begin": 568, "grin_get_next_vertex_list_it": 568, "vli": 568, "grin_is_vertex_list_end": 568, "grin_get_vertex_from_it": 568, "grin_get_vertex_type_by_nam": 568, "vtype": 568, "grin_vertex_property_list": 568, "grin_get_vertex_properties_by_nam": 568, "vprop": 568, "vpl": 568, "separatedli": 568, "with_vertex_label": 568, "with_edge_label": 568, "grin_serialize_vertex_ref": 568, "grin_deserialize_to_vertex_ref": 568, "grin_get_vertex_from_vertex_ref": 568, "vref": 568, "borrow": 568, "vertexcut": 568, "edgecut": 568, "judgement": 568, "columnar": 569, "gear": 569, "compromis": 569, "strict": 569, "multitud": 569, "said": 569, "grpc_port": 569, "grpc_endpoint": 569, "conn": 569, "add_vertex_label": 569, "v_label_nam": 569, "add_primary_kei": 569, "pk_name": 569, "prop_name_1": 569, "prop_name_2": 569, "add_edge_label": 569, "e_label_nam": 569, "prop_name_3": 569, "add_properti": 569, "xmln": 569, "xsi": 569, "w3": 569, "xmlschema": 569, "schemaloc": 569, "xsd": 569, "modelvers": 569, "gremlinexampl": 569, "codehau": 569, "mojo": 569, "classpath": 569, "mainclass": 569, "compliancelevel": 569, "killaft": 569, "credenti": 569, "valuemap": [569, 587], "javascript": 569, "data_load": 569, "load_tool": 569, "xzvf": 569, "alic": 569, "bob": 569, "person_id_1": 569, "20210611151923": 569, "data_output": 569, "55555": 569, "propertiescolmap": 569, "srcpkcolmap": 569, "dstpkcolmap": 569, "columnidx": 569, "_success": 569, "xxxxx": 569, "sst": 569, "00000": 569, "00001": 569, "00002": 569, "load_data": 569, "test_store_servic": 569, "insert_vertex": 569, "vertexrecordkei": 569, "insert_vertic": 569, "update_vertex_properti": 569, "delete_vertex": 569, "vertex_pk": 569, "delete_vertic": 569, "insert_edg": 569, "edgerecordkei": 569, "update_edge_properti": 569, "delete_edg": 569, "edge_pk": 569, "remote_flush": 569, "snapshot_id": 569, "src_vertex_kei": 569, "dst_vertex_kei": 569, "realtimewrit": 569, "unus": 569, "current_timestamp": 569, "replay_record": 569, "grootclient": 569, "grootclientbuild": 569, "replayrecord": 569, "provis": 569, "lapp": 569, "reinstal": [569, 576], "pv_name": 569, "logback": 569, "zk": 569, "storegcintervalm": 569, "try_catch_up_with_primari": 569, "otel": 569, "arrowfragmentgroup": 570, "spread": 570, "ipc": 570, "docket": 570, "string_oid": 570, "ipcclient": 570, "writeout": 570, "nb": 570, "fragmentloc": 570, "gettotalnodesnum": 570, "labeltyp": 570, "vlabel": 570, "vertex_data_t": 570, "edge_data_t": 570, "willing": 571, "implic": 571, "polymorph": 571, "instant": 571, "aka": 571, "pygrap": [571, 572], "frist": 571, "from_numpi": 571, "bind_sssp1": 571, "delai": 571, "bind_sssp2": 571, "vertex_bal": 572, "vcut": 572, "ecut": 572, "repo_hom": 576, "graph_identifi": 576, "syoov": 577, "79b44f7b58": 577, "ctmqb": 577, "10m": 577, "9m53": 577, "9m46": 577, "6dd67c65fc": 577, "gn4mb": 577, "15334625083466732": 577, "33d": 577, "\u7684\u56fe\u5206\u6790\u5f15\u64ce\u7ee7\u627f\u4e86": 579, "\u8be5\u7cfb\u7edf\u4e8e": 579, "\u4e0a\u9996\u6b21\u63d0\u51fa\u5e76\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956": 579, "\u4e0e\u4ee5\u5f80\u7684\u7cfb\u7edf\u7684\u4e0d\u540c": 579, "\u652f\u6301\u5c06\u4e32\u884c\u56fe\u7b97\u6cd5\u81ea\u52a8\u5e76\u884c\u5316": 579, "\u5728": [579, 580, 581, 582, 583, 586, 587, 588, 589], "\u4e2d": [579, 581, 582, 583, 589], "\u53ea\u9700\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u5373\u53ef\u8f7b\u677e\u5730\u5c06\u4e32\u884c\u7b97\u6cd5\u5373\u63d2\u5373\u7528": 579, "\u4f7f\u5176\u5e76\u884c\u5316\u7684\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u73af\u5883": 579, "\u5e76\u9ad8\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u56fe\u6570\u636e": 579, "\u9664\u4e86\u6613\u4e8e\u7f16\u7a0b\u5916": 579, "\u8fd8\u88ab\u8bbe\u8ba1\u4e3a\u9ad8\u6548\u4e14\u53ef\u62d3\u5c55\u7684\u7cfb\u7edf": 579, "\u53ef\u7075\u6d3b\u5e94\u5bf9\u73b0\u5b9e\u4e2d\u56fe\u5e94\u7528\u591a\u53d8\u7684\u89c4\u6a21": 579, "\u591a\u6837\u6027\u548c\u590d\u6742\u6027": 579, "\u56fe\u5206\u6790\u5f15\u64ce\u5185\u7f6e\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u56fe\u5206\u6790\u7b97\u6cd5": 579, "\u5305\u62ec\u8fde\u901a\u6027\u5206\u6790\u7b97\u6cd5": 579, "\u8def\u5f84\u5206\u6790\u7b97\u6cd5": 579, "\u793e\u533a\u68c0\u6d4b\u548c\u4e2d\u5fc3\u5ea6\u8ba1\u7b97\u7b49\u7c7b\u578b": 579, "\u5185\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u56fe\u4e0a\u8f7b\u677e\u8c03\u7528": 579, "\u521b\u5efa\u9ed8\u8ba4": 579, "\u5e76\u52a0\u8f7d\u5c5e\u6027\u56fe": 579, "\u5927\u591a\u6570\u5185\u7f6e\u7b97\u6cd5\u53ea\u652f\u6301\u5728\u7b80\u5355\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 579, "\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u901a\u8fc7\u9876\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u56fe": 579, "result_lpa": 579, "result_sssp": 579, "\u5185\u7f6e\u7b97\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u5982\u4e0b\u6240\u793a": 579, "\u5177\u4f53\u67d0\u4e2a\u7b97\u6cd5\u662f\u5426\u652f\u6301\u5c5e\u6027\u56fe\u4e5f\u5728\u5176\u6587\u6863\u8fdb\u884c\u4e86\u63cf\u8ff0": 579, "\u7b97\u6cd5\u7684\u652f\u6301\u5217\u8868\u4f1a\u968f\u7740\u4e0d\u65ad\u589e\u52a0\u6301\u7eed\u66f4\u65b0\u4e2d": 579, "\u5f53\u5b8c\u6210\u4e00\u6b21\u56fe\u8ba1\u7b97": 579, "\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u5305\u88c5\u6210": 579, "\u7c7b": [579, 589], "\u4fdd\u5b58\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u5185\u5b58\u4e2d": 579, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5c06\u7ed3\u679c\u4f20\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5904\u7406": 579, "\u6216\u662f\u5199\u5165\u4e91\u4e2d\u67d0\u4f4d\u7f6e\u6216\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf": 579, "\u652f\u6301\u7528\u6237\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u679c\u6570\u636e": 579, "\u8f6c\u5316\u4e3a\u76f8\u5e94\u6570\u636e\u7c7b\u578b": 579, "\u6216\u5199\u5165": 579, "\u6216\u672c\u5730\u76ee\u5f55\u4e2d": 579, "pod\u4e2d\u7684\u672c\u5730\u76ee\u5f55": 579, "\u6216\u5199\u5165\u672c\u5730\u7684": 579, "lpa_result": 579, "\u6570\u636e\u7ed3\u6784": 579, "\u6b64\u5916": [579, 583], "\u5982": [579, 582, 585, 587], "\u5feb\u901f\u4e0a\u624b": [579, 585], "\u4e2d\u6240\u793a": 579, "\u7528\u6237\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u52a0\u56de\u5230\u8be5\u56fe\u6570\u636e\u4e2d\u4f5c\u4e3a\u9876\u70b9": 579, "\u7684\u65b0\u5c5e\u6027": 579, "\u5217": 579, "\u5c06\u7ed3\u679c\u4f5c\u4e3a\u65b0\u5217\u6dfb\u52a0\u56de\u5c5e\u6027\u56fe": 579, "\u5217\u540d\u4e3a": 579, "\u5e76\u751f\u6210\u4e00\u5f20\u65b0\u56fe": 579, "new_graph": [579, 584], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u5668": 579, "\u6765\u5b9a\u4e49\u5c06\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e9b\u90e8\u5206\u5199\u56de\u56fe\u6570\u636e": 579, "\u9009\u62e9\u5668\u6307\u5b9a\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u4f1a\u88ab\u5904\u7406": 579, "\u7c7b\u4f3c\u7684": 579, "\u56fe\u6570\u636e\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u5904\u7406\u6570\u636e\u7684\u4e00\u90e8\u5206": 579, "\u4f8b\u5982\u9876\u70b9id": 579, "\u6211\u4eec\u4e3a\u9009\u62e9\u5668\u4fdd\u7559\u4e86\u4e09\u4e2a\u5173\u952e\u5b57": 579, "\u4ee3\u8868\u7ed3\u679c": 579, "\u5206\u522b\u4ee3\u8868\u9876\u70b9\u548c\u8fb9": 579, "\u4ee5\u4e0b\u662f\u7ed3\u679c\u5904\u7406\u4e2d\u9009\u62e9\u5668\u7684\u4e00\u4e9b\u793a\u4f8b": 579, "\u83b7\u53d6\u9876\u70b9\u4e0a\u7684\u7ed3\u679c": 579, "\u8f6c\u6362\u4e3a": [579, 588], "\u4f7f\u7528\u9876\u70b9\u7684": 579, "\u4f5c\u4e3a\u540d\u4e3a": 579, "\u7684\u5217": 579, "df_vd": 579, "\u4f7f\u7528\u7ed3\u679c\u5217\u4f5c\u4e3a\u540d\u4e3a": 579, "df_result": 579, "property0": 579, "label0": 579, "\u5bf9\u4e8e\u5c5e\u6027\u56fe\u7684\u7ed3\u679c": 579, "\u4f5c\u4e3av\u548ce\u7684\u6807\u7b7e\u9009\u62e9\u5668": 579, "\u5c06": [579, 588], "\u9876\u70b9\u7684": 579, "\u4f5c\u4e3a": [579, 580, 589], "\u4f7f\u7528\u5199\u5728\u5e26\u6709label0\u7684\u9876\u70b9\u4e0a\u7684property0\u4f5c\u4e3a": 579, "gs_data": 579, "\u53ef\u4ee5\u67e5\u770b": 579, "\u83b7\u53d6\u66f4\u591a\u7ec6\u8282": 579, "\u5982\u679c\u5185\u7f6e\u7b97\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42": 579, "\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 579, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": 579, "\u5728\u7eaf": 579, "\u6a21\u5f0f": [579, 587], "\u4e0b\u4f7f\u7528": 579, "\u7f16\u7a0b\u6a21\u578b\u7f16\u5199\u7b97\u6cd5": 579, "\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u7684\u7b97\u6cd5": 579, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u6b64\u7c7b": 579, "\u5982\u4ee3\u7801\u6240\u793a": 579, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4ee5": 579, "\u88c5\u9970\u7684\u7c7b": 579, "\u5e76\u63d0\u4f9b\u4e09\u4e2a\u4e32\u884c": 579, "\u56fe\u7b97\u6cd5\u51fd\u6570": 579, "\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u7b97\u6cd5\u521d\u59cb\u72b6\u6001": 579, "\u51fd\u6570\u5b9a\u4e49\u7b97\u6cd5\u7684\u5c40\u90e8\u8ba1\u7b97": 579, "\u51fd\u6570\u5b9a\u4e49\u5bf9\u5206\u533a\u6570\u636e\u7684\u589e\u91cf\u8ba1\u7b97": 579, "\u4e0e": 579, "\u76f8\u5173\u7684\u5b8c\u6574": 579, "\u53ef\u4ee5\u53c2\u8003": 579, "\u4ee5\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5": 579, "\u4e3a\u4f8b": [579, 583], "\u7528\u6237\u5728": 579, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684": 579, "\u7b97\u6cd5\u53ef\u5982\u4e0b\u6240\u793a": 579, "\u521d\u59cb\u5316\u6bcf\u4e2a\u9876\u70b9\u7684\u8ddd\u79bb": 579, "\u4ececontext\u4e2d\u83b7\u53d6\u6e90\u9876\u70b9": 579, "\u5728\u6e90\u9876\u70b9\u6240\u5728\u5206\u533a\u4e2d": 579, "\u8fd0\u884cdijkstra\u7b97\u6cd5\u4f5c\u4e3a\u90e8\u5206\u8ba1\u7b97": 579, "\u4f7f\u7528\u8fb9\u4e0a\u7b2c\u4e09\u5217\u6570\u636e\u4f5c\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb": 579, "\u589e\u91cf\u8ba1\u7b97": 579, "\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb": 579, "\u7528\u6237\u4ec5\u9700\u8981\u8bbe\u8ba1\u548c\u5b9e\u73b0\u5355\u5206\u533a\u7684\u4e32\u884c\u7b97\u6cd5": 579, "\u800c\u4e0d\u9700\u8981\u8003\u8651\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u7684\u5206\u533a\u901a\u4fe1\u548c\u6d88\u606f\u4f20\u9012": 579, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [579, 589], "\u7ecf\u5178\u7684": 579, "\u7b97\u6cd5\u53ca\u5176\u589e\u91cf\u7248\u672c\u5c31\u53ef\u4ee5\u7528\u4e8e\u5728\u96c6\u7fa4\u4e0a\u7684\u5927\u89c4\u6a21\u56fe\u6570\u636e\u8ba1\u7b97": 579, "\u9664\u4e86\u57fa\u4e8e\u5b50\u56fe\u7684": 579, "\u6a21\u578b\u4e4b\u5916": 579, "\u4e5f\u652f\u6301\u4ee5\u9876\u70b9\u4e3a\u4e2d\u5fc3\u7684": 579, "\u7f16\u7a0b\u6a21\u578b": 579, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u7b97\u6cd5\u7c7b\u6765\u5728": 579, "\u6a21\u578b\u4e2d\u5f00\u53d1\u7b97\u6cd5": 579, "\u6a21\u578b\u4e0d\u540c": 579, "\u7b97\u6cd5\u7c7b\u7684\u88c5\u9970\u5668\u4e3a": 579, "\u8be5\u7c7b\u65b9\u6cd5\u662f": 579, "\u5b9a\u4e49\u5728\u9876\u70b9\u4e0a\u7684": 579, "\u800c\u4e0d\u540c\u4e8e": 579, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u5728\u56fe\u5206\u533a\u4e0a": 579, "\u8fd8\u662f\u4ee5": 579, "\u6a21\u578b\u4e0b\u7684\u7b97\u6cd5\u5982\u4e0b\u6240\u793a": 579, "\u88c5\u9970\u5668": 579, "\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u548c\u6d88\u606f\u6570\u636e\u7684\u7c7b\u578b": 579, "\u652f\u6301\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u901a\u8fc7": 579, "\u4e0a\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u5b9a\u4e49\u5728": 579, "\u4e2d\u7684": [579, 580, 582], "\u51fd\u6570": [579, 587], "\u4e0b\u5217\u4ee3\u7801": 579, "\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5982\u4e0b\u7684": 579, "\u4ee3\u7801\u4ee5\u9ad8\u6548\u5730\u6267\u884c": 579, "\u7528\u6237\u9700\u8981\u5728\u5b9a\u4e49\u7b97\u6cd5\u540e\u8c03\u7528\u7b97\u6cd5": 579, "\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 579, "\u5728\u56fe\u4e0a\u8fd0\u884c\u81ea\u5df1\u7684\u7b97\u6cd5": 579, "\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c": 579, "\u8fd9\u91cc": [579, 580, 589], "\u662f\u4e0e": 579, "\u76f8\u5bf9\u5e94\u7684": 579, "\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u4e4b\u540e": 579, "\u60a8\u53ef\u4ee5\u901a\u8fc7": 579, "\u65b9\u6cd5\u5c06\u7b97\u6cd5\u4fdd\u5b58\u6210": 579, "\u5305\u4ee5\u5907\u5c06\u6765\u4f7f\u7528": 579, "\u5728\u6b64\u4e4b\u540e": 579, "\u60a8\u53ef\u4ee5\u4ece": 579, "\u5305\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 579, "\u4ecegar\u5305\u4e2d\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 579, "\u652f\u6301\u7528\u6237\u7f16\u5199java\u7684pi": 579, "\u5e76\u4e14\u8fd0\u884c\u5728\u56fe\u5206\u6790\u5f15\u64ce\u4e0a": 579, "\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u5982\u679c\u5728graphscop": 579, "\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u4e00\u4e2ajava\u7684\u56fe\u7b97\u6cd5": 579, "\u7136\u540e\u6211\u4eec\u5c06\u5c55\u793a\u5982\u679c\u5b9e\u73b0\u5e76\u8fd0\u884c\u81ea\u5b9a\u4e49\u7684java\u56fe\u7b97\u6cd5": 579, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ecf\u5178\u56fe\u5206\u6790\u7b97\u6cd5\u7684\u793a\u4f8b\u5b9e\u73b0": 579, "\u901a\u8fc7\u4e0b\u9762\u5c55\u793a\u7684\u4f8b\u5b50": 579, "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8bd5\u7740\u8fd0\u884c\u4ed6\u4eec": 579, "\u9996\u5148\u4f60\u9700\u8981\u4ece\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u793a\u4f8bapp\u7684\u5408\u96c6": 579, "\u65e0\u9700\u4efb\u4f55\u66f4\u6539\u4f60\u5c31\u53ef\u4ee5\u5728": 579, "graphscope\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\u7b97\u6cd5": 579, "\u7136\u540e\u4f60\u9700\u8981\u6253\u5f00graphscope\u7684python": 579, "\u5c1d\u8bd5\u8f7d\u56fe\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684bfs\u7684\u7b97\u6cd5": 579, "dist_0": 579, "\u4e3a\u4e86\u7f16\u5199java\u5b9e\u73b0\u7684\u56fe\u7b97\u6cd5": 579, "\u7528\u6237\u9700\u8981\u501f\u52a9\u4e8e": 579, "\u8bf7\u53c2\u8003": [579, 587], "\u6765\u5c06": 579, "\u5b89\u88c5\u5230\u4f60\u7684\u672c\u5730\u73af\u5883\u4e0a": 579, "\u5b89\u88c5\u5b8c\u6210\u540e": 579, "\u4f60\u9700\u8981\u5c06": 579, "\u7684\u4f9d\u8d56\u6dfb\u52a0\u5230\u4f60\u7684maven\u9879\u76ee\u4f9d\u8d56\u4e2d": 579, "\u7528\u6237\u5e94\u5f53\u6ce8\u610f\u5728": 579, "\u7684\u4f9d\u8d56\u914d\u7f6e\u4e0a\u5e94\u5f53\u6dfb\u52a0": 579, "\u6765\u786e\u4fdd": 579, "\u6240\u6709\u5fc5\u8981\u7684\u4f9d\u8d56\u90fd\u88ab\u5305\u62ec\u5230": 579, "\u7528\u6237\u5728\u5f00\u53d1\u81ea\u5df1\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d": 579, "\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9jar\u5305": 579, "\u4e3a\u4e86\u89e3\u51b3\u4f9d\u8d56jar\u5305\u7684\u7248\u672c\u95ee\u9898": 579, "\u7528\u6237\u9700\u8981\u4f7f\u7528\u786e\u4fdd\u81ea\u5df1\u751f\u6210\u7684jar\u5305\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684jar\u5305": 579, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528maven\u63d2\u4ef6": 579, "\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5\u65f6": 579, "\u7528\u6237\u9700\u8981\u6309\u7167": 579, "\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7b97\u6cd5": 579, "\u5e76\u4e14\u9700\u8981\u6839\u636e\u9700\u8981\u7684app\u7c7b\u578b\u6765\u5b9e\u73b0": 579, "\u4e2d\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3": 579, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u5c5e\u6027\u56fe\u4e0a": 579, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u63a5\u53e3": 579, "defaultpropertyappbas": 579, "\u6216": [579, 580, 581, 582, 585, 587], "parallelpropertyappbas": 579, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u7b80\u5355\u56fe\u4e0a": 579, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u501f\u53e3": 579, "defaultappbas": 579, "\u540c\u65f6\u7528\u6237\u9700\u8981\u5b9e\u73b0app\u76f8\u5e94\u7684": 579, "\u6765\u4fdd\u5b58\u8de8superstep\u7684\u6570\u636e": 579, "\u5176\u5e94\u8be5\u662f": 579, "defaultpropertycontextbas": 579, "parallelpropertycontextbas": 579, "defaultcontextbas": 579, "\u6216\u8005": [579, 581, 588, 589], "\u7684\u7684\u5b50\u7c7b": 579, "\u901a\u8fc7\u7ee7\u627f": 579, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5230\u4e0d\u540c\u7c7b\u578b\u7684context\u6240\u62e5\u6709\u7684\u7279\u6027": 579, "\u901a\u8fc7\u8fd9\u4e24\u79cdcontext\u63d0\u4f9b\u7684\u501f\u53e3\u6240\u5b58\u50a8\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e4b\u540e\u53ef\u4ee5\u88ab\u7528\u6237\u8bbf\u95ee": 579, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728python": 579, "client\u4e2dquery\u8fd4\u56de\u7684context": 579, "\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e": 579, "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684app\u7684\u5b9e\u73b0": 579, "\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5bf9\u4e00\u4e2a\u7b80\u5355\u56fe\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e86\u904d\u5386": 579, "\u8be5app\u5bf9\u5e94\u7684context\u7684\u5b9e\u73b0": 579, "\u5728\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e": 579, "\u7528\u6237\u53ef\u80fd\u4f1a\u60f3\u5728\u63d0\u4ea4\u5230graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u8fd0\u884c\u524d": 579, "\u5148\u5728\u672c\u5730\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 579, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u6ee1\u8db3\u7528\u6237\u7684": 579, "\u8fd9\u4e2a\u9700\u6c42": 579, "\u4e3a\u4e86\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 579, "\u7528\u6237\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4": 579, "graphscope_repo": 579, "app_class_nam": 579, "java_path": 579, "path_to_your_jar": 579, "param_str": 579, "params_str": 579, "\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684java": 579, "app\u7684\u7c7b\u7684\u5168\u540d": 579, "\u6307\u5411\u5305\u542b\u7528\u6237\u60f3\u8981\u8fd0\u884c\u7684\u7b97\u6cd5\u7684jar\u5305": 579, "\u53ef\u4ee5\u901a\u8fc7": 579, "\u6765\u5236\u5b9acontext\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570": 579, "\u4f8b\u5982\u5bf9\u4e8ebfs\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528": 579, "\u6765\u6807\u8bb0\u521d\u59cb\u8282\u70b9\u662f6": 579, "\u5e76\u884c\u7ebf\u7a0b\u6570\u4e3a1": 579, "\u53ef\u4ee5": 579, "\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u8fd0\u884ctravers": 579, "jar_path": 579, "\u5728\u672c\u5730\u9a8c\u8bc1\u81ea\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u4e4b\u540e": 579, "\u4f60\u53ef\u4ee5\u901a\u8fc7graphscope\u7684python": 579, "client\u6765\u63d0\u4ea4\u8fd0\u884cjar\u5305": 579, "\u4e00\u4e2ajar\u5305\u4e2d\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684app\u5b9e\u73b0": 579, "\u7528\u6237\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\u76f8\u540c\u7684jar\u5305\u4f46\u662f\u8fd0\u884c\u4e0d\u540c": 579, "\u7684app": 579, "\u8bf7\u8010\u5fc3\u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210": 579, "\u5f53\u8ba1\u7b97\u5b8c\u6210\u540e": 579, "\u4f60\u53ef\u4ee5\u901a\u8fc7": [579, 580, 582], "\u5bf9\u8c61\u6765\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c": 579, "\u76f8\u5173\u8bba\u6587": 579, "wenfei": 579, "jingbo": 579, "xu": 579, "wenyuan": 579, "yu": 579, "jingren": 579, "zhou": 579, "xiaojian": 579, "luo": 579, "qiang": 579, "yin": 579, "cao": 579, "ruiqi": 579, "tod": [579, 585], "yinghui": 579, "wu": 579, "jiaxin": 579, "jiang": 579, "43rd": 579, "zeyu": 579, "zheng": 579, "bohan": 579, "chao": 579, "tian": 579, "\u4ee5": [580, 583, 584, 586, 589], "\u955c\u50cf\u7684\u65b9\u5f0f\u5206\u53d1\u5f15\u64ce\u7b49\u7ec4\u4ef6": 580, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [580, 582], "\u5982\u679c\u8fd0\u884c": 580, "\u7684\u96c6\u7fa4\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u8be5\u955c\u50cf": 580, "\u5219\u4f1a\u62c9\u53d6\u5bf9\u5e94\u7248\u672c\u7684\u6700\u65b0\u955c\u50cf": 580, "\u56e0\u6b64": [580, 581, 583], "\u8bf7\u786e\u4fdd\u60a8\u7684\u96c6\u7fa4\u53ef\u4ee5\u8bbf\u95ee\u516c\u5171\u955c\u50cf\u4ed3\u5e93": 580, "\u4f1a\u8bdd": [580, 583], "\u5ba2\u6237\u7aef": [580, 581, 585], "\u5b83\u5c01\u88c5": 580, "\u7ba1\u7406\u7740": 580, "\u5f15\u64ce\u7684\u5404\u79cd\u7ec4\u4ef6": 580, "\u5e76": 580, "\u8fde\u63a5": 580, "\u64cd\u4f5c\u7528\u6237\u5728": 580, "\u96c6\u7fa4\u4e0a\u7684": 580, "\u5f15\u64ce": 580, "\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a": 580, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\u4f1a\u8bdd\u6765\u62c9\u8d77\u4e00\u4e2a": 580, "\u5b9e\u4f8b": 580, "\u7528\u6237\u6709\u65f6\u9700\u8981\u4f7f\u7528\u5728\u672c\u673a\u78c1\u76d8\u4e0a\u7684\u6570\u636e": 580, "\u6211\u4eec\u63d0\u4f9b\u4e86\u9009\u9879\u4f9b\u7528\u6237\u5c06\u672c\u673a\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e0a": 580, "\u5047\u5b9a\u6211\u4eec\u8981\u5c06\u672c\u673a\u7684": 580, "\u7684\u8def\u5f84\u6302\u8f7d\u5230": 580, "\u8def\u5f84": [580, 589], "\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u4e00\u4e2a\u5b57\u5178": 580, "\u7136\u540e": [580, 588], "\u5c06\u5176\u901a\u8fc7": 580, "\u7684\u53c2\u6570\u4f20\u7ed9\u4f1a\u8bdd\u7684\u6784\u9020\u51fd\u6570": 580, "\u6ce8\u610f\u8fd9\u91cc\u7684\u672c\u673a\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e": 580, "\u8282\u70b9\u7684\u6982\u5ff5": 580, "\u5982\u679c\u4f60\u662f\u901a\u8fc7": 580, "\u521b\u5efa\u7684\u96c6\u7fa4": 580, "\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230": 580, "\u7684\u865a\u62df\u4e3b\u673a\u7684\u76f8\u5e94\u8def\u5f84\u4e0a": 580, "\u6216\u8005\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u5f84\u63d0\u524d\u6302\u8f7d\u5230\u865a\u62df\u4e3b\u673a\u4e0a\u53bb": 580, "\u67e5\u770b\u66f4\u591a\u7ec6\u8282": 580, "\u4e0a\u7684\u4e00\u4e2a": 580, "\u5b9e\u4f8b\u5305\u542b": 580, "\u4e00\u4e2a\u8fd0\u884c": 580, "\u7684": [580, 581, 582, 585, 590], "\u8d1f\u8d23\u5143\u4fe1\u606f\u7684\u540c\u6b65": 580, "\u8d1f\u8d23\u5bf9": 580, "\u5f15\u64ce\u5bb9\u5668\u7684\u7ba1\u7406": 580, "\u4ee5\u53ca\u4e00\u7ec4\u8fd0\u884c": 580, "\u5f15\u64ce\u5bb9\u5668\u7684": 580, "replicaset": 580, "\u5bf9\u8c61": 580, "\u540e\u7aef\u670d\u52a1\u7684\u5165\u53e3": 580, "\u901a\u8fc7": [580, 583], "\u63a5\u6536\u6765\u81ea": 580, "\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u548c\u547d\u4ee4": 580, "\u5e76\u7ba1\u7406\u7740\u56fe\u5206\u6790\u5f15\u64ce": 580, "\u56fe\u67e5\u8be2\u5f15\u64ce": 580, "\u56fe\u5b66\u4e60\u5f15\u64ce": [580, 585], "\u7684\u751f\u547d\u5468\u671f": 580, "\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u914d\u7f6e\u5f15\u64ce\u955c\u50cf\u5730\u5740\u7b49\u53c2\u6570": 580, "\u8bf7\u5728": 580, "\u4e2d\u53c2\u9605\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f": 580, "\u83b7\u53d6\u5e76\u6dfb\u52a0\u4ed3\u5e93\u4fe1\u606f": 580, "\u5b89\u88c5": [580, 585], "release_nam": 580, "\u68c0\u6d4bgraphscope\u670d\u52a1\u53ef\u7528\u6027": 580, "\u53c2\u8003": 580, "\u8be5\u94fe\u63a5": 580, "\u4ee5\u901a\u8fc7python\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9884\u542f\u52a8\u7684graphscope\u670d\u52a1": 580, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728aws\u6216\u963f\u91cc\u4e91\u4e0a\u521b\u5efa": 580, "\u96c6\u7fa4\u7684\u4ea4\u4e92\u5f0f\u811a\u672c": 580, "\u8fd9\u4e00\u811a\u672c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5df2\u6709\u7684\u96c6\u7fa4\u6216\u521b\u5efa\u65b0\u7684": 580, "\u96c6\u7fa4": [580, 582, 586], "\u7136\u540e\u8f93\u51fa\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6": 580, "\u7528\u6cd5\u5982\u4e0b": 580, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7": 580, "launch_clust": 580, "\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 580, "boto3": 580, "your_access_key_id": 580, "your_access_key_secret": 580, "region": 580, "your_region_nam": 580, "kube_config_path": 580, "alibabacloud_cs20151215": 580, "alibabacloud_ecs20140526": 580, "alibabacloud_vpc20160428": 580, "your_region_id": 580, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728\u672c\u5730\u5b89\u88c5graphscope\u76f8\u5173\u4f9d\u8d56\u7684\u811a\u672c": 580, "\u8be5\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u5728": 580, "\u5e73\u53f0\u4e0a": 580, "\u4e3b\u8981\u7684\u7528\u6cd5\u5982\u4e0b": 580, "\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 580, "\u5f00\u53d1\u76f8\u5173\u4f9d\u8d56": 580, "\u672c\u5730\u90e8\u7f72": 580, "graphscope_env": [580, 581], "\u7684\u80cc\u540e\u6709\u4e00\u7fa4\u6d3b\u8dc3\u7684\u5de5\u7a0b\u4eba\u5458\u548c\u7814\u7a76\u4eba\u5458\u56e2\u961f\u6765\u63a8\u8fdb\u65e5\u5e38\u7684\u5f00\u53d1\u548c\u7ef4\u62a4": 581, "\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684": 581, "\u4e3a\u6539\u5584\u8be5\u9879\u76ee\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e": 581, "\u9075\u5faa": 581, "\u7684\u5f00\u6e90\u534f\u8bae": 581, "\u9700\u8981\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u548c\u4f9d\u8d56": 581, "\u4e3a\u4e86\u8ba9\u5f00\u53d1\u8005\u66f4\u5bb9\u6613\u4e0a\u624b": 581, "\u6211\u4eec\u63d0\u4f9b\u4e86\u5b89\u88c5\u4e86\u6240\u9700\u4f9d\u8d56\u7684": 581, "\u955c\u50cf": 581, "\u5f00\u53d1\u8005\u9700\u8981\u901a\u8fc7": 581, "\u7684\u547d\u4ee4\u4ece\u6211\u4eec\u7684\u5f00\u6e90\u4ee3\u7801\u5e93": 581, "\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u7684\u4ee3\u7801": 581, "\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u5f00\u53d1\u6216\u4ee3\u7801\u7684\u66f4\u6539": 581, "\u7136\u540e\u5728\u4ee3\u7801\u7684\u6839\u76ee\u5f55": 581, "\u6267\u884c": 581, "10240m": 581, "minitest": 581, "unittest": 581, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6784\u5efa\u547d\u4ee4\u5f00\u53d1\u5e76\u6d4b\u8bd5\u5176\u4e2d\u67d0\u4e00\u4e2a\u6a21\u5757": 581, "\u6bd4\u5982": [581, 589], "\u56fe\u5206\u6790\u5f15\u64ce": [581, 585], "\u6a21\u5757": 581, "\u7136\u540e\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6784\u5efa": 581, "\u8be5\u547d\u4ee4\u4f1a\u5f00\u59cb": 581, "\u7684\u6784\u5efa\u8fc7\u7a0b": 581, "\u8be5\u8fc7\u7a0b\u5c06\u5728": 581, "\u7684\u5bb9\u5668\u4e2d\u6784\u5efa\u5f53\u524d\u6e90\u4ee3\u7801": 581, "\u5e76\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230": 581, "\u8fd0\u884c\u65f6\u57fa\u7840\u955c\u50cf": 581, "\u751f\u6210\u7684\u955c\u50cf\u5c06\u88ab\u6807\u8bb0": 581, "\u4e3a": [581, 582, 583], "shortsha": 581, "\u5ba2\u6237\u7aef\u4e0d\u5305\u542b\u5728\u8be5\u955c\u50cf\u4e2d": 581, "\u6784\u5efa\u4e5f\u4e0e\u5f15\u64ce\u6709\u6240\u4e0d\u540c": 581, "\u5982\u679c\u5f00\u53d1\u8005\u6b63\u5728\u5f00\u53d1": 581, "\u5ba2\u6237\u7aef\u5e76\u4e14\u672a\u4fee\u6539\u5f15\u64ce\u76f8\u5173\u7684\u6587\u4ef6": 581, "\u90a3\u4e48": 581, "\u955c\u50cf\u662f\u4e0d\u9700\u8981\u91cd\u5efa\u7684": 581, "\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5728\u672c\u5730\u91cd\u65b0\u5b89\u88c5": 581, "\u5ba2\u6237\u7aef\u5373\u53ef": 581, "\u6d4b\u8bd5\u65b0\u6784\u5efa\u7684\u955c\u50cf": 581, "\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd": 581, "\u6307\u5b9a\u7528\u65b0\u7f16\u8bd1\u7684\u955c\u50cf": 581, "\u4e0b\u7684": 581, "\u5206\u53d1\u5305\u662f\u57fa\u4e8e": 581, "\u73af\u5883\u4e0b\u6784\u5efa\u7684": 581, "\u4e0b\u5206\u522b\u6784\u5efa": 581, "\u7531\u4e8e": 581, "\u4e0b\u7684\u6784\u5efa\u8fc7\u7a0b\u662f\u5728\u672c\u5730": 581, "\u975edocker": 581, "\u4e2d\u8fdb\u884c": 581, "\u56e0\u6b64\u9700\u8981\u672c\u5730\u4e8b\u5148\u5b89\u88c5": 581, "\u7684\u4f9d\u8d56": 581, "\u57fa\u4e8e\u5f53\u524d": 581, "\u73af\u5883\u4e0b\u7684": 581, "\u7248\u672c\u6784\u5efa": 581, "\u9700\u8981\u6ce8\u610f\u7684\u662f": [581, 583], "\u5982\u679c\u4f60\u9700\u8981\u8be5\u5206\u53d1\u5305\u80fd\u652f\u6301\u4e0d\u540c\u7684": 581, "\u7248\u672c": [581, 586], "\u4f60\u53ef\u80fd\u9700\u8981\u901a\u8fc7": 581, "conda": 581, "pyenv": 581, "\u5b89\u88c5\u591a\u4e2a": 581, "\u7684\u7248\u672c": 581, "\u98ce\u683c": 581, "\u5982\u679c\u4f60\u7684\u4ee3\u7801\u6ca1\u6709\u901a\u8fc7ci\u7684\u98ce\u683c\u68c0\u67e5": 581, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 581, "\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801": 581, "\u6211\u4eec\u6536\u96c6\u4e86\u7528\u6237\u4f7f\u7528": 582, "\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898": 582, "\u5982\u679c\u5728\u4e0b\u9762\u7684\u5217\u8868\u4e2d\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u60a8\u9047\u5230\u7684\u95ee\u9898\u7684\u7b54\u6848": 582, "\u53ef\u901a\u8fc7\u63d0\u4ea4": 582, "\u6216\u8005\u5728": 582, "\u4e0e\u6211\u4eec\u8054\u7cfb": 582, "\u8fd0\u884c": 582, "\u7cfb\u7edf\u9700\u8981\u7684\u6700\u5c0f\u8d44\u6e90\u662f\u591a\u5c11": 582, "\u5728\u901a\u8fc7": 582, "\u5ba2\u6237\u7aef\u4f7f\u7528": 582, "\u8fc7\u7a0b\u4e2d": 582, "\u9700\u8981\u7684\u6700\u4f4e": 582, "\u7248\u672c\u662f3": 582, "\u6700\u4f4epip\u7248\u672c\u662f": 582, "\u7cfb\u7edf\u652f\u6301\u4ee5\u5355\u673a\u6216\u5206\u5e03\u5f0f\u7684\u65b9\u5f0f\u90e8\u7f72": 582, "\u5355\u673a\u60c5\u51b5\u4e0b": 582, "\u8d44\u6e90\u9700\u6c42": 582, "\u6838": 582, "\u5185\u5b58": 582, "\u5728\u652f\u6301\u4ee5\u4e0b\u73af\u5883\u4e2d\u8fd0\u884c": 582, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72": 582, "\u9700\u8981\u7528\u6237\u62e5\u6709\u4e00\u4e2a": 582, "\u7684\u73af\u5883\u4e0a\u6d4b\u8bd5\u901a\u8fc7": 582, "\u662f\u5426\u5f3a\u4f9d\u8d56": 582, "\u652f\u6301\u5728\u5355\u673a\u6a21\u5f0f\u5b89\u88c5\u8fd0\u884c": 582, "\u7684\u9884\u7f16\u8bd1\u5305\u4ee5": 582, "\u7684\u5f62\u5f0f\u5206\u53d1": 582, "\u53ef\u4ee5\u7528": 582, "\u5feb\u901f\u5b89\u88c5": 582, "\u5982\u4f55\u5982\u67e5\u770b": 582, "\u7684\u8fd0\u884c\u65f6\u4fe1\u606f": 582, "\u8fd0\u884c\u4e0d\u6253\u5370\u65e5\u5fd7\u4fe1\u606f": 582, "\u53c2\u6570\u5f00\u542f\u65e5\u5fd7\u8f93\u51fa": 582, "\u5982\u679c\u60a8\u7684graphscope\u8fd0\u884c\u5728k8s\u96c6\u7fa4\u4e0a": 582, "\u53ef\u4ee5\u4f7f\u7528": [582, 588], "\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001": 582, "\u540c\u65f6\u5982\u679c\u4f60\u53ef\u4ee5\u8bbf\u95ee": 582, "\u7684\u78c1\u76d8": 582, "\u4e5f\u53ef\u5728": 582, "\u76ee\u5f55\u4e0b\u67e5\u770b\u8fd0\u884c\u65f6\u65e5\u5fd7": 582, "\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528": 582, "\u547d\u4ee4\u65f6": 582, "\u53d1\u73b0\u4e86\u4e00\u4e9b\u591a\u4f59\u7684": 582, "\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u5931\u8d25\u7684": 582, "\u53ea\u80fd\u901a\u8fc7\u624b\u52a8\u6267\u884c\u547d\u4ee4\u5982": 582, "\u8fdb\u884c\u5220\u9664": 582, "\u901a\u5e38\u60c5\u51b5\u4e0b": 582, "\u8be5\u95ee\u9898\u51fa\u73b0\u5728\u4f7f\u7528": 582, "\u90e8\u7f72": [582, 585], "\u65f6": [582, 583], "\u4f9d\u8d56\u4e00\u4e9b\u6743\u9650\u6765\u5220\u9664\u8fd0\u884c\u65f6\u7684\u8d44\u6e90": 582, "\u5982\u679c\u7528\u6237\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e": 582, "\u7b49\u6743\u9650": 582, "\u53ef\u80fd\u4e0d\u80fd\u6b63\u786e\u56de\u6536\u5206\u914d\u7684\u8d44\u6e90": 582, "\u8be6\u7ec6\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b": 582, "\u662f\u56fe\u6570\u636e\u5e93\u5417": 582, "\u5e76\u4e0d\u662f\u4e00\u4e2a\u56fe\u6570\u636e\u5e93": 582, "\u4f46\u5176\u5305\u542b\u4e00\u4e2a\u6301\u4e45\u56fe\u5b58\u50a8\u7684\u7ec4\u4ef6": 582, "\u53ef\u4ee5\u88ab\u7528\u4f5c\u6570\u636e\u5e93": 582, "\u4e0a\u7684\u517c\u5bb9\u6027\u5982\u4f55": 582, "\u76ee\u524d": [582, 589], "graphscope\u652f\u6301gremlin\u8bed\u8a00\u4e2d\u7684\u5927\u90e8\u5206\u67e5\u8be2\u7b97\u5b50": 582, "\u53ef\u901a\u8fc7": 582, "\u8be5\u6587\u6863": 582, "\u67e5\u770b\u8be6\u7ec6\u7684\u652f\u6301\u4fe1\u606f": 582, "\u770b\u8d77\u6765\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u4e86": 582, "\u5982\u679c": 582, "\u770b\u8d77\u6765\u50cf\u5361\u4f4f": 582, "\u53ef\u80fd\u7684\u539f\u56e0\u6709": 582, "\u5728\u4f1a\u8bdd\u7684\u62c9\u8d77\u9636\u6bb5": 582, "\u5982\u679c\u5f53\u524d\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u8fc7\u6162": 582, "\u6216\u5f53\u524d\u96c6\u7fa4\u8d44\u6e90\u65e0\u6cd5\u6ee1\u8db3\u8bf7\u6c42\u7684\u8d44\u6e90\u65f6": 582, "\u4f1a\u9020\u6210\u5361\u4f4f\u7684\u73b0\u8c61": 582, "\u8f7d\u56fe\u9636\u6bb5": 582, "\u53ef\u80fd\u4f1a\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927\u9020\u6210\u77ed\u6682\u7684\u5361\u4f4f\u73b0\u8c61": 582, "\u5728\u6267\u884c\u56fe\u7b97\u6cd5\u5206\u6790\u9636\u6bb5": 582, "\u6216\u8005\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 582, "\u7f16\u8bd1\u6784\u5efa\u5e94\u7528\u7684\u5e93\u65f6\u4f1a\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4": 582, "\u4e3a\u4ec0\u4e48\u8f7d\u56fe\u65f6\u62a5\u627e\u4e0d\u5230\u6587\u4ef6\u7684\u9519\u8bef": 582, "\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u96c6\u7fa4\u65b9\u5f0f\u90e8\u7f72\u8fd0\u884c": 582, "\u6570\u636e\u6587\u4ef6\u5fc5\u987b\u8981\u5bf9": 582, "\u53ef\u89c1": 582, "\u4f60\u4e5f\u8bb8\u9700\u8981\u6302\u8f7d\u78c1\u76d8\u6216\u8005\u4f7f\u7528\u4e91\u5b58\u50a8\u63d0\u4f9b\u5546\u7684\u670d\u52a1": 582, "\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u662f\u4f7f\u7528": 582, "\u90e8\u7f72\u7684": 582, "\u4f60\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e": 582, "\u6765\u628a\u672c\u673a\u76ee\u5f55\u6302\u8f7d\u5230": 582, "\u865a\u62df\u7684": 582, "\u6709\u4ec0\u4e48\u533a\u522b": 582, "\u5982\u4f55\u8bbe\u7f6e": 582, "\u5bb9\u5668\u5206\u914d\u7684\u5185\u5b58": 582, "\u5b83\u5b58\u50a8\u7531": 582, "\u7ba1\u7406\u7684\u539f\u59cb\u6570\u636e\u7684": 582, "\u7684\u5143\u4fe1\u606f": 582, "\u4f8b\u5982\u5f62\u72b6": 582, "\u540d\u79f0\u7b49": 582, "\u7531\u4e8e\u5143\u6570\u636e\u6bd4\u6570\u636e\u96c6\u5c0f\u5f97\u591a": 582, "\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u914d\u7f6e\u5c31\u8db3\u591f\u4e86": 582, "\u5b83\u76f8\u5f53\u4e8e": 582, "\u5b58\u50a8\u6570\u636e\u96c6\u7684\u5185\u5b58": 582, "\u6211\u4eec\u53d1\u73b0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6570\u636e\u96c6\u5728\u78c1\u76d8\u4e0a\u7684\u5927\u5c0f\u7684": 582, "\u500d\u901a\u5e38\u662f\u4e00\u4e2a\u5408\u7406\u7684\u503c": 582, "\u5bb9\u5668\u7684\u5185\u5b58\u5927\u5c0f": 582, "\u4e00\u822c\u5c06\u5176\u8bbe\u7f6e\u4e3a": 582, "\u7684\u540c\u6837\u5927\u5c0f": 582, "\u5bfc\u81f4\u5728": 582, "\u73af\u5883\u4e0b\u5b89\u88c5": 582, "\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b": 582, "\u7f16\u8bd1": 582, "\u5931\u8d25": 582, "\u6765\u5c1d\u8bd5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684": 582, "\u8be6\u60c5\u53ef\u53c2\u8003": 582, "\u4f60\u53ef\u4ee5\u6839\u636e": 582, "\u6b64\u6559\u7a0b": 582, "\u6765\u6e90\u7801\u7f16\u8bd1": 582, "\u6216\u5c1d\u8bd5\u901a\u8fc7": 582, "\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 582, "\u4e0a\u5206\u914d": 582, "\u65f6\u9047\u5230\u4e86": 582, "\u95ee\u9898": 582, "\u5982\u4f55\u89e3\u51b3": 582, "\u901a\u5e38\u5f53\u4f7f\u7528": 582, "\u7684\u65b9\u5f0f\u5b89\u88c5": 582, "\u4f1a\u62a5": 582, "\u9519\u8bef": [582, 584], "\u6211\u4eec\u901a\u8fc7": 582, "\u6765\u67e5\u770b\u65e5\u5fd7": 582, "\u6b64\u65f6\u65e5\u5fd7\u663e\u793a": 582, "\u901a\u5e38\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f": 582, "\u5feb\u901f\u7684\u65b9\u5f0f\u662f\u5728\u6240\u6709\u76f8\u5173\u7684": 582, "\u76ee\u5f55\u4e0a\u4f7f\u7528": 582, "\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528": 582, "\u4f18\u96c5\u7684\u65b9\u6cd5\u662f\u9996\u5148\u521b\u5efa": 582, "\u7528\u6237\u548c\u7528\u6237\u7ec4": 582, "\u7136\u540e\u5c06": 582, "\u4e0a\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u76f8\u5173nfs\u76ee\u5f55": 582, "\u4e3a\u4ec0\u4e48\u5728": 582, "\u96c6\u7fa4\u4e0a\u62c9\u8d77": 582, "\u5b9e\u4f8b\u65f6": 582, "\u4ea7\u751f\u8d85\u65f6\u5f02\u5e38": 582, "\u5927\u591a\u6570\u60c5\u51b5\u4e0b": 582, "\u8d85\u65f6\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5728": 582, "\u96c6\u7fa4\u62c9\u8d77": 582, "\u5b9e\u4f8b\u65f6\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u955c\u50cf": 582, "\u8fd9\u4e00\u6b65\u901a\u5e38\u9700\u8981\u51e0\u5206\u949f\u7684\u65f6\u95f4": 582, "\u9002\u5f53\u7684\u589e\u52a0\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4\u6765\u89e3\u51b3\u8be5\u95ee\u9898": 582, "\u542f\u52a8graphscope\u65f6\u7531\u4e8e\u8fde\u63a5v6d": 582, "etcd\u7b49\u7ec4\u4ef6\u5931\u8d25\u800c\u5bfc\u81f4graphscope\u542f\u52a8\u5931\u8d25": 582, "\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4f60\u6240\u4f7f\u7528\u7684\u673a\u5668": 582, "\u6216\u5bb9\u5668": 582, "\u6240\u5728\u7684\u4f01\u4e1a\u7f51\u7edc\u5185\u8981\u6c42\u76f8\u5e94\u7684\u4ee3\u7406\u8bbe\u7f6e\u65b9\u53ef\u6b63\u5e38\u4f7f\u7528\u7f51\u7edc": 582, "\u8fd9\u4e9b\u4ee3\u7406\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u5740\u89e3\u6790\u4ee5\u53ca\u7aef\u53e3\u5360\u7528": 582, "\u4e3a\u907f\u514d\u7c7b\u4f3c\u60c5\u51b5": 582, "\u53ef\u5728\u73af\u5883\u53d8\u91cf": 582, "\u4e2d\u52a0\u5165graphscope\u76f8\u5173\u7684\u5730\u5740": 582, "\u4ee5\u53ca": [582, 589], "\u8bf7\u6ce8\u610f": 582, "no_proxy\u7684\u524d\u540e\u7f00\u89c4\u5219": 582, "stackexchang": 582, "23452": 582, "\u5176\u4ed6\u95ee\u9898": 582, "\u60a8\u53ef\u4ee5\u63d0\u4ea4": 582, "\u63d0\u51fa\u4f60\u7684\u95ee\u9898": 582, "\u540c\u65f6": [582, 587], "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528": 582, "\u505a\u4e3a\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 583, "\u53ef\u4ee5\u5904\u7406\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2": 583, "\u56fe\u5206\u6790\u548c\u56fe\u5b66\u4e60\u4efb\u52a1": 583, "\u5e76\u4e14\u5177\u6709\u6613\u4e8e\u4f7f\u7528": 583, "\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u7b49\u7279\u70b9": 583, "\u672c\u7ae0\u8282\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e": 583, "\u4f7f\u7528": [583, 585, 588, 589, 590], "\u5e76\u5e2e\u52a9\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u9ad8\u6548\u7684\u5206\u6790\u5927\u56fe": 583, "\u6570\u636e\u96c6": 583, "\u662f\u7531\u5fae\u8f6f\u5b66\u672f\u5173\u7cfb\u56fe": 583, "\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u5f02\u6784\u56fe\u7f51\u7edc": 583, "\u8be5\u56fe\u4e2d\u5305\u542b4\u79cd\u7c7b\u578b\u7684\u5b9e\u4f53": 583, "\u5373\u8bba\u6587": 583, "\u4f5c\u8005": 583, "\u673a\u6784\u548c\u7814\u7a76\u9886\u57df": 583, "\u4ee5\u53ca\u8fde\u63a5\u4e24\u4e2a\u5b9e\u4f53\u7684\u56db\u79cd\u7c7b\u578b\u7684\u6709\u5411\u5173\u7cfb\u8fb9": 583, "\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u662f": 583, "\u7ed9\u51fa\u5f02\u6784\u7684": 583, "\u6570\u636e": 583, "\u5728\u8be5\u56fe\u4e0a\u9884\u6d4b\u6bcf\u7bc7\u8bba\u6587\u7684\u7c7b\u522b": 583, "\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 583, "\u8be5\u4efb\u52a1\u53ef\u4ee5\u5f52\u7c7b\u5728\u5404\u4e2a\u9886\u57df": 583, "\u5404\u4e2a\u65b9\u5411\u6216\u7814\u7a76\u5c0f\u7ec4\u7684\u8bba\u6587": 583, "\u901a\u8fc7\u5bf9\u8bba\u6587\u5c5e\u6027\u548c\u5f15\u7528\u56fe\u4e0a\u7684\u7ed3\u6784\u4fe1\u606f\u5bf9\u8bba\u6587\u8fdb\u884c\u5206\u7c7b": 583, "\u5728\u8be5\u6570\u636e\u4e2d": 583, "\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u5305\u542b\u4e86\u4e00\u4e2a\u4ece\u8bba\u6587\u6807\u9898": 583, "\u6458\u8981\u62bd\u53d6\u7684": 583, "\u7ef4": 583, "\u5411\u91cf\u4f5c\u4e3a\u8868\u5f81": 583, "\u8be5\u8868\u5f81\u662f\u7ecf\u8fc7": 583, "\u9884\u8bad\u7ec3\u63d0\u524d\u83b7\u53d6\u7684": 583, "\u800c\u7ed3\u6784\u4fe1\u606f\u662f\u5728\u4ee5\u4e0b\u8fc7\u7a0b\u4e2d\u5373\u65f6\u8ba1\u7b97\u7684": 583, "\u4e0a\u56fe\u8868\u793a\u4e86\u7528\u6237\u901a\u8fc7": 583, "\u5ba2\u6237\u7aef\u8c03\u7528": 583, "\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u7a0b": 583, "\u6b65\u9aa4": 583, "\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd": 583, "\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4": 583, "\u5b9a\u4e49\u548c\u8f7d\u5165\u56fe": 583, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u56fe": 583, "\u6267\u884c\u56fe\u7b97\u6cd5\u505a\u56fe\u5206\u6790": 583, "\u6267\u884c\u57fa\u4e8e\u56fe\u6570\u636e\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1": 583, "\u7684\u7b2c\u4e00\u6b65": 583, "\u6211\u4eec\u9700\u8981\u5728": 583, "\u4e2d\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 583, "\u5bf9\u4e8e": [583, 586], "\u521b\u5efa\u4f1a\u8bdd\u9700\u8981\u4f7f\u7528": 583, "\u670d\u52a1\u7c7b\u578b": 583, "\u9ed8\u8ba4\u662f": 583, "\u53e6\u5916": [583, 589], "\u6ce8\u610f": [583, 586], "\u662f": 583, "\u4e3b\u673a\u4e0a\u7684\u8def\u5f84": 583, "\u5f53\u5728": 583, "\u4e0a\u4f7f\u7528": 583, "\u9700\u8981\u9996\u5148\u5c06\u6b64\u8def\u5f84\u52a0\u5165\u5230": 583, "\u7684\u5171\u4eab\u76ee\u5f55\u4e2d": 583, "\u901a\u5e38\u4e3a": 583, "\u66f4\u8be6\u7ec6\u7684\u6307\u5f15\u8bf7\u53c2\u770b": 583, "\u7684\u5efa\u7acb\u8fc7\u7a0b\u4e2d": 583, "\u9996\u9009\u4f1a\u5728\u80cc\u540e\u5c1d\u8bd5\u62c9\u8d77\u4e00\u4e2a": 583, "\u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u7684\u5165\u53e3": 583, "\u8be5": 583, "\u8d1f\u8d23\u7ba1\u7406\u8be5\u6b21\u4f1a\u8bdd\u7684": 583, "\u6240\u6709\u8d44\u6e90": 583, "\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u67e5\u8be2": 583, "\u56fe\u5b66\u4e60\u5f15\u64ce\u7684\u751f\u547d\u5468\u671f": 583, "\u540e\u7eed\u62c9\u8d77\u7684\u5176\u4ed6\u6bcf\u4e2a": 583, "\u90fd\u6709\u4e00\u4e2a": 583, "\u5b9e\u4f8b\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u5c42": 583, "\u5206\u5e03\u5f0f\u7684\u7ba1\u7406\u56fe\u6570\u636e": 583, "\u8f7d\u56fe": [583, 584, 585], "\u4ee5\u5c5e\u6027\u56fe": 583, "\u5efa\u6a21\u56fe\u6570\u636e": [583, 589], "\u5c5e\u6027\u56fe\u4e2d": 583, "\u70b9\u548c\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 583, "\u4e0d\u540c\u7684\u6807\u7b7e\u6709\u4e0d\u540c\u7684\u5c5e\u6027": 583, "\u4e0b\u56fe\u5c55\u793a\u4e86\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 583, "\u8be5\u56fe\u5177\u6709\u56db\u79cd\u9876\u70b9": 583, "\u5206\u522b\u6807\u8bb0\u4e3a": 583, "\u8bba\u6587": 583, "\u673a\u6784": 583, "\u7814\u7a76\u9886\u57df": 583, "\u6709\u56db\u79cd\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9": 583, "\u6bcf\u79cd\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 583, "\u5e76\u4e14\u8fb9\u7684\u4e24\u7aef\u9876\u70b9\u7684\u6807\u7b7e\u4e5f\u662f\u786e\u5b9a\u7684": 583, "\u5f15\u7528": 583, "\u8fd9\u79cd\u6807\u7b7e\u7684\u8fb9\u8fde\u63a5\u4e24\u4e2a": 583, "\u9876\u70b9": 583, "\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u6807\u8bb0\u4e3a": 583, "\u64b0\u5199": 583, "\u7684\u8fb9": [583, 589], "\u5b83\u8981\u6c42\u8be5\u8d77\u59cb\u70b9\u7684\u6807\u8bb0\u4e3a": 583, "\u7ec8\u6b62\u70b9\u7684\u6807\u8bb0\u4e3a": 583, "\u6240\u6709\u7684\u9876\u70b9": 583, "\u548c\u8fb9\u90fd\u53ef\u4ee5\u5177\u6709\u5c5e\u6027": 583, "\u9876\u70b9\u5177\u6709\u8bf8\u5982\u53d1\u5e03\u5e74\u4efd": 583, "\u4e3b\u9898\u6807\u7b7e\u7b49\u5c5e\u6027": 583, "\u8981\u5c06\u6b64\u56fe\u52a0\u8f7d\u5230": 583, "\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0e": 583, "\u6570\u636e\u6587\u4ef6": 583, "\u7ed3\u5408\u4f7f\u7528": 583, "\u8bf7\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u672c\u5730\u7684\u6302\u8f7d\u76ee\u5f55": 583, "\u5728\u672c\u4f8b\u4e2d\u4e3a": 583, "author_affiliated_with_institut": 583, "paper_has_topic_field_of_studi": 583, "hastop": 583, "paper_cites_pap": 583, "author_writes_pap": 583, "\u4e5f\u53ef\u901a\u8fc7\u6211\u4eec\u63d0\u4f9b\u7684\u5185\u7f6e\u6570\u636e\u96c6\u51fd\u6570\u5e2e\u52a9\u5b8c\u6210\u8f7d\u56fe\u6d41\u7a0b": 583, "\u8fd9\u91cc\u7684": 583, "\u5df2\u7ecf\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b58\u50a8\u5728": 583, "\u4e2d\u7684\u56fe": 583, "\u56fe\u6570\u636e\u5206\u5e03\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u80cc\u540e\u62c9\u8d77\u7684": 583, "\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b": 583, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u5141\u8bb8\u7528\u6237\u4ee5": 583, "\u63a2\u7d22\u6027": 583, "\u65b9\u5f0f\u6765\u63a2\u7d22": 583, "\u67e5\u770b\u548c\u663e\u793a\u56fe\u6570\u636e": 583, "\u4ee5\u65b9\u4fbf\u7684\u5b9a\u4f4d\u548c\u6d1e\u5bdf\u7279\u5b9a\u7684\u6df1\u5165\u4fe1\u606f": 583, "\u91c7\u7528\u79f0\u4e3a": 583, "\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u56fe\u904d\u5386": 583, "\u5e76\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u9ad8\u6548\u6267\u884c": 583, "\u5728\u6b64\u793a\u4f8b\u4e2d": 583, "\u6211\u4eec\u4f7f\u7528\u56fe\u904d\u5386\u6765\u67e5\u770b\u4e24\u4f4d\u7ed9\u5b9a\u4f5c\u8005\u5171\u540c\u64b0\u5199\u7684\u8bba\u6587\u6570\u91cf": 583, "\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2": 583, "\u6211\u4eec\u5047\u8bbe\u4f5c\u8005\u53ef\u4ee5\u5206\u522b\u7531id": 583, "\u552f\u4e00\u6807\u8bc6": 583, "\u56fe\u5206\u6790\u662f\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u7c7b\u56fe\u8ba1\u7b97": 583, "\u4e8b\u5b9e\u8bc1\u660e": 583, "\u8bb8\u591a\u7b97\u6cd5": 583, "\u4f8b\u5982\u793e\u533a\u68c0\u6d4b": 583, "\u8def\u5f84\u548c\u8fde\u63a5\u6027": 583, "\u96c6\u4e2d\u6027": 583, "\u5728\u5404\u79cd\u4e1a\u52a1\u4e2d\u90fd\u975e\u5e38\u6709\u6548": 583, "\u5185\u5efa\u4e86\u4e00\u7ec4\u9884\u7f6e\u5e38\u7528\u7b97\u6cd5": 583, "\u65b9\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5206\u6790\u56fe\u6570\u636e": 583, "\u4e0b\u9762\u6211\u4eec\u9996\u5148\u901a\u8fc7\u5728\u7279\u5b9a\u5468\u671f\u5185\u4ece\u5168\u56fe\u4e2d\u63d0\u53d6\u8bba\u6587": 583, "\u80cc\u540e\u57fa\u4e8e": 583, "\u6765\u5bfc\u51fa\u4e00\u4e2a\u5b50\u56fe": 583, "\u7136\u540e\u8fd0\u884c": 583, "\u5206\u89e3\u548c\u4e09\u89d2\u5f62\u8ba1\u6570\u4ee5\u751f\u6210\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u7684\u7ed3\u6784\u7279\u5f81": 583, "\u7531\u4e8e\u8bb8\u591a\u7b97\u6cd5\u53ef\u80fd\u4ec5\u9002\u7528\u4e8e\u540c\u6784\u56fe": 583, "\u53ea\u6709\u4e00\u7c7b\u70b9\u548c\u4e00\u7c7b\u8fb9\u800c\u4e0d\u533a\u5206\u6807\u7b7e": 583, "\u8981\u5728\u5c5e\u6027\u56fe\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5": 583, "\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6784\u56fe\u4e2d": 583, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5728": 583, "\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 583, "\u5f53\u524d": 583, "\u652f\u6301\u7528\u6237\u4ee5": 583, "\u6a21\u578b\u548c": 583, "\u6a21\u578b\u81ea\u5b9a\u4e49\u56fe\u7b97\u6cd5": 583, "\u7ed3\u5408\u4e86\u56fe\u7ed3\u6784\u548c\u673a\u5668\u5b66\u4e60\u7684\u4f18\u52bf": 583, "\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u7ed3\u6784\u4fe1\u606f\u548c\u5c5e\u6027\u4fe1\u606f\u538b\u7f29\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4f4e\u7ef4\u5d4c\u5165\u5411\u91cf": 583, "\u8fd9\u4e9b\u5d4c\u5165\u548c\u8868\u5f81\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f93\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d": 583, "\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d": 583, "\u6211\u4eec\u8bad\u7ec3\u4e86": 583, "\u6a21\u578b": 583, "\u5c06\u8282\u70b9": 583, "\u5206\u7c7b\u4e3a349\u4e2a\u7c7b\u522b": 583, "\u6bcf\u4e2a\u7c7b\u522b\u4ee3\u8868\u4e00\u4e2a\u51fa\u5904": 583, "\u4f8b\u5982\u9884\u5370\u672c\u548c\u4f1a\u8bae": 583, "\u4e3a\u6b64": 583, "\u63a5\u7740\u4e0a\u4e00\u6b65": 583, "\u9996\u5148\u9700\u8981\u542f\u52a8\u5b66\u4e60\u5f15\u64ce\u5e76\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5f81\u7684\u6570\u636e\u56fe": 583, "\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u5e76\u6267\u884c": 583, "train_gcn": 583, "\u6700\u540e": [583, 584, 587], "\u5f53\u6211\u4eec\u5b8c\u6210\u6240\u6709\u7684\u8ba1\u7b97\u8fc7\u7a0b\u540e": 583, "\u5173\u95ed\u5f53\u524d\u7684\u4f1a\u8bdd": 583, "\u8be5\u6b65\u9aa4\u4f1a\u544a\u77e5\u80cc\u540e\u7684": 583, "\u548c\u5f15\u64ce": 583, "\u91ca\u653e\u5f53\u524d\u6240\u6709\u7684\u8d44\u6e90": 583, "\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u65b0\u589e": 584, "\u6295\u5f71\u7684\u65b9\u6cd5": 584, "\u4ee5\u53ca\u5982\u4f55\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u56fe\u8f6c\u6362\u4e3a\u53ef\u4ee5\u9002\u914d\u666e\u901a\u7b97\u6cd5\u5e94\u7528\u7684\u65b9\u6cd5": 584, "\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u56de\u5230\u56fe\u4e2d\u53bb": 584, "\u5177\u4f53\u800c\u8a00": 584, "\u56fe": 584, "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u589e\u52a0\u6807\u7b7e\u7684\u51fd\u6570": 584, "\u548c\u4e00\u4e2a\u6295\u5f71\u7684\u51fd\u6570": 584, "\u6211\u4eec\u5df2\u7ecf\u5728": 584, "\u4e00\u8282\u89c1\u5230\u8fc7": 584, "\u8fd9\u4e24\u4e2a\u51fd\u6570": 584, "\u5f53\u65f6\u6211\u4eec\u7528\u5b83\u6765\u6784\u5efa\u4e00\u5f20\u56fe": 584, "\u8fdb\u4e00\u6b65\u7684": 584, "\u5f53\u56fe\u6784\u5efa\u597d\u5e76\u8f7d\u5165\u4e86": 584, "\u4e2d\u4e4b\u540e": 584, "\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7528\u5176\u589e\u52a0\u66f4\u591a\u7684\u6807\u7b7e": 584, "\u5f53\u7136\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4f1a\u5728\u539f\u56fe\u4e0a\u4fee\u6539": 584, "\u800c\u662f\u4f1a\u8fd4\u56de\u57fa\u4e8e\u539f\u56fe\u4e4b\u4e0a": 584, "\u589e\u52a0\u4e86\u65b0\u7684\u6807\u7b7e\u7684\u65b0\u56fe": 584, "\u5c5e\u6027\u56fe\u4e3a\u4f8b": 584, "\u6211\u4eec\u73b0\u5728\u8f7d\u5165\u5176\u4e2d\u4e00\u90e8\u5206\u6807\u7b7e": 584, "\u4f5c\u4e3a\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\u7684\u8d77\u59cb\u56fe": 584, "pathlib": 584, "\u5230\u8fd9\u91cc": 584, "\u6211\u4eec\u5df2\u7ecf\u8f7d\u5165\u4e86\u4e00\u5f20\u56fe": 584, "\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u518d\u6dfb\u52a0\u51e0\u4e2a\u6807\u7b7e": 584, "graph1": 584, "graph2": 584, "\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21": 584, "\u90fd\u4f1a\u4ea7\u751f\u4e00\u5f20\u65b0\u7684\u56fe": 584, "\u5728\u5e95\u5c42": 584, "\u4ed6\u4eec\u5171\u6709\u7684\u90e8\u5206\u4f1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58": 584, "\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5c06\u539f\u56fe\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd": 584, "\u5728\u67d0\u4e9b\u573a\u666f\u4e0b": 584, "\u6211\u4eec\u9700\u8981\u5c06\u4ece\u4e00\u5f20\u590d\u6742\u7684\u56fe\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u56fe": 584, "\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u501f\u52a9": 584, "\u6765\u5b8c\u6210": 584, "\u5305\u542b\u4e24\u4e2a\u53c2\u6570": 584, "\u5176\u503c\u4e3a\u4e00\u4e2a\u5b57\u5178": 584, "\u5b57\u5178\u7684\u952e\u662f\u6807\u7b7e\u540d": 584, "\u503c\u662f\u8981\u53d6\u7684\u5c5e\u6027\u7684\u5217\u8868": 584, "\u503c\u53ef\u4ee5\u4e3a": 584, "\u4ee3\u8868\u9009\u62e9\u6240\u6709\u7684\u5c5e\u6027": 584, "\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u5c5e\u6027\u56fe": 584, "\u5e76\u4e14\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65": 584, "\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50": 584, "\u5305\u542b\u4e00\u4e2a\u70b9\u6807\u7b7e": 584, "\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 584, "\u4ee5\u53ca\u6240\u9009\u62e9\u7684\u5c5e\u6027": 584, "sub_graph2": 584, "\u73b0\u5728\u70b9\u4e0a\u6ca1\u6709\u5c5e\u6027": 584, "\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5c5e\u6027": 584, "\u5f53\u6267\u884c\u4e00\u4e2a\u4ec5\u53ef\u4ee5\u8dd1\u5728\u7b80\u5355\u56fe\u4e0a\u7684\u7b97\u6cd5\u65f6": 584, "\u5176\u4f1a\u9ed8\u8ba4\u5c06\u5176\u53c2\u6570\u4e2d\u7684\u5c5e\u6027\u56fe\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 584, "\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362": 584, "\u5373\u591a\u4e8e\u4e00\u4e2a\u70b9\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 584, "\u6216\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 584, "\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519": 584, "\u8f6c\u6362\u4e0d\u5408\u6cd5": 584, "\u591a\u4e8e\u4e00\u4e2a\u70b9": 584, "\u8fb9\u6807\u7b7e": 584, "\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 584, "\u4e0a\u4e00\u6b65\u7b97\u6cd5\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u88ab\u52a0\u5165\u4e00\u5f20\u56fe\u4e2d": 584, "\u4f5c\u4e3a\u70b9\u7684\u4e00\u4e2a\u5c5e\u6027": 584, "\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u5165\u8fd0\u7b97\u7ed3\u679c\u5230\u76f4\u63a5\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 584, "\u8fd8\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u67e5\u8be2\u7ed3\u679c\u52a0\u5230\u88ab": 584, "\u800c\u5f97\u5230\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 584, "\u53ea\u8981\u88ab\u52a0\u5165\u5c5e\u6027\u7684\u70b9\u6807\u7b7e\u76f8\u540c": 584, "\u662f\u963f\u91cc\u5df4\u5df4\u8fbe\u6469\u9662\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u53d1\u5e76\u5f00\u6e90\u7684\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u5e73\u53f0": 585, "\u4f9d\u6258\u4e8e\u963f\u91cc\u6d77\u91cf\u6570\u636e\u548c\u4e30\u5bcc\u573a\u666f": 585, "\u4e0e\u8fbe\u6469\u9662\u7684\u9ad8\u6c34\u5e73\u7814\u7a76": 585, "\u81f4\u529b\u4e8e\u9488\u5bf9\u5b9e\u9645\u751f\u4ea7\u573a\u666f\u4e2d\u56fe\u8ba1\u7b97\u7684\u6311\u6218": 585, "\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848": 585, "\u63d0\u4f9b\u4e86": 585, "\u80fd\u5341\u5206\u65b9\u4fbf\u7684\u5bf9\u63a5\u4e0a\u4e0b\u6e38\u5de5\u4f5c\u6d41": 585, "\u5177\u6709\u4e00\u7ad9\u5f0f": 585, "\u5f00\u53d1\u4fbf\u6377": 585, "\u6027\u80fd\u6781\u81f4\u7b49\u7279\u70b9": 585, "\u5b83\u6574\u5408\u4e86\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u591a\u4e2a\u91cd\u8981\u7684\u521b\u65b0\u6027\u6280\u672f": 585, "\u5305\u62ec": [585, 588], "\u652f\u6301\u4e86\u56fe\u5206\u6790": 585, "\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u5b66\u4e60": 585, "\u5176\u4e2d\u6838\u5fc3\u4f18\u52bf\u5305\u62ec\u5728\u4e1a\u754c\u9996\u6b21\u652f\u6301\u4e86": 585, "\u5206\u5e03\u5f0f\u7f16\u8bd1\u4f18\u5316": 585, "\u652f\u6301\u4e86\u7b97\u6cd5\u7684\u81ea\u52a8\u5e76\u884c\u5316": 585, "\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u573a\u666f\u4e0b\u7684\u6781\u81f4\u6027\u80fd\u7b49": 585, "\u5728\u963f\u91cc\u5df4\u5df4\u5185\u5916\u90e8\u5e94\u7528\u4e2d": 585, "\u5df2\u7ecf\u8bc1\u660e\u5728\u591a\u4e2a\u5173\u952e\u4e92\u8054\u7f51\u9886\u57df": 585, "\u5982\u98ce\u63a7": 585, "\u7535\u5546\u63a8\u8350": 585, "\u5e7f\u544a": 585, "\u7f51\u7edc\u5b89\u5168": [585, 588], "\u77e5\u8bc6\u56fe\u8c31\u7b49": 585, "\u5b9e\u73b0\u4e86\u91cd\u8981\u7684\u4e1a\u52a1\u65b0\u4ef7\u503c": 585, "\u6574\u5408\u4e86\u8fbe\u6469\u9662\u7684\u591a\u9879\u5b66\u672f\u7814\u7a76\u6210\u679c": 585, "\u5176\u4e2d\u7684\u6838\u5fc3\u6280\u672f\u66fe\u83b7\u5f97\u6570\u636e\u5e93\u9886\u57df\u9876\u7ea7\u5b66\u672f\u4f1a\u8bae": 585, "\u6700\u4f73\u8bba\u6587\u5956": 585, "vldb2017": 585, "\u6700\u4f73\u6f14\u793a\u5956": 585, "vldb2020": 585, "\u6700\u4f73\u8bba\u6587\u5956\u4e9a\u519b": 585, "\u4e16\u754c\u4eba\u5de5\u667a\u80fd\u521b\u65b0\u5927\u8d5bsail\u5956\u7b49": 585, "\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce\u7684\u8bba\u6587\u5df2\u88ab": 585, "2021\u5f55\u7528": 585, "\u8fd8\u6709\u5176\u5b83\u56f4\u7ed5": 585, "\u7684\u5341\u591a\u9879\u7814\u7a76\u6210\u679c\u53d1\u8868\u5728\u9886\u57df\u9876\u7ea7\u7684\u5b66\u672f\u4f1a\u8bae\u6216\u671f\u520a\u4e0a": 585, "kdd\u7b49": 585, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 585, "\u57fa\u4e8e": [585, 590], "\u793a\u4f8b": 585, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 585, "\u521b\u5efa\u4f1a\u8bdd": 585, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 585, "\u56fe\u5206\u6790": 585, "\u56fe\u795e\u7ecf\u7f51\u7edc": 585, "\u5173\u95ed\u4f1a\u8bdd": 585, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 585, "\u5728aw": 585, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 585, "\u672c\u5730\u90e8\u7f72graphscop": 585, "\u5165\u95e8\u6559\u7a0b": 585, "\u8bba\u6587\u5f15\u7528\u5173\u7cfb\u7f51\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [585, 590], "\u4f7f\u7528\u517c\u5bb9": [585, 590], "\u8fdb\u884c\u56fe\u64cd\u4f5c": [585, 590], "\u7528": [585, 587, 590], "\u50cf": [585, 590], "\u4e00\u6837\u8fdb\u884c\u56fe\u5206\u6790": [585, 590], "\u8f7d\u5165\u56fe\u6570\u636e": [585, 590], "\u5185\u7f6e\u7684\u56fe\u5206\u6790\u7b97\u6cd5": [585, 590], "\u7f16\u5199\u81ea\u5b9a\u4e49\u56fe\u5206\u6790\u7b97\u6cd5": [585, 590], "\u4f7f\u7528\u67e5\u8be2\u8bed\u8a00": [585, 590], "\u8fdb\u884c\u4ea4\u4e92\u5f0f\u67e5\u8be2": [585, 590], "\u8fdb\u884c\u65e0\u76d1\u7763\u56fe\u5b66\u4e60": [585, 590], "bipartitegraphsag": [585, 590], "\u7684\u4e8c\u90e8\u56fe\u65e0\u76d1\u7763\u5b66\u4e60": [585, 590], "\u8fdb\u884c\u6709\u76d1\u7763\u56fe\u5b66\u4e60": [585, 590], "\u73af\u5883\u518d\u63a2\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [585, 590], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 585, "\u624b\u52a8\u914d\u7f6e\u56fe": 585, "\u9ad8\u7ea7\u7528\u6cd5": 585, "\u4ece": [585, 587], "\u4e2d\u8f7d\u56fe": 585, "\u7684\u53d8\u79cd": 585, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 585, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 585, "\u6295\u5f71": 585, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 585, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 585, "\u5185\u7f6e\u7b97\u6cd5": 585, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 585, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 585, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 585, "\u4e2d\u7684\u51fd\u6570": 585, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 585, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 585, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 585, "\u5229\u7528python": 585, "\u8fde\u63a5graphscop": 585, "\u5229\u7528java": 585, "\u5f00\u53d1\u63a7\u5236\u53f0": 585, "gremlin\u7f16\u7a0b\u5165\u95e8": 585, "gremlin\u517c\u5bb9\u6027": 585, "\u5bf9\u6bd4tinkerpop": 585, "\u56fe\u5b66\u4e60\u6a21\u578b": 585, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 585, "\u5e38\u89c1\u95ee\u9898": 585, "\u5f00\u53d1\u8005\u6307\u5357": 585, "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 585, "\u6784\u5efa": 585, "\u4ee3\u7801\u98ce\u683c": 585, "\u76ee\u524d\u652f\u6301\u7684\u5e73\u53f0\u5982\u4e0b": 586, "monterei": 586, "\u7a0b\u5e8f\u5305": 586, "\u7684\u5f62\u5f0f\u53d1\u5e03": 586, "\u53ef\u76f4\u63a5\u901a\u8fc7": 586, "\u9700\u8981\u6ee1\u8db3": 586, "\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u672c\u6587\u6863\u7684\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\u4e00\u4e2a\u672c\u5730": 586, "\u5e76\u52a0\u8f7d\u9884\u7f16\u8bd1\u597d\u7684\u955c\u50cf": 586, "\u73af\u5883\u4e0b\u8fd0\u884c": 586, "\u9996\u5148\u9700\u8981\u9884\u5148\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56": 586, "\u7684\u7528\u6237": 586, "\u53ef\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u6765\u5b89\u88c5\u4e0a\u8ff0\u4f9d\u8d56": 586, "\u5e76\u5728": 586, "\u4e2d\u5f00\u542f": 586, "\u529f\u80fd": 586, "\u53d1\u884c\u7248\u7528\u6237": 586, "\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528": 586, "\u90e8\u7f72\u4e00\u4e2a\u672c\u5730\u7684": 586, "\u7684\u5b89\u88c5\u548c\u90e8\u7f72\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\u7684": 586, "\u60a8\u4e5f\u53ef\u4ee5\u5728": 586, "\u4e0a\u5b89\u88c5": 586, "wsl2": 586, "\u6765\u6a21\u62df": 586, "\u73af\u5883": [586, 590], "\u63a5\u4e0b\u6765": [586, 587, 588], "\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7": 586, "graphscope\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce": 587, "\u7b80\u79f0gie": 587, "\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf": 587, "\u5b83\u4e3a\u4e0d\u540c\u7ecf\u9a8c\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u7528\u7684\u4ea4\u4e92\u5f0f\u73af\u5883": 587, "\u652f\u6301\u6d77\u91cf\u590d\u6742\u56fe\u6570\u636e\u4e0a\u7684": 587, "\u5b9e\u65f6\u5206\u6790\u4e0e\u4ea4\u4e92\u63a2\u7d22": 587, "\u8be5\u5f15\u64ce\u652f\u6301": 587, "\u8bed\u8a00\u8868\u8fbe\u7684\u4ea4\u4e92\u56fe\u67e5\u8be2": 587, "\u5e76\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u548c\u7528\u6237\u900f\u660e\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u6267\u884c": 587, "\u662f\u57fa\u4e8egremlin\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u56fe\u5e94\u7528\u7684\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\u548c\u4e8b\u5b9e\u6807\u51c6": 587, "gie\u901a\u8fc7tinkerpop\u63d0\u4f9b\u7684": 587, "\u63a5\u53e3": [587, 588], "\u5b9e\u73b0\u4e86\u4e0etinkerpop\u751f\u6001\u65e0\u7f1d\u96c6\u6210": 587, "\u4ece\u800c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u8bf8\u5982": 587, "\u7684\u5f00\u53d1\u5de5\u5177\u6216\u901a\u8fc7java\u548cpython\u7b49\u591a\u79cd\u8bed\u8a00\u63a5\u53e3\u7f16\u5199\u5e94\u7528\u903b\u8f91": 587, "\u5982\u4e0b\u6240\u793a": 587, "\u7528\u6237\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7python\u8fde\u4e0a\u4e00\u4e2a\u8f7d\u5165graphscope\u7cfb\u7edf\u7684\u56fe\u5e76\u53d1\u8d77gremlin\u67e5\u8be2": 587, "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ea4\u4e92\u4f1a\u8bdd": 587, "\u8f7d\u5165ldbc\u793a\u4f8b\u56fe\u6570\u636e": 587, "\u968f\u540e\u8fd4\u56de\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 587, "\u4e0b\u9762\u4e24\u53e5gremlin\u793a\u4f8b\u67e5\u8be2\u5206\u522b\u8ba1\u7b97\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570": 587, "\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684": 587, "\u5bf9\u8c61\u4e8b\u5b9e\u4e0a\u662fpython\u7c7b": 587, "\u7684\u4e00\u4e2a\u5b9e\u4f8b": 587, "\u800c\u8fd9\u4e00\u7c7b\u5c01\u88c5\u4e86\u7528python\u5b9e\u73b0\u7684\u5b8c\u6574gremlin\u5ba2\u6237\u7aef\u7c7b\u5e93": 587, "\u6bcf\u4e00\u4e2a\u8f7d\u5165graphscope\u7684\u56fe\u90fd\u5305\u542b\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 587, "\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u83b7\u5f97\u5177\u4f53\u7684\u8bbf\u95ee\u5730\u5740": 587, "\u4e0a\u9762\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u5982\u4e0b": 587, "\u683c\u5f0f": 587, "\u7684\u8f93\u51fa": 587, "\u6709\u4e86\u8fd9\u4e00url\u4fe1\u606f": 587, "\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528gremlin": 587, "python\u8bbf\u95ee\u56fe\u6570\u636e": 587, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 587, "\u5b98\u65b9\u6587\u6863": 587, "tinkerpop\u540c\u65f6\u652f\u6301java\u8bed\u8a00\u6309\u7c7b\u4f3c\u65b9\u5f0f\u8bbf\u95ee": 587, "\u8be6\u89c1gremlin": 587, "java\u7684": 587, "\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0egraphscope\u5b58\u50a8\u7684\u56fe\u6570\u636e\u8fdb\u884c\u4ea4\u4e92\u7684\u63a7\u5236\u53f0": 587, "\u4e5f\u53eb\u505arepl\u73af\u5883": 587, "\u4e0b\u9762\u63cf\u8ff0\u5982\u4f55\u5229\u7528\u4e0a\u6587\u83b7\u5f97\u7684url": 587, "\u5b89\u88c5\u548c\u914d\u7f6egremlin": 587, "console\u4ee5\u8fde\u63a5graphscope\u7684\u6b65\u9aa4": 587, "\u5b89\u88c5gremlin": 587, "console\u4f9d\u8d56\u7684java\u8fd0\u884c\u65f6\u73af\u5883": 587, "\u7248\u672c\u9700\u8981\u6ee1\u8db3": 587, "\u4e0b\u8f7d\u9002\u5f53\u7248\u672c\u7684gremlin": 587, "\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684\u6587\u4ef6": 587, "\u8fdb\u5165\u89e3\u538b\u7f29\u7684\u76ee\u5f55": 587, "\u5b50\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 587, "\u7684\u6587\u672c\u6587\u4ef6\u4ee5\u914d\u7f6eurl": 587, "\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u793a": 587, "\u5176\u4e2d\u7684": 587, "\u9700\u8981\u5206\u522b\u66ff\u6362\u4e3a\u4ecegraphscope\u4f1a\u8bdd\u5f97\u5230\u7684url\u4e2d\u5bf9\u5e94\u7684\u4e3b\u673a\u540d": 587, "\u6216ip": 587, "\u548c\u7aef\u53e3": 587, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u542f\u52a8gremlin": 587, "\u63d0\u793a\u7b26\u4e0b": 587, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u8fde\u63a5\u5230\u5bf9\u5e94\u7684graphscope\u4f1a\u8bdd": 587, "\u7b2c\u4e8c\u6761\u547d\u4ee4\u5207\u6362\u5230\u8fdc\u7a0b\u6a21\u5f0f": 587, "\u4ece\u800c\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u6240\u6709gremlin\u67e5\u8be2\u90fd\u88ab\u81ea\u52a8\u4f20\u8f93\u5230": 587, "\u8fdc\u7a0b": 587, "graphscope\u6267\u884c": 587, "\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684gremlin\u67e5\u8be2\u4e86": 587, "\u5f53\u4f60\u5b8c\u6210\u4ea4\u4e92": 587, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u53ef\u4ee5\u9000\u51fagremlin": 587, "gie\u4ee5\u5fe0\u5b9e\u4fdd\u7559gremlin\u7f16\u7a0b\u6a21\u578b\u4e3a\u8bbe\u8ba1\u76ee\u6807": 587, "\u4ece\u800c\u8ba9\u5df2\u6709\u7684\u5e94\u7528\u53ea\u9700\u6700\u5c0f\u5316\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u89c4\u6a21\u8ba1\u7b97\u96c6\u7fa4": 587, "\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2agremlin\u7684\u603b\u4f53\u4ecb\u7ecd": 587, "\u7279\u522b\u662f\u5176\u4e2d\u5305\u542b\u7684\u56fe\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u7b49\u5173\u952e\u6982\u5ff5": 587, "\u66f4\u8be6\u7ec6\u548c\u5b8c\u6574\u7684\u4ecb\u7ecd": 587, "gremlin\u5141\u8bb8\u7528\u6237\u5728\u5c5e\u6027\u56fe\u6a21\u578b\u4e0a\u5b9a\u4e49\u7279\u8bbe": 587, "hoc": 587, "\u904d\u5386\u67e5\u8be2": 587, "\u4e00\u4e2a\u5c5e\u6027\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe": 587, "\u5176\u4e2d\u7684\u9876\u70b9\u548c\u8fb9\u53ef\u4ee5\u62e5\u6709\u4e00\u7ec4\u5c5e\u6027": 587, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61": 587, "\u70b9\u6216\u8fb9": 587, "\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6": 587, "\u548c\u4e00\u4e2a\u7c7b\u522b\u540d\u79f0": 587, "\u6307\u5b9a\u5176\u7c7b\u578b\u6216\u89d2\u8272": 587, "\u6bcf\u4e2a\u5c5e\u6027\u662f\u4e00\u4e2a\u5305\u542b\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u7684": 587, "\u952e": 587, "\u503c": 587, "\u5bf9": 587, "\u5176\u6240\u5c5e\u5bf9\u8c61\u7684": 587, "\u52a0\u4e0a\u5c5e\u6027\u540d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5c5e\u6027\u503c": 587, "\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5c5e\u6027\u56fe\u6a21\u578b\u793a\u4f8b": 587, "\u5b83\u5305\u542b": 587, "\u7528\u6237": 587, "\u5546\u54c1": 587, "\u5730\u5740": 587, "\u4e09\u7c7b\u70b9": 587, "\u5b83\u4eec\u901a\u8fc7": 587, "\u8d2d\u4e70": 587, "\u9012\u9001": 587, "belongs_to": 587, "\u5c5e\u4e8e": 587, "home_of": 587, "\u5bb6\u5ead\u5730\u5740": 587, "\u56db\u7c7b\u8fb9\u76f8\u4e92\u5173\u8054": 587, "\u56fe\u4e2d\u865a\u7ebf\u5c55\u793a\u7684\u4e00\u6761": 587, "\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684": 587, "\u8def\u5f841": 587, "\u4ee3\u8868\u4e86\u4e00\u4e2a\u7528\u6237": 587, "\u4e70\u5bb6": 587, "tom": 587, "\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5356\u5bb6": 587, "jack": 587, "\u63d0\u4f9b\u7684\u6807\u4ef7": 587, "\u7684\u5546\u54c1": 587, "gift": 587, "\u4e00\u4e2agremlin\u67e5\u8be2\u6216\u56fe\u904d\u5386\u7684\u6267\u884c": 587, "\u53ef\u4ee5\u7528\u4e00\u7ec4": 587, "\u904d\u5386\u5668": 587, "\u6807\u8bc6": 587, "\u5b83\u4eec\u4f9d\u636egremlin\u67e5\u8be2\u63d0\u4f9b\u7684\u7528\u6237\u6307\u4ee4\u5728\u8f93\u5165\u56fe\u4e2d\u6e38\u8d70": 587, "\u6700\u7ec8\u6240\u6709\u505c\u6b62\u7684\u904d\u5386\u5668\u96c6\u5408": 587, "\u5305\u542b\u5b83\u4eec\u7684\u4f4d\u7f6e": 587, "\u4ee3\u8868\u4e86\u67e5\u8be2\u7684\u7ed3\u679c": 587, "\u4e00\u4e2a\u904d\u5386\u5668\u662fgremlin\u5f15\u64ce\u5904\u7406\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143": 587, "\u6bcf\u4e2a\u904d\u5386\u5668\u90fd\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u56fe\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e": 587, "\u53ef\u4ee5\u662f\u88ab\u8bbf\u95ee\u7684\u70b9": 587, "\u8fb9\u6216\u5c5e\u6027": 587, "\u53ef\u9009\u7684\u5b83\u4e5f\u53ef\u4ee5\u5305\u542b\u8d70\u8fc7\u7684\u5b8c\u6574\u8def\u5f84\u5386\u53f2\u751a\u81f3\u5e94\u7528\u72b6\u6001": 587, "gremlin\u8bed\u8a00\u4e30\u5bcc\u7075\u6d3b\u7684\u8868\u8fbe\u80fd\u529b\u4e3b\u8981\u6765\u81ea\u4e8e\u5b83\u5bf9": 587, "\u5d4c\u5957\u904d\u5386": 587, "\u7684\u652f\u6301": 587, "\u5b83\u5141\u8bb8\u4e00\u4e2a": 587, "\u5b50": 587, "\u67e5\u8be2\u6216\u904d\u5386\u88ab\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d": 587, "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u88ab\u5305\u88f9\u64cd\u4f5c\u7528\u4e8e\u5904\u7406\u5176\u6bcf\u4e00\u4e2a\u8f93\u5165": 587, "\u51fd\u6570\u7684\u58f0\u660e\u548c\u4f5c\u7528\u90fd\u7531\u5305\u88f9\u64cd\u4f5c\u7684\u8bed\u4e49\u51b3\u5b9a": 587, "\u8fc7\u6ee4": 587, "\u64cd\u4f5c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u67e5\u8be2": 587, "\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u8c13\u8bcd": 587, "\u800c": 587, "\u6620\u5c04": 587, "\u6392\u5e8f": 587, "\u64cd\u4f5c\u5404\u81ea\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u67e5\u8be2\u8bb2\u6bcf\u4e00\u4e2a\u8f93\u5165\u5355\u72ec\u6620\u5c04\u5230\u4ece\u5b83\u5f00\u59cb\u7684\u5b50\u904d\u5386\u5f97\u5230\u7684\u7ed3\u679c": 587, "\u6216\u4f9d\u636e\u7ed3\u679c\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e": 587, "\u5d4c\u5957\u904d\u5386\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u8868\u8fbe\u5faa\u73af": 587, "\u5728gremlin\u4e2d\u901a\u8fc7": 587, "\u5faa\u73af": 587, "\u64cd\u4f5c\u548c\u968f\u540e\u7684": 587, "\u7ec8\u6b62\u6761\u4ef6": 587, "\u8868\u8fbe": 587, "\u64cd\u4f5c\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u904d\u5386\u4f5c\u4e3a\u5faa\u73af\u4f53": 587, "\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u4f1a\u91cd\u590d\u9001\u5165\u8fd9\u4e00\u5b50\u67e5\u8be2": 587, "\u76f4\u5230\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3": 587, "\u6761\u4ef6\u7ec8\u6b62": 587, "\u64cd\u4f5c\u7c7b\u4f3c": 587, "\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a\u6761\u4ef6\u8c13\u8bcd": 587, "\u5b83\u88ab\u72ec\u7acb\u5e94\u7528\u4e8e\u5faa\u73af\u4f53\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u904d\u5386\u5668": 587, "\u6ee1\u8db3\u6761\u4ef6\u7684\u904d\u5386\u5668\u5c31\u4f1a\u79bb\u5f00\u5faa\u73af": 587, "\u53e6\u4e00\u4e2a\u5e38\u7528\u7684": 587, "\u8fed\u4ee3\u8f6e\u6b21\u7ec8\u6b62": 587, "\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6574\u578b\u5e38\u91cf": 587, "\u8868\u8fbe\u56fa\u5b9a\u8fed\u4ee3\u8f6e\u6b21\u540e\u7ec8\u6b62\u5faa\u73af": 587, "\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684gremlin\u793a\u4f8b": 587, "\u5b83\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u8d26\u6237": 587, "\u70b9\u5f00\u59cb\u627e\u5230\u957f\u5ea6\u4e3a": 587, "\u7684\u6709\u5411\u73af\u8def": 587, "\u9996\u5148": [587, 589], "\u8f93\u5165\u56fe\u64cd\u4f5c": 587, "\u5305\u542b\u4e00\u4e2a": 587, "\u8868\u8fbe\u7684\u7b80\u5355\u8fc7\u6ee4": 587, "\u8fd4\u56de\u56fe\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684": 587, "\u70b9": 587, "\u5373\u552f\u4e00\u6807\u8bc6\u4e3a": 587, "\u7684\u70b9": 587, "\u7d27\u968f\u5176\u540e\u7684": 587, "\u64cd\u4f5c\u662f\u4e00\u4e2a": 587, "\u4fee\u9970\u7b26": 587, "\u5b83\u4e0d\u6539\u53d8\u8f93\u5165\u904d\u5386\u5668\u96c6\u5408": 587, "\u4f46\u5bf9\u5176\u4e2d\u6bcf\u4e00\u4e2a\u904d\u5386\u5668\u7684\u5f53\u524d\u4f4d\u7f6e": 587, "\u6253\u4e0a\u4e00\u4e2a\u6709\u540d\u6807\u7b7e": 587, "\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684": 587, "\u4ece\u800c\u4eca\u540e\u53ef\u4ee5\u5f15\u7528": 587, "\u67e5\u8be2\u6cbf\u7740": 587, "\u7c7b\u578b\u7684\u51fa\u8fb9\u5faa\u73af\u6e38\u8d70": 587, "\u6b21": 587, "\u8f93\u51fahops\u5728": 587, "\u8303\u56f4\u5185\u7684\u90bb\u70b9": 587, "\u4e14\u6bcf\u4e00\u6b21\u90fd\u8fc7\u6ee4\u6216\u8df3\u8fc7\u8def\u5f84\u4e2d\u7684\u91cd\u590d\u70b9": 587, "\u901a\u8fc7\u5728": 587, "\u5185\u914d\u7f6e": 587, "\u9009\u9879\u5b9e\u73b0": 587, "\u64cd\u4f5c\u68c0\u67e5\u6b64\u65f6\u904d\u5386\u8def\u5f84\u7684\u4e0b\u4e00\u8df3\u662f\u5426\u53ef\u4ee5\u56de\u5230\u8d77\u70b9": 587, "\u6307\u4ee3": 587, "\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a": 587, "\u7684\u73af": 587, "\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u73af": 587, "\u67e5\u8be2\u8fd8\u901a\u8fc7": 587, "\u64cd\u4f5c\u5c55\u793a\u6bcf\u4e2a\u904d\u5386\u5668\u7684\u5b8c\u6210\u8def\u5f84\u4fe1\u606f": 587, "\u64cd\u4f5c\u7c7b\u4f3csql\u4e2d\u7684top": 587, "\u5b83\u8868\u8fbe\u4e86\u67e5\u8be2\u7ed3\u679c\u4ec5\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u8def\u5f84": 587, "\u5982\u679c\u6709\u7684\u8bdd": 587, "gie\u652f\u6301apach": 587, "tinkerpop\u5b9a\u4e49\u7684\u5c5e\u6027\u56fe\u6a21\u578b\u548cgremlin\u904d\u5386\u67e5\u8be2": 587, "\u4e14\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0etinkerpop": 587, "3\u548c3": 587, "4\u7248\u672c\u517c\u5bb9\u7684": 587, "\u670d\u52a1\u63a5\u53e3": 587, "\u9664\u6b64\u4e4b\u5916": 587, "\u6211\u4eec\u6269\u5c55\u4e86\u4e00\u4e9b\u8bed\u6cd5\u7cd6\u6765\u8fdb\u4e00\u6b65\u5f15\u5165\u4e00\u4e9b\u7b80\u6d01\u660e\u4e86\u7684expression\u8868\u793a": 587, "\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u5f53\u524d\u5b9e\u73b0\u548capach": 587, "tinkerpop\u89c4\u8303\u7684\u4e3b\u8981\u5dee\u4e00\u70b9": 587, "\u5176\u4e2d\u4e00\u4e9b\u5dee\u5f02\u4f1a\u6709\u673a\u4f1a\u6d88\u9664": 587, "\u53e6\u4e00\u4e9b\u662f\u76ee\u524dgraphscope\u5b9a\u4f4d\u7684\u573a\u666f\u5dee\u5f02\u9020\u6210\u7684\u4e0d\u540c\u8bbe\u8ba1\u9009\u62e9": 587, "\u76ee\u524d\u7684": 587, "\u6280\u672f\u9884\u89c8\u7248\u5229\u7528\u4e86": 587, "\u9879\u76ee\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5b58\u50a8\u4f5c\u4e3a\u8f93\u5165\u56fe": 587, "\u5b83\u652f\u6301\u4e00\u6b21\u8f7d\u5165": 587, "\u4e0d\u53ef\u4fee\u6539": 587, "\u7684\u56fe\u6a21\u578b\u6570\u636e": 587, "\u548c\u56fe\u5206\u7247\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4": 587, "\u5f53\u524d\u8bbe\u8ba1\u6709\u4e0b\u9762\u7684\u4e00\u4e9b\u9650\u5236": 587, "\u7ea6\u675f": 587, "\u6bcf\u4e2a\u56fe\u7684\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e8b\u5148\u5b9a\u4e49\u7684schema": 587, "\u5305\u62ec\u70b9": 587, "\u8fb9\u7684\u7c7b\u578b\u540d\u79f0": 587, "\u548c\u5c5e\u6027\u540d\u53ca\u503c\u7c7b\u578b": 587, "\u4e3b\u952e\u7ea6\u675f": 587, "\u6bcf\u4e2a\u9876\u70b9\u7c7b\u578b\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u4e3b\u952e": 587, "\u540c\u65f6\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u5bf9\u8c61": 587, "\u81ea\u52a8\u5206\u914d\u4ea7\u751f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u552f\u4e00\u6807\u8bc6": 587, "\u5bf9\u4e8e\u70b9\u6765\u8bf4": 587, "id\u7f16\u7801\u4e86\u7c7b\u578b": 587, "\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u952e\u4fe1\u606f": 587, "\u6bcf\u4e2a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027": 587, "\u53ef\u4ee5\u5305\u542b\u4e0b\u5217\u7c7b\u578b\u7684\u5c5e\u6027\u503c": 587, "\u56e0\u4e3a\u7cfb\u7edf\u7684\u5168\u5206\u5e03\u5f0f\u53ef\u6269\u5c55\u67b6\u6784": 587, "\u5f53\u524d\u5b9a\u4f4d\u7684\u573a\u666f\u548c\u5b9e\u73b0\u4e0d\u652f\u6301\u4e0b\u5217\u529f\u80fd": 587, "\u56fe\u4fee\u6539\u64cd\u4f5c": 587, "lambda\u548cgroovy\u8868\u8fbe\u5f0f\u6216\u81ea\u5b9a\u4e49\u51fd\u6570": 587, "\u7b49\u8868\u8fbe\u5f0f\u6216java\u8c03\u7528\u7b49\u7b49": 587, "\u5b9a\u5236gremlin\u56fe\u904d\u5386\u7b56\u7565": 587, "\u5373\u67e5\u8be2\u4f18\u5316\u7531graphscope\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210": 587, "\u4e8b\u52a1": 587, "\u4e8c\u7ea7\u7d22\u5f15\u76ee\u524d\u5c1a\u672a\u652f\u6301": 587, "\u7528\u6237\u5b9a\u4e49\u7684\u4e3b\u952e\u4f1a\u88ab\u81ea\u52a8\u7d22\u5f15": 587, "\u5f53\u524dgraphscope\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 587, "\u548c\u793a\u4f8b\u7528\u6cd5": 587, "\u8f93\u5165\u56fe": 587, "labelname1": 587, "labelname2": 587, "\u901a\u8fc7expression\u5b9e\u73b0\u8fc7\u6ee4": 587, "\u8bed\u6cd5\u7cd6": 587, "\u4ee3\u8868head\u8282\u70b9\u7684age\u5c5e\u6027": 587, "\u4ee3\u8868": 587, "\u8282\u70b9\u7684age\u5c5e\u6027": 587, "head\u8282\u70b9\u7684a\u5c5e\u6027\u662f\u6574\u6570\u6570\u7ec4\u7c7b\u578b": 587, "\u901a\u8fc7expression\u5b9e\u73b0\u4f4d\u8fd0\u7b97": 587, "head\u8282\u70b9\u7684number\u5c5e\u6027\u662f\u6574\u578b": 587, "\u901a\u8fc7expression\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97": 587, "head\u8282\u70b9\u7684number\u548cage\u5c5e\u6027\u90fd\u662f\u6574\u578b": 587, "\u901a\u8fc7expression\u5b9e\u73b0\u6307\u6570\u8fd0\u7b97": 587, "dedup": 587, "aaa": 587, "otherv": 587, "flatmap": 587, "\u591a\u91cd\u6620\u5c04": 587, "bothv": 587, "\u627e\u5230\u6240\u6709\u4ece": 587, "\u5f00\u59cb\u901a\u8fc7": 587, "\u8fb9\u7c7b\u578b\u5411\u5916\u6269\u5c55": 587, "\u8df3\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84": 587, "\u70b9\u4e0d\u91cd\u590d": 587, "\u5e76\u4e14\u53ea\u4fdd\u5b58path\u7684\u6700\u672b\u7aef\u70b9": 587, "\u8df3\u7684\u6240\u6709\u4efb\u610f\u8def\u5f84": 587, "\u70b9\u53ef\u91cd\u590d": 587, "\u8f93\u51fa\u6240\u6709\u5c5e\u6027": 587, "\u805a\u5408": 587, "groupbi": 587, "groupby\u591a\u4e2akei": 587, "\u5e76\u4e14\u4e3a\u6bcf\u4e2akey\u8bbe\u7f6e\u522b\u540d": 587, "groupby\u591a\u4e2avalu": 587, "\u5e76\u4e14\u4e3a\u6bcf\u4e2avalue\u8bbe\u7f6e\u522b\u540d": 587, "\u5373\u53d6\u524dk\u4e2a\u7ed3\u679c": 587, "graphscope\u6682\u65f6\u4e0d\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 587, "\u4f1a\u9010\u6b65\u652f\u6301": 587, "\u53ef\u4ee5\u901a\u8fc7path": 587, "expansion\u8bed\u6cd5\u7cd6\u5b9e\u73b0": 587, "\u57fa\u4e8e\u96c6\u5408\u7684local\u8ba1\u7b97": 587, "\u67e5\u8be2\u8ba1\u5212\u89e3\u91ca": 587, "\u67e5\u8be2\u6267\u884c\u6027\u80fd\u5206\u6790": 587, "\u81ea\u5b9a\u4e49\u72b6\u6001\u8ba1\u7b97": 587, "\u8ba1\u7b97\u5b50\u56fe": 587, "\u76ee\u524d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 587, "\u652f\u6301\u62bd\u53d6\u5b50\u56fe\u5199\u5165vineyard\u5b58\u50a8": 587, "cap": 587, "\u8bbf\u95ee\u81ea\u5b9a\u4e49\u72b6\u6001": 587, "\u4f8b\u5982pagerank\u548cshortestpath": 587, "\u8fd9\u90e8\u5206\u529f\u80fdgraphscope\u901a\u8fc7\u56fe\u5206\u6790\u5f15\u64ce\u548cnetworkx\u517c\u5bb9\u63a5\u53e3\u63d0\u4f9b": 587, "graphscope\u4e2d\u7684\u56fe\u5b66\u4e60\u5f15\u64ce": 588, "\u662f\u9762\u5411\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u53d1\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u6846\u67b6": 588, "\u5b83\u4ece\u5b9e\u9645\u95ee\u9898\u51fa\u53d1": 588, "\u63d0\u70bc\u548c\u62bd\u8c61\u4e86\u4e00\u5957\u9002\u5408\u4e8e\u5f53\u4e0b\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u7f16\u7a0b\u8303\u5f0f": 588, "\u5e76\u5df2\u7ecf\u6210\u529f\u5e94\u7528\u5728\u963f\u91cc\u5df4\u5df4": 588, "\u5185\u90e8\u7684\u8bf8\u5982\u641c\u7d22\u63a8\u8350": 588, "\u77e5\u8bc6\u56fe\u8c31\u7b49\u4f17\u591a\u573a\u666f": 588, "gl\u6ce8\u91cd\u53ef\u79fb\u690d\u548c\u53ef\u6269\u5c55": 588, "\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u4e3a\u53cb\u597d": 588, "\u4e3a\u4e86\u5e94\u5bf9gnn\u5728\u5de5\u4e1a\u573a\u666f\u4e2d\u7684\u591a\u6837\u6027\u548c\u5feb\u901f\u53d1\u5c55\u7684\u9700\u6c42": 588, "\u57fa\u4e8egl": 588, "\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cdgnn\u7b97\u6cd5": 588, "\u6216\u8005\u9762\u5411\u5b9e\u9645\u573a\u666f\u5b9a\u5236\u5316\u4e00\u79cd\u56fe\u7b97\u5b50": 588, "\u4f8b\u5982\u56fe\u91c7\u6837": 588, "\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5165\u95e8\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528": 588, "\u6765\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684cnn\u6a21\u578b": 588, "\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5b9e\u73b0\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f": 588, "\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ee5\u5168\u56fe\u4e3a\u8ba1\u7b97\u5bf9\u8c61": 588, "\u539f\u59cb\u7684gcn": 588, "gat\u7b49\u7b97\u6cd5\u90fd\u662f\u8fd9\u79cd\u5b9e\u73b0\u601d\u8def": 588, "\u4e00\u822c\u4f1a\u76f4\u63a5\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u8ba1\u7b97": 588, "\u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5927\u89c4\u6a21\u56fe\u4e0a\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58": 588, "\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u8bad\u7ec3\u751a\u81f3\u65e0\u6cd5\u8bad\u7ec3": 588, "\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u5c06\u5168\u56fe\u5206\u6210\u82e5\u5e72\u5b50\u56fe": 588, "\u7528\u6df1\u5ea6\u5b66\u4e60\u91cc\u5e38\u7528\u7684\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3": 588, "\u6bcf\u6b21\u8bad\u7ec3\u4e00\u4e2a\u5b50\u56fe": 588, "\u4ee3\u8868\u65b9\u6cd5\u662fgraphsag": 588, "graphsaint\u7b49": 588, "\u4e3b\u8981\u9762\u5411\u8d85\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u53d1": 588, "\u5b83\u7531\u5e95\u5c42\u7684\u4e00\u4e2a\u56fe\u5f15\u64ce\u548c\u4e0a\u5c42\u7684": 588, "\u7b97\u6cd5\u6a21\u578b\u6784\u6210": 588, "\u56fe\u5f15\u64ce\u5206\u5e03\u5f0f\u5b58\u50a8\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4fe1\u606f\u5e76\u63d0\u4f9b\u9ad8\u6548\u7684\u56fe\u91c7\u6837\u67e5\u8be2": 588, "\u7b97\u6cd5\u6a21\u578b\u901a\u8fc7\u8c03\u7528\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u63a5\u53e3\u83b7\u53d6\u5b50\u56fe\u5e76\u8fdb\u884c\u8ba1\u7b97": 588, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u7edf\u4e00\u7f16\u7a0b\u6846\u67b6": 588, "\u652f\u6301\u5e38\u89c1\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1": 588, "\u77e5\u8bc6\u56fe\u8c31\u6a21\u578b": 588, "\u56fe\u5d4c\u5165\u7b97\u6cd5\u7b49": 588, "\u5e76\u4e14\u548c\u4e3b\u6d41\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u517c\u5bb9": 588, "\u5305\u62ectensorflow": 588, "\u548cpytorch": 588, "\u76ee\u524d\u6211\u4eec\u5b9e\u73b0\u4e86\u57fa\u4e8etensorflow\u7684\u6a21\u578b": 588, "\u57fa\u4e8epytorch\u7684\u6a21\u578b\u6b63\u5728\u5f00\u53d1\u4e2d": 588, "\u91c7\u7528\u91c7\u6837\u5b50\u56fe\u518d\u8ba1\u7b97\u7684\u65b9\u5f0f\u6784\u5efa\u548c\u8bad\u7ec3\u6a21\u578b": 588, "\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b": 588, "\u662f\u56fe\u5b66\u4e60\u7b97\u6cd5\u7f16\u7a0b\u7684\u57fa\u672c\u6570\u636e\u5bf9\u8c61": 588, "\u5b83\u7531\u4e00\u4e2abatch\u7684\u79cd\u5b50\u70b9\u6216\u8005\u8fb9": 588, "\u79f0\u4e3a": 588, "\u4ee5\u53ca\u4ed6\u4eec\u7684": 588, "\u611f\u53d7\u91ce": 588, "\u591a\u8df3\u90bb\u5c45": 588, "\u7ec4\u6210": 588, "\u7531\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u5230\u7684\u6570\u636e\u7ec4\u6210": 588, "\u6211\u4eec\u5b9e\u73b0": 588, "\u4e86\u5e38\u89c1\u7684\u90bb\u5c45\u91c7\u6837": 588, "\u56fe\u904d\u5386\u548c\u8d1f\u91c7\u6837\u65b9\u6cd5": 588, "\u91c7\u6837\u7684\u6570\u636e\u7ec4\u7ec7\u6210numpy\u683c\u5f0f\u7684": 588, "\u540e\u6839\u636e\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u8f6c\u6362\u6210\u5bf9\u5e94\u7684tensor\u683c\u5f0f": 588, "\u7136\u540e\u7528": 588, "\u7ba1\u7406": 588, "\u5230": 588, "\u7684\u8f6c\u6362": 588, "\u63d0\u4f9b\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e": 588, "\u6240\u6709\u7684\u56fe\u5b66\u4e60\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4f7f\u7528\u7f16\u7801\u5668\u5c06": 588, "\u7f16\u7801\u6210\u6700\u7ec8\u7684\u70b9": 588, "\u8fb9\u6216\u8005\u5b50\u56fe\u7684": 588, "\u5411\u91cf": 588, "\u9996\u5148\u5229\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7684\u70b9\u548c\u8fb9\u4e0a\u7684\u7279\u5f81": 588, "\u7136\u540e\u5c06\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u540e\u7684": 588, "\u539f\u59cb\u5411\u91cf\u7528\u4e0d\u540c\u7684\u56fe\u7f16\u7801\u5668\u8fdb\u884c\u7f16\u7801": 588, "\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa": 588, "\u5bf9\u4e8e\u5927\u591a\u6570gnn\u6a21\u578b": 588, "\u56fe\u7f16\u7801\u5668": 588, "\u63d0\u4f9b\u4e86\u5982\u4f55\u805a\u5408\u90bb\u5c45\u4fe1\u606f\u5230\u81ea\u8eab\u8282\u70b9\u6216\u8005\u8fb9\u7684\u62bd\u8c61": 588, "\u7528\u4e0d\u540c\u7684\u56fe\u5377\u79ef\u5c42\u5b9e\u73b0": 588, "\u57fa\u4e8e\u4e0a\u9762\u4ecb\u7ecd\u7684\u6570\u636e\u6a21\u578b\u548c\u7f16\u7801\u5668": 588, "\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u5b9e\u73b0\u4e0d\u540c\u7684\u56fe\u5b66\u4e60\u7b97\u6cd5": 588, "\u5728\u63a5\u4e0b\u6765\u4e00\u7ae0\u91cc": 588, "\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u53d1\u4e00\u4e2agnn\u6a21\u578b": 588, "\u8fd9\u7bc7\u6587\u6863\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u7528": 588, "\u63d0\u4f9b\u7684\u57fa\u672capi\u914d\u5408\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce": 588, "\u5982tensorflow": 588, "\u6765\u6784\u5efa\u56fe\u5b66\u4e60\u7b97\u6cd5": 588, "\u6211\u4eec\u4ee5\u56fe\u795e\u7ecf\u7f51\u7edc\u91cc\u6700\u6d41\u884c\u7684gcn\u6a21\u578b\u505a\u4e3a\u793a\u4f8b\u6765\u8bf4\u660e": 588, "\u901a\u5e38\u6765\u8bf4": 588, "\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u9700\u8981\u4e0b\u9762\u56db\u4e2a\u6b65\u9aa4": 588, "\u6307\u5b9a\u91c7\u6837\u6a21\u5f0f": 588, "\u7528\u56fe\u91c7\u6837": 588, "\u67e5\u8be2\u65b9\u6cd5\u91c7\u6837\u5b50\u56fe\u5e76\u7ec4\u7ec7\u6210": 588, "\u6211\u4eec\u62bd\u8c61\u4e864\u4e2a\u57fa\u672c\u7684\u51fd\u6570": 588, "\u7528\u6765\u904d\u5386\u56fe\u6570\u636e\u4ea7\u751f": 588, "\u4ee5\u8fd9\u4e9b": 588, "\u4e3a\u8f93\u5165\u4ea7\u751f": 588, "\u8bad\u7ec3\u7684\u6b63\u6837\u672c": 588, "\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60": 588, "\u4ea7\u751f\u8d1f\u6837\u672c": 588, "gnns\u9700\u8981\u805a\u5408\u90bb\u5c45\u4fe1\u606f": 588, "\u6211\u4eec\u62bd\u8c61\u4e86": 588, "\u6765\u91c7\u6837\u90bb\u5c45": 588, "\u6700\u540e\u5c06": 588, "\u4ea7\u751f\u7684": 588, "\u4ee5\u53ca\u91c7\u6837\u51fa\u7684\u90bb\u5c45\u7ec4\u6210": 588, "\u6784\u5efa\u56fe\u6570\u636e\u6d41": 588, "\u7b97\u6cd5\u6a21\u578b\u57fa\u4e8e\u7c7b\u4f3ctensorflow\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u6784\u5efa": 588, "\u6240\u4ee5\u91c7\u6837\u51fa\u7684": 588, "\u9700\u8981\u5148\u8f6c\u6362\u6210tensor\u683c\u5f0f": 588, "\u624d\u80fd\u4f7f\u7528": 588, "\u6765\u5c01\u88c5\u8fd9\u4e00\u8f6c\u6362\u8fc7\u7a0b": 588, "\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3": 588, "\u5b9a\u4e49\u7f16\u7801\u5668": 588, "\u7f16\u7801\u5668\u548c\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801": 588, "\u5f97\u5230": 588, "\u540e": 588, "\u6211\u4eec\u9996\u5148\u5c06\u539f\u59cb\u7684\u70b9": 588, "\u8fb9\u7279\u5f81\u7528\u4e00\u4e9b\u5e38\u89c1\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u6210\u539f\u59cb\u5411\u91cf": 588, "\u505a\u4e3agnns\u6a21\u578b\u7684\u7279\u5f81\u8f93\u5165": 588, "\u7136\u540e\u7528\u56fe\u7f16\u7801\u5668\u5904\u7406": 588, "\u5c06\u90bb\u5c45\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u6c47\u805a\u5e76": 588, "\u548c\u81ea\u8eab\u7279\u5f81\u8fdb\u884c\u7ec4\u5408": 588, "\u5f97\u5230\u6700\u540e\u7684\u70b9\u6216\u8005\u8fb9\u7684\u5411\u91cf": 588, "\u7f16\u5199\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 588, "\u9009\u62e9\u9002\u5f53\u7684\u635f\u5931\u51fd\u6570": 588, "\u5e76\u7f16\u5199\u8bad\u7ec3\u8fc7\u7a0b": 588, "\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668": 588, "\u5e76\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u8fdb\u884c\u4e86\u5c01\u88c5": 588, "\u540c\u65f6\u652f\u6301\u5355\u673a\u548c\u5206\u5e03\u5f0f\u8bad\u7ec3": 588, "\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570": 588, "\u4f18\u5316\u5668\u548c\u8bad\u7ec3\u8fc7\u7a0b": 588, "\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4e0a\u9762\u4ecb\u7ecd\u76844\u4e2a\u6b65\u9aa4\u6765\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2agcn\u6a21\u578b": 588, "\u6211\u4eec\u4f7f\u7528cora\u6570\u636e\u96c6\u4ee5\u70b9\u5206\u7c7b\u4efb\u52a1\u505a\u4e3a\u793a\u4f8b": 588, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u811a\u672c": 588, "\u6765": 588, "\u5c06\u539f\u59cbcora\u8f6c\u6362\u6210": 588, "\u9700\u8981\u7684\u683c\u5f0f": 588, "\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u811a\u672c\u540e\u4f60\u53ef\u4ee5\u5f97\u5230\u4e0b\u97625\u4e2a\u6587\u4ef6": 588, "\u5206\u522b\u662f\u70b9\u8868": 588, "\u8fb9\u8868\u4ee5\u53ca\u7528\u6765\u533a\u5206\u8bad\u7ec3": 588, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u7684\u70b9\u8868": 588, "\u7136\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u6784\u5efa\u56fe": 588, "\u540e\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5c06\u56fe\u52a0\u8f7d\u8fdb\u5185\u5b58": 588, "gcn\u6a21\u578b\u7ee7\u627f\u81ea\u57fa\u672c\u7684\u5b66\u4e60\u6a21\u578b\u7c7b": 588, "\u53ea\u9700\u8981\u91cd\u5199\u57fa\u7c7b\u7684\u91c7\u6837": 588, "\u6a21\u578b\u6784\u5efa\u7b49\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210gcn\u7684\u6784\u5efa": 588, "\u524d\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u91c7\u6837\u79cd\u5b50\u8282\u70b9\u548c\u6b63\u6837\u672c": 588, "\u91c7\u6837\u90bb\u5c45\u5e76\u7ec4\u7ec7": 588, "\u56de\u4e00\u8df3\u90bb\u5c45": 588, "\u56e0\u6b64\u4e0a\u9762\u4ee3\u7801\u662f\u91c7\u6837\u4e8c\u8df3\u90bb\u5c45": 588, "\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5": 588, "\u5bf9\u4e8e\u539f\u59cbgcn\u6765\u8bf4\u56e0\u4e3a\u8981\u83b7\u5f97\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45": 588, "\u56e0\u6b64\u9009\u62e9": 588, "\u91c7\u6837\u5b8c\u540e\u5c06\u7ed3\u679c\u7ec4\u7ec7": 588, "\u6210": 588, "\u8fd4\u56de": 588, "\u51fd\u6570\u91cc\u6211\u4eec\u4f7f\u7528\u5c01\u88c5\u7684": 588, "\u6765\u628a": 588, "\u8f6c\u6362\u6210\u5bf9\u5e94\u7684": 588, "\u5305\u542b\u4e00\u4e2a\u6570\u636e\u6d41\u8fed\u4ee3\u5668\u548c\u82e5\u5e72": 588, "\u4f60\u53ef\u4ee5\u4ece": 588, "\u83b7\u53d6\u548c\u524d\u9762": 588, "\u5bf9\u5e94\u7684": 588, "\u9996\u5148\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7279\u5f81": 588, "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528": 588, "\u5373\u8fd4\u56de\u81ea\u8eab\u5373\u53ef": 588, "\u56e0\u4e3a": 588, "cora\u7684\u7279\u5f81\u5df2\u7ecf\u662f\u5904\u7406\u8fc7\u7684\u5411\u91cf\u683c\u5f0f\u4e86": 588, "\u5bf9\u4e8e\u65e2\u6709\u79bb\u6563\u7279\u5f81\u7531\u4e8e\u8fde\u7eed\u7279\u5f81\u7684\u60c5\u51b5": 588, "\u66f4\u591aencoder\u8bf7\u53c2\u8003": 588, "\u5c42\u6784\u5efa\u56fe\u7f16\u7801\u5668": 588, "gcn\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u5168\u90e8\u90bb\u5c45": 588, "\u90bb\u5c45\u4ee5\u7a00\u758f\u683c\u5f0f\u7ec4\u7ec7": 588, "\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528": 588, "\u90bb\u5c45\u5bf9\u9f50\u7684\u6a21\u578b\u53ef\u4ee5\u53c2\u8003graphsage\u7684\u5b9e\u73b0": 588, "\u5bf9\u4e8ecora\u70b9\u5206\u7c7b\u6a21\u578b": 588, "\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684tensorflow\u91cc\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570\u5373\u53ef": 588, "\u7136\u540e\u5728": 588, "\u51fd\u6570\u91cc\u5c06\u7f16\u7801\u5668\u548c\u635f\u5931\u51fd\u6570\u7ec4\u7ec7\u8d77\u6765": 588, "\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u8fed\u4ee3\u5668\u548c\u635f\u5931\u51fd\u6570": 588, "\u63a5\u7740\u4f7f\u7528\u5c01\u88c5\u7684\u5355\u673a\u8bad\u7ec3\u8fc7\u7a0b": 588, "\u6765\u8fdb\u884c\u8bad\u7ec3": 588, "\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2agcn\u6a21\u578b\u7684\u7f16\u5199": 588, "\u5b8c\u6574\u4ee3\u7801\u8bf7\u53c2\u8003": 588, "\u76ee\u5f55": 588, "\u6211\u4eec\u5b9e\u73b0\u4e86gcn": 588, "gat\u7b49\u6a21\u578b": 588, "\u4f60\u53ef\u4ee5\u53c2\u8003\u76f8\u4f3c\u7684\u6a21\u578b\u4ee3\u7801\u505a\u4e3a\u5f00\u59cb": 588, "\u5c5e\u6027\u56fe": 589, "\u56fe\u4e0a\u7684\u70b9": 589, "\u8fb9\u90fd\u5e26\u6709\u6807\u7b7e": 589, "\u6bcf\u4e2a\u6807\u7b7e\u90fd\u53ef\u80fd\u5e26\u6709\u8bb8\u591a\u5c5e\u6027": 589, "\u5185\u7f6e\u4e86\u4e00\u7ec4\u6d41\u884c\u7684\u6570\u636e\u96c6": 589, "\u4ee5\u53ca\u8f7d\u5165\u4ed6\u4eec\u7684\u5de5\u5177\u51fd\u6570": 589, "\u5e2e\u52a9\u7528\u6237\u66f4\u5bb9\u6613\u7684\u4e0a\u624b": 589, "\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 589, "\u5728\u5355\u673a\u6a21\u5f0f\u4e0b": 589, "\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 589, "\u5e76\u4e14\u4f1a\u4fdd\u7559\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528": 589, "\u96c6\u7fa4\u6a21\u5f0f\u4e0b": 589, "\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 589, "\u7684\u672c\u5730\u5b58\u50a8\u6bd4\u8f83\u590d\u6742": 589, "\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6302\u8f7d\u4e86": 589, "\u7684\u6570\u636e\u96c6\u6876\u7684\u4e00\u4e2a\u5bb9\u5668": 589, "\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u91cc": 589, "\u6211\u4eec\u5c06\u8f7d\u5165\u548c\u4e0a\u9762\u540c\u6837\u7684\u4e00\u5f20\u56fe": 589, "\u53ea\u4e0d\u8fc7\u8fd9\u6b21": 589, "\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d": 589, "\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 589, "\u7136\u540e\u5c06\u6570\u636e\u96c6\u6876\u6302\u8f7d\u5230": 589, "\u6b64\u8def\u5f84\u76f8\u5bf9\u4e8e": 589, "\u7684\u672c\u5730\u8def\u5f84": 589, "\u7136\u540e\u6211\u4eec\u5c06\u4f1a\u8bdd\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165": 589, "\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570": 589, "\u662f\u6211\u4eec\u901a\u8fc7": 589, "\u7684\u53c2\u6570\u6307\u5b9a\u7684\u6302\u8f7d\u8def\u5f84": 589, "\u662f\u8fd9\u4e2a\u6570\u636e\u96c6\u6240\u5728\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57": 589, "\u4f60\u53ef\u4ee5\u5728": 589, "\u627e\u5230\u6240\u6709\u76ee\u524d\u652f\u6301\u7684\u6570\u636e\u96c6": 589, "\u6587\u4ef6\u4e2d\u5305\u62ec\u8be6\u7ec6\u7684\u4ecb\u7ecd\u548c\u7528\u6cd5": 589, "\u7136\u800c": 589, "\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u96c6": 589, "\u5e76\u505a\u4e00\u4e9b\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c": 589, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 589, "\u5e76\u4ee5\u5c06\u5c5e\u6027\u56fe\u8f7d\u5165": 589, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 589, "\u7136\u540e\u5728\u6b64\u4f1a\u8bdd\u5185\u521b\u5efa\u56fe": 589, "\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u914d\u7f6e": 589, "\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u589e\u91cf\u7684\u6784\u5efa\u4e00\u4e2a\u5c5e\u6027\u56fe": 589, "\u6211\u4eec\u5c06\u4f7f\u7528": 589, "\u91cc\u7684\u6587\u4ef6\u505a\u5b8c\u6b64\u7bc7\u6559\u7a0b\u7684\u793a\u4f8b": 589, "\u627e\u5230\u6e90\u6570\u636e": 589, "\u4f60\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528": 589, "\u6765\u67e5\u770b\u56fe\u7684\u6a21\u578b": 589, "\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u5185\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6807\u7b7e": 589, "\u76f8\u5173\u7684\u53c2\u6570\u542b\u4e49\u5982\u4e0b": 589, "\u4ee3\u8868\u6570\u636e\u6e90": 589, "\u6307\u793a": 589, "\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u6e90\u6570\u636e": 589, "\u53ef\u4ee5\u4e3a\u6587\u4ef6\u8def\u5f84": 589, "\u6570\u7ec4\u7b49": 589, "\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50": 589, "\u8fd9\u5c06\u4f1a\u4ece\u6587\u4ef6": 589, "\u8f7d\u5165\u6570\u636e": 589, "\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 589, "\u4f46\u662f\u6709\u4e0d\u540c\u7684\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e": 589, "\u70b9\u6807\u7b7e\u7684\u540d\u5b57": 589, "\u9ed8\u8ba4\u4e3a": 589, "\u4e00\u5f20\u56fe\u4e2d\u4e0d\u80fd\u542b\u6709\u540c\u540d\u7684\u6807\u7b7e": 589, "\u6240\u4ee5\u82e5\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6807\u7b7e": 589, "\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u6807\u7b7e\u540d\u5b57": 589, "\u603b\u662f\u7ed9\u6807\u7b7e\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u5b57\u4e5f\u6709\u597d\u5904": 589, "\u53ef\u4ee5\u4e3a\u4efb\u4f55\u6807\u8bc6\u7b26": 589, "\u4e3e\u4e2a\u4f8b\u5b50": 589, "\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b65\u7ed3\u679c\u9664\u4e86\u6807\u7b7e\u540d\u5b8c\u5168\u4e00\u81f4": 589, "\u4e00\u7ec4\u5c5e\u6027\u540d\u5b57": 589, "\u53ef\u9009\u9879": 589, "\u5c5e\u6027\u540d\u5e94\u5f53\u4e0e\u6570\u636e\u4e2d\u7684\u9996\u884c\u8868\u5934\u4e2d\u7684\u540d\u5b57\u76f8\u4e00\u81f4": 589, "\u5982\u679c\u7701\u7565\u6216\u4e3a": 589, "\u9664id\u5217\u4e4b\u5916\u7684\u6240\u6709\u5217\u90fd\u5c06\u4f1a\u4f5c\u4e3a\u5c5e\u6027\u8f7d\u5165": 589, "\u5982\u679c\u4e3a\u7a7a\u5217\u8868": 589, "\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8f7d\u5165\u4efb\u4f55\u5c5e\u6027": 589, "\u5176\u4ed6\u60c5\u51b5\u4e0b": 589, "\u53ea\u4f1a\u8f7d\u5165\u6307\u5b9a\u4e86\u7684\u5217\u4f5c\u4e3a\u5c5e\u6027": 589, "\u6bd4\u5982\u8bf4": 589, "\u5217\u7684\u5217\u540d": 589, "\u6b64\u5217\u5c06\u5728\u8f7d\u5165\u8fb9\u65f6\u88ab\u7528\u505a\u8d77\u59cb\u70b9": 589, "\u6216\u76ee\u6807\u70b9": 589, "\u5176\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32": 589, "\u6b64\u65f6\u6307\u4ee3\u5217\u540d": 589, "\u6216\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u6b63\u6574\u6570": 589, "\u4ee3\u8868\u7b2c\u51e0\u5217": 589, "\u4ece0\u5f00\u59cb": 589, "\u9ed8\u8ba4\u4e3a\u7b2c0\u5217": 589, "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u6807\u7b7e": 589, "\u4e0e\u6784\u5efa\u70b9\u6807\u7b7e\u4e00\u8282\u4e2d\u7684": 589, "\u7c7b\u4f3c": 589, "\u4e3a\u6307\u793a\u53bb\u54ea\u91cc\u8bfb\u6570\u636e\u7684\u8def\u5f84": 589, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 589, "\u8fd9\u5c06\u4f1a\u8f7d\u5165\u4e00\u4e2a\u6807\u7b7e\u540d\u4e3a": 589, "\u6e90\u8282\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u8282\u70b9\u6807\u7b7e\u90fd\u4e3a": 589, "\u7b2c\u4e00\u5217\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9id": 589, "\u7b2c\u4e8c\u5217\u4f5c\u4e3a\u7ec8\u70b9\u7684\u70b9id": 589, "\u5176\u4ed6\u5217\u90fd\u4f5c\u4e3a\u5c5e\u6027": 589, "\u8fb9\u7684\u6807\u7b7e\u540d": 589, "\u63a8\u8350\u603b\u662f\u4f7f\u7528\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u7b7e\u540d": 589, "\u4e00\u5217\u5c5e\u6027": 589, "\u610f\u4e49\u4e0e\u884c\u4e3a\u90fd\u548c\u70b9\u4e2d\u7684\u4e00\u81f4": 589, "\u8d77\u70b9\u7684\u6807\u7b7e\u540d\u4e0e\u7ec8\u70b9\u7684\u6807\u7b7e\u540d": 589, "\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86": 589, "\u5728\u90a3\u91cc\u5c06\u5176\u8d4b\u503c\u4e3a": 589, "\u8fd9\u4e24\u8005\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u503c": 589, "\u4e3e\u4f8b\u6765\u8bf4": 589, "\u8d77\u70b9\u7684": 589, "\u5217\u540d\u4e0e\u7ec8\u70b9\u7684": 589, "\u5217\u540d": 589, "\u9ed8\u8ba4\u5206\u522b\u4e3a": 589, "\u610f\u4e49\u548c\u8868\u73b0\u4e0e\u70b9\u4e2d\u7684": 589, "\u4e0d\u540c\u7684\u662f\u9700\u8981\u4e24\u5217": 589, "\u4e00\u5217\u4e3a\u8d77\u70b9": 589, "\u4e00\u5217\u4e3a\u7ec8\u70b9": 589, "\u4ee5\u4e0b\u662f\u4e2a\u4f8b\u5b50": 589, "\u8fd9\u662f\u4e00\u4e9b\u7528\u6765\u5904\u7406\u7279\u522b\u7b80\u5355\u6216\u7279\u522b\u590d\u6742\u7684\u9ad8\u7ea7\u4e00\u4e9b\u7684\u7528\u6cd5": 589, "\u5982\u679c\u56fe\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\u6807\u7b7e": 589, "\u90a3\u4e48\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u70b9\u6807\u7b7e": 589, "\u5c06\u4f1a\u63a8\u65ad\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e\u4e3a\u8fd9\u4e00\u4e2a\u70b9\u6807\u7b7e": 589, "\u5982\u679c\u7528\u6237\u7684": 589, "\u53d6\u503c\u4e3a\u56fe\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\u6807\u7b7e": 589, "\u4f1a\u4ece\u8fb9\u7684\u7aef\u70b9\u4e2d\u805a\u5408\u51fa\u70b9\u8868": 589, "\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b": 589, "\u4e00\u79cd\u8fb9\u7684\u6807\u7b7e\u53ef\u80fd\u8fde\u63a5\u4e86\u4e24\u79cd\u53ca\u4ee5\u4e0a\u7684\u70b9": 589, "\u5728\u4e0b\u9762\u7684\u5c5e\u6027\u56fe\u4e2d": 589, "\u6709\u4e00\u4e2a\u540d\u4e3a": 589, "\u7684\u8fb9\u6807\u7b7e": 589, "\u8fde\u63a5\u4e86\u4e24\u79cd\u70b9\u6807\u7b7e": 589, "\u53ef\u4ee5\u6dfb\u52a0\u4e24\u6b21\u540d\u4e3a": 589, "\u53ef\u4ee5\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u63a8\u65ad\u70b9\u7684\u7c7b\u578b": 589, "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5de5\u4f5c\u7684\u5f88\u597d": 589, "\u7528\u6237\u6709\u65f6\u9700\u8981\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u80fd\u529b": 589, "\u4e3a\u4e86\u6ee1\u8db3\u6b64\u79cd\u9700\u6c42": 589, "\u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u4e4b\u540e\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7c7b\u578b\u7684\u53c2\u6570": 589, "\u50cf\u8fd9\u6837": 589, "\u8fd9\u5c06\u4f1a\u5c06\u5c5e\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b": 589, "\u6ce8\u610f\u5c5e\u6027\u540d\u5b57\u548c\u7c7b\u578b\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5143\u7ec4\u4e2d": 589, "\u5728\u8fd9\u91cc": 589, "\u7684\u7c7b\u578b\u5c06\u4f1a\u662f": 589, "\u800c\u9ed8\u8ba4\u4e0d\u6307\u5b9a\u7684\u8bdd\u4e3a": 589, "\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u662f\u6307\u5b9a": 589, "\u7b49\u7c7b\u578b": 589, "\u6709\u4e09\u4e2a\u914d\u7f6e\u5143\u4fe1\u606f\u7684\u53c2\u6570": 589, "\u5206\u522b\u4e3a": 589, "\u53ef\u4ee5\u4e3a": 589, "\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6": 589, "\u548c\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58": 589, "\u5f53id\u4e0d\u80fd\u7528": 589, "\u8868\u793a\u65f6": 589, "\u624d\u5e94\u8be5\u4f7f\u7528": 589, "\u5982\u679c\u786e\u5b9a\u56fe\u70b9id\u8303\u56f4\u4e0d\u4f1a\u8d85\u8fc7": 589, "\u5efa\u8bae\u4f7f\u7528": 589, "\u6765\u964d\u4f4e\u5185\u5b58\u5f00\u9500": 589, "\u6307\u793a\u8f7d\u5165\u65e0\u5411\u56fe\u8fd8\u662f\u6709\u5411\u56fe": 589, "\u6307\u793a\u662f\u5426\u4e3a\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684id": 589, "\u6307\u793a\u662f\u5426\u662f\u5426\u5c06\u70b9\u539f\u59cbid\u4fdd\u7559\u4e3a\u5c5e\u6027": 589, "\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u56fe\u7684\u5b9a\u4e49": 589, "\u8fd9\u91cc\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u8f7d\u5165": 589, "\u5c5e\u6027\u56fe\u7684": 589, "\u4f8b\u5b50": 589, "\u4e0a\u6587\u63d0\u5230\u7684\u6570\u636e\u6e90\u662f\u4e00\u4e2a": 589, "\u7684\u7c7b": 589, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6570\u636e\u672c\u8eab": 589, "\u652f\u6301\u4ece": 589, "\u8fd9\u53ef\u4ee5\u4f7f\u7528\u6237\u4ec5\u901a\u8fc7": 589, "\u63a7\u5236\u53f0\u4fbf\u53ef\u4ee5\u521b\u5efa\u56fe": 589, "\u9664\u4e86": 589, "\u5916": 589, "\u5176\u4ed6\u5c5e\u6027": 589, "id\u5217": 589, "\u6807\u7b7e\u8bbe\u7f6e\u7b49\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u7684\u4fdd\u6301\u4e00\u81f4": 589, "\u6ce8\u610f\u6bcf\u4e2a\u6570\u7ec4\u90fd\u4ee3\u8868\u4e00\u5217": 589, "\u6211\u4eec\u5c06\u5176\u4ee5": 589, "\u77e9\u9635\u7684\u65b9\u5f0f\u4f20\u5165": 589, "\u5f53": 589, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u65f6": 589, "\u5b83\u53ef\u80fd\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32": 589, "\u6587\u4ef6\u8def\u5f84\u5e94\u9075\u5faa": 589, "\u6807\u51c6": 589, "\u5f53\u6536\u5230\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u8f7d\u56fe\u8bf7\u6c42\u65f6": 589, "\u5c06\u4f1a\u89e3\u6790": 589, "\u8c03\u7528\u76f8\u5e94\u7684\u8f7d\u56fe\u6a21\u5757": 589, "\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90": 589, "\u672c\u5730": 589, "\u6570\u636e\u7531": 589, "\u8d1f\u8d23\u8f7d\u5165": 589, "\u89e3\u6790\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u4ee5\u53ca\u53c2\u6570": 589, "\u4efb\u4f55\u989d\u5916\u7684\u5177\u4f53\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728loader\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u4f20\u5165": 589, "\u8fd9\u4e9b\u53c2\u6570\u4f1a\u76f4\u63a5\u88ab\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u5b58\u50a8\u7c7b\u4e2d": 589, "\u4e4b\u4e8e": 589, "\u6216\u8005\u662f": 589, "\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u81ea\u5df1\u7684driver\u6765\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u6e90": 589, "\u6bd4\u5982\u53c2\u7167": 589, "driver\u7684\u5b9e\u73b0\u65b9\u5f0f": 589, "\u7528\u6237\u9700\u8981\u7ee7\u627f": 589, "\u7c7b\u7528\u6765\u505ascheme\u5bf9\u5e94\u7684resolv": 589, "abstractbufferedfil": 589, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 589, "\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684read": 589, "write\u529f\u80fd": 589, "\u6700\u540e\u901a\u8fc7": 589, "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7684resolv": 589, "\u6211\u4eec\u4e3agraphscope\u7684\u7528\u6237\u51c6\u5907\u4e86\u4e00\u7cfb\u5217\u8be6\u5c3d\u7684\u5165\u95e8\u6559\u7a0b": 590, "\u4ece\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u4e2d\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230\u5982\u4f55\u542f\u52a8\u4e00\u4e2agraphscope\u4f1a\u8bdd": 590, "\u5982\u4f55\u8f7d\u56fe": 590, "\u4ee5\u53ca\u5982\u4f55\u5206\u522b": 590, "\u4f7f\u7528graphscope\u4e2d\u7684ga": 590, "gle\u5f15\u64ce\u6765\u5b8c\u6210\u56fe\u5206\u6790\u4efb\u52a1": 590, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3": 590, "\u6211\u4eec\u7528jupyt": 590, "notebook\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u6559\u7a0b": 590, "\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2ajupyt": 590, "notebook\u670d\u52a1\u4e2d\u5c1d\u8bd5\u6267\u884c": 590, "\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5df2\u7ecf\u51c6\u5907\u597d\u7684jupyt": 590, "lab": 590, "\u4ee5\u4fbf\u4e8e\u7528\u6237\u66f4\u5feb\u5730\u4e0a\u624bgraphscop": 590, "\u5165\u95e8\u6559\u7a0b\u5305\u62ec\u5982\u4e0b\u8fd9\u4e9b\u5185\u5bb9": 590}, "objects": {"": [[346, 0, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase"], [346, 1, 1, "_CPPv4N2gs7AppBase7AppBaseEv", "gs::AppBase::AppBase"], [346, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::CONTEXT_T"], [346, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::FRAG_T"], [346, 1, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval"], [346, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::context"], [346, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::graph"], [346, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::messages"], [346, 1, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval"], [346, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::context"], [346, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::graph"], [346, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::messages"], [346, 4, 1, "_CPPv4N2gs7AppBase13load_strategyE", "gs::AppBase::load_strategy"], [346, 5, 1, "_CPPv4N2gs7AppBase17message_manager_tE", "gs::AppBase::message_manager_t"], [346, 4, 1, "_CPPv4N2gs7AppBase16message_strategyE", "gs::AppBase::message_strategy"], [346, 4, 1, "_CPPv4N2gs7AppBase16need_split_edgesE", "gs::AppBase::need_split_edges"], [346, 1, 1, "_CPPv4N2gs7AppBaseD0Ev", "gs::AppBase::~AppBase"], [346, 0, 1, "_CPPv4N2gs8AppEntryE", "gs::AppEntry"], [346, 1, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry"], [346, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::id"], [346, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::lib_path"], [346, 1, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker"], [346, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::comm_spec"], [346, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::fragment"], [346, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::spec"], [346, 1, 1, "_CPPv4N2gs8AppEntry4InitEv", "gs::AppEntry::Init"], [346, 1, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query"], [346, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::context_key"], [346, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::frag_wrapper"], [346, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::query_args"], [346, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::worker_handler"], [346, 0, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt"], [346, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::FunctionType"], [346, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::index"], [346, 0, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum"], [346, 2, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum::FunctionType"], [346, 0, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker"], [346, 2, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker::T"], [346, 0, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel::frag_id"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel::label_id"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel::frag_id"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel::label_id"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment::frag_id"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup::frag_id"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::compact_edges"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::directed"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::efiles"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::generate_eid"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::graph_info"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::retain_oid"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::use_perfect_hash"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::vfiles"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData::extend_type"], [346, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData::frag_id"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv", "gs::ArrowFragmentLoader::LoadEdgeTables"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv", "gs::ArrowFragmentLoader::LoadFragment"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv", "gs::ArrowFragmentLoader::LoadFragmentAsFragmentGroup"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv", "gs::ArrowFragmentLoader::LoadVertexEdgeTables"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv", "gs::ArrowFragmentLoader::LoadVertexTables"], [346, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::OID_T"], [346, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VERTEX_MAP_T"], [346, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VID_T"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv", "gs::ArrowFragmentLoader::initPartitioner"], [346, 1, 1, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev", "gs::ArrowFragmentLoader::~ArrowFragmentLoader"], [346, 0, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment"], [346, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::COMPACT"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct"], [346, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct::meta"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv", "gs::ArrowProjectedFragment::Create"], [346, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::EDATA_T"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv", "gs::ArrowProjectedFragment::GetEdgeNum"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv", "gs::ArrowProjectedFragment::GetInEdgeNum"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::src_fid"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv", "gs::ArrowProjectedFragment::GetIncomingEdgeNum"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::COMPACT_"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::v"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::COMPACT_"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::oid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv", "gs::ArrowProjectedFragment::GetInnerVerticesNum"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv", "gs::ArrowProjectedFragment::GetOutEdgeNum"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::oid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv", "gs::ArrowProjectedFragment::GetOuterVerticesNum"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::dst_fid"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv", "gs::ArrowProjectedFragment::GetOutgoingEdgeNum"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::COMPACT_"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::v"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::COMPACT_"], [346, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv", "gs::ArrowProjectedFragment::GetTotalVerticesNum"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::oid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::v"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv", "gs::ArrowProjectedFragment::GetVerticesNum"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid::gid"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::gid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment11IEDestsSizeEv", "gs::ArrowProjectedFragment::IEDestsSize"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12IOEDestsSizeEv", "gs::ArrowProjectedFragment::IOEDestsSize"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::gid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv", "gs::ArrowProjectedFragment::InnerVertices"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices::fid"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment11OEDestsSizeEv", "gs::ArrowProjectedFragment::OEDestsSize"], [346, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::OID_T"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::gid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::gid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv", "gs::ArrowProjectedFragment::OuterVertices"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices::fid"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp"], [346, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::comm_spec"], [346, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::conf"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project"], [346, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_label"], [346, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_prop"], [346, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::fragment"], [346, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_label"], [346, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_prop"], [346, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VDATA_T"], [346, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VERTEX_MAP_T"], [346, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VID_T"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid"], [346, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid::v"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv", "gs::ArrowProjectedFragment::Vertices"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE", "gs::ArrowProjectedFragment::adj_list_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE", "gs::ArrowProjectedFragment::compact_adj_list_t"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv", "gs::ArrowProjectedFragment::compact_edges"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE", "gs::ArrowProjectedFragment::compact_nbr_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE", "gs::ArrowProjectedFragment::const_adj_list_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE", "gs::ArrowProjectedFragment::const_compact_adj_list_t"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv", "gs::ArrowProjectedFragment::directed"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE", "gs::ArrowProjectedFragment::edata_t"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv", "gs::ArrowProjectedFragment::edge_label"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv", "gs::ArrowProjectedFragment::edge_prop_id"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE", "gs::ArrowProjectedFragment::eid_array_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE", "gs::ArrowProjectedFragment::eid_t"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv", "gs::ArrowProjectedFragment::fid"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv", "gs::ArrowProjectedFragment::fnum"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv", "gs::ArrowProjectedFragment::get_arrow_fragment"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv", "gs::ArrowProjectedFragment::get_edata_array_accessor"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_begin_ptr"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_end_ptr"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr::COMPACT_"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_begin_ptr"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_end_ptr"], [346, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr"], [346, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr::COMPACT_"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv", "gs::ArrowProjectedFragment::get_vdata_array_accessor"], [346, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t"], [346, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t::DATA_T"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE", "gs::ArrowProjectedFragment::inner_vertices_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE", "gs::ArrowProjectedFragment::internal_oid_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE", "gs::ArrowProjectedFragment::label_id_t"], [346, 4, 1, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE", "gs::ArrowProjectedFragment::load_strategy"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv", "gs::ArrowProjectedFragment::local_vertex_map"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE", "gs::ArrowProjectedFragment::nbr_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE", "gs::ArrowProjectedFragment::nbr_unit_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE", "gs::ArrowProjectedFragment::oid_t"], [346, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t"], [346, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t::DATA_T"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE", "gs::ArrowProjectedFragment::outer_vertices_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE", "gs::ArrowProjectedFragment::prop_id_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE", "gs::ArrowProjectedFragment::property_graph_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE", "gs::ArrowProjectedFragment::property_vertex_map_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE", "gs::ArrowProjectedFragment::sub_vertices_t"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16use_perfect_hashEv", "gs::ArrowProjectedFragment::use_perfect_hash"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE", "gs::ArrowProjectedFragment::vdata_t"], [346, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t"], [346, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t::DATA_T"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv", "gs::ArrowProjectedFragment::vertex_label"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv", "gs::ArrowProjectedFragment::vertex_map_id"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE", "gs::ArrowProjectedFragment::vertex_map_t"], [346, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv", "gs::ArrowProjectedFragment::vertex_prop_id"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE", "gs::ArrowProjectedFragment::vertex_range_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE", "gs::ArrowProjectedFragment::vertex_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE", "gs::ArrowProjectedFragment::vertices_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE", "gs::ArrowProjectedFragment::vid_array_t"], [346, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE", "gs::ArrowProjectedFragment::vid_t"], [346, 1, 1, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev", "gs::ArrowProjectedFragment::~ArrowProjectedFragment"], [346, 0, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap"], [346, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct"], [346, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct::meta"], [346, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv", "gs::ArrowProjectedVertexMap::Create"], [346, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid::gid"], [346, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [346, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::fid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [346, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize::fid"], [346, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid::gid"], [346, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid"], [346, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid::lid"], [346, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::gid"], [346, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::oid"], [346, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv", "gs::ArrowProjectedVertexMap::GetTotalVerticesNum"], [346, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::OID_T"], [346, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid"], [346, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid::offset"], [346, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project"], [346, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::v_label"], [346, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::vm"], [346, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VERTEX_MAP_T"], [346, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VID_T"], [346, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap16use_perfect_hashEv", "gs::ArrowProjectedVertexMap::use_perfect_hash"], [346, 0, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder"], [346, 2, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder::CTX_T"], [346, 0, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker"], [346, 2, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker::APP_T"], [346, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker"], [346, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::app"], [346, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::graph"], [346, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv", "gs::DefaultPropertyWorker::Finalize"], [346, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv", "gs::DefaultPropertyWorker::GetContext"], [346, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init"], [346, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::comm_spec"], [346, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::pe_spec"], [346, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output"], [346, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output::os"], [346, 1, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query"], [346, 2, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::Args"], [346, 3, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::args"], [346, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker9context_tE", "gs::DefaultPropertyWorker::context_t"], [346, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE", "gs::DefaultPropertyWorker::fragment_t"], [346, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE", "gs::DefaultPropertyWorker::message_manager_t"], [346, 1, 1, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev", "gs::DefaultPropertyWorker::~DefaultPropertyWorker"], [346, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [346, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [346, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [346, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [346, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [346, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [346, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [346, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [346, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [346, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [346, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [346, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [346, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [346, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [346, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [346, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [346, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [346, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [346, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [346, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [346, 0, 1, "_CPPv4N2gs14DispatchResultE", "gs::DispatchResult"], [346, 6, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicyE", "gs::DispatchResult::AggregatePolicy"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::AggregatePolicy::kConcat"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::AggregatePolicy::kMergeGraphDef"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::AggregatePolicy::kPickFirst"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmpty"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmptyGraphDef"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::AggregatePolicy::kRequireConsistent"], [346, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult"], [346, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEv", "gs::DispatchResult::DispatchResult"], [346, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::error_code"], [346, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::worker_id"], [346, 1, 1, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv", "gs::DispatchResult::aggregate_policy"], [346, 1, 1, "_CPPv4NK2gs14DispatchResult4dataEv", "gs::DispatchResult::data"], [346, 1, 1, "_CPPv4NK2gs14DispatchResult10error_codeEv", "gs::DispatchResult::error_code"], [346, 1, 1, "_CPPv4N2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [346, 1, 1, "_CPPv4NK2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [346, 1, 1, "_CPPv4NK2gs14DispatchResult14has_large_dataEv", "gs::DispatchResult::has_large_data"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::kConcat"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::kMergeGraphDef"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::kPickFirst"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::kPickFirstNonEmpty"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::kPickFirstNonEmptyGraphDef"], [346, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::kRequireConsistent"], [346, 1, 1, "_CPPv4N2gs14DispatchResult7messageEv", "gs::DispatchResult::message"], [346, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data"], [346, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data"], [346, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::arc"], [346, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::data"], [346, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [346, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [346, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [346, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [346, 1, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error"], [346, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::error_code"], [346, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::message"], [346, 1, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def"], [346, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::graph_def"], [346, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::policy"], [346, 1, 1, "_CPPv4NK2gs14DispatchResult9worker_idEv", "gs::DispatchResult::worker_id"], [346, 0, 1, "_CPPv4N2gs10DispatcherE", "gs::Dispatcher"], [346, 1, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch"], [346, 3, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch::cmd"], [346, 1, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher"], [346, 3, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher::comm_spec"], [346, 1, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand"], [346, 3, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand::cmd"], [346, 1, 1, "_CPPv4N2gs10Dispatcher5StartEv", "gs::Dispatcher::Start"], [346, 1, 1, "_CPPv4N2gs10Dispatcher4StopEv", "gs::Dispatcher::Stop"], [346, 1, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe"], [346, 3, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe::subscriber"], [346, 0, 1, "_CPPv4N2gs12EngineConfigE", "gs::EngineConfig"], [346, 1, 1, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv", "gs::EngineConfig::ToJsonString"], [346, 4, 1, "_CPPv4N2gs12EngineConfig15enable_java_sdkE", "gs::EngineConfig::enable_java_sdk"], [346, 4, 1, "_CPPv4N2gs12EngineConfig8networkxE", "gs::EngineConfig::networkx"], [346, 4, 1, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE", "gs::EngineConfig::vineyard_rpc_endpoint"], [346, 4, 1, "_CPPv4N2gs12EngineConfig15vineyard_socketE", "gs::EngineConfig::vineyard_socket"], [346, 0, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper"], [346, 2, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper::FRAG_T"], [346, 0, 1, "_CPPv4N2gs8GSObjectE", "gs::GSObject"], [346, 1, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject"], [346, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::id"], [346, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::type"], [346, 1, 1, "_CPPv4NK2gs8GSObject8ToStringEv", "gs::GSObject::ToString"], [346, 1, 1, "_CPPv4NK2gs8GSObject2idEv", "gs::GSObject::id"], [346, 1, 1, "_CPPv4NK2gs8GSObject4typeEv", "gs::GSObject::type"], [346, 1, 1, "_CPPv4N2gs8GSObjectD0Ev", "gs::GSObject::~GSObject"], [346, 0, 1, "_CPPv4N2gs11GrapeEngineE", "gs::GrapeEngine"], [346, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine"], [346, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine"], [346, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine::dag_file"], [346, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::host"], [346, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::port"], [346, 1, 1, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv", "gs::GrapeEngine::RunDAGFile"], [346, 1, 1, "_CPPv4N2gs11GrapeEngine5StartEv", "gs::GrapeEngine::Start"], [346, 1, 1, "_CPPv4N2gs11GrapeEngine4StopEv", "gs::GrapeEngine::Stop"], [346, 0, 1, "_CPPv4N2gs13GrapeInstanceE", "gs::GrapeInstance"], [346, 1, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance"], [346, 3, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance::comm_spec"], [346, 1, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init"], [346, 3, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init::vineyard_socket"], [346, 1, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive"], [346, 3, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive::cmd"], [346, 0, 1, "_CPPv4N2gs13ObjectManagerE", "gs::ObjectManager"], [346, 1, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject"], [346, 1, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject"], [346, 2, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::T"], [346, 3, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [346, 3, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [346, 1, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject"], [346, 3, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject::id"], [346, 1, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject"], [346, 3, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject::obj"], [346, 1, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject"], [346, 3, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject::id"], [346, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [346, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [346, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [346, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [346, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [346, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [346, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [346, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [346, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [346, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [346, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [346, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [346, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [346, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [346, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [346, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [346, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [346, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [346, 0, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase"], [346, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::CONTEXT_T"], [346, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::FRAG_T"], [346, 1, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval"], [346, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::context"], [346, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::graph"], [346, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::messages"], [346, 1, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval"], [346, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::context"], [346, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::graph"], [346, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::messages"], [346, 1, 1, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv", "gs::PropertyAppBase::PropertyAppBase"], [346, 4, 1, "_CPPv4N2gs15PropertyAppBase13load_strategyE", "gs::PropertyAppBase::load_strategy"], [346, 5, 1, "_CPPv4N2gs15PropertyAppBase17message_manager_tE", "gs::PropertyAppBase::message_manager_t"], [346, 4, 1, "_CPPv4N2gs15PropertyAppBase16message_strategyE", "gs::PropertyAppBase::message_strategy"], [346, 4, 1, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE", "gs::PropertyAppBase::need_split_edges"], [346, 1, 1, "_CPPv4N2gs15PropertyAppBaseD0Ev", "gs::PropertyAppBase::~PropertyAppBase"], [346, 0, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase"], [346, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::CONTEXT_T"], [346, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::FRAG_T"], [346, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval"], [346, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::context"], [346, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::graph"], [346, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval"], [346, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::context"], [346, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::graph"], [346, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv", "gs::PropertyAutoAppBase::PropertyAutoAppBase"], [346, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE", "gs::PropertyAutoAppBase::load_strategy"], [346, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE", "gs::PropertyAutoAppBase::message_strategy"], [346, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE", "gs::PropertyAutoAppBase::need_split_edges"], [346, 1, 1, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev", "gs::PropertyAutoAppBase::~PropertyAutoAppBase"], [346, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [346, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [346, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [346, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [346, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [346, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [346, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [346, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [346, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [346, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [346, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [346, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [346, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [346, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [346, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [346, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [346, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [346, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [346, 0, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext"], [346, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::DATA_T"], [346, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::FRAG_T"], [346, 1, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext"], [346, 3, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext::fragment"], [346, 1, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign"], [346, 1, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign"], [346, 3, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign::data"], [346, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::data"], [346, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::shape"], [346, 5, 1, "_CPPv4N2gs13TensorContext6data_tE", "gs::TensorContext::data_t"], [346, 1, 1, "_CPPv4N2gs13TensorContext8fragmentEv", "gs::TensorContext::fragment"], [346, 1, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape"], [346, 3, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape::shape"], [346, 1, 1, "_CPPv4NK2gs13TensorContext5shapeEv", "gs::TensorContext::shape"], [346, 1, 1, "_CPPv4N2gs13TensorContext6tensorEv", "gs::TensorContext::tensor"], [346, 0, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper"], [346, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::DATA_T"], [346, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::FRAG_T"], [346, 1, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::ctx"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::frag_wrapper"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::id"], [346, 1, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::comm_spec"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::selectors"], [346, 1, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe::comm_spec"], [346, 1, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::axis"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::comm_spec"], [346, 1, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::client"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::comm_spec"], [346, 1, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::axis"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::client"], [346, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::comm_spec"], [346, 1, 1, "_CPPv4N2gs20TensorContextWrapper12context_typeEv", "gs::TensorContextWrapper::context_type"], [346, 1, 1, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv", "gs::TensorContextWrapper::fragment_wrapper"], [346, 0, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper"], [346, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::DATA_T"], [346, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::FRAG_T"], [346, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::comm_spec"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::selectors"], [346, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::comm_spec"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::range"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::selectors"], [346, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::comm_spec"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::range"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::selector"], [346, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::client"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::comm_spec"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::range"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::selectors"], [346, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::client"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::comm_spec"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::range"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::selector"], [346, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::ctx"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::frag_wrapper"], [346, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::id"], [346, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv", "gs::VertexDataContextWrapper::context_type"], [346, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv", "gs::VertexDataContextWrapper::fragment_wrapper"], [346, 0, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext"], [346, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext::FRAG_T"], [346, 1, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext"], [346, 3, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext::fragment"], [346, 1, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column"], [346, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::name"], [346, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::type"], [346, 1, 1, "_CPPv4N2gs21VertexPropertyContext8fragmentEv", "gs::VertexPropertyContext::fragment"], [346, 5, 1, "_CPPv4N2gs21VertexPropertyContext10fragment_tE", "gs::VertexPropertyContext::fragment_t"], [346, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column"], [346, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column"], [346, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column::index"], [346, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column::name"], [346, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column"], [346, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column"], [346, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [346, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [346, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::index"], [346, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::name"], [346, 5, 1, "_CPPv4N2gs21VertexPropertyContext5oid_tE", "gs::VertexPropertyContext::oid_t"], [346, 5, 1, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE", "gs::VertexPropertyContext::prop_id_t"], [346, 1, 1, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv", "gs::VertexPropertyContext::properties_map"], [346, 1, 1, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv", "gs::VertexPropertyContext::vertex_properties"], [346, 5, 1, "_CPPv4N2gs21VertexPropertyContext8vertex_tE", "gs::VertexPropertyContext::vertex_t"], [346, 0, 1, "_CPPv4N2gs3rpc16AnalyticalServerE", "gs::rpc::AnalyticalServer"], [346, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer"], [346, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::dispatcher"], [346, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::host"], [346, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::port"], [346, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv", "gs::rpc::AnalyticalServer::StartServer"], [346, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv", "gs::rpc::AnalyticalServer::StopServer"], [0, 8, 1, "", "all_pairs_shortest_path_length"], [0, 8, 1, "", "attribute_assortativity"], [0, 8, 1, "", "average_degree_connectivity"], [0, 8, 1, "", "betweenness_centrality"], [0, 8, 1, "", "bfs"], [0, 8, 1, "id0", "cdlp"], [0, 8, 1, "", "closeness_centrality"], [0, 8, 1, "id1", "clustering"], [0, 8, 1, "", "degree_assortativity_coefficient"], [0, 8, 1, "", "degree_centrality"], [0, 8, 1, "", "dfs"], [0, 8, 1, "", "eigenvector_centrality"], [0, 8, 1, "", "hits"], [0, 8, 1, "", "katz_centrality"], [0, 8, 1, "", "kkore"], [0, 8, 1, "", "kshell"], [0, 8, 1, "id2", "lcc"], [0, 8, 1, "", "lpa"], [0, 8, 1, "id3", "pagerank"], [0, 8, 1, "", "sampling_path"], [0, 8, 1, "", "sssp"], [0, 8, 1, "id4", "voterank"], [0, 8, 1, "id5", "wcc"]], "graphscope": [[563, 9, 1, "", "Session"], [353, 12, 1, "", "Vertex"], [347, 8, 1, "", "attribute_assortativity_coefficient"], [347, 8, 1, "", "average_degree_connectivity"], [347, 8, 1, "", "average_shortest_path_length"], [347, 8, 1, "", "avg_clustering"], [347, 8, 1, "", "bfs"], [347, 8, 1, "", "cdlp"], [347, 8, 1, "", "clustering"], [354, 8, 1, "", "declare"], [347, 8, 1, "", "degree_assortativity_coefficient"], [347, 8, 1, "", "degree_centrality"], [347, 8, 1, "", "eigenvector_centrality"], [397, 8, 1, "", "g"], [398, 8, 1, "", "get_default_session"], [399, 8, 1, "", "graphlearn"], [400, 8, 1, "", "gremlin"], [401, 8, 1, "", "has_default_session"], [347, 8, 1, "", "hits"], [347, 8, 1, "", "is_simple_path"], [347, 8, 1, "", "k_core"], [347, 8, 1, "", "k_shell"], [347, 8, 1, "", "katz_centrality"], [347, 8, 1, "", "louvain"], [347, 8, 1, "", "lpa"], [347, 8, 1, "", "lpa_u2i"], [347, 8, 1, "", "numeric_assortativity_coefficient"], [347, 8, 1, "", "pagerank"], [347, 8, 1, "", "pagerank_nx"], [402, 14, 1, "", "session"], [403, 8, 1, "", "set_option"], [347, 8, 1, "", "sssp"], [347, 8, 1, "", "triangles"], [347, 8, 1, "", "voterank"], [347, 8, 1, "", "wcc"]], "graphscope.Session": [[563, 10, 1, "", "__enter__"], [563, 10, 1, "", "__exit__"], [563, 10, 1, "", "__init__"], [563, 10, 1, "", "add_lib"], [563, 10, 1, "", "as_default"], [563, 10, 1, "", "close"], [563, 10, 1, "", "connected"], [563, 11, 1, "", "engine_config"], [563, 10, 1, "", "g"], [563, 10, 1, "", "get_config"], [563, 10, 1, "", "get_vineyard_object_mapping_table"], [563, 10, 1, "", "graphlearn"], [563, 11, 1, "", "info"], [563, 10, 1, "", "interactive"], [563, 10, 1, "", "load_from"], [563, 10, 1, "", "restore_from_pvc"], [563, 10, 1, "", "run_fetches"], [563, 10, 1, "", "store_to_pvc"]], "graphscope.analytical.app": [[347, 9, 1, "", "JavaApp"]], "graphscope.analytical.app.JavaApp": [[347, 10, 1, "", "__call__"], [347, 10, 1, "", "__init__"], [347, 10, 1, "", "is_compatible"], [347, 10, 1, "", "signature"]], "graphscope.framework.app": [[347, 9, 1, "", "App"], [347, 9, 1, "", "AppAssets"], [347, 9, 1, "", "AppDAGNode"], [355, 8, 1, "", "load_app"]], "graphscope.framework.app.App": [[347, 10, 1, "", "__del__"], [347, 10, 1, "", "__init__"], [347, 11, 1, "", "key"], [347, 11, 1, "", "signature"]], "graphscope.framework.app.AppAssets": [[347, 10, 1, "", "__init__"], [347, 11, 1, "", "algo"], [347, 11, 1, "", "context_type"], [347, 11, 1, "", "gar"], [347, 10, 1, "", "is_compatible"], [347, 11, 1, "", "signature"], [347, 11, 1, "", "type"]], "graphscope.framework.context": [[348, 9, 1, "", "BaseContextDAGNode"], [348, 9, 1, "", "Context"], [348, 9, 1, "", "DynamicVertexDataContext"], [348, 9, 1, "", "LabeledVertexDataContextDAGNode"], [348, 9, 1, "", "LabeledVertexPropertyContextDAGNode"], [348, 9, 1, "", "ResultDAGNode"], [348, 9, 1, "", "TensorContextDAGNode"], [348, 9, 1, "", "VertexDataContextDAGNode"], [348, 9, 1, "", "VertexPropertyContextDAGNode"]], "graphscope.framework.context.BaseContextDAGNode": [[348, 10, 1, "", "to_dataframe"], [348, 10, 1, "", "to_numpy"], [348, 10, 1, "", "to_vineyard_dataframe"], [348, 10, 1, "", "to_vineyard_tensor"]], "graphscope.framework": [[560, 13, 0, "-", "dag_utils"]], "graphscope.framework.dag_utils": [[356, 8, 1, "", "add_column"], [357, 8, 1, "", "add_labels_to_graph"], [358, 8, 1, "", "arrow_to_dynamic"], [359, 8, 1, "", "bind_app"], [360, 8, 1, "", "clear_edges"], [361, 8, 1, "", "clear_graph"], [362, 8, 1, "", "context_to_dataframe"], [363, 8, 1, "", "context_to_numpy"], [364, 8, 1, "", "copy_graph"], [365, 8, 1, "", "create_app"], [366, 8, 1, "", "create_graph"], [367, 8, 1, "", "create_graph_view"], [368, 8, 1, "", "create_loader"], [369, 8, 1, "", "create_subgraph"], [370, 8, 1, "", "create_unload_op"], [371, 8, 1, "", "dynamic_to_arrow"], [372, 8, 1, "", "get_context_data"], [373, 8, 1, "", "graph_to_dataframe"], [374, 8, 1, "", "graph_to_numpy"], [375, 8, 1, "", "gremlin_to_subgraph"], [376, 8, 1, "", "modify_edges"], [377, 8, 1, "", "modify_vertices"], [378, 8, 1, "", "output"], [379, 8, 1, "", "project_arrow_property_graph"], [380, 8, 1, "", "project_to_simple"], [381, 8, 1, "", "report_graph"], [382, 8, 1, "", "run_app"], [383, 8, 1, "", "to_data_sink"], [384, 8, 1, "", "to_directed"], [385, 8, 1, "", "to_undirected"], [386, 8, 1, "", "to_vineyard_dataframe"], [387, 8, 1, "", "to_vineyard_tensor"], [388, 8, 1, "", "unload_app"], [389, 8, 1, "", "unload_context"], [390, 8, 1, "", "unload_graph"]], "graphscope.framework.graph": [[418, 9, 1, "", "Graph"], [418, 9, 1, "", "GraphDAGNode"]], "graphscope.framework.graph.Graph": [[418, 10, 1, "", "__init__"], [418, 10, 1, "", "add_column"], [418, 10, 1, "", "add_edges"], [418, 10, 1, "", "add_vertices"], [418, 10, 1, "", "consolidate_columns"], [418, 10, 1, "", "detach"], [418, 11, 1, "", "key"], [418, 10, 1, "", "load_from"], [418, 10, 1, "", "loaded"], [418, 10, 1, "", "project"], [418, 10, 1, "", "save_to"], [418, 11, 1, "", "schema"], [418, 11, 1, "", "schema_path"], [418, 11, 1, "", "session_id"], [418, 10, 1, "", "to_dataframe"], [418, 10, 1, "", "to_directed"], [418, 10, 1, "", "to_numpy"], [418, 10, 1, "", "to_undirected"], [418, 11, 1, "", "vineyard_id"]], "graphscope.framework.graph.GraphDAGNode": [[418, 10, 1, "", "__init__"], [418, 10, 1, "", "add_column"], [418, 10, 1, "", "add_edges"], [418, 10, 1, "", "add_vertices"], [418, 10, 1, "", "consolidate_columns"], [418, 10, 1, "", "project"]], "graphscope.framework.graph_builder": [[418, 8, 1, "", "load_from"]], "graphscope.framework.loader": [[418, 9, 1, "", "Loader"]], "graphscope.framework.loader.Loader": [[418, 10, 1, "", "__init__"]], "graphscope.framework.operation": [[560, 9, 1, "", "Operation"]], "graphscope.framework.operation.Operation": [[391, 10, 1, "", "__init__"], [392, 10, 1, "", "as_op_def"], [393, 10, 1, "", "eval"], [394, 11, 1, "", "evaluated"], [395, 11, 1, "", "key"], [396, 11, 1, "", "signature"]], "graphscope.interactive.query": [[419, 9, 1, "", "InteractiveQuery"]], "graphscope.interactive.query.InteractiveQuery": [[419, 10, 1, "", "__init__"], [419, 10, 1, "", "close"], [419, 11, 1, "", "cypher_driver"], [419, 11, 1, "", "cypher_url"], [419, 10, 1, "", "execute"], [419, 11, 1, "", "graph_url"], [419, 11, 1, "", "gremlin_client"], [419, 11, 1, "", "gremlin_url"], [419, 11, 1, "", "object_id"], [419, 11, 1, "", "session"], [419, 11, 1, "", "session_id"], [419, 10, 1, "", "subgraph"], [419, 10, 1, "", "submit"], [419, 10, 1, "", "traversal_source"]], "graphscope.learning.graph": [[420, 9, 1, "", "Graph"]], "graphscope.learning.graph.Graph": [[420, 10, 1, "", "E"], [420, 10, 1, "", "V"], [420, 10, 1, "", "__init__"], [420, 10, 1, "", "get_handle"]], "graphscope.nx": [[556, 9, 1, "", "DiGraph"], [556, 9, 1, "", "Graph"], [558, 8, 1, "", "read_adjlist"], [558, 8, 1, "", "read_edgelist"]], "graphscope.nx.DiGraph": [[556, 10, 1, "", "__contains__"], [556, 10, 1, "", "__getitem__"], [556, 10, 1, "", "__init__"], [556, 10, 1, "", "__iter__"], [556, 10, 1, "", "__len__"], [556, 10, 1, "", "add_edge"], [556, 10, 1, "", "add_edges_from"], [556, 10, 1, "", "add_node"], [556, 10, 1, "", "add_nodes_from"], [556, 10, 1, "", "add_weighted_edges_from"], [556, 11, 1, "", "adj"], [556, 10, 1, "", "adjacency"], [556, 14, 1, "", "adjlist_inner_dict_factory"], [556, 14, 1, "", "adjlist_outer_dict_factory"], [556, 10, 1, "", "clear"], [556, 10, 1, "", "clear_edges"], [556, 10, 1, "", "copy"], [556, 11, 1, "", "degree"], [556, 14, 1, "", "edge_attr_dict_factory"], [556, 10, 1, "", "edge_subgraph"], [556, 11, 1, "", "edges"], [556, 10, 1, "", "get_edge_data"], [556, 14, 1, "", "graph_attr_dict_factory"], [556, 14, 1, "", "graph_cache_factory"], [556, 11, 1, "", "graph_type"], [556, 10, 1, "", "has_edge"], [556, 10, 1, "", "has_node"], [556, 10, 1, "", "has_predecessor"], [556, 10, 1, "", "has_successor"], [556, 11, 1, "", "in_degree"], [556, 11, 1, "", "in_edges"], [556, 10, 1, "", "is_directed"], [556, 10, 1, "", "is_multigraph"], [556, 11, 1, "", "key"], [556, 11, 1, "", "name"], [556, 10, 1, "", "nbunch_iter"], [556, 10, 1, "", "neighbors"], [556, 14, 1, "", "node_attr_dict_factory"], [556, 14, 1, "", "node_dict_factory"], [556, 11, 1, "", "nodes"], [556, 10, 1, "", "number_of_edges"], [556, 10, 1, "", "number_of_nodes"], [556, 11, 1, "", "op"], [556, 10, 1, "", "order"], [556, 11, 1, "", "out_degree"], [556, 11, 1, "", "out_edges"], [556, 11, 1, "", "pred"], [556, 10, 1, "", "predecessors"], [556, 10, 1, "", "remove_edge"], [556, 10, 1, "", "remove_edges_from"], [556, 10, 1, "", "remove_node"], [556, 10, 1, "", "remove_nodes_from"], [556, 10, 1, "", "reverse"], [556, 11, 1, "", "schema"], [556, 11, 1, "", "session"], [556, 11, 1, "", "session_id"], [556, 10, 1, "", "set_edge_data"], [556, 10, 1, "", "set_node_data"], [556, 11, 1, "", "signature"], [556, 10, 1, "", "size"], [556, 10, 1, "", "subgraph"], [556, 11, 1, "", "succ"], [556, 10, 1, "", "successors"], [556, 10, 1, "", "to_directed"], [556, 10, 1, "", "to_undirected"], [556, 10, 1, "", "to_undirected_class"], [556, 10, 1, "", "update"]], "graphscope.nx.Graph": [[556, 10, 1, "", "__contains__"], [556, 10, 1, "", "__getitem__"], [559, 8, 1, "", "__init__"], [556, 10, 1, "", "__iter__"], [556, 10, 1, "", "__len__"], [559, 8, 1, "", "_convert_arrow_to_dynamic"], [556, 10, 1, "", "add_edge"], [556, 10, 1, "", "add_edges_from"], [556, 10, 1, "", "add_node"], [556, 10, 1, "", "add_nodes_from"], [556, 10, 1, "", "add_weighted_edges_from"], [556, 11, 1, "", "adj"], [556, 10, 1, "", "adjacency"], [556, 14, 1, "", "adjlist_inner_dict_factory"], [556, 14, 1, "", "adjlist_outer_dict_factory"], [556, 10, 1, "", "clear"], [556, 10, 1, "", "clear_edges"], [556, 10, 1, "", "copy"], [556, 11, 1, "", "degree"], [556, 14, 1, "", "edge_attr_dict_factory"], [556, 10, 1, "", "edge_subgraph"], [556, 11, 1, "", "edges"], [556, 10, 1, "", "get_edge_data"], [556, 14, 1, "", "graph_attr_dict_factory"], [556, 14, 1, "", "graph_cache_factory"], [556, 11, 1, "", "graph_type"], [556, 10, 1, "", "has_edge"], [556, 10, 1, "", "has_node"], [556, 10, 1, "", "is_directed"], [556, 10, 1, "", "is_multigraph"], [556, 11, 1, "", "key"], [556, 11, 1, "", "name"], [556, 10, 1, "", "nbunch_iter"], [556, 10, 1, "", "neighbors"], [556, 14, 1, "", "node_attr_dict_factory"], [556, 14, 1, "", "node_dict_factory"], [556, 11, 1, "", "nodes"], [556, 10, 1, "", "number_of_edges"], [556, 10, 1, "", "number_of_nodes"], [556, 11, 1, "", "op"], [556, 10, 1, "", "order"], [556, 10, 1, "", "remove_edge"], [556, 10, 1, "", "remove_edges_from"], [556, 10, 1, "", "remove_node"], [556, 10, 1, "", "remove_nodes_from"], [556, 11, 1, "", "schema"], [556, 11, 1, "", "session"], [556, 11, 1, "", "session_id"], [556, 10, 1, "", "set_edge_data"], [556, 10, 1, "", "set_node_data"], [556, 11, 1, "", "signature"], [556, 10, 1, "", "size"], [556, 10, 1, "", "subgraph"], [556, 10, 1, "", "to_directed"], [556, 10, 1, "", "to_undirected"], [556, 10, 1, "", "to_undirected_class"], [556, 10, 1, "", "update"]], "graphscope.nx.builtin": [[421, 8, 1, "", "average_clustering"], [421, 8, 1, "", "average_shortest_path_length"], [421, 8, 1, "", "bfs_edges"], [421, 8, 1, "", "clustering"], [421, 8, 1, "", "degree_centrality"], [421, 8, 1, "", "eigenvector_centrality"], [421, 8, 1, "", "has_path"], [421, 8, 1, "", "hits"], [421, 8, 1, "", "in_degree_centrality"], [421, 8, 1, "", "k_core"], [421, 8, 1, "", "katz_centrality"], [421, 8, 1, "", "out_degree_centrality"], [421, 8, 1, "", "triangles"]], "graphscope.nx.classes": [[422, 13, 0, "-", "function"]], "graphscope.nx.classes.function": [[423, 8, 1, "", "add_cycle"], [424, 8, 1, "", "add_path"], [425, 8, 1, "", "add_star"], [426, 8, 1, "", "all_neighbors"], [427, 8, 1, "", "common_neighbors"], [428, 8, 1, "", "create_empty_copy"], [429, 8, 1, "", "degree"], [430, 8, 1, "", "degree_histogram"], [431, 8, 1, "", "density"], [432, 8, 1, "", "edge_subgraph"], [433, 8, 1, "", "edges"], [434, 8, 1, "", "freeze"], [435, 8, 1, "", "induced_subgraph"], [436, 8, 1, "", "info"], [437, 8, 1, "", "is_directed"], [438, 8, 1, "", "is_empty"], [439, 8, 1, "", "is_frozen"], [440, 8, 1, "", "is_negatively_weighted"], [441, 8, 1, "", "is_weighted"], [442, 8, 1, "", "neighbors"], [443, 8, 1, "", "nodes"], [444, 8, 1, "", "nodes_with_selfloops"], [445, 8, 1, "", "non_edges"], [446, 8, 1, "", "non_neighbors"], [447, 8, 1, "", "number_of_edges"], [448, 8, 1, "", "number_of_nodes"], [449, 8, 1, "", "number_of_selfloops"], [450, 8, 1, "", "selfloop_edges"], [451, 8, 1, "", "subgraph"], [452, 8, 1, "", "to_directed"], [453, 8, 1, "", "to_undirected"]], "graphscope.nx.generators": [[555, 13, 0, "-", "atlas"], [555, 13, 0, "-", "classic"], [555, 13, 0, "-", "community"], [555, 13, 0, "-", "degree_seq"], [555, 13, 0, "-", "directed"], [555, 13, 0, "-", "duplication"], [555, 13, 0, "-", "ego"], [555, 13, 0, "-", "expanders"], [555, 13, 0, "-", "geometric"], [555, 13, 0, "-", "harary_graph"], [555, 13, 0, "-", "intersection"], [555, 13, 0, "-", "joint_degree_seq"], [555, 13, 0, "-", "mycielski"], [555, 13, 0, "-", "nonisomorphic_trees"], [555, 13, 0, "-", "small"], [555, 13, 0, "-", "social"], [555, 13, 0, "-", "spectral_graph_forge"], [555, 13, 0, "-", "sudoku"], [555, 13, 0, "-", "trees"], [555, 13, 0, "-", "triads"]], "graphscope.nx.generators.atlas": [[454, 8, 1, "", "graph_atlas"], [455, 8, 1, "", "graph_atlas_g"]], "graphscope.nx.generators.classic": [[456, 8, 1, "", "balanced_tree"], [457, 8, 1, "", "barbell_graph"], [458, 8, 1, "", "binomial_tree"], [459, 8, 1, "", "circulant_graph"], [460, 8, 1, "", "circular_ladder_graph"], [461, 8, 1, "", "complete_graph"], [462, 8, 1, "", "complete_multipartite_graph"], [463, 8, 1, "", "cycle_graph"], [464, 8, 1, "", "dorogovtsev_goltsev_mendes_graph"], [465, 8, 1, "", "empty_graph"], [466, 8, 1, "", "full_rary_tree"], [467, 8, 1, "", "ladder_graph"], [468, 8, 1, "", "lollipop_graph"], [469, 8, 1, "", "null_graph"], [470, 8, 1, "", "path_graph"], [471, 8, 1, "", "star_graph"], [472, 8, 1, "", "trivial_graph"], [473, 8, 1, "", "turan_graph"], [474, 8, 1, "", "wheel_graph"]], "graphscope.nx.generators.community": [[475, 8, 1, "", "LFR_benchmark_graph"], [476, 8, 1, "", "caveman_graph"], [477, 8, 1, "", "connected_caveman_graph"], [478, 8, 1, "", "gaussian_random_partition_graph"], [479, 8, 1, "", "planted_partition_graph"], [480, 8, 1, "", "random_partition_graph"], [481, 8, 1, "", "relaxed_caveman_graph"], [482, 8, 1, "", "ring_of_cliques"], [483, 8, 1, "", "stochastic_block_model"], [484, 8, 1, "", "windmill_graph"]], "graphscope.nx.generators.degree_seq": [[485, 8, 1, "", "configuration_model"], [486, 8, 1, "", "degree_sequence_tree"], [487, 8, 1, "", "directed_configuration_model"], [488, 8, 1, "", "directed_havel_hakimi_graph"], [489, 8, 1, "", "expected_degree_graph"], [490, 8, 1, "", "havel_hakimi_graph"], [491, 8, 1, "", "random_degree_sequence_graph"]], "graphscope.nx.generators.directed": [[492, 8, 1, "", "gn_graph"], [493, 8, 1, "", "gnc_graph"], [494, 8, 1, "", "gnr_graph"], [495, 8, 1, "", "random_k_out_graph"], [496, 8, 1, "", "scale_free_graph"]], "graphscope.nx.generators.duplication": [[497, 8, 1, "", "duplication_divergence_graph"], [498, 8, 1, "", "partial_duplication_graph"]], "graphscope.nx.generators.ego": [[499, 8, 1, "", "ego_graph"]], "graphscope.nx.generators.expanders": [[500, 8, 1, "", "chordal_cycle_graph"], [501, 8, 1, "", "margulis_gabber_galil_graph"], [502, 8, 1, "", "paley_graph"]], "graphscope.nx.generators.geometric": [[503, 8, 1, "", "geographical_threshold_graph"], [504, 8, 1, "", "random_geometric_graph"], [505, 8, 1, "", "soft_random_geometric_graph"], [506, 8, 1, "", "thresholded_random_geometric_graph"], [507, 8, 1, "", "waxman_graph"]], "graphscope.nx.generators.harary_graph": [[508, 8, 1, "", "hkn_harary_graph"], [509, 8, 1, "", "hnm_harary_graph"]], "graphscope.nx.generators.intersection": [[510, 8, 1, "", "general_random_intersection_graph"], [511, 8, 1, "", "k_random_intersection_graph"], [512, 8, 1, "", "uniform_random_intersection_graph"]], "graphscope.nx.generators.joint_degree_seq": [[513, 8, 1, "", "directed_joint_degree_graph"], [514, 8, 1, "", "is_valid_directed_joint_degree"], [515, 8, 1, "", "is_valid_joint_degree"], [516, 8, 1, "", "joint_degree_graph"]], "graphscope.nx.generators.mycielski": [[517, 8, 1, "", "mycielski_graph"], [518, 8, 1, "", "mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees": [[519, 8, 1, "", "nonisomorphic_trees"], [520, 8, 1, "", "number_of_nonisomorphic_trees"]], "graphscope.nx.generators.small": [[521, 8, 1, "", "LCF_graph"], [522, 8, 1, "", "bull_graph"], [523, 8, 1, "", "chvatal_graph"], [524, 8, 1, "", "cubical_graph"], [525, 8, 1, "", "desargues_graph"], [526, 8, 1, "", "diamond_graph"], [527, 8, 1, "", "dodecahedral_graph"], [528, 8, 1, "", "frucht_graph"], [529, 8, 1, "", "heawood_graph"], [530, 8, 1, "", "house_graph"], [531, 8, 1, "", "house_x_graph"], [532, 8, 1, "", "icosahedral_graph"], [533, 8, 1, "", "krackhardt_kite_graph"], [534, 8, 1, "", "make_small_graph"], [535, 8, 1, "", "moebius_kantor_graph"], [536, 8, 1, "", "octahedral_graph"], [537, 8, 1, "", "pappus_graph"], [538, 8, 1, "", "petersen_graph"], [539, 8, 1, "", "sedgewick_maze_graph"], [540, 8, 1, "", "tetrahedral_graph"], [541, 8, 1, "", "truncated_cube_graph"], [542, 8, 1, "", "truncated_tetrahedron_graph"], [543, 8, 1, "", "tutte_graph"]], "graphscope.nx.generators.social": [[544, 8, 1, "", "davis_southern_women_graph"], [545, 8, 1, "", "florentine_families_graph"], [546, 8, 1, "", "karate_club_graph"], [547, 8, 1, "", "les_miserables_graph"]], "graphscope.nx.generators.spectral_graph_forge": [[548, 8, 1, "", "spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[549, 8, 1, "", "sudoku_graph"]], "graphscope.nx.generators.trees": [[550, 8, 1, "", "prefix_tree"], [551, 8, 1, "", "random_tree"]], "graphscope.nx.generators.triads": [[552, 8, 1, "", "triad_graph"]], "gs_interactive.client": [[287, 13, 0, "-", "driver"], [290, 13, 0, "-", "result"], [291, 13, 0, "module-0", "session"], [292, 13, 0, "-", "status"], [288, 13, 0, "module-0", "utils"]], "gs_interactive.client.driver": [[287, 9, 1, "", "Driver"]], "gs_interactive.client.driver.Driver": [[287, 10, 1, "", "__init__"], [287, 10, 1, "", "close"], [287, 10, 1, "", "getDefaultSession"], [287, 10, 1, "", "getNeo4jEndpoint"], [287, 10, 1, "", "getNeo4jSession"], [287, 10, 1, "", "read_endpoints_from_env"], [287, 10, 1, "", "session"]], "gs_interactive.client.result": [[290, 9, 1, "", "Result"]], "gs_interactive.client.result.Result": [[290, 10, 1, "", "__init__"], [290, 10, 1, "", "error"], [290, 10, 1, "", "from_exception"], [290, 10, 1, "", "from_response"], [290, 10, 1, "", "get_status"], [290, 10, 1, "", "get_status_message"], [290, 10, 1, "", "get_value"], [290, 10, 1, "", "is_error"], [290, 10, 1, "", "is_ok"], [290, 10, 1, "", "ok"]], "gs_interactive.client.session": [[291, 9, 1, "", "DefaultSession"], [291, 9, 1, "", "Session"]], "gs_interactive.client.session.DefaultSession": [[291, 10, 1, "", "__init__"], [291, 10, 1, "", "add_edge"], [291, 10, 1, "", "add_vertex"], [291, 10, 1, "", "bulk_loading"], [291, 10, 1, "", "call_procedure"], [291, 10, 1, "", "call_procedure_current"], [291, 10, 1, "", "call_procedure_current_raw"], [291, 10, 1, "", "call_procedure_raw"], [291, 10, 1, "", "cancel_job"], [291, 10, 1, "", "create_graph"], [291, 10, 1, "", "create_procedure"], [291, 10, 1, "", "delete_graph"], [291, 10, 1, "", "delete_procedure"], [291, 10, 1, "", "ensure_param_str"], [291, 10, 1, "", "get_edge"], [291, 10, 1, "", "get_graph_meta"], [291, 10, 1, "", "get_graph_schema"], [291, 10, 1, "", "get_graph_statistics"], [291, 10, 1, "", "get_job"], [291, 10, 1, "", "get_procedure"], [291, 10, 1, "", "get_service_status"], [291, 10, 1, "", "get_vertex"], [291, 10, 1, "", "list_graphs"], [291, 10, 1, "", "list_jobs"], [291, 10, 1, "", "list_procedures"], [291, 10, 1, "", "restart_service"], [291, 10, 1, "", "start_service"], [291, 10, 1, "", "stop_service"], [291, 10, 1, "", "try_upload_files"], [291, 10, 1, "", "update_edge"], [291, 10, 1, "", "update_procedure"], [291, 10, 1, "", "update_vertex"], [291, 10, 1, "", "upload_and_replace_input_inplace"], [291, 10, 1, "", "upload_file"]], "gs_interactive.client.status": [[292, 9, 1, "", "Status"]], "gs_interactive.client.status.Status": [[292, 10, 1, "", "__init__"], [292, 10, 1, "", "from_exception"], [292, 10, 1, "", "from_response"], [292, 10, 1, "", "get_code"], [292, 11, 1, "", "get_message"], [292, 10, 1, "", "is_error"], [292, 10, 1, "", "is_ok"], [292, 10, 1, "", "ok"], [292, 10, 1, "", "server_internal_error"]], "gs_interactive.client.utils": [[288, 9, 1, "", "Decoder"], [288, 9, 1, "", "Encoder"]], "gs_interactive.client.utils.Decoder": [[288, 10, 1, "", "__init__"], [288, 10, 1, "", "get_byte"], [288, 10, 1, "", "get_bytes"], [288, 10, 1, "", "get_double"], [288, 10, 1, "", "get_int"], [288, 10, 1, "", "get_long"], [288, 10, 1, "", "get_string"], [288, 10, 1, "", "is_empty"]], "gs_interactive.client.utils.Encoder": [[288, 10, 1, "", "__init__"], [288, 10, 1, "", "get_bytes"], [288, 10, 1, "", "put_byte"], [288, 10, 1, "", "put_bytes"], [288, 10, 1, "", "put_double"], [288, 10, 1, "", "put_int"], [288, 10, 1, "", "put_long"], [288, 10, 1, "", "put_string"]], "networkx.generators": [[555, 13, 0, "-", "internet_as_graphs"], [555, 13, 0, "-", "stochastic"]], "networkx.generators.internet_as_graphs": [[553, 8, 1, "", "random_internet_as_graph"]], "networkx.generators.stochastic": [[554, 8, 1, "", "stochastic_graph"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:function", "9": "py:class", "10": "py:method", "11": "py:property", "12": "py:data", "13": "py:module", "14": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "function", "Python function"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "property", "Python property"], "12": ["py", "data", "Python data"], "13": ["py", "module", "Python module"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 6, 127, 325, 335, 416, 569, 571], "algorithm": [0, 1, 2, 6, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 34, 325, 404, 421, 571, 573], "all": [0, 31, 32, 36, 41], "pair": 0, "shortest": 0, "path": [0, 313, 318, 320, 322], "length": 0, "attribut": [0, 20, 405, 422], "assort": 0, "averag": 0, "degre": [0, 429, 555], "connect": [0, 29, 30, 121, 127, 204, 289, 295, 314, 321, 569, 576], "between": [0, 318, 565], "central": [0, 17], "breadth": 0, "first": [0, 309], "search": 0, "cdlp": 0, "close": [0, 121, 295, 576], "cluster": [0, 27, 30, 33, 41, 309, 331, 333], "coeffici": 0, "depth": 0, "eigenvector": 0, "hyperlink": 0, "induc": [0, 20], "topic": 0, "katz": 0, "k": 0, "core": [0, 313], "shell": [0, 295, 314], "label": [0, 320, 322, 335, 405, 568, 589], "propag": 0, "lcc": 0, "pagerank": 0, "sampl": [0, 123, 125, 320, 329, 341, 404, 408, 410, 413, 416], "singl": [0, 305], "sourc": [0, 17, 31, 32, 124, 125, 127, 320, 351, 405, 411, 414, 415], "voterank": 0, "wcc": 0, "custom": [1, 23, 27, 123, 124, 127, 312, 569], "aggreg": [1, 318, 320, 322, 326], "local": [1, 7, 32, 36, 38, 41, 45, 129, 311, 312, 313, 320, 327, 328, 332, 334, 568, 569], "vertex": [1, 10, 24, 125, 322, 335, 353, 562, 568, 589], "map": [1, 125, 301, 565], "support": [1, 11, 23, 125, 316, 320, 325], "deploy": [2, 27, 38, 127, 307, 309, 313], "gae": [2, 338, 573, 577], "prerequisit": [2, 16, 27, 29, 30, 32, 33, 297, 309, 569], "onli": [2, 37], "python": [2, 15, 18, 31, 35, 36, 46, 120, 289, 294, 314, 321, 325, 345, 561, 569, 573, 581], "sdk": [2, 16, 34, 46, 120, 204, 289, 294, 299, 321, 349], "helm": [2, 29, 127], "execut": [2, 34, 315, 336], "graph": [2, 9, 11, 13, 19, 20, 30, 33, 34, 45, 124, 125, 126, 129, 204, 289, 294, 298, 304, 305, 307, 313, 315, 318, 322, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 404, 406, 407, 408, 409, 410, 412, 416, 418, 420, 422, 555, 556, 558, 559, 565, 567, 568, 569, 570, 571, 577], "analyt": [2, 3, 4, 7, 10, 13, 24, 31, 34, 304, 307, 325, 336, 337, 339, 344, 346, 347, 577], "uninstal": [2, 29, 569], "design": [3, 9, 34, 310, 313, 325, 326, 336, 414, 568], "engin": [3, 4, 7, 9, 10, 12, 24, 31, 34, 36, 129, 294, 307, 312, 325, 327, 328, 332, 333, 334, 336, 344, 346, 568, 577], "dev": [4, 32, 36, 41, 45, 129, 311, 327], "test": [4, 36, 37, 41, 45, 46, 129, 289, 311, 327, 333, 334, 411], "setup": [4, 32, 313], "understand": [4, 45, 129], "codebas": [4, 45, 129], "make": [4, 20], "modif": 4, "build": [4, 17, 32, 36, 41, 45, 129, 308, 311, 327, 351, 404, 411, 569, 589], "faq": [5, 318], "program": [6, 12, 14, 34, 294, 305, 414], "model": [6, 12, 14, 15, 16, 17, 24, 34, 46, 126, 298, 326, 331, 332, 333, 334, 338, 341, 404, 412, 416, 568, 569], "flash": [6, 15, 338], "motiv": [6, 9, 310, 313, 336, 568], "The": [6, 19, 30, 298, 310, 567], "overview": [6, 9, 12, 298, 307, 308, 412, 569], "api": [6, 9, 12, 19, 20, 46, 122, 204, 289, 293, 315, 346, 349, 350, 405, 416, 557, 561, 585], "strong": 6, "express": [6, 320, 322], "implement": [6, 15, 17, 37, 414, 568], "architectur": [6, 12, 310, 565], "optim": [6, 13, 313, 318, 334], "get": [7, 17, 37, 46, 121, 204, 289, 294, 295, 303, 312, 313, 320, 328, 337, 411, 566], "start": [7, 46, 121, 124, 129, 204, 289, 294, 295, 303, 311, 312, 313, 322, 328, 337, 416, 566], "instal": [7, 27, 29, 30, 31, 32, 36, 37, 45, 46, 129, 204, 289, 295, 297, 307, 312, 313, 327, 328, 411, 569, 576], "run": [7, 15, 16, 17, 18, 21, 22, 23, 37, 41, 45, 295, 305, 308, 312, 320, 328, 333, 411], "graphscop": [7, 10, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 36, 41, 47, 67, 75, 92, 93, 104, 108, 118, 294, 300, 305, 307, 312, 328, 336, 339, 341, 342, 343, 346, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 565, 567, 577, 581, 585, 586], "what": [7, 14, 312, 318, 328, 339, 341, 342, 576], "": [7, 312, 318, 328, 346, 576], "next": [7, 312, 328, 342, 576], "guid": [8, 35, 36, 44, 128, 319, 330, 569, 573, 574], "exampl": [8, 17, 22, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 147, 166, 167, 173, 176, 182, 197, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 319, 320, 330, 573, 574], "ingress": [9, 338], "increment": [9, 12], "messag": [9, 326], "driven": 9, "differenti": 9, "flexibl": [9, 34], "memoiz": 9, "distribut": [9, 305, 406, 414], "runtim": [9, 34, 414], "kei": [10, 298, 315, 318, 325, 395], "concept": [10, 568], "loadstrategi": 10, "onlyout": 10, "onlyin": 10, "bothinout": 10, "partitionstrategi": 10, "edg": [10, 20, 125, 322, 335, 422, 433, 558, 568, 589], "cut": [10, 568], "vertic": [10, 322, 335, 589], "outervertex": 10, "innervertex": 10, "innervertexwithoutgoingedg": 10, "innervertexwithincomingedg": 10, "messagemanag": 10, "messagestrategi": 10, "alongoutgoingedgetooutervertex": 10, "alongincomingedgetooutervertex": 10, "alongedgetooutervertex": 10, "synconoutervertexastarget": 10, "synconoutervertexassourc": 10, "synconoutervertex": 10, "networkx": [11, 19, 20, 553, 554, 557], "compat": [11, 318], "convert": 11, "nx": [11, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552], "oper": [11, 20, 28, 316, 322, 391, 392, 393, 394, 395, 396, 414, 560], "storag": [12, 33, 34, 307, 336, 565, 568], "layer": [12, 336], "grape": [12, 17, 338, 351], "ffi": 12, "comput": [12, 305, 307, 336, 568], "applic": [12, 15, 22, 23, 322, 336, 571], "perform": [13, 19, 34, 318, 325, 344], "tune": 13, "memori": [13, 335, 570], "footprint": 13, "properti": [13, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 298, 316, 318, 320, 322, 335, 567, 568, 589], "data": [13, 45, 124, 125, 126, 204, 289, 305, 309, 313, 316, 318, 335, 405, 412, 415, 416, 567, 569], "structur": [13, 204, 289, 316, 351, 422], "usag": [13, 46, 289, 308, 318, 335], "estim": [13, 564], "pie": [14, 16, 17, 18, 338, 349, 579], "i": [14, 320, 339, 341, 342], "workflow": [14, 325, 565], "tutori": [15, 16, 17, 18, 19, 20, 21, 22, 23, 313, 322, 324, 331, 332, 333, 334, 345], "develop": [15, 16, 17, 18, 22, 23, 36, 44, 45, 128, 129, 307, 404, 416, 569, 573], "your": [15, 16, 17, 18, 22, 37, 123, 127, 309, 332, 334, 335, 404, 414, 573], "c": [15, 16, 35, 294, 573], "defin": [15, 16, 294, 299, 332, 333, 334, 414, 565], "A": [15, 124, 298, 307, 308, 313], "function": [15, 18, 333, 334, 347, 349, 404, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 563], "integr": [15, 37, 305, 313, 415], "client": [15, 27, 30, 36, 333, 406, 576], "step": [16, 124, 313, 320, 322, 341], "1": [16, 124, 301, 315, 405, 406, 408, 416], "context": [16, 346, 348, 562], "class": [16, 287, 288, 290, 291, 292, 414, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "2": [16, 124, 301, 315, 405, 406, 416, 569], "3": [16, 124, 301, 315, 405, 406, 416, 569], "packag": [16, 31, 32, 333, 411], "4": [16, 124, 301, 315, 405, 416], "gar": 16, "file": [16, 27, 31, 125, 415, 567], "github": [16, 17, 25, 37], "templat": [16, 17], "java": [17, 35, 39, 204, 294, 321, 324, 352, 569, 573], "jar": 17, "own": [17, 18, 22, 127, 309, 335, 404, 414], "prepar": [17, 27, 30, 41, 45, 121, 295, 416], "jdk": [17, 351], "from": [17, 19, 20, 31, 32, 33, 125, 127, 307, 315, 322, 335, 351, 411, 565, 569], "maven": [17, 204], "repositori": [17, 308], "submit": [17, 22, 23, 37, 40, 204, 289, 295], "javasdk": 17, "write": [18, 333, 569], "pregel": [18, 24, 349, 579], "us": [18, 20, 27, 32, 124, 127, 309, 315, 318, 325, 342, 411, 414, 416, 562, 565, 569, 570], "math": [18, 579], "h": [18, 579], "how": [19, 37, 39, 40, 41, 306, 318, 327, 404, 414, 416, 577], "doe": 19, "analysi": [19, 336], "displai": 19, "speed": 19, "up": [19, 27, 30, 33], "over": 19, "creat": [20, 33, 37, 45, 124, 204, 289, 294, 299, 331, 334], "an": [20, 315, 414], "empti": 20, "ad": [20, 335], "node": [20, 326, 331, 332, 333, 334, 422, 443, 569], "examin": 20, "element": 20, "remov": [20, 309], "constructor": 20, "access": [20, 297], "neighbor": [20, 334, 442], "deepcopi": 20, "subgraph": [20, 318, 320, 326, 329, 341, 451], "edge_subgraph": [20, 432], "copi": [20, 31], "direct": [20, 492, 493, 494, 495, 496, 555], "analyz": [20, 313], "object": [20, 347, 348, 406, 418, 560, 563], "transform": [20, 559], "builtin": [21, 347, 421, 560], "giraph": 22, "try": [22, 124, 416], "some": [22, 322], "app": [22, 23, 346, 347, 355], "graphx": 23, "deploi": [23, 26, 27, 28, 29, 30, 123, 127, 297, 309, 569], "along": 23, "spark": 23, "includ": 23, "depend": [23, 31, 32, 129, 411], "toward": 23, "centric": [24, 326], "ga": 24, "simul": 24, "contact": 25, "u": 25, "slack": [25, 37], "discuss": [25, 37], "cloud": [26, 325, 405], "k8": [27, 331, 333, 577], "kubernet": [27, 30, 33, 38, 41, 331, 581, 586], "launch": [27, 45, 332, 333, 334], "default": 27, "paramet": [27, 47, 67, 75, 92, 93, 97, 104, 108, 118, 147, 166, 167, 171, 173, 176, 182, 197, 230, 249, 250, 255, 257, 259, 265, 280, 333, 335], "frequent": [27, 302], "imag": [27, 32, 41, 411, 569], "uri": 27, "specifi": [27, 335], "number": 27, "worker": [27, 346], "provid": 27, "kubeconfig": 27, "other": [27, 124, 204, 309, 335, 415, 569], "than": 27, "mount": 27, "volum": 27, "inspect": 27, "clean": [27, 30, 33], "coordin": [28, 36, 43, 45, 46, 120, 121, 122], "configur": [28, 29, 123, 125, 308, 309, 312, 313, 333, 417, 569], "releas": [29, 37], "offlin": [29, 31, 569], "exist": 30, "vineyard": [30, 311, 338, 570], "lifecycl": 30, "load": [30, 124, 125, 315, 322, 331, 332, 333, 334, 335, 565, 567, 569, 570], "dataset": [30, 315, 335, 569], "anoth": 30, "session": [30, 291, 331, 402, 563], "environ": [31, 32, 36, 41, 45, 129, 311, 315, 327], "wheel": [31, 411, 581], "download": [31, 295, 315], "destin": 31, "extract": [31, 322], "them": [31, 335], "locat": 31, "basic": [31, 322, 405], "gcc": 31, "g": [31, 397], "third": 31, "parti": 31, "stabl": 32, "version": 32, "preview": 32, "linux": [32, 581], "maco": [32, 581], "persist": [33, 569], "pv": 33, "pvc": 33, "store": [33, 204, 289, 294, 296, 299, 311, 569], "retor": 33, "framework": [34, 313, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "multi": [34, 562], "languag": [34, 298, 410], "high": [34, 325, 336, 569], "librari": [34, 325, 411], "code": [35, 37, 42, 127, 129, 414, 575], "style": [35, 37, 557, 568], "rust": 35, "script": [35, 45, 333, 576], "linter": 35, "checker": 35, "contain": [36, 45, 129, 327], "dep": [36, 45, 129, 327], "target": [36, 41, 335], "compon": 36, "individu": 36, "gsctl": [36, 45, 121, 123, 294, 576], "contribut": 37, "conduct": 37, "commun": [37, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 555], "report": [37, 306], "bug": [37, 306], "request": [37, 40, 47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280], "featur": [37, 298, 313, 325, 567, 569], "improv": 37, "document": [37, 46, 204, 289], "chang": [37, 576], "pre": 37, "commit": [37, 569], "minor": 37, "fix": 37, "fork": 37, "branch": [37, 320], "suit": 37, "format": [37, 405, 567, 569], "right": 37, "keep": 37, "pull": [37, 40], "updat": [37, 576], "merg": 37, "pr": 37, "maintain": 37, "ship": 37, "review": 37, "continu": 37, "debug": 38, "find": [38, 577], "log": [38, 565, 569, 577], "command": [38, 576], "techniqu": [38, 335], "instrument": 39, "automat": 39, "error": [42, 78, 129, 575], "interact": [45, 121, 123, 127, 129, 293, 294, 295, 297, 299, 300, 304, 307, 312, 337, 340, 344, 419, 577], "manual": [45, 129, 311, 335], "via": [45, 121, 299, 314, 321], "new": [45, 124, 204, 289, 414], "import": [45, 124, 125, 204, 289, 313, 333, 569], "refer": [46, 204, 289, 307, 346, 350, 352, 561, 568], "requir": [46, 204, 289], "pip": [46, 289, 411], "setuptool": [46, 289], "endpoint": [46, 315], "For": [46, 289, 317, 323, 568], "author": [46, 47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 204, 230, 249, 250, 257, 259, 265, 280, 289], "flex": [47, 67, 75, 92, 93, 104, 108, 118, 120, 307, 350], "rest": [47, 67, 75, 92, 93, 104, 108, 118, 122, 293], "alertapi": 47, "create_alert_receiv": 47, "return": [47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280], "type": [47, 67, 75, 92, 93, 104, 108, 118, 126, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280, 316, 335, 343, 349, 405, 556, 567], "http": [47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280], "header": [47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280], "respons": [47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280], "detail": [47, 67, 75, 92, 93, 104, 108, 118, 147, 166, 167, 173, 176, 182, 197, 230, 249, 250, 257, 259, 265, 280, 313, 568], "delete_alert_message_in_batch": 47, "delete_alert_receiver_by_id": 47, "delete_alert_rule_by_id": 47, "list_alert_messag": 47, "list_alert_receiv": 47, "list_alert_rul": 47, "update_alert_message_in_batch": 47, "update_alert_receiver_by_id": 47, "update_alert_rule_by_id": 47, "baseedgetyp": [48, 131, 214], "baseedgetypevertextypepairrelationsinn": [49, 132, 215], "baseedgetypevertextypepairrelationsinnerxcsrparam": [50, 133, 216], "basepropertymeta": [51, 134, 217], "basevertextyp": [52, 135, 218], "basevertextypexcsrparam": [53, 136, 219], "columnmap": [54, 137, 220], "columnmappingcolumn": 55, "createalertreceiverrequest": 56, "createalertrulerequest": 57, "createdataloadingjobrespons": 58, "createedgetyp": [59, 138, 221], "creategraphrequest": [60, 139, 222], "creategraphrespons": [61, 140, 223], "creategraphschemarequest": [62, 141, 224], "createpropertymeta": [63, 144, 227], "createstoredprocrequest": 64, "createstoredprocrespons": 65, "createvertextyp": [66, 145, 228], "datasourceapi": 67, "bind_datasource_in_batch": 67, "get_datasource_by_id": 67, "unbind_edge_datasourc": 67, "unbind_vertex_datasourc": 67, "dataloadingjobconfig": 68, "dataloadingjobconfigedgesinn": 69, "dataloadingjobconfigloadingconfig": 70, "dataloadingjobconfigloadingconfigformat": 71, "dataloadingjobconfigverticesinn": 72, "dataloadingmrjobconfig": 73, "datetyp": [74, 146, 229], "deploymentapi": 75, "get_deployment_info": 75, "get_deployment_pod_log": 75, "get_deployment_resource_usag": 75, "get_deployment_statu": 75, "get_storage_usag": 75, "edgemap": [76, 149, 232], "edgemappingtypetriplet": [77, 153, 236], "gsdatatyp": [79, 158, 241], "getalertmessagerespons": 80, "getalertreceiverrespons": 81, "getalertrulerespons": 82, "getedgetyp": [83, 159, 242], "getgraphrespons": [84, 160, 243], "getgraphschemarespons": [85, 161, 244], "getpodlogrespons": 86, "getpropertymeta": [87, 164, 247], "getresourceusagerespons": 88, "getstorageusagerespons": 89, "getstoredprocrespons": 90, "getvertextyp": [91, 165, 248], "graphapi": 92, "create_edge_typ": 92, "create_graph": [92, 366], "create_vertex_typ": 92, "delete_edge_type_by_nam": 92, "delete_graph_by_id": 92, "delete_vertex_type_by_nam": 92, "get_graph_by_id": 92, "get_schema_by_id": 92, "import_schema_by_id": 92, "list_graph": 92, "jobapi": 93, "delete_job_by_id": 93, "get_dataloading_job_config": 93, "get_job_by_id": 93, "list_job": 93, "submit_dataloading_job": 93, "jobstatu": [94, 169, 252], "longtext": [95, 170, 253], "nodestatu": 96, "podstatu": 98, "primitivetyp": [99, 172, 256], "resourceusag": 100, "runningdeploymentinfo": 101, "runningdeploymentstatu": 102, "schemamap": [103, 177, 260], "serviceapi": 104, "get_service_status_by_id": 104, "list_service_statu": 104, "restart_servic": 104, "start_servic": 104, "stop_servic": 104, "servicestatu": [105, 183, 266], "servicestatussdkendpoint": 106, "startservicerequest": [107, 184, 267], "storedprocedureapi": 108, "create_stored_procedur": 108, "delete_stored_procedure_by_id": 108, "get_stored_procedure_by_id": 108, "list_stored_procedur": 108, "update_stored_procedure_by_id": 108, "storedproceduremeta": [109, 186, 269], "stringtyp": [110, 187, 270], "stringtypestr": [111, 188, 271], "temporaltyp": [112, 189, 272], "temporaltypetempor": [113, 190, 273], "timestamptyp": [114, 191, 274], "updatealertmessagestatusrequest": 115, "updatestoredprocrequest": 116, "uploadfilerespons": [117, 194, 277], "utilsapi": 118, "upload_fil": 118, "vertexmap": [119, 200, 283], "servic": [121, 123, 124, 129, 204, 289, 295, 297, 309, 311, 313, 569], "check": [121, 295], "statu": [121, 292, 295], "destroi": [121, 295, 569], "instanc": [121, 295, 312, 569], "item": 123, "port": [123, 127], "avail": [123, 569], "todo": 123, "bind": [124, 571], "job": 124, "more": 124, "complic": 124, "movi": 124, "option": [124, 129], "movie_graph": 124, "yaml": [124, 294], "job_config": 124, "column": 125, "csv": 125, "odp": 125, "tabl": [125, 301, 307, 405], "modern": 125, "breakdown": 125, "entiti": 126, "primit": 126, "string": 126, "tempor": 126, "arrai": [126, 568], "docker": [127, 129, 313, 327, 411, 581], "pack": 127, "push": 127, "registri": 127, "queri": [129, 204, 289, 294, 295, 298, 299, 304, 310, 313, 315, 318, 322, 336, 337, 407, 419, 569], "compil": [129, 296, 411, 414], "cmake": 129, "enabl": 129, "adminservic": 129, "apiresponsewithcod": [130, 213], "enum": [132, 133, 142, 158, 160, 163, 169, 172, 178, 179, 186], "relationenum": 132, "edgestoragestrategyenum": 133, "createprocedurerequest": [142, 225], "typeenum": [142, 163, 186], "createprocedurerespons": [143, 226], "edgeapi": [147, 230], "addedg": 147, "getedg": 147, "updateedg": 147, "edgedata": [148, 231], "edgemappingdestinationvertexmappingsinn": [150, 233], "edgemappingsourcevertexmappingsinn": [151, 234], "edgemappingsourcevertexmappingsinnercolumn": [152, 235], "edgerequest": [154, 237], "edgestatist": [155, 238], "fixedchar": [156, 239], "fixedcharchar": [157, 240], "primitivetypeenum": [158, 172], "storetypeenum": 160, "getgraphstatisticsrespons": [162, 245], "getprocedurerespons": [163, 246], "graphmanagementapi": [166, 249], "listgraph": [166, 249], "creategraph": [166, 249], "bulkload": [166, 249], "deletegraph": [166, 249], "getgraphmeta": [166, 249], "getgraphstatist": [166, 249], "getgraphschema": [166, 249], "jobmanagementapi": 167, "canceljob": [167, 250], "getjobbyid": [167, 250], "listjob": [167, 250], "jobrespons": [168, 251], "statusenum": 169, "proceduremanagementapi": 173, "createprocedur": [173, 257], "deleteprocedur": [173, 257], "getprocedur": [173, 257], "listprocedur": [173, 257], "updateprocedur": [173, 257], "queryrequest": [175, 258], "queryserviceapi": [176, 259], "callprocedur": [176, 259], "callprocedureoncurrentgraph": [176, 259], "schemamappingloadingconfig": [178, 261], "importoptionenum": 178, "schemamappingloadingconfigdatasourc": [179, 262], "schemeenum": 179, "schemamappingloadingconfigformat": [180, 263], "schemamappingloadingconfigxcsrparam": [181, 264], "servicemanagementapi": 182, "getservicestatu": [182, 265], "restartservic": [182, 265], "startservic": [182, 265], "stopservic": [182, 265], "stopservicerequest": [185, 268], "typedvalu": [192, 275], "updateprocedurerequest": [193, 276], "varchar": [195, 278], "varcharvarchar": [196, 279], "vertexapi": [197, 280], "addvertex": 197, "getvertex": 197, "updatevertex": 197, "vertexdata": [198, 281], "vertexedgerequest": [199, 282], "vertexrequest": [201, 284], "vertexstatist": [202, 285], "vertextypepairstatist": [203, 286], "user": [204, 324, 345, 405, 573, 574], "procedur": [204, 289, 294, 296, 299], "cypher": [204, 289, 295, 296, 298, 314, 316, 325, 340], "delet": [204, 289, 299], "util": [204, 289, 307, 576], "add_edg": 230, "get_edg": 230, "update_edg": 230, "gs_interact": [250, 257, 259, 265], "adminservicejobmanagementapi": 250, "modelproperti": 254, "adminserviceproceduremanagementapi": 257, "adminserviceservicemanagementapi": 265, "add_vertex": 280, "get_vertex": 280, "update_vertex": 280, "driver": [287, 314], "encod": [288, 294, 404, 412], "deocder": 288, "decod": [288, 294], "result": [290, 308, 344, 562], "interfac": [291, 294, 325, 414, 415, 568], "defaultsess": 291, "regist": [294, 414, 415], "call": [294, 299], "databas": [294, 343], "input": 294, "output": [294, 378], "simpl": 295, "glossari": [296, 338], "solid": 298, "foundat": 298, "limit": [298, 320, 322, 342, 569], "view": [299, 569], "neo4j": [299, 313, 317, 340], "nativ": [299, 313, 325], "tool": [299, 308, 313], "introduct": [301, 313, 320, 408], "arrowfrag": 301, "0": [301, 315], "\u672f\u8bed": 301, "\u8f7d\u56fe": [301, 589], "\u521d\u59cb\u5316partition": 301, "\u6784\u5efa\u539f\u59cbarrow": 301, "shuffl": 301, "vtabl": 301, "\u6784\u5efavertex": 301, "basicarrowvertexmapbuild": 301, "5": [301, 315, 405], "\u6784\u5efafragment\u51c6\u5907": 301, "\u5904\u7406edg": 301, "basicevfragmentload": 301, "fragmentbuilder\u6570\u636e\u521d\u59cb\u5316": 301, "basicarrowfragmentbuild": 301, "6": 301, "fragment\u6784\u5efa": 301, "\u8bbf\u95eefragment": 301, "\u8bbf\u95ee\u9876\u70b9": 301, "\u8bbf\u95ee\u5185\u90e8\u70b9": 301, "\u8303\u56f4\u5916\u90e8\u70b9": 301, "\u8bbf\u95ee\u5168\u90e8\u70b9": 301, "\u8bbf\u95ee\u9876\u70b9\u6570\u636e": 301, "\u8bbf\u95ee\u8fb9": 301, "\u8bbf\u95ee\u51fa\u8fb9": 301, "\u8bbf\u95ee\u5165\u8fb9": 301, "\u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": 301, "ask": 302, "question": [302, 315], "gle": [303, 326, 574, 577], "workload": [304, 308, 339, 340, 341, 343, 565], "learn": [304, 307, 326, 327, 328, 332, 334, 336, 337, 341, 343, 404, 412, 420, 577], "scientist": 305, "challeng": [305, 339, 341], "handl": [305, 343], "solut": 305, "machin": [305, 332, 334], "pydata": 305, "ecosystem": [305, 317, 323], "One": [307, 337, 562], "stop": [307, 337], "larg": [307, 335, 339, 341], "scale": [307, 572], "system": [307, 308, 343, 415, 417], "alibaba": [307, 405], "troubleshoot": [307, 569], "indic": 307, "gener": [308, 315, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555], "benchmark": [308, 313, 344], "content": 308, "collect": 308, "compar": [308, 343], "standalon": 309, "gie": [309, 310, 311, 312, 314, 315, 317, 318, 321, 323, 338, 577], "process": [310, 332, 333, 337, 343, 404, 569], "gopt": 313, "introduc": [313, 342], "why": [313, 342], "quick": [313, 337, 416], "ambigu": [313, 335], "pattern": [313, 322, 340], "match": [313, 320, 322, 340], "hybrid": [313, 572], "relat": [313, 322, 335, 565], "st": 313, "llm": 315, "assist": 315, "set": [315, 318, 333], "sentenc": 315, "construct": [316, 416], "claus": 316, "tinkerpop": [317, 318, 323, 340, 587], "gremlin": [318, 320, 321, 322, 325, 340, 400, 587], "constraint": 318, "differ": [318, 562], "inner": 318, "id": [318, 320, 322, 568], "expand": [318, 320, 500, 501, 502, 555], "filter": [318, 320, 322], "like": 318, "sql": 318, "group": [318, 320, 322], "multipl": [318, 322, 335], "valu": [318, 320, 322], "appropri": 318, "index": 318, "suggest": 318, "about": [318, 351], "paral": 318, "standard": [320, 567], "v": 320, "e": 320, "out": [320, 322, 416], "inE": [320, 322], "both": [320, 322], "outv": [320, 322], "inv": [320, 322], "otherv": [320, 322], "bothv": [320, 322], "hasid": [320, 322], "haslabel": 320, "ha": 320, "hasnot": 320, "where": [320, 322], "travers": [320, 322, 325, 329, 340, 409], "predic": 320, "dedup": [320, 322], "project": [320, 322, 351], "constant": [320, 322], "valuemap": [320, 322], "elementmap": 320, "select": [320, 322], "count": 320, "fold": [320, 322], "sum": [320, 322], "min": [320, 322], "max": [320, 322], "mean": [320, 322], "groupcount": [320, 322], "h3": 320, "order": [320, 322, 568], "statist": 320, "coin": 320, "union": 320, "ident": 320, "unfold": 320, "syntact": [320, 322], "sugar": [320, 322], "pathexpand": 320, "endv": 320, "properit": 320, "To": 320, "Will": 320, "Not": 320, "repeat": 320, "sideeffect": 320, "consol": [321, 587], "ldbc": 322, "retriev": [322, 568], "appli": [322, 341], "real": 322, "expans": 322, "mani": 322, "point": 322, "after": 322, "syntax": 322, "complex": 322, "bi2": 322, "bi3": 322, "bi4": 322, "left": 322, "part": 322, "bi11": 322, "bi14": 322, "apach": [323, 587], "eas": 325, "extens": 325, "gnn": [325, 331, 341, 416, 583], "train": [325, 331, 332, 333, 334, 341, 404], "infer": 325, "across": 325, "orchestr": 325, "paradigm": [326, 341], "egograph": 326, "base": 326, "pass": 326, "pipelin": 326, "neighborhood": 329, "neg": [329, 413], "gsl": [329, 410], "classif": [331, 332, 333, 334], "neural": [331, 341], "network": [331, 341, 555], "egographsag": 332, "pyg": [333, 334], "server": [333, 406, 576], "pod": 333, "loader": [333, 335, 418, 589], "main": 333, "evalu": [334, 394], "loaderfor": 334, "valid": 334, "graphsag": 334, "advanc": 335, "deduc": 335, "when": 335, "put": [335, 405], "togeth": [335, 405], "panda": [335, 589], "numpi": [335, 589], "variant": 335, "tip": 335, "reduc": 335, "consumpt": 335, "unifi": [336, 568], "platform": 336, "disaggreg": 336, "divers": 336, "bi": 336, "qp": 336, "task": 337, "gart": [338, 565], "grin": [338, 568], "graphar": [338, 567], "groot": [338, 569, 577], "gum": 338, "maxgraph": 338, "deprec": 338, "v6d": 338, "gaia": 338, "pegasu": 338, "can": [339, 341], "do": [339, 341], "typic": 341, "ar": 342, "case": 342, "posit": 343, "variou": 343, "gpu": 344, "reproduc": 344, "fragment": 346, "appasset": 347, "javaapp": 347, "cython": 349, "javadoc": 352, "declar": 354, "load_app": 355, "dag_util": [356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390], "add_column": 356, "add_labels_to_graph": 357, "arrow_to_dynam": 358, "bind_app": 359, "clear_edg": 360, "clear_graph": 361, "context_to_datafram": 362, "context_to_numpi": 363, "copy_graph": 364, "create_app": 365, "create_graph_view": 367, "create_load": 368, "create_subgraph": 369, "create_unload_op": 370, "dynamic_to_arrow": 371, "get_context_data": 372, "graph_to_datafram": 373, "graph_to_numpi": 374, "gremlin_to_subgraph": 375, "modify_edg": 376, "modify_vertic": 377, "project_arrow_property_graph": 379, "project_to_simpl": 380, "report_graph": 381, "run_app": 382, "to_data_sink": 383, "to_direct": [384, 452], "to_undirect": [385, 453], "to_vineyard_datafram": 386, "to_vineyard_tensor": 387, "unload_app": 388, "unload_context": 389, "unload_graph": 390, "__init__": 391, "as_op_def": 392, "eval": 393, "signatur": 396, "get_default_sess": 398, "graphlearn": 399, "has_default_sess": 401, "set_opt": 403, "loss": 404, "weight": 405, "maxcomput": 405, "describ": 406, "topologi": 406, "stand": 406, "alon": 406, "mode": [406, 576], "tensorflow": 411, "git": 411, "clone": 414, "bytestreamaccessfil": 415, "structuredaccessfil": 415, "writablefil": 415, "scheme": 415, "gl": 416, "self": 422, "loop": 422, "freez": [422, 434], "add_cycl": 423, "add_path": 424, "add_star": 425, "all_neighbor": 426, "common_neighbor": 427, "create_empty_copi": 428, "degree_histogram": 430, "densiti": 431, "induced_subgraph": 435, "info": 436, "is_direct": 437, "is_empti": 438, "is_frozen": 439, "is_negatively_weight": 440, "is_weight": 441, "nodes_with_selfloop": 444, "non_edg": 445, "non_neighbor": 446, "number_of_edg": 447, "number_of_nod": 448, "number_of_selfloop": 449, "selfloop_edg": 450, "atla": [454, 455, 555], "graph_atla": 454, "graph_atlas_g": 455, "classic": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 555], "balanced_tre": 456, "barbell_graph": 457, "binomial_tre": 458, "circulant_graph": 459, "circular_ladder_graph": 460, "complete_graph": 461, "complete_multipartite_graph": 462, "cycle_graph": 463, "dorogovtsev_goltsev_mendes_graph": 464, "empty_graph": 465, "full_rary_tre": 466, "ladder_graph": 467, "lollipop_graph": 468, "null_graph": 469, "path_graph": 470, "star_graph": 471, "trivial_graph": 472, "turan_graph": 473, "wheel_graph": 474, "lfr_benchmark_graph": 475, "caveman_graph": 476, "connected_caveman_graph": 477, "gaussian_random_partition_graph": 478, "planted_partition_graph": 479, "random_partition_graph": 480, "relaxed_caveman_graph": 481, "ring_of_cliqu": 482, "stochastic_block_model": 483, "windmill_graph": 484, "degree_seq": [485, 486, 487, 488, 489, 490, 491], "configuration_model": 485, "degree_sequence_tre": 486, "directed_configuration_model": 487, "directed_havel_hakimi_graph": 488, "expected_degree_graph": 489, "havel_hakimi_graph": 490, "random_degree_sequence_graph": 491, "gn_graph": 492, "gnc_graph": 493, "gnr_graph": 494, "random_k_out_graph": 495, "scale_free_graph": 496, "duplic": [497, 498, 555], "duplication_divergence_graph": 497, "partial_duplication_graph": 498, "ego": [499, 555], "ego_graph": 499, "chordal_cycle_graph": 500, "margulis_gabber_galil_graph": 501, "paley_graph": 502, "geometr": [503, 504, 505, 506, 507, 555], "geographical_threshold_graph": 503, "random_geometric_graph": 504, "soft_random_geometric_graph": 505, "thresholded_random_geometric_graph": 506, "waxman_graph": 507, "harary_graph": [508, 509], "hkn_harary_graph": 508, "hnm_harary_graph": 509, "intersect": [510, 511, 512, 555], "general_random_intersection_graph": 510, "k_random_intersection_graph": 511, "uniform_random_intersection_graph": 512, "joint_degree_seq": [513, 514, 515, 516], "directed_joint_degree_graph": 513, "is_valid_directed_joint_degre": 514, "is_valid_joint_degre": 515, "joint_degree_graph": 516, "mycielski": [517, 518, 555], "mycielski_graph": 517, "mycielskian": 518, "nonisomorphic_tre": [519, 520], "number_of_nonisomorphic_tre": 520, "small": [521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 555], "lcf_graph": 521, "bull_graph": 522, "chvatal_graph": 523, "cubical_graph": 524, "desargues_graph": 525, "diamond_graph": 526, "dodecahedral_graph": 527, "frucht_graph": 528, "heawood_graph": 529, "house_graph": 530, "house_x_graph": 531, "icosahedral_graph": 532, "krackhardt_kite_graph": 533, "make_small_graph": 534, "moebius_kantor_graph": 535, "octahedral_graph": 536, "pappus_graph": 537, "petersen_graph": 538, "sedgewick_maze_graph": 539, "tetrahedral_graph": 540, "truncated_cube_graph": 541, "truncated_tetrahedron_graph": 542, "tutte_graph": 543, "social": [544, 545, 546, 547, 555], "davis_southern_women_graph": 544, "florentine_families_graph": 545, "karate_club_graph": 546, "les_miserables_graph": 547, "spectral_graph_forg": 548, "sudoku": [549, 555], "sudoku_graph": 549, "tree": [550, 551, 555], "prefix_tre": 550, "random_tre": 551, "triad": [552, 555], "triad_graph": 552, "internet_as_graph": 553, "random_internet_as_graph": 553, "stochast": [554, 555], "stochastic_graph": 554, "diverg": 555, "sequenc": 555, "AS": 555, "spectral": 555, "non": 555, "isomorph": 555, "joint": 555, "harari": 555, "digraph": 556, "read": 558, "list": [558, 568], "adjac": 558, "selector": 562, "tensorcontext": 562, "vertexdatacontext": 562, "labeledvertexdatacontext": 562, "vertexpropertycontext": 562, "labeledvertexpropertycontext": 562, "method": 562, "dimension": 562, "rang": 562, "resourc": 564, "bridg": 565, "gap": 565, "oltp": 565, "inform": 567, "save": 567, "predefin": 568, "macro": 568, "partit": [568, 569, 572], "strategi": 568, "guidelin": 568, "handler": 568, "iter": 568, "master": 568, "mirror": 568, "complet": 568, "natur": 568, "trait": 568, "known": 569, "artifacthub": 569, "directori": 569, "common": 569, "modifi": 569, "j": 569, "realtim": 569, "restart": 569, "secondari": 569, "trace": 569, "In": 570, "immut": 570, "repartit": 572, "fennel": 572, "xtrapulp": 572, "line": 576, "scope": 576, "monitor": 578, "\u56fe\u5206\u6790\u5f15\u64ce": 579, "\u5185\u7f6e\u7b97\u6cd5": 579, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 579, "\u4f7f\u7528": 579, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 579, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 579, "\u4e2d\u7684\u51fd\u6570": 579, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 579, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 579, "\u8fd0\u884c\u793a\u4f8b\u7684java\u7b97\u6cd5": 579, "\u4f7f\u7528java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": 579, "\u90e8\u7f72": 580, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 580, "\u5728aw": 580, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 580, "\u672c\u5730\u90e8\u7f72graphscop": 580, "\u5f00\u53d1\u8005\u6307\u5357": 581, "\u57fa\u4e8e": [581, 586], "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 581, "\u6784\u5efa": 581, "\u4ee3\u7801\u98ce\u683c": 581, "\u5e38\u89c1\u95ee\u9898": 582, "\u5feb\u901f\u4e0a\u624b": 583, "\u793a\u4f8b": 583, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 583, "\u521b\u5efa\u4f1a\u8bdd": 583, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 583, "\u56fe\u5206\u6790": 583, "\u56fe\u795e\u7ecf\u7f51\u7edc": 583, "\u5173\u95ed\u4f1a\u8bdd": 583, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 584, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 584, "\u6295\u5f71": 584, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 584, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 584, "\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 585, "\u76ee\u5f55": [585, 590], "\u53c2\u8003": 585, "\u7d22\u5f15": 585, "\u5b89\u88c5": 586, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 586, "\u5ba2\u6237\u7aef": 586, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 587, "\u5229\u7528python": 587, "\u8fde\u63a5graphscop": 587, "\u5229\u7528java": 587, "\u5f00\u53d1\u63a7\u5236\u53f0": 587, "gremlin\u7f16\u7a0b\u5165\u95e8": 587, "101": 587, "\u56fe\u6570\u636e\u6a21\u578b": 587, "\u67e5\u8be2\u8bed\u8a00": 587, "\u4e00\u4e2a\u4f8b\u5b50": 587, "gremlin\u517c\u5bb9\u6027": 587, "\u5bf9\u6bd4tinkerpop": 587, "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": 587, "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": 587, "\u652f\u6301\u7684gremlin\u64cd\u4f5c": 587, "\u5df2\u77e5\u9650\u5236": 587, "\u56fe\u5b66\u4e60\u5f15\u64ce": 588, "\u56fe\u5b66\u4e60\u6a21\u578b": 588, "\u6570\u636e\u6a21\u578b": 588, "\u7f16\u7801\u5668": 588, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 588, "\u91c7\u6837": 588, "\u56fe\u6570\u636e\u6d41": 588, "\u6a21\u578b": 588, "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 588, "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 589, "\u624b\u52a8\u914d\u7f6e\u56fe": 589, "vid_field": 589, "src_label": 589, "dst_label": 589, "src_field": 589, "dst_field": 589, "\u9ad8\u7ea7\u7528\u6cd5": 589, "\u6ca1\u6709\u6b67\u4e49\u65f6": 589, "\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": 589, "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": 589, "\u591a\u79cd\u8fb9\u5173\u7cfb": 589, "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": 589, "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": 589, "\u5b8c\u6574\u7684\u793a\u4f8b": 589, "\u4ece": 589, "\u6216": 589, "\u4e2d\u8f7d\u56fe": 589, "\u7684\u53d8\u79cd": 589, "\u5165\u95e8\u6559\u7a0b": 590}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Built-in Algorithms": [[0, "built-in-algorithms"], [6, "built-in-algorithms"]], "All Pairs Shortest Path Length": [[0, "all-pairs-shortest-path-length"]], "Attribute Assortativity": [[0, "attribute-assortativity"]], "Average Degree Connectivity": [[0, "average-degree-connectivity"]], "Betweenness Centrality": [[0, "betweenness-centrality"]], "Breadth-First Search": [[0, "breadth-first-search"]], "CDLP": [[0, "cdlp"]], "Closeness Centrality": [[0, "closeness-centrality"]], "Clustering": [[0, "clustering"]], "Degree Assortativity Coefficient": [[0, "degree-assortativity-coefficient"]], "Degree Centrality": [[0, "degree-centrality"]], "Depth-First Search": [[0, "depth-first-search"]], "Eigenvector Centrality": [[0, "eigenvector-centrality"]], "Hyperlink-Induced Topic Search": [[0, "hyperlink-induced-topic-search"]], "Katz Centrality": [[0, "katz-centrality"]], "K-Core": [[0, "k-core"]], "K-Shell": [[0, "k-shell"]], "Label Propagation Algorithm": [[0, "label-propagation-algorithm"]], "LCC": [[0, "lcc"]], "PageRank": [[0, "pagerank"]], "Sampling Path": [[0, "sampling-path"]], "Single-Source Shortest Paths": [[0, "single-source-shortest-paths"]], "VoteRank": [[0, "voterank"]], "WCC": [[0, "wcc"]], "Customized Algorithms": [[1, "customized-algorithms"]], "Aggregators": [[1, "aggregators"]], "Local Vertex Map support": [[1, "local-vertex-map-support"]], "Deployment for GAE": [[2, "deployment-for-gae"]], "Prerequisites": [[2, "prerequisites"], [27, "prerequisites"], [29, "prerequisites"], [30, "prerequisites"], [32, "prerequisites"], [33, "prerequisites"], [297, "prerequisites"], [309, "prerequisites"], [569, "prerequisites"]], "Deployment GAE only": [[2, "deployment-gae-only"]], "Deployment with Python SDK": [[2, "deployment-with-python-sdk"]], "Deployment with Helm": [[2, "deployment-with-helm"]], "Execute graph analytical algorithms": [[2, "execute-graph-analytical-algorithms"]], "Uninstall deployment": [[2, "uninstall-deployment"]], "Design of Analytical Engine": [[3, "design-of-analytical-engine"], [3, null], [34, "design-of-analytical-engine"]], "Dev and Test": [[4, "dev-and-test"], [45, "dev-and-test"], [129, "dev-and-test"], [311, "dev-and-test"], [327, "dev-and-test"]], "Setup": [[4, "setup"]], "Understanding the Codebase": [[4, "understanding-the-codebase"], [45, "understanding-the-codebase"], [129, "understanding-the-codebase"]], "Making Modifications": [[4, "making-modifications"]], "Building Analytical Engine": [[4, "building-analytical-engine"]], "Testing": [[4, "testing"], [129, "testing"]], "FAQs": [[5, "faqs"]], "Programming Model: FLASH": [[6, "programming-model-flash"]], "Motivation": [[6, "motivation"], [9, "motivation"], [313, "motivation"], [336, "motivation"]], "The FLASH Programming Model": [[6, "the-flash-programming-model"]], "Overview": [[6, "overview"], [9, "overview"], [298, "overview"], [307, null], [412, "overview"], [569, "overview"]], "FLASH API": [[6, "flash-api"]], "Strong Expressiveness": [[6, "strong-expressiveness"]], "Implementation": [[6, "implementation"]], "Architecture": [[6, "architecture"], [12, "architecture"]], "Optimizations": [[6, "optimizations"]], "Getting Started": [[7, "getting-started"], [46, "getting-started"], [121, "getting-started"], [204, "getting-started"], [289, "getting-started"], [295, "getting-started"], [312, "getting-started"], [313, "getting-started"], [328, "getting-started"], [337, "getting-started"], [566, "getting-started"]], "Installation": [[7, "installation"], [29, "installation"], [204, "installation"], [297, "installation"], [312, "installation"], [313, "installation"], [328, "installation"], [569, "installation"]], "Running GraphScope Analytical Engine on Local": [[7, "running-graphscope-analytical-engine-on-local"]], "What\u2019s the Next": [[7, "whats-the-next"], [312, "whats-the-next"], [328, "whats-the-next"], [576, "whats-the-next"]], "Guide and Examples": [[8, "guide-and-examples"], [319, "guide-and-examples"], [330, "guide-and-examples"]], "Ingress: Incrementalize Graph Algorithms": [[9, "ingress-incrementalize-graph-algorithms"]], "Design of Ingress": [[9, "design-of-ingress"]], "Message-driven Differentiation": [[9, "message-driven-differentiation"]], "Flexible Memoization": [[9, "flexible-memoization"]], "Ingress API": [[9, "ingress-api"]], "Distributed Runtime Engine": [[9, "distributed-runtime-engine"]], "Key Concepts": [[10, "key-concepts"]], "LoadStrategy": [[10, "loadstrategy"]], "OnlyOut": [[10, "onlyout"]], "OnlyIn": [[10, "onlyin"]], "BothInOut": [[10, "bothinout"]], "PartitionStrategy": [[10, "partitionstrategy"]], "Edge Cut": [[10, "edge-cut"]], "Vertex Cut": [[10, "vertex-cut"]], "Vertices on GraphScope analytical engine": [[10, "vertices-on-graphscope-analytical-engine"]], "OuterVertex": [[10, "outervertex"]], "InnerVertex": [[10, "innervertex"]], "InnerVertexWithOutgoingEdge": [[10, "innervertexwithoutgoingedge"]], "InnerVertexWithIncomingEdge": [[10, "innervertexwithincomingedge"]], "MessageManager and MessageStrategy": [[10, "messagemanager-and-messagestrategy"]], "AlongOutgoingEdgeToOuterVertex": [[10, "alongoutgoingedgetooutervertex"]], "AlongIncomingEdgeToOuterVertex": [[10, "alongincomingedgetooutervertex"]], "AlongEdgeToOuterVertex": [[10, "alongedgetooutervertex"]], "SyncOnOuterVertexAsTarget": [[10, "synconoutervertexastarget"]], "SyncOnOuterVertexAsSource": [[10, "synconoutervertexassource"]], "SyncOnOuterVertex": [[10, "synconoutervertex"]], "NetworkX Compatibility": [[11, "networkx-compatibility"]], "Convert a Graph to a nx.Graph": [[11, "convert-a-graph-to-a-nx-graph"]], "Supported Graph Operations": [[11, "supported-graph-operations"]], "Supported Algorithms": [[11, "supported-algorithms"]], "Overview and Architecture": [[12, "overview-and-architecture"]], "Storage Layer": [[12, "storage-layer"]], "Engine Layer": [[12, "engine-layer"]], "GRAPE Engine": [[12, "grape-engine"]], "Programming Model APIs": [[12, "programming-model-apis"]], "FFIs": [[12, "ffis"]], "Incremental Computation Engine": [[12, "incremental-computation-engine"]], "Application Layer": [[12, "application-layer"]], "Performance Tuning": [[13, "performance-tuning"]], "Memory Footprint of Property Graphs": [[13, "memory-footprint-of-property-graphs"]], "Property graph data structure": [[13, "property-graph-data-structure"]], "Memory usage estimation": [[13, "memory-usage-estimation"]], "Optimizing Memory Usage": [[13, "optimizing-memory-usage"]], "Optimizing Performance of Graph Analytics": [[13, "optimizing-performance-of-graph-analytics"]], "Programming Model: PIE": [[14, "programming-model-pie"]], "What is the PIE Model?": [[14, "what-is-the-pie-model"]], "Workflow of PIE": [[14, "workflow-of-pie"]], "Tutorial: Develop Your Algorithms in C++ with FLASH Model": [[15, "tutorial-develop-your-algorithms-in-c-with-flash-model"]], "Developing Algorithms with FLASH Model": [[15, "developing-algorithms-with-flash-model"]], "Defining A FLASH Application": [[15, "defining-a-flash-application"]], "Implementing the Run Function": [[15, "implementing-the-run-function"]], "Integrating with the Python Client of GraphScope": [[15, "integrating-with-the-python-client-of-graphscope"]], "Running the FLASH Algorithms": [[15, "running-the-flash-algorithms"]], "Tutorial: Develop your Algorithm in C++ with PIE Model": [[16, "tutorial-develop-your-algorithm-in-c-with-pie-model"]], "Prerequisites:": [[16, "prerequisites"]], "Step 1: Define the context class": [[16, "step-1-define-the-context-class"]], "Step 2: Define the Algorithm class": [[16, "step-2-define-the-algorithm-class"]], "Step 3: Package the Algorithm": [[16, "step-3-package-the-algorithm"]], "Step 4: Run the .gar file on GraphScope": [[16, "step-4-run-the-gar-file-on-graphscope"]], "GraphScope C++ SDK with GitHub Template": [[16, "graphscope-c-sdk-with-github-template"]], "Tutorial: Develop your Algorithm in Java with PIE Model": [[17, "tutorial-develop-your-algorithm-in-java-with-pie-model"]], "Run example algorithms with example jar": [[17, "run-example-algorithms-with-example-jar"]], "Implement your own algorithms in Java.": [[17, "implement-your-own-algorithms-in-java"]], "Prepare GRAPE-jdk": [[17, "prepare-grape-jdk"]], "Get from Maven Central Repository": [[17, "get-from-maven-central-repository"]], "Build from source": [[17, "build-from-source"], [411, "build-from-source"]], "Implement your algorithm": [[17, "implement-your-algorithm"]], "Submit to GraphScope": [[17, "submit-to-graphscope"]], "GraphScope JavaSDK with GitHub Template": [[17, "graphscope-javasdk-with-github-template"]], "Tutorial: Develop algorithms in Python": [[18, "tutorial-develop-algorithms-in-python"]], "Writing Your Own Algorithms in PIE": [[18, "writing-your-own-algorithms-in-pie"]], "Writing Algorithms in Pregel": [[18, "writing-algorithms-in-pregel"]], "Using math.h Functions in Algorithms": [[18, "using-math-h-functions-in-algorithms"]], "Run Your Own Algorithms": [[18, "run-your-own-algorithms"]], "Tutorial: Graph Algorithms with NetworkX APIs": [[19, "tutorial-graph-algorithms-with-networkx-apis"]], "How does Networkx Perform Graph Analysis?": [[19, "how-does-networkx-perform-graph-analysis"]], "How to Perform Graph Analysis with NetworkX APIs from GraphScope": [[19, "how-to-perform-graph-analysis-with-networkx-apis-from-graphscope"]], "Graph Analysis": [[19, "graph-analysis"]], "Graph Display": [[19, "graph-display"]], "The Performance Speed-up of GraphScope over NetworkX": [[19, "the-performance-speed-up-of-graphscope-over-networkx"]], "Tutorial: Graph Operations with NetworkX APIs": [[20, "tutorial-graph-operations-with-networkx-apis"]], "Creating an Empty Graph": [[20, "creating-an-empty-graph"]], "Adding Nodes": [[20, "adding-nodes"]], "Adding Edges": [[20, "adding-edges"], [335, "adding-edges"]], "Examining Elements of a Graph": [[20, "examining-elements-of-a-graph"]], "Removing Elements from a Graph": [[20, "removing-elements-from-a-graph"]], "Using Graph Constructors": [[20, "using-graph-constructors"]], "Accessing Edges and Neighbors": [[20, "accessing-edges-and-neighbors"]], "Adding Attributes to Graphs, Nodes and Edges": [[20, "adding-attributes-to-graphs-nodes-and-edges"]], "Graph Attributes": [[20, "graph-attributes"]], "Node Attributes": [[20, "node-attributes"]], "Edge Attributes": [[20, "edge-attributes"]], "Induce deepcopy subgraph and edge_subgraph": [[20, "induce-deepcopy-subgraph-and-edge-subgraph"]], "Making Copies": [[20, "making-copies"]], "Directed Graphs": [[20, "directed-graphs"]], "Analyzing Graphs": [[20, "analyzing-graphs"]], "Create graph from GraphScope Graph Object": [[20, "create-graph-from-graphscope-graph-object"]], "Transform to GraphScope Graph Object": [[20, "transform-to-graphscope-graph-object"]], "Tutorial: Running Builtin Algorithms": [[21, "tutorial-running-builtin-algorithms"]], "Tutorial: Run Giraph Applications on GraphScope": [[22, "tutorial-run-giraph-applications-on-graphscope"]], "Try some example giraph apps": [[22, "try-some-example-giraph-apps"]], "Run your own Giraph apps.": [[22, "run-your-own-giraph-apps"]], "Develop Giraph algorithm": [[22, "develop-giraph-algorithm"]], "Submit to GraphScope.": [[22, "submit-to-graphscope"]], "Tutorial: Run GraphX Applications on GraphScope": [[23, "tutorial-run-graphx-applications-on-graphscope"]], "Deploy GraphScope along with Spark": [[23, "deploy-graphscope-along-with-spark"]], "Run example GraphX apps": [[23, "run-example-graphx-apps"]], "Submit to Spark": [[23, "submit-to-spark"]], "Run customized GraphX apps": [[23, "run-customized-graphx-apps"]], "Include dependency": [[23, "include-dependency"]], "Develop customized GraphX algorithm towards GraphScope.": [[23, "develop-customized-graphx-algorithm-towards-graphscope"]], "Run customized GraphX algorithms on Spark with GraphScope support": [[23, "run-customized-graphx-algorithms-on-spark-with-graphscope-support"]], "Vertex-Centric Model": [[24, "vertex-centric-model"]], "Pregel Model": [[24, "pregel-model"]], "GAS Model": [[24, "gas-model"]], "Simulation of Pregel Model in Analytical Engine": [[24, "simulation-of-pregel-model-in-analytical-engine"]], "Contact Us": [[25, "contact-us"]], "Slack": [[25, "slack"], [37, "slack"]], "Discussion on GitHub": [[25, "discussion-on-github"]], "Deploy GraphScope on Clouds": [[26, "deploy-graphscope-on-clouds"]], "Deploy on K8s Cluster": [[27, "deploy-on-k8s-cluster"]], "Install GraphScope Client": [[27, "install-graphscope-client"], [30, "install-graphscope-client"]], "Prepare a Kubernetes cluster": [[27, "prepare-a-kubernetes-cluster"], [30, "prepare-a-kubernetes-cluster"], [41, "prepare-a-kubernetes-cluster"]], "Deploying GraphScope": [[27, "deploying-graphscope"]], "Launch with default parameters": [[27, "launch-with-default-parameters"]], "Frequently used parameters": [[27, "frequently-used-parameters"]], "Customize image URI": [[27, "customize-image-uri"]], "Specify the number of workers": [[27, "specify-the-number-of-workers"]], "Provide a kubeconfig file other than default": [[27, "provide-a-kubeconfig-file-other-than-default"]], "Mount volumes": [[27, "mount-volumes"]], "Inspect the deployment": [[27, "inspect-the-deployment"]], "Cleaning Up": [[27, "cleaning-up"]], "Deploy GraphScope Operator": [[28, "deploy-graphscope-operator"]], "Coordinator configuration": [[28, "coordinator-configuration"]], "Deploy GraphScope with helm": [[29, "deploy-graphscope-with-helm"]], "Connect to GraphScope": [[29, "connect-to-graphscope"]], "Uninstall the release": [[29, "uninstall-the-release"]], "Configuration": [[29, "configuration"], [123, "configuration"], [313, "configuration"]], "Offline Installation": [[29, "offline-installation"]], "Deploy with Existing Vineyard Cluster": [[30, "deploy-with-existing-vineyard-cluster"]], "Deploy a Vineyard Cluster": [[30, "deploy-a-vineyard-cluster"]], "The lifecycle of a vineyard cluster": [[30, "the-lifecycle-of-a-vineyard-cluster"]], "Load the dataset to the Kubernetes cluster": [[30, "load-the-dataset-to-the-kubernetes-cluster"]], "Load a graph to the existing vineyard cluster": [[30, "load-a-graph-to-the-existing-vineyard-cluster"]], "Connect to the existing vineyard cluster with another GraphScope session": [[30, "connect-to-the-existing-vineyard-cluster-with-another-graphscope-session"]], "Cleaning up": [[30, "cleaning-up"]], "Install GraphScope in offline environment": [[31, "install-graphscope-in-offline-environment"]], "Install from wheels": [[31, "install-from-wheels"]], "Install from source": [[31, "install-from-source"], [32, "install-from-source"]], "Download dependencies and GraphScope": [[31, "download-dependencies-and-graphscope"]], "Copy all files to the destination environment and extract them to a location": [[31, "copy-all-files-to-the-destination-environment-and-extract-them-to-a-location"]], "Install basic packages and gcc-g++,\u00a0python": [[31, "install-basic-packages-and-gcc-g-python"]], "Install third-party dependencies and GraphScope Analytical Engine": [[31, "install-third-party-dependencies-and-graphscope-analytical-engine"]], "Install GraphScope on Local": [[32, "install-graphscope-on-local"]], "Install from packages": [[32, "install-from-packages"]], "Install stable version of GraphScope": [[32, "install-stable-version-of-graphscope"]], "Install preview version of GraphScope": [[32, "install-preview-version-of-graphscope"]], "Setup build environment for Linux and macOS": [[32, "setup-build-environment-for-linux-and-macos"]], "Use dev image with all dependencies installed": [[32, "use-dev-image-with-all-dependencies-installed"]], "Build and install": [[32, "build-and-install"]], "Persistent storage of graphs on the Kubernetes cluster": [[33, "persistent-storage-of-graphs-on-the-kubernetes-cluster"]], "Create a pv and pvc": [[33, "create-a-pv-and-pvc"]], "Store graphs to the pvc": [[33, "store-graphs-to-the-pvc"]], "Retore graphs from the pvc": [[33, "retore-graphs-from-the-pvc"]], "Clean up": [[33, "clean-up"]], "Graph Storage": [[34, "graph-storage"]], "Execution Framework": [[34, "execution-framework"]], "Flexible programming models": [[34, "flexible-programming-models"]], "Multi-language SDKs": [[34, "multi-language-sdks"]], "High-performance runtime": [[34, "high-performance-runtime"]], "Algorithm Library": [[34, "algorithm-library"]], "Code Style Guide": [[35, "code-style-guide"]], "C++ Style": [[35, "c-style"]], "Python Style": [[35, "python-style"]], "Rust Style": [[35, "rust-style"]], "Java Style": [[35, "java-style"]], "Script Style": [[35, "script-style"]], "Style Linter and Checker": [[35, "style-linter-and-checker"]], "Development Guide": [[36, "development-guide"]], "Dev Environment": [[36, "dev-environment"], [41, "dev-environment"], [45, "dev-environment"], [129, "dev-environment"], [311, "dev-environment"], [327, "dev-environment"]], "Develop with dev containers.": [[36, "develop-with-dev-containers"]], "Install deps on local": [[36, "install-deps-on-local"], [45, "install-deps-on-local"], [327, "install-deps-on-local"]], "Build All Targets for GraphScope": [[36, "build-all-targets-for-graphscope"], [41, "build-all-targets-for-graphscope"]], "Build Components Individually": [[36, "build-components-individually"]], "Build and Test Engines": [[36, "build-and-test-engines"]], "Build Coordinator": [[36, "build-coordinator"]], "Build Python Client": [[36, "build-python-client"]], "Build gsctl": [[36, "build-gsctl"], [45, "build-gsctl"]], "How to Contribute": [[37, "how-to-contribute"]], "Code of Conduct": [[37, "code-of-conduct"]], "Community": [[37, "community"], [555, "module-graphscope.nx.generators.community"]], "GitHub Discussion": [[37, "github-discussion"]], "Reporting Bugs": [[37, "reporting-bugs"]], "Requesting Features": [[37, "requesting-features"]], "Improving Documentation": [[37, "improving-documentation"]], "Contributing Code and Documentation Changes": [[37, "contributing-code-and-documentation-changes"]], "Install pre-commit": [[37, "install-pre-commit"]], "Minor Fixes": [[37, "minor-fixes"]], "Fork and Create a Branch": [[37, "fork-and-create-a-branch"]], "Get the Test Suite Running": [[37, "get-the-test-suite-running"]], "Implement Your Fix or Feature": [[37, "implement-your-fix-or-feature"]], "Get the Code Format and Style Right": [[37, "get-the-code-format-and-style-right"]], "Submitting Your Changes": [[37, "submitting-your-changes"]], "Discussing and Keeping Your Pull Request Updated": [[37, "discussing-and-keeping-your-pull-request-updated"]], "Merging a PR (maintainers only)": [[37, "merging-a-pr-maintainers-only"]], "Shipping a Release (maintainers only)": [[37, "shipping-a-release-maintainers-only"]], "How to Review Pull Requests": [[37, "how-to-review-pull-requests"]], "Continuous integration testing": [[37, "continuous-integration-testing"]], "Debugging on local deployment": [[38, "debugging-on-local-deployment"]], "Find the logs": [[38, "find-the-logs"], [38, "id1"]], "Debugging on Kubernetes deployment": [[38, "debugging-on-kubernetes-deployment"]], "Commands for Debugging": [[38, "commands-for-debugging"]], "Debugging Techniques": [[38, "debugging-techniques"]], "How to instrument": [[39, "how-to-instrument"]], "Java": [[39, "java"], [569, "java"], [569, "id2"]], "Automatic instrument": [[39, "automatic-instrument"]], "How to Submit Pull-requests": [[40, "how-to-submit-pull-requests"]], "How to Test": [[41, "how-to-test"], [327, "how-to-test"]], "Test GraphScope on local": [[41, "test-graphscope-on-local"]], "Run tests": [[41, "run-tests"], [41, "id1"]], "Test GraphScope on Kubernetes cluster": [[41, "test-graphscope-on-kubernetes-cluster"]], "Build images": [[41, "build-images"]], "Error Codes": [[42, "error-codes"], [575, "error-codes"]], "Coordinator": [[43, "coordinator"]], "Development guide": [[44, "development-guide"], [128, "development-guide"]], "Develop with dev containers": [[45, "develop-with-dev-containers"]], "Testing with Interactive": [[45, "testing-with-interactive"]], "Preparation": [[45, "preparation"], [121, "preparation"], [295, "preparation"]], "Launching Coordinator": [[45, "launching-coordinator"]], "Run Test Script": [[45, "run-test-script"]], "Running tests manually via gsctl": [[45, "running-tests-manually-via-gsctl"]], "Create a New Graph": [[45, "create-a-new-graph"]], "Import Graph Data": [[45, "import-graph-data"]], "Coordinator Python SDK Reference": [[46, "coordinator-python-sdk-reference"]], "Requirements.": [[46, "requirements"], [289, "requirements"]], "Installation & Usage": [[46, "installation-usage"], [289, "installation-usage"]], "pip install": [[46, "pip-install"], [289, "pip-install"]], "Setuptools": [[46, "setuptools"], [289, "setuptools"]], "Tests": [[46, "tests"], [289, "tests"]], "Documentation for API Endpoints": [[46, "documentation-for-api-endpoints"]], "Documentation For Models": [[46, "documentation-for-models"]], "Documentation For Authorization": [[46, "documentation-for-authorization"], [289, "documentation-for-authorization"]], "Author": [[46, "author"]], "graphscope.flex.rest.AlertApi": [[47, "graphscope-flex-rest-alertapi"]], "create_alert_receiver": [[47, "create-alert-receiver"]], "Example": [[47, "example"], [47, "id1"], [47, "id7"], [47, "id13"], [47, "id19"], [47, "id25"], [47, "id31"], [47, "id37"], [47, "id43"], [47, "id49"], [48, "example"], [49, "example"], [50, "example"], [51, "example"], [52, "example"], [53, "example"], [54, "example"], [55, "example"], [56, "example"], [57, "example"], [58, "example"], [59, "example"], [60, "example"], [61, "example"], [62, "example"], [63, "example"], [64, "example"], [65, "example"], [66, "example"], [67, "example"], [67, "id1"], [67, "id7"], [67, "id13"], [68, "example"], [69, "example"], [70, "example"], [71, "example"], [72, "example"], [73, "example"], [74, "example"], [75, "example"], [75, "id1"], [75, "id7"], [75, "id13"], [75, "id19"], [76, "example"], [77, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [82, "example"], [83, "example"], [84, "example"], [85, "example"], [86, "example"], [87, "example"], [88, "example"], [89, "example"], [90, "example"], [91, "example"], [92, "example"], [92, "id1"], [92, "id7"], [92, "id13"], [92, "id19"], [92, "id25"], [92, "id31"], [92, "id37"], [92, "id43"], [92, "id49"], [93, "example"], [93, "id1"], [93, "id7"], [93, "id13"], [93, "id19"], [94, "example"], [95, "example"], [96, "example"], [97, "example"], [98, "example"], [99, "example"], [100, "example"], [101, "example"], [102, "example"], [103, "example"], [104, "example"], [104, "id1"], [104, "id7"], [104, "id13"], [104, "id19"], [105, "example"], [106, "example"], [107, "example"], [108, "example"], [108, "id1"], [108, "id7"], [108, "id13"], [108, "id19"], [109, "example"], [110, "example"], [111, "example"], [112, "example"], [113, "example"], [114, "example"], [115, "example"], [116, "example"], [117, "example"], [118, "example"], [119, "example"], [147, "example"], [147, "id1"], [147, "id7"], [166, "example"], [166, "id1"], [166, "id7"], [166, "id13"], [166, "id19"], [166, "id25"], [166, "id31"], [167, "example"], [167, "id1"], [167, "id7"], [173, "example"], [173, "id1"], [173, "id7"], [173, "id13"], [173, "id19"], [176, "example"], [176, "id1"], [182, "example"], [182, "id1"], [182, "id7"], [182, "id13"], [197, "example"], [197, "id1"], [197, "id7"], [213, "example"], [214, "example"], [215, "example"], [216, "example"], [217, "example"], [218, "example"], [219, "example"], [220, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [229, "example"], [230, "example"], [230, "id1"], [230, "id7"], [231, "example"], [232, "example"], [233, "example"], [234, "example"], [235, "example"], [236, "example"], [237, "example"], [238, "example"], [239, "example"], [240, "example"], [241, "example"], [242, "example"], [243, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [249, "id1"], [249, "id7"], [249, "id13"], [249, "id19"], [249, "id25"], [249, "id31"], [250, "example"], [250, "id1"], [250, "id7"], [251, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [256, "example"], [257, "example"], [257, "id1"], [257, "id7"], [257, "id13"], [257, "id19"], [258, "example"], [259, "example"], [259, "id1"], [260, "example"], [261, "example"], [262, "example"], [263, "example"], [264, "example"], [265, "example"], [265, "id1"], [265, "id7"], [265, "id13"], [266, "example"], [267, "example"], [268, "example"], [269, "example"], [270, "example"], [271, "example"], [272, "example"], [273, "example"], [274, "example"], [275, "example"], [276, "example"], [277, "example"], [278, "example"], [279, "example"], [280, "example"], [280, "id1"], [280, "id7"], [281, "example"], [282, "example"], [283, "example"], [284, "example"], [285, "example"], [286, "example"]], "Parameters": [[47, "parameters"], [47, "id2"], [47, "id8"], [47, "id14"], [47, "id20"], [47, "id26"], [47, "id32"], [47, "id38"], [47, "id44"], [47, "id50"], [67, "parameters"], [67, "id2"], [67, "id8"], [67, "id14"], [75, "parameters"], [75, "id2"], [75, "id8"], [75, "id14"], [75, "id20"], [92, "parameters"], [92, "id2"], [92, "id8"], [92, "id14"], [92, "id20"], [92, "id26"], [92, "id32"], [92, "id38"], [92, "id44"], [92, "id50"], [93, "parameters"], [93, "id2"], [93, "id8"], [93, "id14"], [93, "id20"], [104, "parameters"], [104, "id2"], [104, "id8"], [104, "id14"], [104, "id20"], [108, "parameters"], [108, "id2"], [108, "id8"], [108, "id14"], [108, "id20"], [118, "parameters"], [147, "parameters"], [147, "id2"], [147, "id8"], [166, "parameters"], [166, "id2"], [166, "id8"], [166, "id14"], [166, "id20"], [166, "id26"], [166, "id32"], [167, "parameters"], [167, "id2"], [167, "id8"], [173, "parameters"], [173, "id2"], [173, "id8"], [173, "id14"], [173, "id20"], [176, "parameters"], [176, "id2"], [182, "parameters"], [182, "id2"], [182, "id8"], [182, "id14"], [197, "parameters"], [197, "id2"], [197, "id8"], [230, "parameters"], [230, "id2"], [230, "id8"], [249, "parameters"], [249, "id2"], [249, "id8"], [249, "id14"], [249, "id20"], [249, "id26"], [249, "id32"], [250, "parameters"], [250, "id2"], [250, "id8"], [257, "parameters"], [257, "id2"], [257, "id8"], [257, "id14"], [257, "id20"], [259, "parameters"], [259, "id2"], [265, "parameters"], [265, "id2"], [265, "id8"], [265, "id14"], [280, "parameters"], [280, "id2"], [280, "id8"]], "Return type": [[47, "return-type"], [47, "id3"], [47, "id9"], [47, "id15"], [47, "id21"], [47, "id27"], [47, "id33"], [47, "id39"], [47, "id45"], [47, "id51"], [67, "return-type"], [67, "id3"], [67, "id9"], [67, "id15"], [75, "return-type"], [75, "id3"], [75, "id9"], [75, "id15"], [75, "id21"], [92, "return-type"], [92, "id3"], [92, "id9"], [92, "id15"], [92, "id21"], [92, "id27"], [92, "id33"], [92, "id39"], [92, "id45"], [92, "id51"], [93, "return-type"], [93, "id3"], [93, "id9"], [93, "id15"], [93, "id21"], [104, "return-type"], [104, "id3"], [104, "id9"], [104, "id15"], [104, "id21"], [108, "return-type"], [108, "id3"], [108, "id9"], [108, "id15"], [108, "id21"], [118, "return-type"], [147, "return-type"], [147, "id3"], [147, "id9"], [166, "return-type"], [166, "id3"], [166, "id9"], [166, "id15"], [166, "id21"], [166, "id27"], [166, "id33"], [167, "return-type"], [167, "id3"], [167, "id9"], [173, "return-type"], [173, "id3"], [173, "id9"], [173, "id15"], [173, "id21"], [176, "return-type"], [176, "id3"], [182, "return-type"], [182, "id3"], [182, "id9"], [182, "id15"], [197, "return-type"], [197, "id3"], [197, "id9"], [230, "return-type"], [230, "id3"], [230, "id9"], [249, "return-type"], [249, "id3"], [249, "id9"], [249, "id15"], [249, "id21"], [249, "id27"], [249, "id33"], [250, "return-type"], [250, "id3"], [250, "id9"], [257, "return-type"], [257, "id3"], [257, "id9"], [257, "id15"], [257, "id21"], [259, "return-type"], [259, "id3"], [265, "return-type"], [265, "id3"], [265, "id9"], [265, "id15"], [280, "return-type"], [280, "id3"], [280, "id9"]], "Authorization": [[47, "authorization"], [47, "id4"], [47, "id10"], [47, "id16"], [47, "id22"], [47, "id28"], [47, "id34"], [47, "id40"], [47, "id46"], [47, "id52"], [67, "authorization"], [67, "id4"], [67, "id10"], [67, "id16"], [75, "authorization"], [75, "id4"], [75, "id10"], [75, "id16"], [75, "id22"], [92, "authorization"], [92, "id4"], [92, "id10"], [92, "id16"], [92, "id22"], [92, "id28"], [92, "id34"], [92, "id40"], [92, "id46"], [92, "id52"], [93, "authorization"], [93, "id4"], [93, "id10"], [93, "id16"], [93, "id22"], [104, "authorization"], [104, "id4"], [104, "id10"], [104, "id16"], [104, "id22"], [108, "authorization"], [108, "id4"], [108, "id10"], [108, "id16"], [108, "id22"], [118, "authorization"], [147, "authorization"], [147, "id4"], [147, "id10"], [166, "authorization"], [166, "id4"], [166, "id10"], [166, "id16"], [166, "id22"], [166, "id28"], [166, "id34"], [167, "authorization"], [167, "id4"], [167, "id10"], [173, "authorization"], [173, "id4"], [173, "id10"], [173, "id16"], [173, "id22"], [176, "authorization"], [176, "id4"], [182, "authorization"], [182, "id4"], [182, "id10"], [182, "id16"], [197, "authorization"], [197, "id4"], [197, "id10"], [230, "authorization"], [230, "id4"], [230, "id10"], [249, "authorization"], [249, "id4"], [249, "id10"], [249, "id16"], [249, "id22"], [249, "id28"], [249, "id34"], [250, "authorization"], [250, "id4"], [250, "id10"], [257, "authorization"], [257, "id4"], [257, "id10"], [257, "id16"], [257, "id22"], [259, "authorization"], [259, "id4"], [265, "authorization"], [265, "id4"], [265, "id10"], [265, "id16"], [280, "authorization"], [280, "id4"], [280, "id10"]], "HTTP request headers": [[47, "http-request-headers"], [47, "id5"], [47, "id11"], [47, "id17"], [47, "id23"], [47, "id29"], [47, "id35"], [47, "id41"], [47, "id47"], [47, "id53"], [67, "http-request-headers"], [67, "id5"], [67, "id11"], [67, "id17"], [75, "http-request-headers"], [75, "id5"], [75, "id11"], [75, "id17"], [75, "id23"], [92, "http-request-headers"], [92, "id5"], [92, "id11"], [92, "id17"], [92, "id23"], [92, "id29"], [92, "id35"], [92, "id41"], [92, "id47"], [92, "id53"], [93, "http-request-headers"], [93, "id5"], [93, "id11"], [93, "id17"], [93, "id23"], [104, "http-request-headers"], [104, "id5"], [104, "id11"], [104, "id17"], [104, "id23"], [108, "http-request-headers"], [108, "id5"], [108, "id11"], [108, "id17"], [108, "id23"], [118, "http-request-headers"], [147, "http-request-headers"], [147, "id5"], [147, "id11"], [166, "http-request-headers"], [166, "id5"], [166, "id11"], [166, "id17"], [166, "id23"], [166, "id29"], [166, "id35"], [167, "http-request-headers"], [167, "id5"], [167, "id11"], [173, "http-request-headers"], [173, "id5"], [173, "id11"], [173, "id17"], [173, "id23"], [176, "http-request-headers"], [176, "id5"], [182, "http-request-headers"], [182, "id5"], [182, "id11"], [182, "id17"], [197, "http-request-headers"], [197, "id5"], [197, "id11"], [230, "http-request-headers"], [230, "id5"], [230, "id11"], [249, "http-request-headers"], [249, "id5"], [249, "id11"], [249, "id17"], [249, "id23"], [249, "id29"], [249, "id35"], [250, "http-request-headers"], [250, "id5"], [250, "id11"], [257, "http-request-headers"], [257, "id5"], [257, "id11"], [257, "id17"], [257, "id23"], [259, "http-request-headers"], [259, "id5"], [265, "http-request-headers"], [265, "id5"], [265, "id11"], [265, "id17"], [280, "http-request-headers"], [280, "id5"], [280, "id11"]], "HTTP response details": [[47, "http-response-details"], [47, "id6"], [47, "id12"], [47, "id18"], [47, "id24"], [47, "id30"], [47, "id36"], [47, "id42"], [47, "id48"], [47, "id54"], [67, "http-response-details"], [67, "id6"], [67, "id12"], [67, "id18"], [75, "http-response-details"], [75, "id6"], [75, "id12"], [75, "id18"], [75, "id24"], [92, "http-response-details"], [92, "id6"], [92, "id12"], [92, "id18"], [92, "id24"], [92, "id30"], [92, "id36"], [92, "id42"], [92, "id48"], [92, "id54"], [93, "http-response-details"], [93, "id6"], [93, "id12"], [93, "id18"], [93, "id24"], [104, "http-response-details"], [104, "id6"], [104, "id12"], [104, "id18"], [104, "id24"], [108, "http-response-details"], [108, "id6"], [108, "id12"], [108, "id18"], [108, "id24"], [118, "http-response-details"], [147, "http-response-details"], [147, "id6"], [147, "id12"], [166, "http-response-details"], [166, "id6"], [166, "id12"], [166, "id18"], [166, "id24"], [166, "id30"], [166, "id36"], [167, "http-response-details"], [167, "id6"], [167, "id12"], [173, "http-response-details"], [173, "id6"], [173, "id12"], [173, "id18"], [173, "id24"], [176, "http-response-details"], [176, "id6"], [182, "http-response-details"], [182, "id6"], [182, "id12"], [182, "id18"], [197, "http-response-details"], [197, "id6"], [197, "id12"], [230, "http-response-details"], [230, "id6"], [230, "id12"], [249, "http-response-details"], [249, "id6"], [249, "id12"], [249, "id18"], [249, "id24"], [249, "id30"], [249, "id36"], [250, "http-response-details"], [250, "id6"], [250, "id12"], [257, "http-response-details"], [257, "id6"], [257, "id12"], [257, "id18"], [257, "id24"], [259, "http-response-details"], [259, "id6"], [265, "http-response-details"], [265, "id6"], [265, "id12"], [265, "id18"], [280, "http-response-details"], [280, "id6"], [280, "id12"]], "delete_alert_message_in_batch": [[47, "delete-alert-message-in-batch"]], "delete_alert_receiver_by_id": [[47, "delete-alert-receiver-by-id"]], "delete_alert_rule_by_id": [[47, "delete-alert-rule-by-id"]], "list_alert_messages": [[47, "list-alert-messages"]], "list_alert_receivers": [[47, "list-alert-receivers"]], "list_alert_rules": [[47, "list-alert-rules"]], "update_alert_message_in_batch": [[47, "update-alert-message-in-batch"]], "update_alert_receiver_by_id": [[47, "update-alert-receiver-by-id"]], "update_alert_rule_by_id": [[47, "update-alert-rule-by-id"]], "BaseEdgeType": [[48, "baseedgetype"], [131, "baseedgetype"], [214, "baseedgetype"]], "Properties": [[48, "properties"], [49, "properties"], [50, "properties"], [51, "properties"], [52, "properties"], [53, "properties"], [54, "properties"], [55, "properties"], [56, "properties"], [57, "properties"], [58, "properties"], [59, "properties"], [60, "properties"], [61, "properties"], [62, "properties"], [63, "properties"], [64, "properties"], [65, "properties"], [66, "properties"], [68, "properties"], [69, "properties"], [70, "properties"], [71, "properties"], [72, "properties"], [73, "properties"], [74, "properties"], [76, "properties"], [77, "properties"], [78, "properties"], [79, "properties"], [80, "properties"], [81, "properties"], [82, "properties"], [83, "properties"], [84, "properties"], [85, "properties"], [86, "properties"], [87, "properties"], [88, "properties"], [89, "properties"], [90, "properties"], [91, "properties"], [94, "properties"], [95, "properties"], [96, "properties"], [97, "properties"], [98, "properties"], [99, "properties"], [100, "properties"], [101, "properties"], [102, "properties"], [103, "properties"], [105, "properties"], [106, "properties"], [107, "properties"], [109, "properties"], [110, "properties"], [111, "properties"], [112, "properties"], [113, "properties"], [114, "properties"], [115, "properties"], [116, "properties"], [117, "properties"], [119, "properties"], [130, "properties"], [131, "properties"], [132, "properties"], [133, "properties"], [134, "properties"], [135, "properties"], [136, "properties"], [137, "properties"], [138, "properties"], [139, "properties"], [140, "properties"], [141, "properties"], [142, "properties"], [143, "properties"], [144, "properties"], [145, "properties"], [146, "properties"], [148, "properties"], [149, "properties"], [150, "properties"], [151, "properties"], [152, "properties"], [153, "properties"], [154, "properties"], [155, "properties"], [156, "properties"], [157, "properties"], [158, "properties"], [159, "properties"], [160, "properties"], [161, "properties"], [162, "properties"], [163, "properties"], [164, "properties"], [165, "properties"], [168, "properties"], [169, "properties"], [170, "properties"], [171, "properties"], [172, "properties"], [174, "properties"], [175, "properties"], [177, "properties"], [178, "properties"], [179, "properties"], [180, "properties"], [181, "properties"], [183, "properties"], [184, "properties"], [185, "properties"], [186, "properties"], [187, "properties"], [188, "properties"], [189, "properties"], [190, "properties"], [191, "properties"], [192, "properties"], [193, "properties"], [194, "properties"], [195, "properties"], [196, "properties"], [198, "properties"], [199, "properties"], [200, "properties"], [201, "properties"], [202, "properties"], [203, "properties"], [213, "properties"], [214, "properties"], [215, "properties"], [216, "properties"], [217, "properties"], [218, "properties"], [219, "properties"], [220, "properties"], [221, "properties"], [222, "properties"], [223, "properties"], [224, "properties"], [225, "properties"], [226, "properties"], [227, "properties"], [228, "properties"], [229, "properties"], [231, "properties"], [232, "properties"], [233, "properties"], [234, "properties"], [235, "properties"], [236, "properties"], [237, "properties"], [238, "properties"], [239, "properties"], [240, "properties"], [241, "properties"], [242, "properties"], [243, "properties"], [244, "properties"], [245, "properties"], [246, "properties"], [247, "properties"], [248, "properties"], [251, "properties"], [252, "properties"], [253, "properties"], [254, "properties"], [255, "properties"], [256, "properties"], [258, "properties"], [260, "properties"], [261, "properties"], [262, "properties"], [263, "properties"], [264, "properties"], [266, "properties"], [267, "properties"], [268, "properties"], [269, "properties"], [270, "properties"], [271, "properties"], [272, "properties"], [273, "properties"], [274, "properties"], [275, "properties"], [276, "properties"], [277, "properties"], [278, "properties"], [279, "properties"], [281, "properties"], [282, "properties"], [283, "properties"], [284, "properties"], [285, "properties"], [286, "properties"]], "BaseEdgeTypeVertexTypePairRelationsInner": [[49, "baseedgetypevertextypepairrelationsinner"], [132, "baseedgetypevertextypepairrelationsinner"], [215, "baseedgetypevertextypepairrelationsinner"]], "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams": [[50, "baseedgetypevertextypepairrelationsinnerxcsrparams"], [133, "baseedgetypevertextypepairrelationsinnerxcsrparams"], [216, "baseedgetypevertextypepairrelationsinnerxcsrparams"]], "BasePropertyMeta": [[51, "basepropertymeta"], [134, "basepropertymeta"], [217, "basepropertymeta"]], "BaseVertexType": [[52, "basevertextype"], [135, "basevertextype"], [218, "basevertextype"]], "BaseVertexTypeXCsrParams": [[53, "basevertextypexcsrparams"], [136, "basevertextypexcsrparams"], [219, "basevertextypexcsrparams"]], "ColumnMapping": [[54, "columnmapping"], [137, "columnmapping"], [220, "columnmapping"]], "ColumnMappingColumn": [[55, "columnmappingcolumn"]], "CreateAlertReceiverRequest": [[56, "createalertreceiverrequest"]], "CreateAlertRuleRequest": [[57, "createalertrulerequest"]], "CreateDataloadingJobResponse": [[58, "createdataloadingjobresponse"]], "CreateEdgeType": [[59, "createedgetype"], [138, "createedgetype"], [221, "createedgetype"]], "CreateGraphRequest": [[60, "creategraphrequest"], [139, "creategraphrequest"], [222, "creategraphrequest"]], "CreateGraphResponse": [[61, "creategraphresponse"], [140, "creategraphresponse"], [223, "creategraphresponse"]], "CreateGraphSchemaRequest": [[62, "creategraphschemarequest"], [141, "creategraphschemarequest"], [224, "creategraphschemarequest"]], "CreatePropertyMeta": [[63, "createpropertymeta"], [144, "createpropertymeta"], [227, "createpropertymeta"]], "CreateStoredProcRequest": [[64, "createstoredprocrequest"]], "CreateStoredProcResponse": [[65, "createstoredprocresponse"]], "CreateVertexType": [[66, "createvertextype"], [145, "createvertextype"], [228, "createvertextype"]], "graphscope.flex.rest.DataSourceApi": [[67, "graphscope-flex-rest-datasourceapi"]], "bind_datasource_in_batch": [[67, "bind-datasource-in-batch"]], "get_datasource_by_id": [[67, "get-datasource-by-id"]], "unbind_edge_datasource": [[67, "unbind-edge-datasource"]], "unbind_vertex_datasource": [[67, "unbind-vertex-datasource"]], "DataloadingJobConfig": [[68, "dataloadingjobconfig"]], "DataloadingJobConfigEdgesInner": [[69, "dataloadingjobconfigedgesinner"]], "DataloadingJobConfigLoadingConfig": [[70, "dataloadingjobconfigloadingconfig"]], "DataloadingJobConfigLoadingConfigFormat": [[71, "dataloadingjobconfigloadingconfigformat"]], "DataloadingJobConfigVerticesInner": [[72, "dataloadingjobconfigverticesinner"]], "DataloadingMRJobConfig": [[73, "dataloadingmrjobconfig"]], "DateType": [[74, "datetype"], [146, "datetype"], [229, "datetype"]], "graphscope.flex.rest.DeploymentApi": [[75, "graphscope-flex-rest-deploymentapi"]], "get_deployment_info": [[75, "get-deployment-info"]], "get_deployment_pod_log": [[75, "get-deployment-pod-log"]], "get_deployment_resource_usage": [[75, "get-deployment-resource-usage"]], "get_deployment_status": [[75, "get-deployment-status"]], "get_storage_usage": [[75, "get-storage-usage"]], "EdgeMapping": [[76, "edgemapping"], [149, "edgemapping"], [232, "edgemapping"]], "EdgeMappingTypeTriplet": [[77, "edgemappingtypetriplet"], [153, "edgemappingtypetriplet"], [236, "edgemappingtypetriplet"]], "Error": [[78, "error"]], "GSDataType": [[79, "gsdatatype"], [158, "gsdatatype"], [241, "gsdatatype"]], "GetAlertMessageResponse": [[80, "getalertmessageresponse"]], "GetAlertReceiverResponse": [[81, "getalertreceiverresponse"]], "GetAlertRuleResponse": [[82, "getalertruleresponse"]], "GetEdgeType": [[83, "getedgetype"], [159, "getedgetype"], [242, "getedgetype"]], "GetGraphResponse": [[84, "getgraphresponse"], [160, "getgraphresponse"], [243, "getgraphresponse"]], "GetGraphSchemaResponse": [[85, "getgraphschemaresponse"], [161, "getgraphschemaresponse"], [244, "getgraphschemaresponse"]], "GetPodLogResponse": [[86, "getpodlogresponse"]], "GetPropertyMeta": [[87, "getpropertymeta"], [164, "getpropertymeta"], [247, "getpropertymeta"]], "GetResourceUsageResponse": [[88, "getresourceusageresponse"]], "GetStorageUsageResponse": [[89, "getstorageusageresponse"]], "GetStoredProcResponse": [[90, "getstoredprocresponse"]], "GetVertexType": [[91, "getvertextype"], [165, "getvertextype"], [248, "getvertextype"]], "graphscope.flex.rest.GraphApi": [[92, "graphscope-flex-rest-graphapi"]], "create_edge_type": [[92, "create-edge-type"]], "create_graph": [[92, "create-graph"]], "create_vertex_type": [[92, "create-vertex-type"]], "delete_edge_type_by_name": [[92, "delete-edge-type-by-name"]], "delete_graph_by_id": [[92, "delete-graph-by-id"]], "delete_vertex_type_by_name": [[92, "delete-vertex-type-by-name"]], "get_graph_by_id": [[92, "get-graph-by-id"]], "get_schema_by_id": [[92, "get-schema-by-id"]], "import_schema_by_id": [[92, "import-schema-by-id"]], "list_graphs": [[92, "list-graphs"]], "graphscope.flex.rest.JobApi": [[93, "graphscope-flex-rest-jobapi"]], "delete_job_by_id": [[93, "delete-job-by-id"]], "get_dataloading_job_config": [[93, "get-dataloading-job-config"]], "get_job_by_id": [[93, "get-job-by-id"]], "list_jobs": [[93, "list-jobs"]], "submit_dataloading_job": [[93, "submit-dataloading-job"]], "JobStatus": [[94, "jobstatus"], [169, "jobstatus"], [252, "jobstatus"]], "LongText": [[95, "longtext"], [170, "longtext"], [253, "longtext"]], "NodeStatus": [[96, "nodestatus"]], "Parameter": [[97, "parameter"], [171, "parameter"], [255, "parameter"]], "PodStatus": [[98, "podstatus"]], "PrimitiveType": [[99, "primitivetype"], [172, "primitivetype"], [256, "primitivetype"]], "ResourceUsage": [[100, "resourceusage"]], "RunningDeploymentInfo": [[101, "runningdeploymentinfo"]], "RunningDeploymentStatus": [[102, "runningdeploymentstatus"]], "SchemaMapping": [[103, "schemamapping"], [177, "schemamapping"], [260, "schemamapping"]], "graphscope.flex.rest.ServiceApi": [[104, "graphscope-flex-rest-serviceapi"]], "get_service_status_by_id": [[104, "get-service-status-by-id"]], "list_service_status": [[104, "list-service-status"]], "restart_service": [[104, "restart-service"]], "start_service": [[104, "start-service"]], "stop_service": [[104, "stop-service"]], "ServiceStatus": [[105, "servicestatus"], [183, "servicestatus"], [266, "servicestatus"]], "ServiceStatusSdkEndpoints": [[106, "servicestatussdkendpoints"]], "StartServiceRequest": [[107, "startservicerequest"], [184, "startservicerequest"], [267, "startservicerequest"]], "graphscope.flex.rest.StoredProcedureApi": [[108, "graphscope-flex-rest-storedprocedureapi"]], "create_stored_procedure": [[108, "create-stored-procedure"]], "delete_stored_procedure_by_id": [[108, "delete-stored-procedure-by-id"]], "get_stored_procedure_by_id": [[108, "get-stored-procedure-by-id"]], "list_stored_procedures": [[108, "list-stored-procedures"]], "update_stored_procedure_by_id": [[108, "update-stored-procedure-by-id"]], "StoredProcedureMeta": [[109, "storedproceduremeta"], [186, "storedproceduremeta"], [269, "storedproceduremeta"]], "StringType": [[110, "stringtype"], [187, "stringtype"], [270, "stringtype"]], "StringTypeString": [[111, "stringtypestring"], [188, "stringtypestring"], [271, "stringtypestring"]], "TemporalType": [[112, "temporaltype"], [189, "temporaltype"], [272, "temporaltype"]], "TemporalTypeTemporal": [[113, "temporaltypetemporal"], [190, "temporaltypetemporal"], [273, "temporaltypetemporal"]], "TimeStampType": [[114, "timestamptype"], [191, "timestamptype"], [274, "timestamptype"]], "UpdateAlertMessageStatusRequest": [[115, "updatealertmessagestatusrequest"]], "UpdateStoredProcRequest": [[116, "updatestoredprocrequest"]], "UploadFileResponse": [[117, "uploadfileresponse"], [194, "uploadfileresponse"], [277, "uploadfileresponse"]], "graphscope.flex.rest.UtilsApi": [[118, "graphscope-flex-rest-utilsapi"]], "upload_file": [[118, "upload-file"]], "VertexMapping": [[119, "vertexmapping"], [200, "vertexmapping"], [283, "vertexmapping"]], "FLEX Coordinator Python SDK": [[120, "flex-coordinator-python-sdk"]], "Connect to Coordinator Service(Interactive) via gsctl": [[121, "connect-to-coordinator-service-interactive-via-gsctl"]], "Check Service Status": [[121, "check-service-status"], [295, "check-service-status"]], "Close the connection": [[121, "close-the-connection"], [295, "close-the-connection"]], "Destroy the Interactive Instance": [[121, "destroy-the-interactive-instance"], [295, "destroy-the-interactive-instance"]], "Coordinator RESTFul API": [[122, "coordinator-restful-api"]], "Configurable Items for Deploying Interactive with gsctl": [[123, "configurable-items-for-deploying-interactive-with-gsctl"]], "Ports": [[123, "ports"]], "Service Configuration": [[123, "service-configuration"]], "Customizing Your Service Configuration": [[123, "customizing-your-service-configuration"]], "Sample Configuration": [[123, "sample-configuration"]], "Available Configurations": [[123, "available-configurations"]], "TODOs": [[123, "todos"]], "Using Custom Graph": [[124, "using-custom-graph"]], "Step 1: Create a New Graph": [[124, "step-1-create-a-new-graph"]], "Step 2: Import Graph Data": [[124, "step-2-import-graph-data"]], "Bind Data Source": [[124, "bind-data-source"]], "Create Data Loading Job": [[124, "create-data-loading-job"]], "Step 3: Start the Service with the New Graph": [[124, "step-3-start-the-service-with-the-new-graph"]], "Step 4: A More Complicated Movies Graph(optional)": [[124, "step-4-a-more-complicated-movies-graph-optional"]], "movie_graph.yaml": [[124, "movie-graph-yaml"]], "import.yaml": [[124, "import-yaml"]], "job_config.yaml": [[124, "job-config-yaml"]], "Try other graphs": [[124, "try-other-graphs"]], "Data Import Configuration": [[125, "data-import-configuration"]], "Supported data source": [[125, "supported-data-source"]], "Column mapping": [[125, "column-mapping"]], "Import from CSV": [[125, "import-from-csv"]], "Import from ODPS Table": [[125, "import-from-odps-table"]], "Sample Configuration for loading \u201cModern\u201d Graph from csv files": [[125, "sample-configuration-for-loading-modern-graph-from-csv-files"]], "Sample configuration for loading \u201cModern Graph\u201d from odps tables": [[125, "sample-configuration-for-loading-modern-graph-from-odps-tables"]], "Configuration Breakdown": [[125, "configuration-breakdown"]], "Loading Configurations": [[125, "loading-configurations"]], "Vertex Mappings": [[125, "vertex-mappings"]], "Edge Mappings": [[125, "edge-mappings"]], "Data Model": [[126, "data-model"]], "Graph Data": [[126, "graph-data"]], "Entity Data": [[126, "entity-data"]], "Primitive Types": [[126, "primitive-types"]], "String Types": [[126, "string-types"]], "Temporal types": [[126, "temporal-types"]], "Array Types": [[126, "array-types"]], "Deployment": [[127, "deployment"], [313, "deployment"]], "Deploy with Docker": [[127, "deploy-with-docker"]], "Customizing Ports": [[127, "customizing-ports"]], "Deploy with Helm": [[127, "deploy-with-helm"]], "Deploy from Source Code": [[127, "deploy-from-source-code"]], "Packing Interactive from Source": [[127, "packing-interactive-from-source"]], "Deploying Customized Built Interactive": [[127, "deploying-customized-built-interactive"]], "Pushing to Your Own Registry": [[127, "pushing-to-your-own-registry"]], "Connecting and Using": [[127, "connecting-and-using"]], "Install Deps on Local": [[129, "install-deps-on-local"]], "Develop on Docker Container": [[129, "develop-on-docker-container"]], "Interactive Query Engine": [[129, "interactive-query-engine"]], "Dependency Graph": [[129, "dependency-graph"]], "Compiler": [[129, "compiler"]], "Build Interactive": [[129, "build-interactive"]], "CMake options": [[129, "cmake-options"]], "Starting Service Manually": [[129, "starting-service-manually"]], "Enable AdminService": [[129, "enable-adminservice"]], "Start Compiler Service": [[129, "start-compiler-service"]], "Error Code": [[129, "error-code"]], "APIResponseWithCode": [[130, "apiresponsewithcode"], [213, "apiresponsewithcode"]], "Enum: RelationEnum": [[132, "enum-relationenum"]], "Enum: EdgeStorageStrategyEnum": [[133, "enum-edgestoragestrategyenum"]], "CreateProcedureRequest": [[142, "createprocedurerequest"], [225, "createprocedurerequest"]], "Enum: TypeEnum": [[142, "enum-typeenum"], [163, "enum-typeenum"], [186, "enum-typeenum"]], "CreateProcedureResponse": [[143, "createprocedureresponse"], [226, "createprocedureresponse"]], "EdgeAPI": [[147, "edgeapi"]], "addEdge": [[147, "addedge"]], "getEdge": [[147, "getedge"]], "updateEdge": [[147, "updateedge"]], "EdgeData": [[148, "edgedata"], [231, "edgedata"]], "EdgeMappingDestinationVertexMappingsInner": [[150, "edgemappingdestinationvertexmappingsinner"], [233, "edgemappingdestinationvertexmappingsinner"]], "EdgeMappingSourceVertexMappingsInner": [[151, "edgemappingsourcevertexmappingsinner"], [234, "edgemappingsourcevertexmappingsinner"]], "EdgeMappingSourceVertexMappingsInnerColumn": [[152, "edgemappingsourcevertexmappingsinnercolumn"], [235, "edgemappingsourcevertexmappingsinnercolumn"]], "EdgeRequest": [[154, "edgerequest"], [237, "edgerequest"]], "EdgeStatistics": [[155, "edgestatistics"], [238, "edgestatistics"]], "FixedChar": [[156, "fixedchar"], [239, "fixedchar"]], "FixedCharChar": [[157, "fixedcharchar"], [240, "fixedcharchar"]], "Enum: PrimitiveTypeEnum": [[158, "enum-primitivetypeenum"], [172, "enum-primitivetypeenum"]], "Enum: StoreTypeEnum": [[160, "enum-storetypeenum"]], "GetGraphStatisticsResponse": [[162, "getgraphstatisticsresponse"], [245, "getgraphstatisticsresponse"]], "GetProcedureResponse": [[163, "getprocedureresponse"], [246, "getprocedureresponse"]], "GraphManagementApi": [[166, "graphmanagementapi"]], "ListGraphs": [[166, "listgraphs"], [249, "listgraphs"]], "CreateGraph": [[166, "creategraph"], [249, "creategraph"]], "BulkLoading": [[166, "bulkloading"], [249, "bulkloading"]], "DeleteGraph": [[166, "deletegraph"], [249, "deletegraph"]], "GetGraphMeta": [[166, "getgraphmeta"], [249, "getgraphmeta"]], "GetGraphStatistic": [[166, "getgraphstatistic"]], "GetGraphSchema": [[166, "getgraphschema"], [249, "getgraphschema"]], "JobManagementApi": [[167, "jobmanagementapi"]], "CancelJob": [[167, "canceljob"], [250, "canceljob"]], "GetJobById": [[167, "getjobbyid"], [250, "getjobbyid"]], "ListJobs": [[167, "listjobs"], [250, "listjobs"]], "JobResponse": [[168, "jobresponse"], [251, "jobresponse"]], "Enum: StatusEnum": [[169, "enum-statusenum"]], "ProcedureManagementApi": [[173, "proceduremanagementapi"]], "CreateProcedure": [[173, "createprocedure"], [257, "createprocedure"]], "DeleteProcedure": [[173, "deleteprocedure"], [257, "deleteprocedure"]], "GetProcedure": [[173, "getprocedure"], [257, "getprocedure"]], "ListProcedures": [[173, "listprocedures"], [257, "listprocedures"]], "UpdateProcedure": [[173, "updateprocedure"], [257, "updateprocedure"]], "Property": [[174, "property"], [568, "property"]], "QueryRequest": [[175, "queryrequest"], [258, "queryrequest"]], "QueryServiceApi": [[176, "queryserviceapi"]], "CallProcedure": [[176, "callprocedure"], [259, "callprocedure"]], "CallProcedureOnCurrentGraph": [[176, "callprocedureoncurrentgraph"], [259, "callprocedureoncurrentgraph"]], "SchemaMappingLoadingConfig": [[178, "schemamappingloadingconfig"], [261, "schemamappingloadingconfig"]], "Enum: ImportOptionEnum": [[178, "enum-importoptionenum"]], "SchemaMappingLoadingConfigDataSource": [[179, "schemamappingloadingconfigdatasource"], [262, "schemamappingloadingconfigdatasource"]], "Enum: SchemeEnum": [[179, "enum-schemeenum"]], "SchemaMappingLoadingConfigFormat": [[180, "schemamappingloadingconfigformat"], [263, "schemamappingloadingconfigformat"]], "SchemaMappingLoadingConfigXCsrParams": [[181, "schemamappingloadingconfigxcsrparams"], [264, "schemamappingloadingconfigxcsrparams"]], "ServiceManagementApi": [[182, "servicemanagementapi"]], "GetServiceStatus": [[182, "getservicestatus"], [265, "getservicestatus"]], "RestartService": [[182, "restartservice"], [265, "restartservice"]], "StartService": [[182, "startservice"], [265, "startservice"]], "StopService": [[182, "stopservice"], [265, "stopservice"]], "StopServiceRequest": [[185, "stopservicerequest"], [268, "stopservicerequest"]], "TypedValue": [[192, "typedvalue"], [275, "typedvalue"]], "UpdateProcedureRequest": [[193, "updateprocedurerequest"], [276, "updateprocedurerequest"]], "VarChar": [[195, "varchar"], [278, "varchar"]], "VarCharVarChar": [[196, "varcharvarchar"], [279, "varcharvarchar"]], "VertexApi": [[197, "vertexapi"], [280, "vertexapi"]], "addVertex": [[197, "addvertex"]], "getVertex": [[197, "getvertex"]], "updateVertex": [[197, "updatevertex"]], "VertexData": [[198, "vertexdata"], [281, "vertexdata"]], "VertexEdgeRequest": [[199, "vertexedgerequest"], [282, "vertexedgerequest"]], "VertexRequest": [[201, "vertexrequest"], [284, "vertexrequest"]], "VertexStatistics": [[202, "vertexstatistics"], [285, "vertexstatistics"]], "VertexTypePairStatistics": [[203, "vertextypepairstatistics"], [286, "vertextypepairstatistics"]], "Java SDK Reference": [[204, "java-sdk-reference"]], "Requirements": [[204, "requirements"]], "Maven users": [[204, "maven-users"]], "Others": [[204, "others"]], "Connect and submit a query": [[204, "connect-and-submit-a-query"], [289, "connect-and-submit-a-query"]], "Create a new graph": [[204, "create-a-new-graph"], [289, "create-a-new-graph"]], "Import data to the graph": [[204, "import-data-to-the-graph"], [289, "import-data-to-the-graph"]], "Create a stored procedure": [[204, "create-a-stored-procedure"], [289, "create-a-stored-procedure"]], "Start the query service on the new graph": [[204, "start-the-query-service-on-the-new-graph"], [289, "start-the-query-service-on-the-new-graph"]], "Submit queries to the new graph": [[204, "submit-queries-to-the-new-graph"], [289, "submit-queries-to-the-new-graph"]], "Submit cypher queries": [[204, "submit-cypher-queries"], [289, "submit-cypher-queries"]], "Query the stored procedure": [[204, "query-the-stored-procedure"]], "Delete the graph": [[204, "delete-the-graph"], [289, "delete-the-graph"]], "Documentation for Service APIs": [[204, "documentation-for-service-apis"], [289, "documentation-for-service-apis"]], "Documentation for Utilities APIs": [[204, "documentation-for-utilities-apis"], [289, "documentation-for-utilities-apis"]], "Documentation for Data Structures": [[204, "documentation-for-data-structures"], [289, "documentation-for-data-structures"]], "Documentation for Authorization": [[204, "documentation-for-authorization"]], "EdgeApi": [[230, "edgeapi"]], "add_edge": [[230, "add-edge"]], "get_edge": [[230, "get-edge"]], "update_edge": [[230, "update-edge"]], "GraphManagementApI": [[249, "graphmanagementapi"]], "GetGraphStatistics": [[249, "getgraphstatistics"]], "gs_interactive.AdminServiceJobManagementApi": [[250, "gs-interactive-adminservicejobmanagementapi"]], "ModelProperty": [[254, "modelproperty"]], "gs_interactive.AdminServiceProcedureManagementApi": [[257, "gs-interactive-adminserviceproceduremanagementapi"]], "gs_interactive.QueryServiceApi": [[259, "gs-interactive-queryserviceapi"]], "gs_interactive.AdminServiceServiceManagementApi": [[265, "gs-interactive-adminserviceservicemanagementapi"]], "add_vertex": [[280, "add-vertex"]], "get_vertex": [[280, "get-vertex"]], "update_vertex": [[280, "update-vertex"]], "Driver": [[287, "driver"]], "Driver Class": [[287, "module-gs_interactive.client.driver"]], "Encoder and Deocder": [[288, "encoder-and-deocder"]], "Encoder Class": [[288, "module-gs_interactive.client.utils"]], "Decoder Class": [[288, "module-0"]], "Python SDK Reference": [[289, "python-sdk-reference"]], "Result": [[290, "result"]], "Result Class": [[290, "module-gs_interactive.client.result"]], "Session": [[291, "session"], [563, "session"]], "Session Interface": [[291, "session-interface"]], "DefaultSession Class": [[291, "defaultsession-class"]], "Status": [[292, "status"]], "Status Class": [[292, "module-gs_interactive.client.status"]], "Interactive RESTFul API": [[293, "interactive-restful-api"]], "Create c++ Stored Procedures on GraphScope Interactive": [[294, "create-c-stored-procedures-on-graphscope-interactive"]], "Getting Started.": [[294, "getting-started"]], "Define a C++ Stored Procedure": [[294, "define-a-c-stored-procedure"]], "Register and Call the stored procedure": [[294, "register-and-call-the-stored-procedure"]], "gsctl": [[294, "gsctl"]], "Define the YAML": [[294, "define-the-yaml"]], "Python SDK": [[294, "python-sdk"]], "Java SDK": [[294, "java-sdk"]], "Create a Stored Procedure": [[294, "create-a-stored-procedure"], [299, "create-a-stored-procedure"]], "Graph Database Engine": [[294, "graph-database-engine"]], "Query Input and Output": [[294, "query-input-and-output"]], "Encoder/Decoder": [[294, "encoder-decoder"]], "Programming Interface": [[294, "programming-interface"], [414, "programming-interface"]], "Install Interactive": [[295, "install-interactive"]], "Connect to Interactive Service": [[295, "connect-to-interactive-service"]], "Submit Cypher Queries": [[295, "submit-cypher-queries"]], "Download cypher-shell": [[295, "download-cypher-shell"]], "Connect to the Service": [[295, "connect-to-the-service"]], "Run a Simple Query": [[295, "run-a-simple-query"]], "Glossary": [[296, "glossary"], [338, "glossary"]], "Stored Procedure.": [[296, "stored-procedure"]], "Cypher.": [[296, "cypher"]], "Compile.": [[296, "compile"]], "Install and Deploy Interactive": [[297, "install-and-deploy-interactive"]], "Service Accessibility": [[297, "service-accessibility"]], "A Solid Foundation": [[298, "a-solid-foundation"]], "Key Features": [[298, "key-features"], [325, "key-features"]], "Property Graph Model and Graph Queries": [[298, "property-graph-model-and-graph-queries"]], "The Cypher Query Language": [[298, "the-cypher-query-language"]], "Limitations": [[298, "limitations"], [320, "limitations"]], "Stored Procedures": [[299, "stored-procedures"]], "Define a Stored Procedure": [[299, "define-a-stored-procedure"]], "Delete a Stored Procedures": [[299, "delete-a-stored-procedures"]], "Viewing Stored Procedures": [[299, "viewing-stored-procedures"]], "Querying Stored Procedures": [[299, "querying-stored-procedures"]], "Call the Stored Procedure via Interactive SDK": [[299, "call-the-stored-procedure-via-interactive-sdk"]], "Call the Stored Procedure via Neo4j-native Tools": [[299, "call-the-stored-procedure-via-neo4j-native-tools"]], "GraphScope Interactive": [[300, "graphscope-interactive"]], "Introduction to ArrowFragment": [[301, "introduction-to-arrowfragment"]], "0. \u672f\u8bed": [[301, "id1"]], "1. \u8f7d\u56fe": [[301, "id2"]], "1.1 \u521d\u59cb\u5316partitioner": [[301, "partitioner"]], "1.2 \u6784\u5efa\u539f\u59cbarrow table": [[301, "arrow-table"]], "1.3. Shuffle vtable": [[301, "shuffle-vtable"]], "1.4. \u6784\u5efaVertex map(BasicArrowVertexMapBuilder)": [[301, "vertex-map-basicarrowvertexmapbuilder"]], "1.5. \u6784\u5efaFragment\u51c6\u5907": [[301, "fragment"]], "1.5.1. \u5904\u7406edge table(BasicEVFragmentLoader)": [[301, "edge-table-basicevfragmentloader"]], "1.5.2 FragmentBuilder\u6570\u636e\u521d\u59cb\u5316 (BasicArrowFragmentBuilder)": [[301, "fragmentbuilder-basicarrowfragmentbuilder"]], "1.6 Fragment\u6784\u5efa": [[301, "id3"]], "2. \u8bbf\u95eeFragment": [[301, "id4"]], "2.1 \u8bbf\u95ee\u9876\u70b9": [[301, "id5"]], "2.1.1 \u8bbf\u95ee\u5185\u90e8\u70b9": [[301, "id6"]], "2.1.2 \u8303\u56f4\u5916\u90e8\u70b9": [[301, "id7"]], "2.1.3 \u8bbf\u95ee\u5168\u90e8\u70b9": [[301, "id8"]], "2.1.4 \u8bbf\u95ee\u9876\u70b9\u6570\u636e": [[301, "id9"]], "2.2 \u8bbf\u95ee\u8fb9": [[301, "id10"]], "2.2.1 \u8bbf\u95ee\u51fa\u8fb9": [[301, "id11"]], "2.2.2 \u8bbf\u95ee\u5165\u8fb9": [[301, "id12"]], "2.2.3 \u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": [[301, "id13"]], "Frequently Asked Questions": [[302, "frequently-asked-questions"]], "Getting Started for GLE": [[303, "getting-started-for-gle"]], "Graph Workloads": [[304, "graph-workloads"]], "Graph Analytics": [[304, "graph-analytics"]], "Graph Interactive Query": [[304, "graph-interactive-query"]], "Graph Learning": [[304, "graph-learning"], [420, "graph-learning"]], "GraphScope for Data Scientists": [[305, "graphscope-for-data-scientists"]], "Challenges of Handling Graph Computation": [[305, "challenges-of-handling-graph-computation"]], "Solutions of GraphScope": [[305, "solutions-of-graphscope"]], "Program as Single Machine and Run as Distributed": [[305, "program-as-single-machine-and-run-as-distributed"]], "Integration with PyData Ecosystem": [[305, "integration-with-pydata-ecosystem"]], "How to Report Bugs": [[306, "how-to-report-bugs"]], "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba": [[307, "graphscope-a-one-stop-large-scale-graph-computing-system-from-alibaba"]], "Installation & Deployment": [[307, null]], "GraphScope Flex": [[307, null]], "Graph Analytical Engine": [[307, null], [344, "graph-analytical-engine"]], "Graph Interactive Engine": [[307, null], [344, "graph-interactive-engine"]], "Graph Learning Engine": [[307, null]], "Storage Engine": [[307, null]], "Troubleshooting & Utilities": [[307, null]], "Development": [[307, null]], "Reference": [[307, null], [568, "reference"]], "Indices and tables": [[307, "indices-and-tables"]], "A Generic Benchmark Tool": [[308, "a-generic-benchmark-tool"]], "Benchmark Tool Overview": [[308, "benchmark-tool-overview"]], "Benchmark Tool Usage": [[308, "benchmark-tool-usage"]], "Repository contents": [[308, "repository-contents"]], "Building the benchmark": [[308, "building-the-benchmark"]], "Running the benchmark": [[308, "running-the-benchmark"]], "Collecting the results": [[308, "collecting-the-results"]], "Configurations": [[308, "configurations"]], "Configure Compared Systems": [[308, "configure-compared-systems"]], "Configure Workloads": [[308, "configure-workloads"]], "Configure Results Collection": [[308, "configure-results-collection"]], "Standalone Deployment for GIE": [[309, "standalone-deployment-for-gie"]], "Deploy Your First GIE Service": [[309, "deploy-your-first-gie-service"]], "Remove the GIE Service": [[309, "remove-the-gie-service"]], "Using Your Own Data": [[309, "using-your-own-data"]], "Deploy on a Cluster": [[309, "deploy-on-a-cluster"]], "Other Useful Configurations": [[309, "other-useful-configurations"]], "Design of GIE": [[310, "design-of-gie"]], "The Motivations": [[310, "the-motivations"]], "The Architecture": [[310, "the-architecture"]], "Query Processing": [[310, "query-processing"]], "Build GIE with Vineyard Store on Local": [[311, "build-gie-with-vineyard-store-on-local"]], "Test GIE with Vineyard Store on Local": [[311, "test-gie-with-vineyard-store-on-local"]], "Manually Start the GIE Services": [[311, "manually-start-the-gie-services"]], "Running GraphScope Interactive Engine on Local": [[312, "running-graphscope-interactive-engine-on-local"]], "Customize Configurations for GIE instance": [[312, "customize-configurations-for-gie-instance"]], "GOpt: A Graph-Native Query Optimization Framework": [[313, "gopt-a-graph-native-query-optimization-framework"]], "Introducing GOpt": [[313, "introducing-gopt"]], "Core Features": [[313, "core-features"]], "Why GOpt": [[313, "why-gopt"]], "Quick Start": [[313, "quick-start"], [416, "quick-start"]], "Local Setup": [[313, "local-setup"]], "Docker Setup": [[313, "docker-setup"]], "Importing Data": [[313, "importing-data"]], "Starting Neo4j Service": [[313, "starting-neo4j-service"]], "Analyzing Queries": [[313, "analyzing-queries"]], "Ambiguous Pattern": [[313, "ambiguous-pattern"]], "Graph Pattern Matching": [[313, "graph-pattern-matching"]], "Hybrid Graph Relational": [[313, "hybrid-graph-relational"]], "ST Path": [[313, "st-path"]], "Tutorial": [[313, "tutorial"]], "Benchmark Tools": [[313, "benchmark-tools"]], "Steps": [[313, "steps"]], "Integration of GOpt": [[313, "integration-of-gopt"]], "Design of GOpt": [[313, "design-of-gopt"]], "Detailed Introduction": [[313, "detailed-introduction"]], "GIE for Cypher": [[314, "gie-for-cypher"]], "Connecting via Python Driver": [[314, "connecting-via-python-driver"]], "Connecting via Cypher-Shell": [[314, "connecting-via-cypher-shell"]], "Using LLM as an Assistant in GIE": [[315, "using-llm-as-an-assistant-in-gie"]], "0. Environment": [[315, "environment"]], "1. Download Datasets": [[315, "download-datasets"]], "2. Load the Graph": [[315, "load-the-graph"]], "3. Set Endpoint and API Key": [[315, "set-endpoint-and-api-key"]], "4. Generate Graph Query Sentence from Questions": [[315, "generate-graph-query-sentence-from-questions"]], "5. Execute Generated Query Sentence with GIE": [[315, "execute-generated-query-sentence-with-gie"]], "Cypher Support": [[316, "cypher-support"]], "Data Types": [[316, "data-types"], [567, "data-types"]], "Property Types": [[316, "property-types"]], "Structural types": [[316, "structural-types"]], "Constructed Types": [[316, "constructed-types"]], "Operators": [[316, "operators"]], "Clause": [[316, "clause"]], "Neo4j Ecosystem": [[317, "neo4j-ecosystem"]], "GIE For Tinkerpop Ecosystem": [[317, null], [323, null]], "FAQs for GIE Gremlin Usage": [[318, "faqs-for-gie-gremlin-usage"]], "Compatibility with TinkerPop": [[318, "compatibility-with-tinkerpop"]], "Property Graph Constraints": [[318, "property-graph-constraints"]], "What\u2019s the difference between Inner ID and Property ID ?": [[318, "whats-the-difference-between-inner-id-and-property-id"]], "How to use path expand in GIE Gremlin ?": [[318, "how-to-use-path-expand-in-gie-gremlin"]], "How to filter data in GIE Gremlin like SQL ?": [[318, "how-to-filter-data-in-gie-gremlin-like-sql"]], "How to aggregate data in GIE Gremlin like SQL?": [[318, "how-to-aggregate-data-in-gie-gremlin-like-sql"]], "group by multiple keys": [[318, "group-by-multiple-keys"]], "group by multiple values:": [[318, "group-by-multiple-values"]], "How to optimize Gremlin queries for performance in GIE?": [[318, "how-to-optimize-gremlin-queries-for-performance-in-gie"]], "Use appropriate indexing": [[318, "use-appropriate-indexing"]], "How to use subgraph in GIE Gremlin ?": [[318, "how-to-use-subgraph-in-gie-gremlin"]], "Suggestions About Parallism Settings for Queries": [[318, "suggestions-about-parallism-settings-for-queries"]], "Supported Gremlin Steps": [[320, "supported-gremlin-steps"]], "Introduction": [[320, "introduction"]], "Standard Steps": [[320, "standard-steps"]], "Source": [[320, "source"]], "V()": [[320, "v"]], "E()": [[320, "e"]], "Expand": [[320, "expand"]], "outE()": [[320, "oute"]], "inE()": [[320, "ine"]], "bothE()": [[320, "bothe"]], "out()": [[320, "out"], [320, "id7"]], "in()": [[320, "in"], [320, "id8"]], "both()": [[320, "both"], [320, "id9"]], "outV()": [[320, "outv"]], "inV()": [[320, "inv"]], "otherV()": [[320, "otherv"]], "bothV()": [[320, "bothv"]], "Filter": [[320, "filter"]], "hasId()": [[320, "hasid"], [322, "hasid"]], "hasLabel()": [[320, "haslabel"]], "has()": [[320, "has"]], "hasNot()": [[320, "hasnot"]], "is()": [[320, "is"]], "where(traversal)": [[320, "where-traversal"]], "where(predicate)": [[320, "where-predicate"]], "not(traversal)": [[320, "not-traversal"]], "dedup()": [[320, "dedup"], [322, "dedup"]], "Project": [[320, "project"]], "id()": [[320, "id"]], "label()": [[320, "label"]], "constant()": [[320, "constant"], [322, "constant"]], "valueMap()": [[320, "valuemap"], [322, "valuemap"]], "values()": [[320, "values"]], "elementMap()": [[320, "elementmap"]], "select()": [[320, "select"], [322, "select"]], "Aggregate": [[320, "aggregate"]], "count()": [[320, "count"]], "fold()": [[320, "fold"], [322, "fold"]], "sum()": [[320, "sum"]], "min()": [[320, "min"]], "max()": [[320, "max"]], "mean()": [[320, "mean"]], "group()": [[320, "group"], [322, "group"]], "groupCount()": [[320, "groupcount"], [322, "groupcount"]], "<h3 id=\"gremlin-order\">Order</h3>": [[320, "order"]], "order()": [[320, "id1"]], "Statistics": [[320, "statistics"]], "limit()": [[320, "limit"]], "coin()": [[320, "coin"]], "sample()": [[320, "sample"]], "Union": [[320, "union"]], "union()": [[320, "id2"]], "Match": [[320, "match"]], "match()": [[320, "id3"]], "Subgraph": [[320, "subgraph"]], "subgraph()": [[320, "id4"]], "Identity": [[320, "identity"]], "identity()": [[320, "id5"]], "Unfold": [[320, "unfold"]], "unfold()": [[320, "id6"], [320, "id10"]], "Syntactic Sugars": [[320, "syntactic-sugars"]], "PathExpand": [[320, "pathexpand"]], "endV()": [[320, "endv"]], "Getting Properites": [[320, "getting-properites"]], "Expression": [[320, "expression"]], "Running Examples": [[320, "running-examples"]], "Aggregate (Group)": [[320, "aggregate-group"]], "To be Supported": [[320, "to-be-supported"]], "path()": [[320, "path"]], "local()": [[320, "local"]], "Will Not be Supported": [[320, "will-not-be-supported"]], "repeat()": [[320, "repeat"]], "properties()": [[320, "properties"]], "sideEffect": [[320, "sideeffect"]], "branch": [[320, "branch"]], "GIE for Gremlin": [[321, "gie-for-gremlin"]], "Connecting via Python SDK": [[321, "connecting-via-python-sdk"]], "Connecting via Java SDK": [[321, "connecting-via-java-sdk"]], "Connecting via Gremlin-Console": [[321, "connecting-via-gremlin-console"]], "Tutorial: LDBC Gremlin": [[322, "tutorial-ldbc-gremlin"]], "Load the LDBC Graph": [[322, "load-the-ldbc-graph"]], "Basic Vertex/Edge Query": [[322, "basic-vertex-edge-query"]], "Retrieve Vertices and Edges": [[322, "retrieve-vertices-and-edges"]], "Apply Some Filters": [[322, "apply-some-filters"]], "Extract Property Values": [[322, "extract-property-values"]], "Real Applications": [[322, "real-applications"], [322, "id1"]], "Basic Traversal Query": [[322, "basic-traversal-query"]], "Expansion": [[322, "expansion"]], "out(), in() and both()": [[322, "out-in-and-both"]], "outE(), inE() and bothE()": [[322, "oute-ine-and-bothe"]], "outV(), inV(), bothV() and otherV()": [[322, "outv-inv-bothv-and-otherv"]], "Multiple Expansion Steps": [[322, "multiple-expansion-steps"]], "Expansion from many starting points": [[322, "expansion-from-many-starting-points"]], "Filter & Expansion": [[322, "filter-expansion"]], "Apply filters after expansion": [[322, "apply-filters-after-expansion"]], "Expansion as filters": [[322, "expansion-as-filters"]], "Path Expansion (Syntactic Sugar)": [[322, "path-expansion-syntactic-sugar"]], "Pattern Match": [[322, "pattern-match"]], "Relational Operations": [[322, "relational-operations"]], "Filter Steps": [[322, "filter-steps"]], "where()": [[322, "where"]], "Project Steps": [[322, "project-steps"]], "id() and label()": [[322, "id-and-label"]], "Aggregate Steps": [[322, "aggregate-steps"]], "sum(), min(), max() and  mean()": [[322, "sum-min-max-and-mean"]], "Order Step": [[322, "order-step"]], "Limit Step": [[322, "limit-step"]], "Expression(Syntax Sugar)": [[322, "expression-syntax-sugar"]], "Complex Queries": [[322, "complex-queries"]], "LDBC BI2": [[322, "ldbc-bi2"]], "LDBC BI3": [[322, "ldbc-bi3"]], "LDBC BI4(Left Part)": [[322, "ldbc-bi4-left-part"]], "LDBC BI11": [[322, "ldbc-bi11"]], "LDBC BI14": [[322, "ldbc-bi14"]], "Apache TinkerPop Ecosystem": [[323, "apache-tinkerpop-ecosystem"]], "Tutorials for Java Users": [[324, "tutorials-for-java-users"]], "Ease-of-use: Python Interface": [[325, "ease-of-use-python-interface"]], "Graph Traversal Support, in Gremlin and Cypher": [[325, "graph-traversal-support-in-gremlin-and-cypher"]], "High Performant Built-in Algorithms": [[325, "high-performant-built-in-algorithms"]], "Extensible Algorithm Library for Graph Analytics": [[325, "extensible-algorithm-library-for-graph-analytics"]], "GNN Training & Inference": [[325, "gnn-training-inference"]], "Cloud Native Design": [[325, "cloud-native-design"]], "Across-Engine Workflow Orchestration": [[325, "across-engine-workflow-orchestration"]], "Design of GLE": [[326, "design-of-gle"]], "Model Paradigms": [[326, "model-paradigms"]], "EgoGraph-based node-centric aggregation": [[326, "egograph-based-node-centric-aggregation"]], "SubGraph-based graph message passing": [[326, "subgraph-based-graph-message-passing"]], "Pipeline for Learning": [[326, "pipeline-for-learning"]], "Dev on docker container": [[327, "dev-on-docker-container"]], "Build Learning Engine": [[327, "build-learning-engine"]], "Running GraphScope Learning Engine on Local": [[328, "running-graphscope-learning-engine-on-local"]], "Graph Sampling": [[329, "graph-sampling"], [408, "graph-sampling"]], "Graph Traversal": [[329, "graph-traversal"], [340, "graph-traversal"], [409, "graph-traversal"]], "Neighborhood Sampling": [[329, "neighborhood-sampling"]], "Subgraph Sampling": [[329, "subgraph-sampling"], [341, "subgraph-sampling"]], "Negative Sampling": [[329, "negative-sampling"], [413, "negative-sampling"]], "GSL": [[329, "gsl"]], "Tutorial: Training a Node Classification Model on K8s Cluster": [[331, "tutorial-training-a-node-classification-model-on-k8s-cluster"]], "Create a session on kubernetes and load graph": [[331, "create-a-session-on-kubernetes-and-load-graph"]], "Graph neural networks (GNNs)": [[331, "graph-neural-networks-gnns"]], "Tutorial: Training a Node Classification Model on Your Local Machine": [[332, "tutorial-training-a-node-classification-model-on-your-local-machine"]], "Load Graph": [[332, "load-graph"], [334, "load-graph"]], "Define the Training Process for the EgoGraphSAGE Model": [[332, "define-the-training-process-for-the-egographsage-model"]], "Launch the Learning Engine": [[332, "launch-the-learning-engine"], [334, "launch-the-learning-engine"]], "Train the Model": [[332, "train-the-model"]], "Tutorial: Training a Node Classification Model (PyG) on a K8S Cluster": [[333, "tutorial-training-a-node-classification-model-pyg-on-a-k8s-cluster"]], "Set parameters & load graph": [[333, "set-parameters-load-graph"]], "Launch the Server Engine": [[333, "launch-the-server-engine"]], "Configure the parameters for client pods": [[333, "configure-the-parameters-for-client-pods"]], "Write training and testing script": [[333, "write-training-and-testing-script"]], "Import packages": [[333, "import-packages"]], "Define test function": [[333, "define-test-function"]], "Define the loader and training process": [[333, "define-the-loader-and-training-process"]], "main function": [[333, "main-function"]], "Run the script": [[333, "run-the-script"]], "Tutorial: Training a Node Classification Model (PyG) on Your Local Machine": [[334, "tutorial-training-a-node-classification-model-pyg-on-your-local-machine"]], "Define the evaluation function": [[334, "define-the-evaluation-function"]], "Create neighbor loaderfor training, testing and validation": [[334, "create-neighbor-loaderfor-training-testing-and-validation"]], "Define the PyG GraphSage Model and optimizer": [[334, "define-the-pyg-graphsage-model-and-optimizer"]], "Train and test": [[334, "train-and-test"]], "Loading Graphs": [[335, "loading-graphs"]], "Load Built-in Datasets": [[335, "load-built-in-datasets"]], "Loading Your Own Datasets": [[335, "loading-your-own-datasets"]], "Adding Vertices": [[335, "adding-vertices"]], "Advanced Usages": [[335, "advanced-usages"]], "Deduce vertex labels when not ambiguous": [[335, "deduce-vertex-labels-when-not-ambiguous"]], "Deduce vertex from edges": [[335, "deduce-vertex-from-edges"]], "Multiple relations": [[335, "multiple-relations"]], "Specify data types of properties manually": [[335, "specify-data-types-of-properties-manually"]], "Other parameters of graph": [[335, "other-parameters-of-graph"]], "Putting them Together": [[335, "putting-them-together"]], "Loading From Pandas or Numpy": [[335, "loading-from-pandas-or-numpy"]], "From Pandas": [[335, "from-pandas"]], "From Numpy": [[335, "from-numpy"]], "Loader Variants": [[335, "loader-variants"]], "Techniques targeting at large graph": [[335, "techniques-targeting-at-large-graph"]], "Tips for reduce memory consumption of graphs": [[335, "tips-for-reduce-memory-consumption-of-graphs"]], "Design of GraphScope": [[336, "design-of-graphscope"]], "Unified Graph Computing Platform": [[336, "unified-graph-computing-platform"]], "Application layer": [[336, "application-layer"]], "Execution engine layer": [[336, "execution-engine-layer"]], "Storage layer": [[336, "storage-layer"]], "Disaggregated Design for Diverse Graph Applications": [[336, "disaggregated-design-for-diverse-graph-applications"]], "GraphScope for BI analysis": [[336, "graphscope-for-bi-analysis"]], "GraphScope for high QPS queries": [[336, "graphscope-for-high-qps-queries"]], "GraphScope for graph analytics": [[336, "graphscope-for-graph-analytics"]], "GraphScope for learning": [[336, "graphscope-for-learning"]], "One-stop Graph Processing": [[337, "one-stop-graph-processing"]], "Graph Analytical Task Quick Start": [[337, "graph-analytical-task-quick-start"]], "Graph Interactive Query Quick Start": [[337, "graph-interactive-query-quick-start"]], "Graph Learning Quick Start": [[337, "graph-learning-quick-start"]], "FLASH": [[338, "flash"]], "GRAPE": [[338, "grape"]], "GAE": [[338, "gae"]], "GART": [[338, "gart"]], "GRIN": [[338, "grin"]], "GraphAr": [[338, "graphar"]], "Groot": [[338, "groot"]], "GUM": [[338, "gum"]], "MaxGraph (deprecated)": [[338, "maxgraph-deprecated"]], "Vineyard, or v6d": [[338, "vineyard-or-v6d"]], "GIE": [[338, "gie"]], "GAIA": [[338, "gaia"]], "Pegasus": [[338, "pegasus"]], "Ingress": [[338, "ingress"]], "PIE-model": [[338, "pie-model"]], "Graph Analytics Workloads": [[339, "graph-analytics-workloads"]], "What is Graph Analytics": [[339, "what-is-graph-analytics"]], "Challenges of Graph Analytics on Large Graphs": [[339, "challenges-of-graph-analytics-on-large-graphs"]], "What can GraphScope Do": [[339, "what-can-graphscope-do"], [341, "what-can-graphscope-do"]], "Graph Interactive Workloads": [[340, "graph-interactive-workloads"]], "Tinkerpop and Gremlin": [[340, "tinkerpop-and-gremlin"]], "Pattern Matching": [[340, "pattern-matching"], [340, "id1"]], "Neo4j and Cypher": [[340, "neo4j-and-cypher"]], "Graph Learning Workloads": [[341, "graph-learning-workloads"]], "What is Graph Neural Network": [[341, "what-is-graph-neural-network"]], "Typical GNN Models": [[341, "typical-gnn-models"]], "Paradigm of Model Training": [[341, "paradigm-of-model-training"]], "Steps of Model Training": [[341, "steps-of-model-training"]], "Challenges of Applying GNNs on Large Graphs": [[341, "challenges-of-applying-gnns-on-large-graphs"]], "Introducing GraphScope": [[342, "introducing-graphscope"]], "What is GraphScope": [[342, "what-is-graphscope"]], "Why use GraphScope": [[342, "why-use-graphscope"]], "What are the Use Cases": [[342, "what-are-the-use-cases"]], "What are the Limitations": [[342, "what-are-the-limitations"]], "What are the Next": [[342, "what-are-the-next"]], "Positioning of GraphScope": [[343, "positioning-of-graphscope"]], "Compare with Graph Processing Systems": [[343, "compare-with-graph-processing-systems"]], "Compare with Graph Databases": [[343, "compare-with-graph-databases"]], "Compare with Graph Learning Systems": [[343, "compare-with-graph-learning-systems"]], "Handling Various Types of Graph Workloads": [[343, "handling-various-types-of-graph-workloads"]], "Performance and Benchmark": [[344, "performance-and-benchmark"]], "Results": [[344, "results"]], "Performance on GPUs": [[344, "performance-on-gpus"]], "Reproducing the results": [[344, "reproducing-the-results"]], "Tutorials for Python Users": [[345, "tutorials-for-python-users"]], "Analytical Engine API Reference": [[346, "analytical-engine-api-reference"]], "Analytical Engine": [[346, "analytical-engine"]], "Fragments in GraphScope": [[346, "fragments-in-graphscope"]], "Analytical Apps": [[346, "analytical-apps"]], "Analytical Workers": [[346, "analytical-workers"]], "App\u2019s Context": [[346, "app-s-context"]], "Analytical App": [[347, "analytical-app"]], "AppAssets": [[347, "appassets"]], "JavaApp": [[347, "javaapp"]], "App object": [[347, "app-object"]], "Functions": [[347, "functions"], [349, "functions"], [422, "functions"]], "BuiltIn apps": [[347, "builtin-apps"]], "Context": [[348, "context"]], "Context object": [[348, "context-object"]], "Cython SDK API": [[349, "cython-sdk-api"]], "Pregel": [[349, "pregel"]], "PIE": [[349, "pie"]], "GraphScope types": [[349, "graphscope-types"]], "Flex API Reference": [[350, "flex-api-reference"]], "About Grape JDK": [[351, "about-grape-jdk"]], "Project Structure": [[351, "project-structure"]], "Building from source": [[351, "building-from-source"]], "Java Reference (javadoc)": [[352, "java-reference-javadoc"]], "graphscope.Vertex": [[353, "graphscope-vertex"]], "graphscope.declare": [[354, "graphscope-declare"]], "graphscope.framework.app.load_app": [[355, "graphscope-framework-app-load-app"]], "graphscope.framework.dag_utils.add_column": [[356, "graphscope-framework-dag-utils-add-column"]], "graphscope.framework.dag_utils.add_labels_to_graph": [[357, "graphscope-framework-dag-utils-add-labels-to-graph"]], "graphscope.framework.dag_utils.arrow_to_dynamic": [[358, "graphscope-framework-dag-utils-arrow-to-dynamic"]], "graphscope.framework.dag_utils.bind_app": [[359, "graphscope-framework-dag-utils-bind-app"]], "graphscope.framework.dag_utils.clear_edges": [[360, "graphscope-framework-dag-utils-clear-edges"]], "graphscope.framework.dag_utils.clear_graph": [[361, "graphscope-framework-dag-utils-clear-graph"]], "graphscope.framework.dag_utils.context_to_dataframe": [[362, "graphscope-framework-dag-utils-context-to-dataframe"]], "graphscope.framework.dag_utils.context_to_numpy": [[363, "graphscope-framework-dag-utils-context-to-numpy"]], "graphscope.framework.dag_utils.copy_graph": [[364, "graphscope-framework-dag-utils-copy-graph"]], "graphscope.framework.dag_utils.create_app": [[365, "graphscope-framework-dag-utils-create-app"]], "graphscope.framework.dag_utils.create_graph": [[366, "graphscope-framework-dag-utils-create-graph"]], "graphscope.framework.dag_utils.create_graph_view": [[367, "graphscope-framework-dag-utils-create-graph-view"]], "graphscope.framework.dag_utils.create_loader": [[368, "graphscope-framework-dag-utils-create-loader"]], "graphscope.framework.dag_utils.create_subgraph": [[369, "graphscope-framework-dag-utils-create-subgraph"]], "graphscope.framework.dag_utils.create_unload_op": [[370, "graphscope-framework-dag-utils-create-unload-op"]], "graphscope.framework.dag_utils.dynamic_to_arrow": [[371, "graphscope-framework-dag-utils-dynamic-to-arrow"]], "graphscope.framework.dag_utils.get_context_data": [[372, "graphscope-framework-dag-utils-get-context-data"]], "graphscope.framework.dag_utils.graph_to_dataframe": [[373, "graphscope-framework-dag-utils-graph-to-dataframe"]], "graphscope.framework.dag_utils.graph_to_numpy": [[374, "graphscope-framework-dag-utils-graph-to-numpy"]], "graphscope.framework.dag_utils.gremlin_to_subgraph": [[375, "graphscope-framework-dag-utils-gremlin-to-subgraph"]], "graphscope.framework.dag_utils.modify_edges": [[376, "graphscope-framework-dag-utils-modify-edges"]], "graphscope.framework.dag_utils.modify_vertices": [[377, "graphscope-framework-dag-utils-modify-vertices"]], "graphscope.framework.dag_utils.output": [[378, "graphscope-framework-dag-utils-output"]], "graphscope.framework.dag_utils.project_arrow_property_graph": [[379, "graphscope-framework-dag-utils-project-arrow-property-graph"]], "graphscope.framework.dag_utils.project_to_simple": [[380, "graphscope-framework-dag-utils-project-to-simple"]], "graphscope.framework.dag_utils.report_graph": [[381, "graphscope-framework-dag-utils-report-graph"]], "graphscope.framework.dag_utils.run_app": [[382, "graphscope-framework-dag-utils-run-app"]], "graphscope.framework.dag_utils.to_data_sink": [[383, "graphscope-framework-dag-utils-to-data-sink"]], "graphscope.framework.dag_utils.to_directed": [[384, "graphscope-framework-dag-utils-to-directed"]], "graphscope.framework.dag_utils.to_undirected": [[385, "graphscope-framework-dag-utils-to-undirected"]], "graphscope.framework.dag_utils.to_vineyard_dataframe": [[386, "graphscope-framework-dag-utils-to-vineyard-dataframe"]], "graphscope.framework.dag_utils.to_vineyard_tensor": [[387, "graphscope-framework-dag-utils-to-vineyard-tensor"]], "graphscope.framework.dag_utils.unload_app": [[388, "graphscope-framework-dag-utils-unload-app"]], "graphscope.framework.dag_utils.unload_context": [[389, "graphscope-framework-dag-utils-unload-context"]], "graphscope.framework.dag_utils.unload_graph": [[390, "graphscope-framework-dag-utils-unload-graph"]], "graphscope.framework.operation.Operation.__init__": [[391, "graphscope-framework-operation-operation-init"]], "graphscope.framework.operation.Operation.as_op_def": [[392, "graphscope-framework-operation-operation-as-op-def"]], "graphscope.framework.operation.Operation.eval": [[393, "graphscope-framework-operation-operation-eval"]], "graphscope.framework.operation.Operation.evaluated": [[394, "graphscope-framework-operation-operation-evaluated"]], "graphscope.framework.operation.Operation.key": [[395, "graphscope-framework-operation-operation-key"]], "graphscope.framework.operation.Operation.signature": [[396, "graphscope-framework-operation-operation-signature"]], "graphscope.g": [[397, "graphscope-g"]], "graphscope.get_default_session": [[398, "graphscope-get-default-session"]], "graphscope.graphlearn": [[399, "graphscope-graphlearn"]], "graphscope.gremlin": [[400, "graphscope-gremlin"]], "graphscope.has_default_session": [[401, "graphscope-has-default-session"]], "graphscope.session": [[402, "graphscope-session"]], "graphscope.set_option": [[403, "graphscope-set-option"]], "Developing Your Own Model": [[404, "developing-your-own-model"]], "How to Build a Graph Learning Algorithm": [[404, "how-to-build-a-graph-learning-algorithm"]], "Sampling": [[404, "sampling"]], "Encoder": [[404, "encoder"], [412, "encoder"]], "Loss Function and Training Process": [[404, "loss-function-and-training-process"]], "Data Source": [[405, "data-source"]], "1 Data format": [[405, "data-format"]], "1.1 Basic format": [[405, "basic-format"]], "1.2 Attribute format\uff08ATTRIBUTED\uff09": [[405, "attribute-format-attributed"]], "1.3 Weight format\uff08WEIGHTED\uff09": [[405, "weight-format-weighted"]], "1.4 Label format\uff08LABELED\uff09": [[405, "label-format-labeled"]], "1.5 Putting together": [[405, "putting-together"]], "2 Data source type": [[405, "data-source-type"]], "2.2 Alibaba Cloud MaxCompute data table": [[405, "alibaba-cloud-maxcompute-data-table"]], "3 User API": [[405, "user-api"]], "Graph Object": [[406, "graph-object"]], "2 Describe the Topology": [[406, "describe-the-topology"]], "3.1 Stand-alone Mode": [[406, "stand-alone-mode"]], "3.2 Distributed Mode \u2013 Client/Server Mode": [[406, "distributed-mode-client-server-mode"]], "Graph Query": [[407, "graph-query"]], "1 Introduction": [[408, "introduction"]], "Graph Sampling Language\uff08GSL)": [[410, "graph-sampling-language-gsl"]], "Install from pip": [[411, "install-from-pip"]], "Get wheel package": [[411, "get-wheel-package"]], "Install using pip": [[411, "install-using-pip"]], "Install TensorFlow": [[411, "install-tensorflow"]], "Install git": [[411, "install-git"]], "Install dependent libraries": [[411, "install-dependent-libraries"]], "Compile": [[411, "compile"], [414, "compile"]], "Install": [[411, "install"]], "Run test": [[411, "run-test"]], "Docker image": [[411, "docker-image"]], "Graph Learning Model": [[412, "graph-learning-model"]], "Data model": [[412, "data-model"]], "Defining Your Own Operator": [[414, "defining-your-own-operator"]], "Distributed Runtime Design": [[414, "distributed-runtime-design"]], "Implement a New Operator": [[414, "implement-a-new-operator"]], "Clone source code": [[414, "clone-source-code"]], "Implement your operator class": [[414, "implement-your-operator-class"]], "Register Operator": [[414, "register-operator"]], "How to Use an Operator": [[414, "how-to-use-an-operator"]], "Integrating Other Data Sources": [[415, "integrating-other-data-sources"]], "File System Interface": [[415, "file-system-interface"]], "ByteStreamAccessFile": [[415, "bytestreamaccessfile"]], "StructuredAccessFile": [[415, "structuredaccessfile"]], "WritableFile": [[415, "writablefile"]], "Register with Scheme": [[415, "register-with-scheme"]], "1 Trying out the built-in models": [[416, "trying-out-the-built-in-models"]], "2 How to use the GL APIs": [[416, "how-to-use-the-gl-apis"]], "3 Developing a GNN model": [[416, "developing-a-gnn-model"]], "3.1 Data Preparation": [[416, "data-preparation"]], "3.2 Graph Construction": [[416, "graph-construction"]], "3.3 Graph Sampling": [[416, "graph-sampling"]], "3.4 GNN Model": [[416, "gnn-model"]], "System configuration": [[417, "system-configuration"]], "Graph": [[418, "graph"], [422, "graph"], [556, "graph"]], "Graph object": [[418, "graph-object"]], "Loader object": [[418, "loader-object"]], "Graph Functions": [[418, "graph-functions"]], "Interactive Query": [[419, "interactive-query"]], "Builtin algorithms": [[421, "builtin-algorithms"]], "Nodes": [[422, "nodes"]], "Edges": [[422, "edges"]], "Self loops": [[422, "self-loops"]], "Attributes": [[422, "attributes"]], "Freezing graph structure": [[422, "freezing-graph-structure"]], "graphscope.nx.classes.function.add_cycle": [[423, "graphscope-nx-classes-function-add-cycle"]], "graphscope.nx.classes.function.add_path": [[424, "graphscope-nx-classes-function-add-path"]], "graphscope.nx.classes.function.add_star": [[425, "graphscope-nx-classes-function-add-star"]], "graphscope.nx.classes.function.all_neighbors": [[426, "graphscope-nx-classes-function-all-neighbors"]], "graphscope.nx.classes.function.common_neighbors": [[427, "graphscope-nx-classes-function-common-neighbors"]], "graphscope.nx.classes.function.create_empty_copy": [[428, "graphscope-nx-classes-function-create-empty-copy"]], "graphscope.nx.classes.function.degree": [[429, "graphscope-nx-classes-function-degree"]], "graphscope.nx.classes.function.degree_histogram": [[430, "graphscope-nx-classes-function-degree-histogram"]], "graphscope.nx.classes.function.density": [[431, "graphscope-nx-classes-function-density"]], "graphscope.nx.classes.function.edge_subgraph": [[432, "graphscope-nx-classes-function-edge-subgraph"]], "graphscope.nx.classes.function.edges": [[433, "graphscope-nx-classes-function-edges"]], "graphscope.nx.classes.function.freeze": [[434, "graphscope-nx-classes-function-freeze"]], "graphscope.nx.classes.function.induced_subgraph": [[435, "graphscope-nx-classes-function-induced-subgraph"]], "graphscope.nx.classes.function.info": [[436, "graphscope-nx-classes-function-info"]], "graphscope.nx.classes.function.is_directed": [[437, "graphscope-nx-classes-function-is-directed"]], "graphscope.nx.classes.function.is_empty": [[438, "graphscope-nx-classes-function-is-empty"]], "graphscope.nx.classes.function.is_frozen": [[439, "graphscope-nx-classes-function-is-frozen"]], "graphscope.nx.classes.function.is_negatively_weighted": [[440, "graphscope-nx-classes-function-is-negatively-weighted"]], "graphscope.nx.classes.function.is_weighted": [[441, "graphscope-nx-classes-function-is-weighted"]], "graphscope.nx.classes.function.neighbors": [[442, "graphscope-nx-classes-function-neighbors"]], "graphscope.nx.classes.function.nodes": [[443, "graphscope-nx-classes-function-nodes"]], "graphscope.nx.classes.function.nodes_with_selfloops": [[444, "graphscope-nx-classes-function-nodes-with-selfloops"]], "graphscope.nx.classes.function.non_edges": [[445, "graphscope-nx-classes-function-non-edges"]], "graphscope.nx.classes.function.non_neighbors": [[446, "graphscope-nx-classes-function-non-neighbors"]], "graphscope.nx.classes.function.number_of_edges": [[447, "graphscope-nx-classes-function-number-of-edges"]], "graphscope.nx.classes.function.number_of_nodes": [[448, "graphscope-nx-classes-function-number-of-nodes"]], "graphscope.nx.classes.function.number_of_selfloops": [[449, "graphscope-nx-classes-function-number-of-selfloops"]], "graphscope.nx.classes.function.selfloop_edges": [[450, "graphscope-nx-classes-function-selfloop-edges"]], "graphscope.nx.classes.function.subgraph": [[451, "graphscope-nx-classes-function-subgraph"]], "graphscope.nx.classes.function.to_directed": [[452, "graphscope-nx-classes-function-to-directed"]], "graphscope.nx.classes.function.to_undirected": [[453, "graphscope-nx-classes-function-to-undirected"]], "graphscope.nx.generators.atlas.graph_atlas": [[454, "graphscope-nx-generators-atlas-graph-atlas"]], "graphscope.nx.generators.atlas.graph_atlas_g": [[455, "graphscope-nx-generators-atlas-graph-atlas-g"]], "graphscope.nx.generators.classic.balanced_tree": [[456, "graphscope-nx-generators-classic-balanced-tree"]], "graphscope.nx.generators.classic.barbell_graph": [[457, "graphscope-nx-generators-classic-barbell-graph"]], "graphscope.nx.generators.classic.binomial_tree": [[458, "graphscope-nx-generators-classic-binomial-tree"]], "graphscope.nx.generators.classic.circulant_graph": [[459, "graphscope-nx-generators-classic-circulant-graph"]], "graphscope.nx.generators.classic.circular_ladder_graph": [[460, "graphscope-nx-generators-classic-circular-ladder-graph"]], "graphscope.nx.generators.classic.complete_graph": [[461, "graphscope-nx-generators-classic-complete-graph"]], "graphscope.nx.generators.classic.complete_multipartite_graph": [[462, "graphscope-nx-generators-classic-complete-multipartite-graph"]], "graphscope.nx.generators.classic.cycle_graph": [[463, "graphscope-nx-generators-classic-cycle-graph"]], "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph": [[464, "graphscope-nx-generators-classic-dorogovtsev-goltsev-mendes-graph"]], "graphscope.nx.generators.classic.empty_graph": [[465, "graphscope-nx-generators-classic-empty-graph"]], "graphscope.nx.generators.classic.full_rary_tree": [[466, "graphscope-nx-generators-classic-full-rary-tree"]], "graphscope.nx.generators.classic.ladder_graph": [[467, "graphscope-nx-generators-classic-ladder-graph"]], "graphscope.nx.generators.classic.lollipop_graph": [[468, "graphscope-nx-generators-classic-lollipop-graph"]], "graphscope.nx.generators.classic.null_graph": [[469, "graphscope-nx-generators-classic-null-graph"]], "graphscope.nx.generators.classic.path_graph": [[470, "graphscope-nx-generators-classic-path-graph"]], "graphscope.nx.generators.classic.star_graph": [[471, "graphscope-nx-generators-classic-star-graph"]], "graphscope.nx.generators.classic.trivial_graph": [[472, "graphscope-nx-generators-classic-trivial-graph"]], "graphscope.nx.generators.classic.turan_graph": [[473, "graphscope-nx-generators-classic-turan-graph"]], "graphscope.nx.generators.classic.wheel_graph": [[474, "graphscope-nx-generators-classic-wheel-graph"]], "graphscope.nx.generators.community.LFR_benchmark_graph": [[475, "graphscope-nx-generators-community-lfr-benchmark-graph"]], "graphscope.nx.generators.community.caveman_graph": [[476, "graphscope-nx-generators-community-caveman-graph"]], "graphscope.nx.generators.community.connected_caveman_graph": [[477, "graphscope-nx-generators-community-connected-caveman-graph"]], "graphscope.nx.generators.community.gaussian_random_partition_graph": [[478, "graphscope-nx-generators-community-gaussian-random-partition-graph"]], "graphscope.nx.generators.community.planted_partition_graph": [[479, "graphscope-nx-generators-community-planted-partition-graph"]], "graphscope.nx.generators.community.random_partition_graph": [[480, "graphscope-nx-generators-community-random-partition-graph"]], "graphscope.nx.generators.community.relaxed_caveman_graph": [[481, "graphscope-nx-generators-community-relaxed-caveman-graph"]], "graphscope.nx.generators.community.ring_of_cliques": [[482, "graphscope-nx-generators-community-ring-of-cliques"]], "graphscope.nx.generators.community.stochastic_block_model": [[483, "graphscope-nx-generators-community-stochastic-block-model"]], "graphscope.nx.generators.community.windmill_graph": [[484, "graphscope-nx-generators-community-windmill-graph"]], "graphscope.nx.generators.degree_seq.configuration_model": [[485, "graphscope-nx-generators-degree-seq-configuration-model"]], "graphscope.nx.generators.degree_seq.degree_sequence_tree": [[486, "graphscope-nx-generators-degree-seq-degree-sequence-tree"]], "graphscope.nx.generators.degree_seq.directed_configuration_model": [[487, "graphscope-nx-generators-degree-seq-directed-configuration-model"]], "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph": [[488, "graphscope-nx-generators-degree-seq-directed-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.expected_degree_graph": [[489, "graphscope-nx-generators-degree-seq-expected-degree-graph"]], "graphscope.nx.generators.degree_seq.havel_hakimi_graph": [[490, "graphscope-nx-generators-degree-seq-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.random_degree_sequence_graph": [[491, "graphscope-nx-generators-degree-seq-random-degree-sequence-graph"]], "graphscope.nx.generators.directed.gn_graph": [[492, "graphscope-nx-generators-directed-gn-graph"]], "graphscope.nx.generators.directed.gnc_graph": [[493, "graphscope-nx-generators-directed-gnc-graph"]], "graphscope.nx.generators.directed.gnr_graph": [[494, "graphscope-nx-generators-directed-gnr-graph"]], "graphscope.nx.generators.directed.random_k_out_graph": [[495, "graphscope-nx-generators-directed-random-k-out-graph"]], "graphscope.nx.generators.directed.scale_free_graph": [[496, "graphscope-nx-generators-directed-scale-free-graph"]], "graphscope.nx.generators.duplication.duplication_divergence_graph": [[497, "graphscope-nx-generators-duplication-duplication-divergence-graph"]], "graphscope.nx.generators.duplication.partial_duplication_graph": [[498, "graphscope-nx-generators-duplication-partial-duplication-graph"]], "graphscope.nx.generators.ego.ego_graph": [[499, "graphscope-nx-generators-ego-ego-graph"]], "graphscope.nx.generators.expanders.chordal_cycle_graph": [[500, "graphscope-nx-generators-expanders-chordal-cycle-graph"]], "graphscope.nx.generators.expanders.margulis_gabber_galil_graph": [[501, "graphscope-nx-generators-expanders-margulis-gabber-galil-graph"]], "graphscope.nx.generators.expanders.paley_graph": [[502, "graphscope-nx-generators-expanders-paley-graph"]], "graphscope.nx.generators.geometric.geographical_threshold_graph": [[503, "graphscope-nx-generators-geometric-geographical-threshold-graph"]], "graphscope.nx.generators.geometric.random_geometric_graph": [[504, "graphscope-nx-generators-geometric-random-geometric-graph"]], "graphscope.nx.generators.geometric.soft_random_geometric_graph": [[505, "graphscope-nx-generators-geometric-soft-random-geometric-graph"]], "graphscope.nx.generators.geometric.thresholded_random_geometric_graph": [[506, "graphscope-nx-generators-geometric-thresholded-random-geometric-graph"]], "graphscope.nx.generators.geometric.waxman_graph": [[507, "graphscope-nx-generators-geometric-waxman-graph"]], "graphscope.nx.generators.harary_graph.hkn_harary_graph": [[508, "graphscope-nx-generators-harary-graph-hkn-harary-graph"]], "graphscope.nx.generators.harary_graph.hnm_harary_graph": [[509, "graphscope-nx-generators-harary-graph-hnm-harary-graph"]], "graphscope.nx.generators.intersection.general_random_intersection_graph": [[510, "graphscope-nx-generators-intersection-general-random-intersection-graph"]], "graphscope.nx.generators.intersection.k_random_intersection_graph": [[511, "graphscope-nx-generators-intersection-k-random-intersection-graph"]], "graphscope.nx.generators.intersection.uniform_random_intersection_graph": [[512, "graphscope-nx-generators-intersection-uniform-random-intersection-graph"]], "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph": [[513, "graphscope-nx-generators-joint-degree-seq-directed-joint-degree-graph"]], "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree": [[514, "graphscope-nx-generators-joint-degree-seq-is-valid-directed-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree": [[515, "graphscope-nx-generators-joint-degree-seq-is-valid-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.joint_degree_graph": [[516, "graphscope-nx-generators-joint-degree-seq-joint-degree-graph"]], "graphscope.nx.generators.mycielski.mycielski_graph": [[517, "graphscope-nx-generators-mycielski-mycielski-graph"]], "graphscope.nx.generators.mycielski.mycielskian": [[518, "graphscope-nx-generators-mycielski-mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees": [[519, "graphscope-nx-generators-nonisomorphic-trees-nonisomorphic-trees"]], "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": [[520, "graphscope-nx-generators-nonisomorphic-trees-number-of-nonisomorphic-trees"]], "graphscope.nx.generators.small.LCF_graph": [[521, "graphscope-nx-generators-small-lcf-graph"]], "graphscope.nx.generators.small.bull_graph": [[522, "graphscope-nx-generators-small-bull-graph"]], "graphscope.nx.generators.small.chvatal_graph": [[523, "graphscope-nx-generators-small-chvatal-graph"]], "graphscope.nx.generators.small.cubical_graph": [[524, "graphscope-nx-generators-small-cubical-graph"]], "graphscope.nx.generators.small.desargues_graph": [[525, "graphscope-nx-generators-small-desargues-graph"]], "graphscope.nx.generators.small.diamond_graph": [[526, "graphscope-nx-generators-small-diamond-graph"]], "graphscope.nx.generators.small.dodecahedral_graph": [[527, "graphscope-nx-generators-small-dodecahedral-graph"]], "graphscope.nx.generators.small.frucht_graph": [[528, "graphscope-nx-generators-small-frucht-graph"]], "graphscope.nx.generators.small.heawood_graph": [[529, "graphscope-nx-generators-small-heawood-graph"]], "graphscope.nx.generators.small.house_graph": [[530, "graphscope-nx-generators-small-house-graph"]], "graphscope.nx.generators.small.house_x_graph": [[531, "graphscope-nx-generators-small-house-x-graph"]], "graphscope.nx.generators.small.icosahedral_graph": [[532, "graphscope-nx-generators-small-icosahedral-graph"]], "graphscope.nx.generators.small.krackhardt_kite_graph": [[533, "graphscope-nx-generators-small-krackhardt-kite-graph"]], "graphscope.nx.generators.small.make_small_graph": [[534, "graphscope-nx-generators-small-make-small-graph"]], "graphscope.nx.generators.small.moebius_kantor_graph": [[535, "graphscope-nx-generators-small-moebius-kantor-graph"]], "graphscope.nx.generators.small.octahedral_graph": [[536, "graphscope-nx-generators-small-octahedral-graph"]], "graphscope.nx.generators.small.pappus_graph": [[537, "graphscope-nx-generators-small-pappus-graph"]], "graphscope.nx.generators.small.petersen_graph": [[538, "graphscope-nx-generators-small-petersen-graph"]], "graphscope.nx.generators.small.sedgewick_maze_graph": [[539, "graphscope-nx-generators-small-sedgewick-maze-graph"]], "graphscope.nx.generators.small.tetrahedral_graph": [[540, "graphscope-nx-generators-small-tetrahedral-graph"]], "graphscope.nx.generators.small.truncated_cube_graph": [[541, "graphscope-nx-generators-small-truncated-cube-graph"]], "graphscope.nx.generators.small.truncated_tetrahedron_graph": [[542, "graphscope-nx-generators-small-truncated-tetrahedron-graph"]], "graphscope.nx.generators.small.tutte_graph": [[543, "graphscope-nx-generators-small-tutte-graph"]], "graphscope.nx.generators.social.davis_southern_women_graph": [[544, "graphscope-nx-generators-social-davis-southern-women-graph"]], "graphscope.nx.generators.social.florentine_families_graph": [[545, "graphscope-nx-generators-social-florentine-families-graph"]], "graphscope.nx.generators.social.karate_club_graph": [[546, "graphscope-nx-generators-social-karate-club-graph"]], "graphscope.nx.generators.social.les_miserables_graph": [[547, "graphscope-nx-generators-social-les-miserables-graph"]], "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge": [[548, "graphscope-nx-generators-spectral-graph-forge-spectral-graph-forge"]], "graphscope.nx.generators.sudoku.sudoku_graph": [[549, "graphscope-nx-generators-sudoku-sudoku-graph"]], "graphscope.nx.generators.trees.prefix_tree": [[550, "graphscope-nx-generators-trees-prefix-tree"]], "graphscope.nx.generators.trees.random_tree": [[551, "graphscope-nx-generators-trees-random-tree"]], "graphscope.nx.generators.triads.triad_graph": [[552, "graphscope-nx-generators-triads-triad-graph"]], "networkx.generators.internet_as_graphs.random_internet_as_graph": [[553, "networkx-generators-internet-as-graphs-random-internet-as-graph"]], "networkx.generators.stochastic.stochastic_graph": [[554, "networkx-generators-stochastic-stochastic-graph"]], "Graph generators": [[555, "graph-generators"]], "Atlas": [[555, "module-graphscope.nx.generators.atlas"]], "Classic": [[555, "module-graphscope.nx.generators.classic"]], "Expanders": [[555, "module-graphscope.nx.generators.expanders"]], "Small": [[555, "module-graphscope.nx.generators.small"]], "Duplication Divergence": [[555, "module-graphscope.nx.generators.duplication"]], "Degree Sequence": [[555, "module-graphscope.nx.generators.degree_seq"]], "Directed": [[555, "module-graphscope.nx.generators.directed"]], "Geometric": [[555, "module-graphscope.nx.generators.geometric"]], "Ego Graph": [[555, "module-graphscope.nx.generators.ego"]], "Stochastic": [[555, "module-networkx.generators.stochastic"]], "AS graph": [[555, "module-networkx.generators.internet_as_graphs"]], "Intersection": [[555, "module-graphscope.nx.generators.intersection"]], "Social Networks": [[555, "module-graphscope.nx.generators.social"]], "Spectral": [[555, "module-graphscope.nx.generators.spectral_graph_forge"]], "Trees": [[555, "module-graphscope.nx.generators.trees"]], "Non Isomorphic Trees": [[555, "module-graphscope.nx.generators.nonisomorphic_trees"]], "Triads": [[555, "module-graphscope.nx.generators.triads"]], "Joint Degree Sequence": [[555, "module-graphscope.nx.generators.joint_degree_seq"]], "Mycielski": [[555, "module-graphscope.nx.generators.mycielski"]], "Harary Graph": [[555, "module-graphscope.nx.generators.harary_graph"]], "Sudoku": [[555, "module-graphscope.nx.generators.sudoku"]], "Graph types": [[556, "graph-types"]], "DiGraph": [[556, "digraph"]], "NetworkX-style API": [[557, "networkx-style-api"]], "Reading graphs": [[558, "reading-graphs"]], "Edge List": [[558, "edge-list"]], "Adjacency List": [[558, "adjacency-list"]], "Graph Transformation": [[559, "graph-transformation"]], "Operation": [[560, "operation"]], "Operation object": [[560, "operation-object"]], "BuiltIn operations": [[560, "module-graphscope.framework.dag_utils"]], "Python API Reference": [[561, "python-api-reference"]], "Selector": [[562, "selector"]], "Selectors in different context": [[562, "selectors-in-different-context"]], "TensorContext": [[562, "tensorcontext"]], "VertexDataContext": [[562, "vertexdatacontext"]], "LabeledVertexDataContext": [[562, "labeledvertexdatacontext"]], "VertexPropertyContext": [[562, "vertexpropertycontext"]], "LabeledVertexPropertyContext": [[562, "labeledvertexpropertycontext"]], "Methods that use selectors": [[562, "methods-that-use-selectors"]], "One-dimensional results": [[562, "one-dimensional-results"]], "Multi-dimensional results": [[562, "multi-dimensional-results"]], "Vertex Range": [[562, "vertex-range"]], "Session object": [[563, "session-object"]], "Session Functions": [[563, "session-functions"]], "Resources Estimator": [[564, "resources-estimator"]], "GART: Bridging the Gap between Relational OLTP and Graph Workloads": [[565, "gart-bridging-the-gap-between-relational-oltp-and-graph-workloads"]], "Architecture and Workflow": [[565, "architecture-and-workflow"]], "Defining Graph Mapping in GART": [[565, "defining-graph-mapping-in-gart"]], "Loading Logs to GART Storage": [[565, "loading-logs-to-gart-storage"]], "Using Loaded Graphs from GraphScope": [[565, "using-loaded-graphs-from-graphscope"]], "GraphAr: Standard Graph Data File Format": [[567, "graphar-standard-graph-data-file-format"]], "The GraphAr File Format": [[567, "the-graphar-file-format"]], "Features": [[567, "features"]], "File Format": [[567, "file-format"]], "Information files": [[567, "information-files"]], "Data files": [[567, "data-files"]], "Property Data Types": [[567, "property-data-types"]], "GraphAr in GraphScope": [[567, "graphar-in-graphscope"]], "Saving Graph Data in GraphAr": [[567, "saving-graph-data-in-graphar"]], "Loading GraphAr Data into GraphScope": [[567, "loading-graphar-data-into-graphscope"]], "GRIN: Graph Retrieval INterface": [[568, "grin-graph-retrieval-interface"]], "Motivations": [[568, "motivations"]], "Unified Graph Retrieval": [[568, "unified-graph-retrieval"]], "GRIN Concepts": [[568, "grin-concepts"]], "Predefined Macros": [[568, "predefined-macros"]], "Partition Strategy": [[568, "partition-strategy"]], "Edge-cut Partition Strategy": [[568, "edge-cut-partition-strategy"]], "Vertex-cut Partition Strategy": [[568, "vertex-cut-partition-strategy"]], "Property Graph Model": [[568, "property-graph-model"]], "Implementation Guideline": [[568, "implementation-guideline"]], "For computing engine": [[568, "for-computing-engine"]], "For storage engine": [[568, "for-storage-engine"]], "Design Details": [[568, "design-details"]], "Handler": [[568, "handler"]], "Edge": [[568, "edge"]], "List": [[568, "list"]], "Array-style Retrieval": [[568, "array-style-retrieval"]], "List Iterator": [[568, "list-iterator"]], "Label": [[568, "label"], [589, "label"]], "Order": [[568, "order"]], "Master and Mirror": [[568, "master-and-mirror"]], "Local Complete": [[568, "local-complete"]], "Natural ID Trait": [[568, "natural-id-trait"]], "Groot: Persistent Graph Store": [[569, "groot-persistent-graph-store"]], "Known Limitation": [[569, "known-limitation"]], "Deploy Groot": [[569, "deploy-groot"]], "Install from ArtifactHub": [[569, "install-from-artifacthub"]], "Installing from a local directory": [[569, "installing-from-a-local-directory"]], "Common Configurations": [[569, "common-configurations"]], "Connecting to Groot": [[569, "connecting-to-groot"]], "Connection": [[569, "connection"]], "Building and Modifying Graph Models": [[569, "building-and-modifying-graph-models"]], "Using Built-in Datasets": [[569, "using-built-in-datasets"]], "Customizing Models and Datasets": [[569, "customizing-models-and-datasets"]], "Querying Data": [[569, "querying-data"]], "Python": [[569, "python"], [569, "id1"]], "Node.js": [[569, "node-js"]], "Data Import": [[569, "data-import"]], "Offline Import": [[569, "offline-import"]], "Prerequisite": [[569, "prerequisite"]], "Data Format": [[569, "data-format"]], "Loading Process": [[569, "loading-process"]], "Build: Building a partitioned graph": [[569, "build-building-a-partitioned-graph"]], "2. Loading graph partitions": [[569, "loading-graph-partitions"]], "3. Commit to store service": [[569, "commit-to-store-service"]], "Realtime Write": [[569, "realtime-write"]], "Other features": [[569, "other-features"]], "Uninstalling and Restarting": [[569, "uninstalling-and-restarting"]], "Uninstall Groot": [[569, "uninstall-groot"]], "Restart Groot": [[569, "restart-groot"]], "Destroy Groot": [[569, "destroy-groot"]], "Developing Guide": [[569, "developing-guide"]], "Build image": [[569, "build-image"]], "Persistence": [[569, "persistence"]], "Troubleshooting": [[569, "troubleshooting"]], "Viewing logs": [[569, "viewing-logs"]], "Configuring logs": [[569, "configuring-logs"]], "Secondary Instance": [[569, "secondary-instance"]], "Traces": [[569, "traces"]], "Write High-availability": [[569, "write-high-availability"]], "In-memory immutable graphs on Vineyard": [[570, "in-memory-immutable-graphs-on-vineyard"]], "Graphs in Vineyard": [[570, "graphs-in-vineyard"]], "Loading Graphs to Vineyard": [[570, "loading-graphs-to-vineyard"]], "Using Loaded Graphs": [[570, "using-loaded-graphs"]], "Applications and algorithms": [[571, "applications-and-algorithms"]], "Bind application to graph": [[571, "bind-application-to-graph"]], "Built-in algorithms": [[571, "built-in-algorithms"]], "Scaling and repartitioning": [[572, "scaling-and-repartitioning"]], "Fennel": [[572, "fennel"]], "XtraPuLP": [[572, "xtrapulp"]], "Hybrid partitioning": [[572, "hybrid-partitioning"]], "User Guide and Examples of GAE": [[573, "user-guide-and-examples-of-gae"]], "Developing Your Algorithms with Python": [[573, "developing-your-algorithms-with-python"]], "Developing Your Algorithms with C++": [[573, "developing-your-algorithms-with-c"]], "Developing Your Algorithms with Java": [[573, "developing-your-algorithms-with-java"]], "User Guide and Examples of GLE": [[574, "user-guide-and-examples-of-gle"]], "Command-line Utility gsctl": [[576, "command-line-utility-gsctl"]], "Install/Update gsctl": [[576, "install-update-gsctl"]], "Commands": [[576, "commands"]], "Utility Scripts": [[576, "utility-scripts"]], "Client/Server Mode": [[576, "client-server-mode"]], "Change Scope": [[576, "change-scope"]], "Close the Connection": [[576, "close-the-connection"]], "How to Find logs": [[577, "how-to-find-logs"]], "Find logs in k8s": [[577, "find-logs-in-k8s"]], "Find logs for GraphScope Analytical Engine (GAE)": [[577, "find-logs-for-graphscope-analytical-engine-gae"]], "Find logs for Graph Interactive Engine (GIE)": [[577, "find-logs-for-graph-interactive-engine-gie"]], "Find logs for Graph Learning Engine (GLE)": [[577, "find-logs-for-graph-learning-engine-gle"]], "Find logs for Groot": [[577, "find-logs-for-groot"]], "Monitoring": [[578, "monitoring"]], "\u56fe\u5206\u6790\u5f15\u64ce": [[579, "id1"]], "\u5185\u7f6e\u7b97\u6cd5": [[579, "id2"]], "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": [[579, "id3"]], "\u4f7f\u7528 PIE \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[579, "pie"]], "\u4f7f\u7528 Pregel \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[579, "pregel"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528 math.h \u4e2d\u7684\u51fd\u6570": [[579, "math-h"]], "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[579, "id5"]], "\u8fd0\u884cJava\u7f16\u5199\u7684\u7b97\u6cd5": [[579, "java"]], "\u8fd0\u884c\u793a\u4f8b\u7684Java\u7b97\u6cd5": [[579, "id6"]], "\u4f7f\u7528Java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": [[579, "id7"]], "\u90e8\u7f72": [[580, "id1"]], "\u4f7f\u7528Helm\u90e8\u7f72GraphScope": [[580, "helmgraphscope"]], "\u5728AWS/\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": [[580, "aws"]], "\u672c\u5730\u90e8\u7f72GraphScope": [[580, "graphscope"]], "\u5f00\u53d1\u8005\u6307\u5357": [[581, "id1"]], "\u57fa\u4e8e Docker \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[581, "docker-graphscope"]], "\u57fa\u4e8e Kubernetes \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[581, "kubernetes-graphscope"]], "\u6784\u5efa Python Wheels": [[581, "python-wheels"]], "Linux": [[581, "linux"]], "macOS": [[581, "macos"]], "\u4ee3\u7801\u98ce\u683c": [[581, "id3"]], "\u5e38\u89c1\u95ee\u9898": [[582, "id1"]], "\u5feb\u901f\u4e0a\u624b": [[583, "id1"]], "\u793a\u4f8b: \u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [[583, "id3"]], "\u521b\u5efa\u4f1a\u8bdd": [[583, "id4"]], "\u4ea4\u4e92\u5f0f\u67e5\u8be2": [[583, "id6"]], "\u56fe\u5206\u6790": [[583, "id7"]], "\u56fe\u795e\u7ecf\u7f51\u7edc (GNNs)": [[583, "gnns"]], "\u5173\u95ed\u4f1a\u8bdd": [[583, "id8"]], "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": [[584, "graph-transformation"]], "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": [[584, "id2"]], "\u6295\u5f71": [[584, "id3"]], "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": [[584, "id4"]], "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": [[584, "id5"]], "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": [[585, "graphscope"]], "\u76ee\u5f55": [[585, null], [590, null]], "API \u53c2\u8003": [[585, null]], "\u7d22\u5f15": [[585, "id1"]], "\u5b89\u88c5": [[586, "id1"]], "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": [[586, "id2"]], "\u57fa\u4e8e Kubernetes \u5b89\u88c5 GraphScope \u5ba2\u6237\u7aef": [[586, "kubernetes-graphscope"]], "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": [[587, "id1"]], "Apache TinkerPop": [[587, "apache-tinkerpop"]], "\u5229\u7528Python\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[587, "python-gremlin-graphscope"]], "\u5229\u7528Java\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[587, "java-gremlin-graphscope"]], "Gremlin Console\uff08\u5f00\u53d1\u63a7\u5236\u53f0\uff09": [[587, "id5"]], "Gremlin\u7f16\u7a0b\u5165\u95e8\u2013101": [[587, "gremlin-101"]], "\u56fe\u6570\u636e\u6a21\u578b": [[587, "id8"]], "\u67e5\u8be2\u8bed\u8a00": [[587, "id9"]], "\u4e00\u4e2a\u4f8b\u5b50": [[587, "id10"]], "Gremlin\u517c\u5bb9\u6027\uff08\u5bf9\u6bd4TinkerPop\uff09": [[587, "gremlin-tinkerpop"]], "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": [[587, "id11"]], "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": [[587, "id12"]], "\u652f\u6301\u7684Gremlin\u64cd\u4f5c": [[587, "id13"]], "\u5df2\u77e5\u9650\u5236": [[587, "id14"]], "\u56fe\u5b66\u4e60\u5f15\u64ce": [[588, "id1"]], "\u56fe\u5b66\u4e60\u6a21\u578b": [[588, "id2"]], "\u6570\u636e\u6a21\u578b": [[588, "id3"]], "\u7f16\u7801\u5668": [[588, "id4"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[588, "id5"]], "\u91c7\u6837": [[588, "id6"]], "\u56fe\u6570\u636e\u6d41": [[588, "id7"]], "\u6a21\u578b": [[588, "id8"]], "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": [[588, "id9"]], "\u8f7d\u56fe": [[589, "loading-graphs"]], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": [[589, "id3"]], "\u624b\u52a8\u914d\u7f6e\u56fe": [[589, "id4"]], "Build Vertex": [[589, "build-vertex"]], "vertices": [[589, "vertices"]], "properties": [[589, "properties"], [589, "id7"]], "vid_field": [[589, "vid-field"]], "Build Edge": [[589, "build-edge"]], "edges": [[589, "edges"]], "label": [[589, "id6"]], "src_label and dst_label": [[589, "src-label-and-dst-label"]], "src_field and dst_field": [[589, "src-field-and-dst-field"]], "\u9ad8\u7ea7\u7528\u6cd5": [[589, "id8"]], "\u6ca1\u6709\u6b67\u4e49\u65f6\uff0c\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": [[589, "id9"]], "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": [[589, "id10"]], "\u591a\u79cd\u8fb9\u5173\u7cfb": [[589, "id11"]], "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": [[589, "id12"]], "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": [[589, "id13"]], "\u5b8c\u6574\u7684\u793a\u4f8b": [[589, "id14"]], "\u4ece Pandas \u6216 Numpy \u4e2d\u8f7d\u56fe": [[589, "pandas-numpy"]], "\u4ece Pandas \u4e2d\u8f7d\u56fe": [[589, "pandas"]], "\u4ece Numpy \u4e2d\u8f7d\u56fe": [[589, "numpy"]], "Loader \u7684\u53d8\u79cd": [[589, "loader"]], "\u5165\u95e8\u6559\u7a0b": [[590, "id1"]]}, "indexentries": {"all_pairs_shortest_path_length()": [[0, "all_pairs_shortest_path_length"]], "attribute_assortativity()": [[0, "attribute_assortativity"]], "average_degree_connectivity()": [[0, "average_degree_connectivity"]], "betweenness_centrality()": [[0, "betweenness_centrality"]], "bfs()": [[0, "bfs"]], "built-in function": [[0, "all_pairs_shortest_path_length"], [0, "attribute_assortativity"], [0, "average_degree_connectivity"], [0, "betweenness_centrality"], [0, "bfs"], [0, "closeness_centrality"], [0, "degree_assortativity_coefficient"], [0, "degree_centrality"], [0, "dfs"], [0, "eigenvector_centrality"], [0, "hits"], [0, "id0"], [0, "id1"], [0, "id2"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "katz_centrality"], [0, "kkore"], [0, "kshell"], [0, "lpa"], [0, "sampling_path"], [0, "sssp"]], "cdlp()": [[0, "id0"]], "closeness_centrality()": [[0, "closeness_centrality"]], "clustering()": [[0, "id1"]], "degree_assortativity_coefficient()": [[0, "degree_assortativity_coefficient"]], "degree_centrality()": [[0, "degree_centrality"]], "dfs()": [[0, "dfs"]], "eigenvector_centrality()": [[0, "eigenvector_centrality"]], "hits()": [[0, "hits"]], "katz_centrality()": [[0, "katz_centrality"]], "kkore()": [[0, "kkore"]], "kshell()": [[0, "kshell"]], "lcc()": [[0, "id2"]], "lpa()": [[0, "lpa"]], "pagerank()": [[0, "id3"]], "sampling_path()": [[0, "sampling_path"]], "sssp()": [[0, "sssp"]], "voterank()": [[0, "id4"]], "wcc()": [[0, "id5"]], "driver (class in gs_interactive.client.driver)": [[287, "gs_interactive.client.driver.Driver"]], "__init__() (gs_interactive.client.driver.driver method)": [[287, "gs_interactive.client.driver.Driver.__init__"]], "close() (gs_interactive.client.driver.driver method)": [[287, "gs_interactive.client.driver.Driver.close"]], "getdefaultsession() (gs_interactive.client.driver.driver method)": [[287, "gs_interactive.client.driver.Driver.getDefaultSession"]], "getneo4jendpoint() (gs_interactive.client.driver.driver method)": [[287, "gs_interactive.client.driver.Driver.getNeo4jEndpoint"]], "getneo4jsession() (gs_interactive.client.driver.driver method)": [[287, "gs_interactive.client.driver.Driver.getNeo4jSession"]], "gs_interactive.client.driver": [[287, "module-gs_interactive.client.driver"]], "module": [[287, "module-gs_interactive.client.driver"], [288, "module-0"], [288, "module-gs_interactive.client.utils"], [290, "module-gs_interactive.client.result"], [291, "module-0"], [291, "module-gs_interactive.client.session"], [292, "module-gs_interactive.client.status"], [422, "module-graphscope.nx.classes.function"], [555, "module-graphscope.nx.generators.atlas"], [555, "module-graphscope.nx.generators.classic"], [555, "module-graphscope.nx.generators.community"], [555, "module-graphscope.nx.generators.degree_seq"], [555, "module-graphscope.nx.generators.directed"], [555, "module-graphscope.nx.generators.duplication"], [555, "module-graphscope.nx.generators.ego"], [555, "module-graphscope.nx.generators.expanders"], [555, "module-graphscope.nx.generators.geometric"], [555, "module-graphscope.nx.generators.harary_graph"], [555, "module-graphscope.nx.generators.intersection"], [555, "module-graphscope.nx.generators.joint_degree_seq"], [555, "module-graphscope.nx.generators.mycielski"], [555, "module-graphscope.nx.generators.nonisomorphic_trees"], [555, "module-graphscope.nx.generators.small"], [555, "module-graphscope.nx.generators.social"], [555, "module-graphscope.nx.generators.spectral_graph_forge"], [555, "module-graphscope.nx.generators.sudoku"], [555, "module-graphscope.nx.generators.trees"], [555, "module-graphscope.nx.generators.triads"], [555, "module-networkx.generators.internet_as_graphs"], [555, "module-networkx.generators.stochastic"], [560, "module-graphscope.framework.dag_utils"]], "read_endpoints_from_env() (gs_interactive.client.driver.driver method)": [[287, "gs_interactive.client.driver.Driver.read_endpoints_from_env"]], "session() (gs_interactive.client.driver.driver method)": [[287, "gs_interactive.client.driver.Driver.session"]], "decoder (class in gs_interactive.client.utils)": [[288, "gs_interactive.client.utils.Decoder"]], "encoder (class in gs_interactive.client.utils)": [[288, "gs_interactive.client.utils.Encoder"]], "__init__() (gs_interactive.client.utils.decoder method)": [[288, "gs_interactive.client.utils.Decoder.__init__"]], "__init__() (gs_interactive.client.utils.encoder method)": [[288, "gs_interactive.client.utils.Encoder.__init__"]], "get_byte() (gs_interactive.client.utils.decoder method)": [[288, "gs_interactive.client.utils.Decoder.get_byte"]], "get_bytes() (gs_interactive.client.utils.decoder method)": [[288, "gs_interactive.client.utils.Decoder.get_bytes"]], "get_bytes() (gs_interactive.client.utils.encoder method)": [[288, "gs_interactive.client.utils.Encoder.get_bytes"]], "get_double() (gs_interactive.client.utils.decoder method)": [[288, "gs_interactive.client.utils.Decoder.get_double"]], "get_int() (gs_interactive.client.utils.decoder method)": [[288, "gs_interactive.client.utils.Decoder.get_int"]], "get_long() (gs_interactive.client.utils.decoder method)": [[288, "gs_interactive.client.utils.Decoder.get_long"]], "get_string() (gs_interactive.client.utils.decoder method)": [[288, "gs_interactive.client.utils.Decoder.get_string"]], "gs_interactive.client.utils": [[288, "module-0"], [288, "module-gs_interactive.client.utils"]], "is_empty() (gs_interactive.client.utils.decoder method)": [[288, "gs_interactive.client.utils.Decoder.is_empty"]], "put_byte() (gs_interactive.client.utils.encoder method)": [[288, "gs_interactive.client.utils.Encoder.put_byte"]], "put_bytes() (gs_interactive.client.utils.encoder method)": [[288, "gs_interactive.client.utils.Encoder.put_bytes"]], "put_double() (gs_interactive.client.utils.encoder method)": [[288, "gs_interactive.client.utils.Encoder.put_double"]], "put_int() (gs_interactive.client.utils.encoder method)": [[288, "gs_interactive.client.utils.Encoder.put_int"]], "put_long() (gs_interactive.client.utils.encoder method)": [[288, "gs_interactive.client.utils.Encoder.put_long"]], "put_string() (gs_interactive.client.utils.encoder method)": [[288, "gs_interactive.client.utils.Encoder.put_string"]], "result (class in gs_interactive.client.result)": [[290, "gs_interactive.client.result.Result"]], "__init__() (gs_interactive.client.result.result method)": [[290, "gs_interactive.client.result.Result.__init__"]], "error() (gs_interactive.client.result.result static method)": [[290, "gs_interactive.client.result.Result.error"]], "from_exception() (gs_interactive.client.result.result static method)": [[290, "gs_interactive.client.result.Result.from_exception"]], "from_response() (gs_interactive.client.result.result static method)": [[290, "gs_interactive.client.result.Result.from_response"]], "get_status() (gs_interactive.client.result.result method)": [[290, "gs_interactive.client.result.Result.get_status"]], "get_status_message() (gs_interactive.client.result.result method)": [[290, "gs_interactive.client.result.Result.get_status_message"]], "get_value() (gs_interactive.client.result.result method)": [[290, "gs_interactive.client.result.Result.get_value"]], "gs_interactive.client.result": [[290, "module-gs_interactive.client.result"]], "is_error() (gs_interactive.client.result.result method)": [[290, "gs_interactive.client.result.Result.is_error"]], "is_ok() (gs_interactive.client.result.result method)": [[290, "gs_interactive.client.result.Result.is_ok"]], "ok() (gs_interactive.client.result.result static method)": [[290, "gs_interactive.client.result.Result.ok"]], "defaultsession (class in gs_interactive.client.session)": [[291, "gs_interactive.client.session.DefaultSession"]], "session (class in gs_interactive.client.session)": [[291, "gs_interactive.client.session.Session"]], "__init__() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.__init__"]], "add_edge() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.add_edge"]], "add_vertex() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.add_vertex"]], "bulk_loading() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.bulk_loading"]], "call_procedure() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.call_procedure"]], "call_procedure_current() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.call_procedure_current"]], "call_procedure_current_raw() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.call_procedure_current_raw"]], "call_procedure_raw() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.call_procedure_raw"]], "cancel_job() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.cancel_job"]], "create_graph() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.create_graph"]], "create_procedure() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.create_procedure"]], "delete_graph() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.delete_graph"]], "delete_procedure() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.delete_procedure"]], "ensure_param_str() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.ensure_param_str"]], "get_edge() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.get_edge"]], "get_graph_meta() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.get_graph_meta"]], "get_graph_schema() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.get_graph_schema"]], "get_graph_statistics() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.get_graph_statistics"]], "get_job() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.get_job"]], "get_procedure() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.get_procedure"]], "get_service_status() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.get_service_status"]], "get_vertex() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.get_vertex"]], "gs_interactive.client.session": [[291, "module-0"], [291, "module-gs_interactive.client.session"]], "list_graphs() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.list_graphs"]], "list_jobs() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.list_jobs"]], "list_procedures() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.list_procedures"]], "restart_service() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.restart_service"]], "start_service() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.start_service"]], "stop_service() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.stop_service"]], "try_upload_files() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.try_upload_files"]], "update_edge() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.update_edge"]], "update_procedure() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.update_procedure"]], "update_vertex() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.update_vertex"]], "upload_and_replace_input_inplace() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.upload_and_replace_input_inplace"]], "upload_file() (gs_interactive.client.session.defaultsession method)": [[291, "gs_interactive.client.session.DefaultSession.upload_file"]], "status (class in gs_interactive.client.status)": [[292, "gs_interactive.client.status.Status"]], "__init__() (gs_interactive.client.status.status method)": [[292, "gs_interactive.client.status.Status.__init__"]], "from_exception() (gs_interactive.client.status.status static method)": [[292, "gs_interactive.client.status.Status.from_exception"]], "from_response() (gs_interactive.client.status.status static method)": [[292, "gs_interactive.client.status.Status.from_response"]], "get_code() (gs_interactive.client.status.status method)": [[292, "gs_interactive.client.status.Status.get_code"]], "get_message (gs_interactive.client.status.status property)": [[292, "gs_interactive.client.status.Status.get_message"]], "gs_interactive.client.status": [[292, "module-gs_interactive.client.status"]], "is_error() (gs_interactive.client.status.status method)": [[292, "gs_interactive.client.status.Status.is_error"]], "is_ok() (gs_interactive.client.status.status method)": [[292, "gs_interactive.client.status.Status.is_ok"]], "ok() (gs_interactive.client.status.status static method)": [[292, "gs_interactive.client.status.Status.ok"]], "server_internal_error() (gs_interactive.client.status.status static method)": [[292, "gs_interactive.client.status.Status.server_internal_error"]], "gs::appbase (c++ class)": [[346, "_CPPv4I00EN2gs7AppBaseE"]], "gs::appbase::appbase (c++ function)": [[346, "_CPPv4N2gs7AppBase7AppBaseEv"]], "gs::appbase::inceval (c++ function)": [[346, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::peval (c++ function)": [[346, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::load_strategy (c++ member)": [[346, "_CPPv4N2gs7AppBase13load_strategyE"]], "gs::appbase::message_manager_t (c++ type)": [[346, "_CPPv4N2gs7AppBase17message_manager_tE"]], "gs::appbase::message_strategy (c++ member)": [[346, "_CPPv4N2gs7AppBase16message_strategyE"]], "gs::appbase::need_split_edges (c++ member)": [[346, "_CPPv4N2gs7AppBase16need_split_edgesE"]], "gs::appbase::~appbase (c++ function)": [[346, "_CPPv4N2gs7AppBaseD0Ev"]], "gs::appentry (c++ class)": [[346, "_CPPv4N2gs8AppEntryE"]], "gs::appentry::appentry (c++ function)": [[346, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE"]], "gs::appentry::createworker (c++ function)": [[346, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::appentry::init (c++ function)": [[346, "_CPPv4N2gs8AppEntry4InitEv"]], "gs::appentry::query (c++ function)": [[346, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE"]], "gs::argtypeat (c++ struct)": [[346, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE"]], "gs::argsnum (c++ struct)": [[346, "_CPPv4I0EN2gs7ArgsNumE"]], "gs::argsunpacker (c++ struct)": [[346, "_CPPv4I0EN2gs12ArgsUnpackerE"]], "gs::arrowfragmentloader (c++ class)": [[346, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE"]], "gs::arrowfragmentloader::adddatatoexistedelabel (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t"]], "gs::arrowfragmentloader::adddatatoexistedvlabel (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t"]], "gs::arrowfragmentloader::addlabelstofragment (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::addlabelstofragmentasfragmentgroup (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::arrowfragmentloader (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE"], [346, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb"]], "gs::arrowfragmentloader::extendlabeldata (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi"]], "gs::arrowfragmentloader::loadedgetables (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv"]], "gs::arrowfragmentloader::loadfragment (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv"]], "gs::arrowfragmentloader::loadfragmentasfragmentgroup (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv"]], "gs::arrowfragmentloader::loadvertexedgetables (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv"]], "gs::arrowfragmentloader::loadvertextables (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv"]], "gs::arrowfragmentloader::initpartitioner (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv"]], "gs::arrowfragmentloader::~arrowfragmentloader (c++ function)": [[346, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev"]], "gs::arrowprojectedfragment (c++ class)": [[346, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE"]], "gs::arrowprojectedfragment::construct (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedfragment::create (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv"]], "gs::arrowprojectedfragment::getdata (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t"]], "gs::arrowprojectedfragment::getedgenum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv"]], "gs::arrowprojectedfragment::getfragid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t"]], "gs::arrowprojectedfragment::getid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinedgenum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv"]], "gs::arrowprojectedfragment::getincomingadjlist (c++ function)": [[346, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [346, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [346, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getincomingedgenum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv"]], "gs::arrowprojectedfragment::getincominginnervertexadjlist (c++ function)": [[346, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getincomingoutervertexadjlist (c++ function)": [[346, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertex (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexgid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexinternalid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnerverticesnum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv"]], "gs::arrowprojectedfragment::getinternalid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getlocalindegree (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getlocaloutdegree (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutedgenum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv"]], "gs::arrowprojectedfragment::getoutervertex (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexgid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexinternalid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getouterverticesnum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv"]], "gs::arrowprojectedfragment::getoutgoingadjlist (c++ function)": [[346, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [346, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [346, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getoutgoingedgenum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv"]], "gs::arrowprojectedfragment::getoutgoinginnervertexadjlist (c++ function)": [[346, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutgoingoutervertexadjlist (c++ function)": [[346, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::gettotalverticesnum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv"]], "gs::arrowprojectedfragment::getvertex (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getvertexmap (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv"], [346, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv"]], "gs::arrowprojectedfragment::getverticesnum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv"]], "gs::arrowprojectedfragment::gid2oid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t"]], "gs::arrowprojectedfragment::gid2vertex (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::iedests (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::iedestssize (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment11IEDestsSizeEv"]], "gs::arrowprojectedfragment::ioedests (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::ioedestssize (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment12IOEDestsSizeEv"]], "gs::arrowprojectedfragment::innervertexgid2vertex (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::innervertices (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv"]], "gs::arrowprojectedfragment::isinnervertex (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t"]], "gs::arrowprojectedfragment::isoutervertex (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t"]], "gs::arrowprojectedfragment::mirrorvertices (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t"]], "gs::arrowprojectedfragment::oedests (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::oedestssize (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment11OEDestsSizeEv"]], "gs::arrowprojectedfragment::oid2gid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t"], [346, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t"]], "gs::arrowprojectedfragment::outervertexgid2vertex (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::outervertices (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t"], [346, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv"]], "gs::arrowprojectedfragment::preparetorunapp (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE"]], "gs::arrowprojectedfragment::project (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t"]], "gs::arrowprojectedfragment::vertex2gid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t"]], "gs::arrowprojectedfragment::vertices (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv"]], "gs::arrowprojectedfragment::adj_list_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE"]], "gs::arrowprojectedfragment::compact_adj_list_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE"]], "gs::arrowprojectedfragment::compact_edges (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv"]], "gs::arrowprojectedfragment::compact_nbr_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE"]], "gs::arrowprojectedfragment::const_adj_list_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE"]], "gs::arrowprojectedfragment::const_compact_adj_list_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE"]], "gs::arrowprojectedfragment::directed (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv"]], "gs::arrowprojectedfragment::edata_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE"]], "gs::arrowprojectedfragment::edge_label (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv"]], "gs::arrowprojectedfragment::edge_prop_id (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv"]], "gs::arrowprojectedfragment::eid_array_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE"]], "gs::arrowprojectedfragment::eid_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE"]], "gs::arrowprojectedfragment::fid (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv"]], "gs::arrowprojectedfragment::fnum (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv"]], "gs::arrowprojectedfragment::get_arrow_fragment (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv"]], "gs::arrowprojectedfragment::get_edata_array_accessor (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv"]], "gs::arrowprojectedfragment::get_ie_offsets_begin_ptr (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_ie_offsets_end_ptr (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_in_edges_ptr (c++ function)": [[346, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_oe_offsets_begin_ptr (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_end_ptr (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_out_edges_ptr (c++ function)": [[346, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_vdata_array_accessor (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv"]], "gs::arrowprojectedfragment::inner_vertex_array_t (c++ type)": [[346, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE"]], "gs::arrowprojectedfragment::inner_vertices_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE"]], "gs::arrowprojectedfragment::internal_oid_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE"]], "gs::arrowprojectedfragment::label_id_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE"]], "gs::arrowprojectedfragment::load_strategy (c++ member)": [[346, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE"]], "gs::arrowprojectedfragment::local_vertex_map (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv"]], "gs::arrowprojectedfragment::nbr_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE"]], "gs::arrowprojectedfragment::nbr_unit_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE"]], "gs::arrowprojectedfragment::oid_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE"]], "gs::arrowprojectedfragment::outer_vertex_array_t (c++ type)": [[346, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE"]], "gs::arrowprojectedfragment::outer_vertices_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE"]], "gs::arrowprojectedfragment::prop_id_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE"]], "gs::arrowprojectedfragment::property_graph_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE"]], "gs::arrowprojectedfragment::property_vertex_map_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE"]], "gs::arrowprojectedfragment::sub_vertices_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE"]], "gs::arrowprojectedfragment::use_perfect_hash (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment16use_perfect_hashEv"]], "gs::arrowprojectedfragment::vdata_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE"]], "gs::arrowprojectedfragment::vertex_array_t (c++ type)": [[346, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE"]], "gs::arrowprojectedfragment::vertex_label (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv"]], "gs::arrowprojectedfragment::vertex_map_id (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv"]], "gs::arrowprojectedfragment::vertex_map_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE"]], "gs::arrowprojectedfragment::vertex_prop_id (c++ function)": [[346, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv"]], "gs::arrowprojectedfragment::vertex_range_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE"]], "gs::arrowprojectedfragment::vertex_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE"]], "gs::arrowprojectedfragment::vertices_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE"]], "gs::arrowprojectedfragment::vid_array_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE"]], "gs::arrowprojectedfragment::vid_t (c++ type)": [[346, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE"]], "gs::arrowprojectedfragment::~arrowprojectedfragment (c++ function)": [[346, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev"]], "gs::arrowprojectedvertexmap (c++ class)": [[346, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE"]], "gs::arrowprojectedvertexmap::construct (c++ function)": [[346, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedvertexmap::create (c++ function)": [[346, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv"]], "gs::arrowprojectedvertexmap::getfidfromgid (c++ function)": [[346, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getgid (c++ function)": [[346, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t"], [346, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t"]], "gs::arrowprojectedvertexmap::getinnervertexsize (c++ function)": [[346, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t"]], "gs::arrowprojectedvertexmap::getlidfromgid (c++ function)": [[346, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getoffsetfromlid (c++ function)": [[346, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t"]], "gs::arrowprojectedvertexmap::getoid (c++ function)": [[346, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t"]], "gs::arrowprojectedvertexmap::gettotalverticesnum (c++ function)": [[346, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv"]], "gs::arrowprojectedvertexmap::offset2lid (c++ function)": [[346, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t"]], "gs::arrowprojectedvertexmap::project (c++ function)": [[346, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t"]], "gs::arrowprojectedvertexmap::use_perfect_hash (c++ function)": [[346, "_CPPv4NK2gs23ArrowProjectedVertexMap16use_perfect_hashEv"]], "gs::ctxwrapperbuilder (c++ struct)": [[346, "_CPPv4I00EN2gs17CtxWrapperBuilderE"]], "gs::defaultpropertyworker (c++ class)": [[346, "_CPPv4I0EN2gs21DefaultPropertyWorkerE"]], "gs::defaultpropertyworker::defaultpropertyworker (c++ function)": [[346, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultpropertyworker::finalize (c++ function)": [[346, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv"]], "gs::defaultpropertyworker::getcontext (c++ function)": [[346, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv"]], "gs::defaultpropertyworker::init (c++ function)": [[346, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultpropertyworker::output (c++ function)": [[346, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE"]], "gs::defaultpropertyworker::query (c++ function)": [[346, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args"]], "gs::defaultpropertyworker::context_t (c++ type)": [[346, "_CPPv4N2gs21DefaultPropertyWorker9context_tE"]], "gs::defaultpropertyworker::fragment_t (c++ type)": [[346, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE"]], "gs::defaultpropertyworker::message_manager_t (c++ type)": [[346, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE"]], "gs::defaultpropertyworker::~defaultpropertyworker (c++ function)": [[346, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev"]], "gs::defaultworker (c++ class)": [[346, "_CPPv4I0EN2gs13DefaultWorkerE"]], "gs::defaultworker::defaultworker (c++ function)": [[346, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultworker::finalize (c++ function)": [[346, "_CPPv4N2gs13DefaultWorker8FinalizeEv"]], "gs::defaultworker::getcontext (c++ function)": [[346, "_CPPv4N2gs13DefaultWorker10GetContextEv"]], "gs::defaultworker::init (c++ function)": [[346, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultworker::output (c++ function)": [[346, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE"]], "gs::defaultworker::query (c++ function)": [[346, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args"]], "gs::defaultworker::context_t (c++ type)": [[346, "_CPPv4N2gs13DefaultWorker9context_tE"]], "gs::defaultworker::fragment_t (c++ type)": [[346, "_CPPv4N2gs13DefaultWorker10fragment_tE"]], "gs::defaultworker::message_manager_t (c++ type)": [[346, "_CPPv4N2gs13DefaultWorker17message_manager_tE"]], "gs::defaultworker::~defaultworker (c++ function)": [[346, "_CPPv4N2gs13DefaultWorkerD0Ev"]], "gs::dispatchresult (c++ class)": [[346, "_CPPv4N2gs14DispatchResultE"]], "gs::dispatchresult::aggregatepolicy (c++ enum)": [[346, "_CPPv4N2gs14DispatchResult15AggregatePolicyE"]], "gs::dispatchresult::aggregatepolicy::kconcat (c++ enumerator)": [[346, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE"]], "gs::dispatchresult::aggregatepolicy::kmergegraphdef (c++ enumerator)": [[346, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE"]], "gs::dispatchresult::aggregatepolicy::kpickfirst (c++ enumerator)": [[346, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonempty (c++ enumerator)": [[346, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonemptygraphdef (c++ enumerator)": [[346, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE"]], "gs::dispatchresult::aggregatepolicy::krequireconsistent (c++ enumerator)": [[346, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE"]], "gs::dispatchresult::dispatchresult (c++ function)": [[346, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE"], [346, "_CPPv4N2gs14DispatchResult14DispatchResultEv"]], "gs::dispatchresult::aggregate_policy (c++ function)": [[346, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv"]], "gs::dispatchresult::data (c++ function)": [[346, "_CPPv4NK2gs14DispatchResult4dataEv"]], "gs::dispatchresult::error_code (c++ function)": [[346, "_CPPv4NK2gs14DispatchResult10error_codeEv"]], "gs::dispatchresult::graph_def (c++ function)": [[346, "_CPPv4N2gs14DispatchResult9graph_defEv"], [346, "_CPPv4NK2gs14DispatchResult9graph_defEv"]], "gs::dispatchresult::has_large_data (c++ function)": [[346, "_CPPv4NK2gs14DispatchResult14has_large_dataEv"]], "gs::dispatchresult::message (c++ function)": [[346, "_CPPv4N2gs14DispatchResult7messageEv"]], "gs::dispatchresult::set_data (c++ function)": [[346, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb"], [346, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb"]], "gs::dispatchresult::set_error (c++ function)": [[346, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE"]], "gs::dispatchresult::set_graph_def (c++ function)": [[346, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy"]], "gs::dispatchresult::worker_id (c++ function)": [[346, "_CPPv4NK2gs14DispatchResult9worker_idEv"]], "gs::dispatcher (c++ class)": [[346, "_CPPv4N2gs10DispatcherE"]], "gs::dispatcher::dispatch (c++ function)": [[346, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::dispatcher (c++ function)": [[346, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE"]], "gs::dispatcher::setcommand (c++ function)": [[346, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::start (c++ function)": [[346, "_CPPv4N2gs10Dispatcher5StartEv"]], "gs::dispatcher::stop (c++ function)": [[346, "_CPPv4N2gs10Dispatcher4StopEv"]], "gs::dispatcher::subscribe (c++ function)": [[346, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE"]], "gs::engineconfig (c++ struct)": [[346, "_CPPv4N2gs12EngineConfigE"]], "gs::engineconfig::tojsonstring (c++ function)": [[346, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv"]], "gs::engineconfig::enable_java_sdk (c++ member)": [[346, "_CPPv4N2gs12EngineConfig15enable_java_sdkE"]], "gs::engineconfig::networkx (c++ member)": [[346, "_CPPv4N2gs12EngineConfig8networkxE"]], "gs::engineconfig::vineyard_rpc_endpoint (c++ member)": [[346, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE"]], "gs::engineconfig::vineyard_socket (c++ member)": [[346, "_CPPv4N2gs12EngineConfig15vineyard_socketE"]], "gs::fragmentwrapper (c++ class)": [[346, "_CPPv4I0EN2gs15FragmentWrapperE"]], "gs::gsobject (c++ class)": [[346, "_CPPv4N2gs8GSObjectE"]], "gs::gsobject::gsobject (c++ function)": [[346, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType"]], "gs::gsobject::tostring (c++ function)": [[346, "_CPPv4NK2gs8GSObject8ToStringEv"]], "gs::gsobject::id (c++ function)": [[346, "_CPPv4NK2gs8GSObject2idEv"]], "gs::gsobject::type (c++ function)": [[346, "_CPPv4NK2gs8GSObject4typeEv"]], "gs::gsobject::~gsobject (c++ function)": [[346, "_CPPv4N2gs8GSObjectD0Ev"]], "gs::grapeengine (c++ class)": [[346, "_CPPv4N2gs11GrapeEngineE"]], "gs::grapeengine::grapeengine (c++ function)": [[346, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE"], [346, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi"]], "gs::grapeengine::rundagfile (c++ function)": [[346, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv"]], "gs::grapeengine::start (c++ function)": [[346, "_CPPv4N2gs11GrapeEngine5StartEv"]], "gs::grapeengine::stop (c++ function)": [[346, "_CPPv4N2gs11GrapeEngine4StopEv"]], "gs::grapeinstance (c++ class)": [[346, "_CPPv4N2gs13GrapeInstanceE"]], "gs::grapeinstance::grapeinstance (c++ function)": [[346, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE"]], "gs::grapeinstance::init (c++ function)": [[346, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE"]], "gs::grapeinstance::onreceive (c++ function)": [[346, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE"]], "gs::objectmanager (c++ class)": [[346, "_CPPv4N2gs13ObjectManagerE"]], "gs::objectmanager::getobject (c++ function)": [[346, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE"], [346, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE"]], "gs::objectmanager::hasobject (c++ function)": [[346, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE"]], "gs::objectmanager::putobject (c++ function)": [[346, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE"]], "gs::objectmanager::removeobject (c++ function)": [[346, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE"]], "gs::parallelpropertyworker (c++ class)": [[346, "_CPPv4I0EN2gs22ParallelPropertyWorkerE"]], "gs::parallelpropertyworker::finalize (c++ function)": [[346, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv"]], "gs::parallelpropertyworker::getcontext (c++ function)": [[346, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv"]], "gs::parallelpropertyworker::init (c++ function)": [[346, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::parallelpropertyworker::output (c++ function)": [[346, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE"]], "gs::parallelpropertyworker::parallelpropertyworker (c++ function)": [[346, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::parallelpropertyworker::query (c++ function)": [[346, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args"]], "gs::parallelpropertyworker::context_t (c++ type)": [[346, "_CPPv4N2gs22ParallelPropertyWorker9context_tE"]], "gs::parallelpropertyworker::fragment_t (c++ type)": [[346, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE"]], "gs::parallelpropertyworker::message_manager_t (c++ type)": [[346, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE"]], "gs::parallelpropertyworker::~parallelpropertyworker (c++ function)": [[346, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev"]], "gs::propertyappbase (c++ class)": [[346, "_CPPv4I00EN2gs15PropertyAppBaseE"]], "gs::propertyappbase::inceval (c++ function)": [[346, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::peval (c++ function)": [[346, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::propertyappbase (c++ function)": [[346, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv"]], "gs::propertyappbase::load_strategy (c++ member)": [[346, "_CPPv4N2gs15PropertyAppBase13load_strategyE"]], "gs::propertyappbase::message_manager_t (c++ type)": [[346, "_CPPv4N2gs15PropertyAppBase17message_manager_tE"]], "gs::propertyappbase::message_strategy (c++ member)": [[346, "_CPPv4N2gs15PropertyAppBase16message_strategyE"]], "gs::propertyappbase::need_split_edges (c++ member)": [[346, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE"]], "gs::propertyappbase::~propertyappbase (c++ function)": [[346, "_CPPv4N2gs15PropertyAppBaseD0Ev"]], "gs::propertyautoappbase (c++ class)": [[346, "_CPPv4I00EN2gs19PropertyAutoAppBaseE"]], "gs::propertyautoappbase::inceval (c++ function)": [[346, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::peval (c++ function)": [[346, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::propertyautoappbase (c++ function)": [[346, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv"]], "gs::propertyautoappbase::load_strategy (c++ member)": [[346, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE"]], "gs::propertyautoappbase::message_strategy (c++ member)": [[346, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE"]], "gs::propertyautoappbase::need_split_edges (c++ member)": [[346, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE"]], "gs::propertyautoappbase::~propertyautoappbase (c++ function)": [[346, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev"]], "gs::propertyautoworker (c++ class)": [[346, "_CPPv4I0EN2gs18PropertyAutoWorkerE"]], "gs::propertyautoworker::finalize (c++ function)": [[346, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv"]], "gs::propertyautoworker::getcontext (c++ function)": [[346, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv"]], "gs::propertyautoworker::init (c++ function)": [[346, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::propertyautoworker::output (c++ function)": [[346, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE"]], "gs::propertyautoworker::propertyautoworker (c++ function)": [[346, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::propertyautoworker::query (c++ function)": [[346, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args"]], "gs::propertyautoworker::context_t (c++ type)": [[346, "_CPPv4N2gs18PropertyAutoWorker9context_tE"]], "gs::propertyautoworker::fragment_t (c++ type)": [[346, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE"]], "gs::propertyautoworker::message_manager_t (c++ type)": [[346, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE"]], "gs::propertyautoworker::~propertyautoworker (c++ function)": [[346, "_CPPv4N2gs18PropertyAutoWorkerD0Ev"]], "gs::tensorcontext (c++ class)": [[346, "_CPPv4I00EN2gs13TensorContextE"]], "gs::tensorcontext::tensorcontext (c++ function)": [[346, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t"]], "gs::tensorcontext::assign (c++ function)": [[346, "_CPPv4N2gs13TensorContext6assignERK6data_t"], [346, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE"]], "gs::tensorcontext::data_t (c++ type)": [[346, "_CPPv4N2gs13TensorContext6data_tE"]], "gs::tensorcontext::fragment (c++ function)": [[346, "_CPPv4N2gs13TensorContext8fragmentEv"]], "gs::tensorcontext::set_shape (c++ function)": [[346, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE"]], "gs::tensorcontext::shape (c++ function)": [[346, "_CPPv4NK2gs13TensorContext5shapeEv"]], "gs::tensorcontext::tensor (c++ function)": [[346, "_CPPv4N2gs13TensorContext6tensorEv"]], "gs::tensorcontextwrapper (c++ class)": [[346, "_CPPv4I000EN2gs20TensorContextWrapperE"]], "gs::tensorcontextwrapper::tensorcontextwrapper (c++ function)": [[346, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::tensorcontextwrapper::toarrowarrays (c++ function)": [[346, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::tensorcontextwrapper::todataframe (c++ function)": [[346, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE"]], "gs::tensorcontextwrapper::tondarray (c++ function)": [[346, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t"]], "gs::tensorcontextwrapper::tovineyarddataframe (c++ function)": [[346, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE"]], "gs::tensorcontextwrapper::tovineyardtensor (c++ function)": [[346, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t"]], "gs::tensorcontextwrapper::context_type (c++ function)": [[346, "_CPPv4N2gs20TensorContextWrapper12context_typeEv"]], "gs::tensorcontextwrapper::fragment_wrapper (c++ function)": [[346, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv"]], "gs::vertexdatacontextwrapper (c++ class)": [[346, "_CPPv4I00EN2gs24VertexDataContextWrapperE"]], "gs::vertexdatacontextwrapper::toarrowarrays (c++ function)": [[346, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::vertexdatacontextwrapper::todataframe (c++ function)": [[346, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tondarray (c++ function)": [[346, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyarddataframe (c++ function)": [[346, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyardtensor (c++ function)": [[346, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::vertexdatacontextwrapper (c++ function)": [[346, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::vertexdatacontextwrapper::context_type (c++ function)": [[346, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv"]], "gs::vertexdatacontextwrapper::fragment_wrapper (c++ function)": [[346, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv"]], "gs::vertexpropertycontext (c++ class)": [[346, "_CPPv4I0EN2gs21VertexPropertyContextE"]], "gs::vertexpropertycontext::vertexpropertycontext (c++ function)": [[346, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t"]], "gs::vertexpropertycontext::add_column (c++ function)": [[346, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType"]], "gs::vertexpropertycontext::fragment (c++ function)": [[346, "_CPPv4N2gs21VertexPropertyContext8fragmentEv"]], "gs::vertexpropertycontext::fragment_t (c++ type)": [[346, "_CPPv4N2gs21VertexPropertyContext10fragment_tE"]], "gs::vertexpropertycontext::get_column (c++ function)": [[346, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t"], [346, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE"]], "gs::vertexpropertycontext::get_typed_column (c++ function)": [[346, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t"], [346, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE"]], "gs::vertexpropertycontext::oid_t (c++ type)": [[346, "_CPPv4N2gs21VertexPropertyContext5oid_tE"]], "gs::vertexpropertycontext::prop_id_t (c++ type)": [[346, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE"]], "gs::vertexpropertycontext::properties_map (c++ function)": [[346, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv"]], "gs::vertexpropertycontext::vertex_properties (c++ function)": [[346, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv"]], "gs::vertexpropertycontext::vertex_t (c++ type)": [[346, "_CPPv4N2gs21VertexPropertyContext8vertex_tE"]], "gs::rpc::analyticalserver (c++ class)": [[346, "_CPPv4N2gs3rpc16AnalyticalServerE"]], "gs::rpc::analyticalserver::analyticalserver (c++ function)": [[346, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi"]], "gs::rpc::analyticalserver::startserver (c++ function)": [[346, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv"]], "gs::rpc::analyticalserver::stopserver (c++ function)": [[346, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv"]], "app (class in graphscope.framework.app)": [[347, "graphscope.framework.app.App"]], "appassets (class in graphscope.framework.app)": [[347, "graphscope.framework.app.AppAssets"]], "appdagnode (class in graphscope.framework.app)": [[347, "graphscope.framework.app.AppDAGNode"]], "javaapp (class in graphscope.analytical.app)": [[347, "graphscope.analytical.app.JavaApp"]], "__call__() (graphscope.analytical.app.javaapp method)": [[347, "graphscope.analytical.app.JavaApp.__call__"]], "__del__() (graphscope.framework.app.app method)": [[347, "graphscope.framework.app.App.__del__"]], "__init__() (graphscope.analytical.app.javaapp method)": [[347, "graphscope.analytical.app.JavaApp.__init__"]], "__init__() (graphscope.framework.app.app method)": [[347, "graphscope.framework.app.App.__init__"]], "__init__() (graphscope.framework.app.appassets method)": [[347, "graphscope.framework.app.AppAssets.__init__"]], "algo (graphscope.framework.app.appassets property)": [[347, "graphscope.framework.app.AppAssets.algo"]], "attribute_assortativity_coefficient() (in module graphscope)": [[347, "graphscope.attribute_assortativity_coefficient"]], "average_degree_connectivity() (in module graphscope)": [[347, "graphscope.average_degree_connectivity"]], "average_shortest_path_length() (in module graphscope)": [[347, "graphscope.average_shortest_path_length"]], "avg_clustering() (in module graphscope)": [[347, "graphscope.avg_clustering"]], "bfs() (in module graphscope)": [[347, "graphscope.bfs"]], "cdlp() (in module graphscope)": [[347, "graphscope.cdlp"]], "clustering() (in module graphscope)": [[347, "graphscope.clustering"]], "context_type (graphscope.framework.app.appassets property)": [[347, "graphscope.framework.app.AppAssets.context_type"]], "degree_assortativity_coefficient() (in module graphscope)": [[347, "graphscope.degree_assortativity_coefficient"]], "degree_centrality() (in module graphscope)": [[347, "graphscope.degree_centrality"]], "eigenvector_centrality() (in module graphscope)": [[347, "graphscope.eigenvector_centrality"]], "gar (graphscope.framework.app.appassets property)": [[347, "graphscope.framework.app.AppAssets.gar"]], "hits() (in module graphscope)": [[347, "graphscope.hits"]], "is_compatible() (graphscope.analytical.app.javaapp method)": [[347, "graphscope.analytical.app.JavaApp.is_compatible"]], "is_compatible() (graphscope.framework.app.appassets method)": [[347, "graphscope.framework.app.AppAssets.is_compatible"]], "is_simple_path() (in module graphscope)": [[347, "graphscope.is_simple_path"]], "k_core() (in module graphscope)": [[347, "graphscope.k_core"]], "k_shell() (in module graphscope)": [[347, "graphscope.k_shell"]], "katz_centrality() (in module graphscope)": [[347, "graphscope.katz_centrality"]], "key (graphscope.framework.app.app property)": [[347, "graphscope.framework.app.App.key"]], "louvain() (in module graphscope)": [[347, "graphscope.louvain"]], "lpa() (in module graphscope)": [[347, "graphscope.lpa"]], "lpa_u2i() (in module graphscope)": [[347, "graphscope.lpa_u2i"]], "numeric_assortativity_coefficient() (in module graphscope)": [[347, "graphscope.numeric_assortativity_coefficient"]], "pagerank() (in module graphscope)": [[347, "graphscope.pagerank"]], "pagerank_nx() (in module graphscope)": [[347, "graphscope.pagerank_nx"]], "signature (graphscope.framework.app.app property)": [[347, "graphscope.framework.app.App.signature"]], "signature (graphscope.framework.app.appassets property)": [[347, "graphscope.framework.app.AppAssets.signature"]], "signature() (graphscope.analytical.app.javaapp method)": [[347, "graphscope.analytical.app.JavaApp.signature"]], "sssp() (in module graphscope)": [[347, "graphscope.sssp"]], "triangles() (in module graphscope)": [[347, "graphscope.triangles"]], "type (graphscope.framework.app.appassets property)": [[347, "graphscope.framework.app.AppAssets.type"]], "voterank() (in module graphscope)": [[347, "graphscope.voterank"]], "wcc() (in module graphscope)": [[347, "graphscope.wcc"]], "basecontextdagnode (class in graphscope.framework.context)": [[348, "graphscope.framework.context.BaseContextDAGNode"]], "context (class in graphscope.framework.context)": [[348, "graphscope.framework.context.Context"]], "dynamicvertexdatacontext (class in graphscope.framework.context)": [[348, "graphscope.framework.context.DynamicVertexDataContext"]], "labeledvertexdatacontextdagnode (class in graphscope.framework.context)": [[348, "graphscope.framework.context.LabeledVertexDataContextDAGNode"]], "labeledvertexpropertycontextdagnode (class in graphscope.framework.context)": [[348, "graphscope.framework.context.LabeledVertexPropertyContextDAGNode"]], "resultdagnode (class in graphscope.framework.context)": [[348, "graphscope.framework.context.ResultDAGNode"]], "tensorcontextdagnode (class in graphscope.framework.context)": [[348, "graphscope.framework.context.TensorContextDAGNode"]], "vertexdatacontextdagnode (class in graphscope.framework.context)": [[348, "graphscope.framework.context.VertexDataContextDAGNode"]], "vertexpropertycontextdagnode (class in graphscope.framework.context)": [[348, "graphscope.framework.context.VertexPropertyContextDAGNode"]], "to_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[348, "graphscope.framework.context.BaseContextDAGNode.to_dataframe"]], "to_numpy() (graphscope.framework.context.basecontextdagnode method)": [[348, "graphscope.framework.context.BaseContextDAGNode.to_numpy"]], "to_vineyard_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[348, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_dataframe"]], "to_vineyard_tensor() (graphscope.framework.context.basecontextdagnode method)": [[348, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_tensor"]], "vertex (in module graphscope)": [[353, "graphscope.Vertex"]], "declare() (in module graphscope)": [[354, "graphscope.declare"]], "load_app() (in module graphscope.framework.app)": [[355, "graphscope.framework.app.load_app"]], "add_column() (in module graphscope.framework.dag_utils)": [[356, "graphscope.framework.dag_utils.add_column"]], "add_labels_to_graph() (in module graphscope.framework.dag_utils)": [[357, "graphscope.framework.dag_utils.add_labels_to_graph"]], "arrow_to_dynamic() (in module graphscope.framework.dag_utils)": [[358, "graphscope.framework.dag_utils.arrow_to_dynamic"]], "bind_app() (in module graphscope.framework.dag_utils)": [[359, "graphscope.framework.dag_utils.bind_app"]], "clear_edges() (in module graphscope.framework.dag_utils)": [[360, "graphscope.framework.dag_utils.clear_edges"]], "clear_graph() (in module graphscope.framework.dag_utils)": [[361, "graphscope.framework.dag_utils.clear_graph"]], "context_to_dataframe() (in module graphscope.framework.dag_utils)": [[362, "graphscope.framework.dag_utils.context_to_dataframe"]], "context_to_numpy() (in module graphscope.framework.dag_utils)": [[363, "graphscope.framework.dag_utils.context_to_numpy"]], "copy_graph() (in module graphscope.framework.dag_utils)": [[364, "graphscope.framework.dag_utils.copy_graph"]], "create_app() (in module graphscope.framework.dag_utils)": [[365, "graphscope.framework.dag_utils.create_app"]], "create_graph() (in module graphscope.framework.dag_utils)": [[366, "graphscope.framework.dag_utils.create_graph"]], "create_graph_view() (in module graphscope.framework.dag_utils)": [[367, "graphscope.framework.dag_utils.create_graph_view"]], "create_loader() (in module graphscope.framework.dag_utils)": [[368, "graphscope.framework.dag_utils.create_loader"]], "create_subgraph() (in module graphscope.framework.dag_utils)": [[369, "graphscope.framework.dag_utils.create_subgraph"]], "create_unload_op() (in module graphscope.framework.dag_utils)": [[370, "graphscope.framework.dag_utils.create_unload_op"]], "dynamic_to_arrow() (in module graphscope.framework.dag_utils)": [[371, "graphscope.framework.dag_utils.dynamic_to_arrow"]], "get_context_data() (in module graphscope.framework.dag_utils)": [[372, "graphscope.framework.dag_utils.get_context_data"]], "graph_to_dataframe() (in module graphscope.framework.dag_utils)": [[373, "graphscope.framework.dag_utils.graph_to_dataframe"]], "graph_to_numpy() (in module graphscope.framework.dag_utils)": [[374, "graphscope.framework.dag_utils.graph_to_numpy"]], "gremlin_to_subgraph() (in module graphscope.framework.dag_utils)": [[375, "graphscope.framework.dag_utils.gremlin_to_subgraph"]], "modify_edges() (in module graphscope.framework.dag_utils)": [[376, "graphscope.framework.dag_utils.modify_edges"]], "modify_vertices() (in module graphscope.framework.dag_utils)": [[377, "graphscope.framework.dag_utils.modify_vertices"]], "output() (in module graphscope.framework.dag_utils)": [[378, "graphscope.framework.dag_utils.output"]], "project_arrow_property_graph() (in module graphscope.framework.dag_utils)": [[379, "graphscope.framework.dag_utils.project_arrow_property_graph"]], "project_to_simple() (in module graphscope.framework.dag_utils)": [[380, "graphscope.framework.dag_utils.project_to_simple"]], "report_graph() (in module graphscope.framework.dag_utils)": [[381, "graphscope.framework.dag_utils.report_graph"]], "run_app() (in module graphscope.framework.dag_utils)": [[382, "graphscope.framework.dag_utils.run_app"]], "to_data_sink() (in module graphscope.framework.dag_utils)": [[383, "graphscope.framework.dag_utils.to_data_sink"]], "to_directed() (in module graphscope.framework.dag_utils)": [[384, "graphscope.framework.dag_utils.to_directed"]], "to_undirected() (in module graphscope.framework.dag_utils)": [[385, "graphscope.framework.dag_utils.to_undirected"]], "to_vineyard_dataframe() (in module graphscope.framework.dag_utils)": [[386, "graphscope.framework.dag_utils.to_vineyard_dataframe"]], "to_vineyard_tensor() (in module graphscope.framework.dag_utils)": [[387, "graphscope.framework.dag_utils.to_vineyard_tensor"]], "unload_app() (in module graphscope.framework.dag_utils)": [[388, "graphscope.framework.dag_utils.unload_app"]], "unload_context() (in module graphscope.framework.dag_utils)": [[389, "graphscope.framework.dag_utils.unload_context"]], "unload_graph() (in module graphscope.framework.dag_utils)": [[390, "graphscope.framework.dag_utils.unload_graph"]], "__init__() (graphscope.framework.operation.operation method)": [[391, "graphscope.framework.operation.Operation.__init__"]], "as_op_def() (graphscope.framework.operation.operation method)": [[392, "graphscope.framework.operation.Operation.as_op_def"]], "eval() (graphscope.framework.operation.operation method)": [[393, "graphscope.framework.operation.Operation.eval"]], "evaluated (graphscope.framework.operation.operation property)": [[394, "graphscope.framework.operation.Operation.evaluated"]], "key (graphscope.framework.operation.operation property)": [[395, "graphscope.framework.operation.Operation.key"]], "signature (graphscope.framework.operation.operation property)": [[396, "graphscope.framework.operation.Operation.signature"]], "g() (in module graphscope)": [[397, "graphscope.g"]], "get_default_session() (in module graphscope)": [[398, "graphscope.get_default_session"]], "graphlearn() (in module graphscope)": [[399, "graphscope.graphlearn"]], "gremlin() (in module graphscope)": [[400, "graphscope.gremlin"]], "has_default_session() (in module graphscope)": [[401, "graphscope.has_default_session"]], "session (in module graphscope)": [[402, "graphscope.session"]], "set_option() (in module graphscope)": [[403, "graphscope.set_option"]], "graph (class in graphscope.framework.graph)": [[418, "graphscope.framework.graph.Graph"]], "graphdagnode (class in graphscope.framework.graph)": [[418, "graphscope.framework.graph.GraphDAGNode"]], "loader (class in graphscope.framework.loader)": [[418, "graphscope.framework.loader.Loader"]], "__init__() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.__init__"]], "__init__() (graphscope.framework.graph.graphdagnode method)": [[418, "graphscope.framework.graph.GraphDAGNode.__init__"]], "__init__() (graphscope.framework.loader.loader method)": [[418, "graphscope.framework.loader.Loader.__init__"]], "add_column() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.add_column"]], "add_column() (graphscope.framework.graph.graphdagnode method)": [[418, "graphscope.framework.graph.GraphDAGNode.add_column"]], "add_edges() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.add_edges"]], "add_edges() (graphscope.framework.graph.graphdagnode method)": [[418, "graphscope.framework.graph.GraphDAGNode.add_edges"]], "add_vertices() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.add_vertices"]], "add_vertices() (graphscope.framework.graph.graphdagnode method)": [[418, "graphscope.framework.graph.GraphDAGNode.add_vertices"]], "consolidate_columns() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.consolidate_columns"]], "consolidate_columns() (graphscope.framework.graph.graphdagnode method)": [[418, "graphscope.framework.graph.GraphDAGNode.consolidate_columns"]], "detach() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.detach"]], "key (graphscope.framework.graph.graph property)": [[418, "graphscope.framework.graph.Graph.key"]], "load_from() (graphscope.framework.graph.graph class method)": [[418, "graphscope.framework.graph.Graph.load_from"]], "load_from() (in module graphscope.framework.graph_builder)": [[418, "graphscope.framework.graph_builder.load_from"]], "loaded() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.loaded"]], "project() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.project"]], "project() (graphscope.framework.graph.graphdagnode method)": [[418, "graphscope.framework.graph.GraphDAGNode.project"]], "save_to() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.save_to"]], "schema (graphscope.framework.graph.graph property)": [[418, "graphscope.framework.graph.Graph.schema"]], "schema_path (graphscope.framework.graph.graph property)": [[418, "graphscope.framework.graph.Graph.schema_path"]], "session_id (graphscope.framework.graph.graph property)": [[418, "graphscope.framework.graph.Graph.session_id"]], "to_dataframe() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.to_dataframe"]], "to_directed() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.to_directed"]], "to_numpy() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.to_numpy"]], "to_undirected() (graphscope.framework.graph.graph method)": [[418, "graphscope.framework.graph.Graph.to_undirected"]], "vineyard_id (graphscope.framework.graph.graph property)": [[418, "graphscope.framework.graph.Graph.vineyard_id"]], "interactivequery (class in graphscope.interactive.query)": [[419, "graphscope.interactive.query.InteractiveQuery"]], "__init__() (graphscope.interactive.query.interactivequery method)": [[419, "graphscope.interactive.query.InteractiveQuery.__init__"]], "close() (graphscope.interactive.query.interactivequery method)": [[419, "graphscope.interactive.query.InteractiveQuery.close"]], "cypher_driver (graphscope.interactive.query.interactivequery property)": [[419, "graphscope.interactive.query.InteractiveQuery.cypher_driver"]], "cypher_url (graphscope.interactive.query.interactivequery property)": [[419, "graphscope.interactive.query.InteractiveQuery.cypher_url"]], "execute() (graphscope.interactive.query.interactivequery method)": [[419, "graphscope.interactive.query.InteractiveQuery.execute"]], "graph_url (graphscope.interactive.query.interactivequery property)": [[419, "graphscope.interactive.query.InteractiveQuery.graph_url"]], "gremlin_client (graphscope.interactive.query.interactivequery property)": [[419, "graphscope.interactive.query.InteractiveQuery.gremlin_client"]], "gremlin_url (graphscope.interactive.query.interactivequery property)": [[419, "graphscope.interactive.query.InteractiveQuery.gremlin_url"]], "object_id (graphscope.interactive.query.interactivequery property)": [[419, "graphscope.interactive.query.InteractiveQuery.object_id"]], "session (graphscope.interactive.query.interactivequery property)": [[419, "graphscope.interactive.query.InteractiveQuery.session"]], "session_id (graphscope.interactive.query.interactivequery property)": [[419, "graphscope.interactive.query.InteractiveQuery.session_id"]], "subgraph() (graphscope.interactive.query.interactivequery method)": [[419, "graphscope.interactive.query.InteractiveQuery.subgraph"]], "submit() (graphscope.interactive.query.interactivequery method)": [[419, "graphscope.interactive.query.InteractiveQuery.submit"]], "traversal_source() (graphscope.interactive.query.interactivequery method)": [[419, "graphscope.interactive.query.InteractiveQuery.traversal_source"]], "e() (graphscope.learning.graph.graph method)": [[420, "graphscope.learning.graph.Graph.E"]], "graph (class in graphscope.learning.graph)": [[420, "graphscope.learning.graph.Graph"]], "v() (graphscope.learning.graph.graph method)": [[420, "graphscope.learning.graph.Graph.V"]], "__init__() (graphscope.learning.graph.graph method)": [[420, "graphscope.learning.graph.Graph.__init__"]], "get_handle() (graphscope.learning.graph.graph method)": [[420, "graphscope.learning.graph.Graph.get_handle"]], "average_clustering() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.average_clustering"]], "average_shortest_path_length() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.average_shortest_path_length"]], "bfs_edges() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.bfs_edges"]], "clustering() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.clustering"]], "degree_centrality() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.degree_centrality"]], "eigenvector_centrality() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.eigenvector_centrality"]], "has_path() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.has_path"]], "hits() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.hits"]], "in_degree_centrality() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.in_degree_centrality"]], "k_core() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.k_core"]], "katz_centrality() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.katz_centrality"]], "out_degree_centrality() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.out_degree_centrality"]], "triangles() (in module graphscope.nx.builtin)": [[421, "graphscope.nx.builtin.triangles"]], "graphscope.nx.classes.function": [[422, "module-graphscope.nx.classes.function"]], "add_cycle() (in module graphscope.nx.classes.function)": [[423, "graphscope.nx.classes.function.add_cycle"]], "add_path() (in module graphscope.nx.classes.function)": [[424, "graphscope.nx.classes.function.add_path"]], "add_star() (in module graphscope.nx.classes.function)": [[425, "graphscope.nx.classes.function.add_star"]], "all_neighbors() (in module graphscope.nx.classes.function)": [[426, "graphscope.nx.classes.function.all_neighbors"]], "common_neighbors() (in module graphscope.nx.classes.function)": [[427, "graphscope.nx.classes.function.common_neighbors"]], "create_empty_copy() (in module graphscope.nx.classes.function)": [[428, "graphscope.nx.classes.function.create_empty_copy"]], "degree() (in module graphscope.nx.classes.function)": [[429, "graphscope.nx.classes.function.degree"]], "degree_histogram() (in module graphscope.nx.classes.function)": [[430, "graphscope.nx.classes.function.degree_histogram"]], "density() (in module graphscope.nx.classes.function)": [[431, "graphscope.nx.classes.function.density"]], "edge_subgraph() (in module graphscope.nx.classes.function)": [[432, "graphscope.nx.classes.function.edge_subgraph"]], "edges() (in module graphscope.nx.classes.function)": [[433, "graphscope.nx.classes.function.edges"]], "freeze() (in module graphscope.nx.classes.function)": [[434, "graphscope.nx.classes.function.freeze"]], "induced_subgraph() (in module graphscope.nx.classes.function)": [[435, "graphscope.nx.classes.function.induced_subgraph"]], "info() (in module graphscope.nx.classes.function)": [[436, "graphscope.nx.classes.function.info"]], "is_directed() (in module graphscope.nx.classes.function)": [[437, "graphscope.nx.classes.function.is_directed"]], "is_empty() (in module graphscope.nx.classes.function)": [[438, "graphscope.nx.classes.function.is_empty"]], "is_frozen() (in module graphscope.nx.classes.function)": [[439, "graphscope.nx.classes.function.is_frozen"]], "is_negatively_weighted() (in module graphscope.nx.classes.function)": [[440, "graphscope.nx.classes.function.is_negatively_weighted"]], "is_weighted() (in module graphscope.nx.classes.function)": [[441, "graphscope.nx.classes.function.is_weighted"]], "neighbors() (in module graphscope.nx.classes.function)": [[442, "graphscope.nx.classes.function.neighbors"]], "nodes() (in module graphscope.nx.classes.function)": [[443, "graphscope.nx.classes.function.nodes"]], "nodes_with_selfloops() (in module graphscope.nx.classes.function)": [[444, "graphscope.nx.classes.function.nodes_with_selfloops"]], "non_edges() (in module graphscope.nx.classes.function)": [[445, "graphscope.nx.classes.function.non_edges"]], "non_neighbors() (in module graphscope.nx.classes.function)": [[446, "graphscope.nx.classes.function.non_neighbors"]], "number_of_edges() (in module graphscope.nx.classes.function)": [[447, "graphscope.nx.classes.function.number_of_edges"]], "number_of_nodes() (in module graphscope.nx.classes.function)": [[448, "graphscope.nx.classes.function.number_of_nodes"]], "number_of_selfloops() (in module graphscope.nx.classes.function)": [[449, "graphscope.nx.classes.function.number_of_selfloops"]], "selfloop_edges() (in module graphscope.nx.classes.function)": [[450, "graphscope.nx.classes.function.selfloop_edges"]], "subgraph() (in module graphscope.nx.classes.function)": [[451, "graphscope.nx.classes.function.subgraph"]], "to_directed() (in module graphscope.nx.classes.function)": [[452, "graphscope.nx.classes.function.to_directed"]], "to_undirected() (in module graphscope.nx.classes.function)": [[453, "graphscope.nx.classes.function.to_undirected"]], "graph_atlas() (in module graphscope.nx.generators.atlas)": [[454, "graphscope.nx.generators.atlas.graph_atlas"]], "graph_atlas_g() (in module graphscope.nx.generators.atlas)": [[455, "graphscope.nx.generators.atlas.graph_atlas_g"]], "balanced_tree() (in module graphscope.nx.generators.classic)": [[456, "graphscope.nx.generators.classic.balanced_tree"]], "barbell_graph() (in module graphscope.nx.generators.classic)": [[457, "graphscope.nx.generators.classic.barbell_graph"]], "binomial_tree() (in module graphscope.nx.generators.classic)": [[458, "graphscope.nx.generators.classic.binomial_tree"]], "circulant_graph() (in module graphscope.nx.generators.classic)": [[459, "graphscope.nx.generators.classic.circulant_graph"]], "circular_ladder_graph() (in module graphscope.nx.generators.classic)": [[460, "graphscope.nx.generators.classic.circular_ladder_graph"]], "complete_graph() (in module graphscope.nx.generators.classic)": [[461, "graphscope.nx.generators.classic.complete_graph"]], "complete_multipartite_graph() (in module graphscope.nx.generators.classic)": [[462, "graphscope.nx.generators.classic.complete_multipartite_graph"]], "cycle_graph() (in module graphscope.nx.generators.classic)": [[463, "graphscope.nx.generators.classic.cycle_graph"]], "dorogovtsev_goltsev_mendes_graph() (in module graphscope.nx.generators.classic)": [[464, "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph"]], "empty_graph() (in module graphscope.nx.generators.classic)": [[465, "graphscope.nx.generators.classic.empty_graph"]], "full_rary_tree() (in module graphscope.nx.generators.classic)": [[466, "graphscope.nx.generators.classic.full_rary_tree"]], "ladder_graph() (in module graphscope.nx.generators.classic)": [[467, "graphscope.nx.generators.classic.ladder_graph"]], "lollipop_graph() (in module graphscope.nx.generators.classic)": [[468, "graphscope.nx.generators.classic.lollipop_graph"]], "null_graph() (in module graphscope.nx.generators.classic)": [[469, "graphscope.nx.generators.classic.null_graph"]], "path_graph() (in module graphscope.nx.generators.classic)": [[470, "graphscope.nx.generators.classic.path_graph"]], "star_graph() (in module graphscope.nx.generators.classic)": [[471, "graphscope.nx.generators.classic.star_graph"]], "trivial_graph() (in module graphscope.nx.generators.classic)": [[472, "graphscope.nx.generators.classic.trivial_graph"]], "turan_graph() (in module graphscope.nx.generators.classic)": [[473, "graphscope.nx.generators.classic.turan_graph"]], "wheel_graph() (in module graphscope.nx.generators.classic)": [[474, "graphscope.nx.generators.classic.wheel_graph"]], "lfr_benchmark_graph() (in module graphscope.nx.generators.community)": [[475, "graphscope.nx.generators.community.LFR_benchmark_graph"]], "caveman_graph() (in module graphscope.nx.generators.community)": [[476, "graphscope.nx.generators.community.caveman_graph"]], "connected_caveman_graph() (in module graphscope.nx.generators.community)": [[477, "graphscope.nx.generators.community.connected_caveman_graph"]], "gaussian_random_partition_graph() (in module graphscope.nx.generators.community)": [[478, "graphscope.nx.generators.community.gaussian_random_partition_graph"]], "planted_partition_graph() (in module graphscope.nx.generators.community)": [[479, "graphscope.nx.generators.community.planted_partition_graph"]], "random_partition_graph() (in module graphscope.nx.generators.community)": [[480, "graphscope.nx.generators.community.random_partition_graph"]], "relaxed_caveman_graph() (in module graphscope.nx.generators.community)": [[481, "graphscope.nx.generators.community.relaxed_caveman_graph"]], "ring_of_cliques() (in module graphscope.nx.generators.community)": [[482, "graphscope.nx.generators.community.ring_of_cliques"]], "stochastic_block_model() (in module graphscope.nx.generators.community)": [[483, "graphscope.nx.generators.community.stochastic_block_model"]], "windmill_graph() (in module graphscope.nx.generators.community)": [[484, "graphscope.nx.generators.community.windmill_graph"]], "configuration_model() (in module graphscope.nx.generators.degree_seq)": [[485, "graphscope.nx.generators.degree_seq.configuration_model"]], "degree_sequence_tree() (in module graphscope.nx.generators.degree_seq)": [[486, "graphscope.nx.generators.degree_seq.degree_sequence_tree"]], "directed_configuration_model() (in module graphscope.nx.generators.degree_seq)": [[487, "graphscope.nx.generators.degree_seq.directed_configuration_model"]], "directed_havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[488, "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph"]], "expected_degree_graph() (in module graphscope.nx.generators.degree_seq)": [[489, "graphscope.nx.generators.degree_seq.expected_degree_graph"]], "havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[490, "graphscope.nx.generators.degree_seq.havel_hakimi_graph"]], "random_degree_sequence_graph() (in module graphscope.nx.generators.degree_seq)": [[491, "graphscope.nx.generators.degree_seq.random_degree_sequence_graph"]], "gn_graph() (in module graphscope.nx.generators.directed)": [[492, "graphscope.nx.generators.directed.gn_graph"]], "gnc_graph() (in module graphscope.nx.generators.directed)": [[493, "graphscope.nx.generators.directed.gnc_graph"]], "gnr_graph() (in module graphscope.nx.generators.directed)": [[494, "graphscope.nx.generators.directed.gnr_graph"]], "random_k_out_graph() (in module graphscope.nx.generators.directed)": [[495, "graphscope.nx.generators.directed.random_k_out_graph"]], "scale_free_graph() (in module graphscope.nx.generators.directed)": [[496, "graphscope.nx.generators.directed.scale_free_graph"]], "duplication_divergence_graph() (in module graphscope.nx.generators.duplication)": [[497, "graphscope.nx.generators.duplication.duplication_divergence_graph"]], "partial_duplication_graph() (in module graphscope.nx.generators.duplication)": [[498, "graphscope.nx.generators.duplication.partial_duplication_graph"]], "ego_graph() (in module graphscope.nx.generators.ego)": [[499, "graphscope.nx.generators.ego.ego_graph"]], "chordal_cycle_graph() (in module graphscope.nx.generators.expanders)": [[500, "graphscope.nx.generators.expanders.chordal_cycle_graph"]], "margulis_gabber_galil_graph() (in module graphscope.nx.generators.expanders)": [[501, "graphscope.nx.generators.expanders.margulis_gabber_galil_graph"]], "paley_graph() (in module graphscope.nx.generators.expanders)": [[502, "graphscope.nx.generators.expanders.paley_graph"]], "geographical_threshold_graph() (in module graphscope.nx.generators.geometric)": [[503, "graphscope.nx.generators.geometric.geographical_threshold_graph"]], "random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[504, "graphscope.nx.generators.geometric.random_geometric_graph"]], "soft_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[505, "graphscope.nx.generators.geometric.soft_random_geometric_graph"]], "thresholded_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[506, "graphscope.nx.generators.geometric.thresholded_random_geometric_graph"]], "waxman_graph() (in module graphscope.nx.generators.geometric)": [[507, "graphscope.nx.generators.geometric.waxman_graph"]], "hkn_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[508, "graphscope.nx.generators.harary_graph.hkn_harary_graph"]], "hnm_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[509, "graphscope.nx.generators.harary_graph.hnm_harary_graph"]], "general_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[510, "graphscope.nx.generators.intersection.general_random_intersection_graph"]], "k_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[511, "graphscope.nx.generators.intersection.k_random_intersection_graph"]], "uniform_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[512, "graphscope.nx.generators.intersection.uniform_random_intersection_graph"]], "directed_joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[513, "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph"]], "is_valid_directed_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[514, "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree"]], "is_valid_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[515, "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree"]], "joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[516, "graphscope.nx.generators.joint_degree_seq.joint_degree_graph"]], "mycielski_graph() (in module graphscope.nx.generators.mycielski)": [[517, "graphscope.nx.generators.mycielski.mycielski_graph"]], "mycielskian() (in module graphscope.nx.generators.mycielski)": [[518, "graphscope.nx.generators.mycielski.mycielskian"]], "nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[519, "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees"]], "number_of_nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[520, "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees"]], "lcf_graph() (in module graphscope.nx.generators.small)": [[521, "graphscope.nx.generators.small.LCF_graph"]], "bull_graph() (in module graphscope.nx.generators.small)": [[522, "graphscope.nx.generators.small.bull_graph"]], "chvatal_graph() (in module graphscope.nx.generators.small)": [[523, "graphscope.nx.generators.small.chvatal_graph"]], "cubical_graph() (in module graphscope.nx.generators.small)": [[524, "graphscope.nx.generators.small.cubical_graph"]], "desargues_graph() (in module graphscope.nx.generators.small)": [[525, "graphscope.nx.generators.small.desargues_graph"]], "diamond_graph() (in module graphscope.nx.generators.small)": [[526, "graphscope.nx.generators.small.diamond_graph"]], "dodecahedral_graph() (in module graphscope.nx.generators.small)": [[527, "graphscope.nx.generators.small.dodecahedral_graph"]], "frucht_graph() (in module graphscope.nx.generators.small)": [[528, "graphscope.nx.generators.small.frucht_graph"]], "heawood_graph() (in module graphscope.nx.generators.small)": [[529, "graphscope.nx.generators.small.heawood_graph"]], "house_graph() (in module graphscope.nx.generators.small)": [[530, "graphscope.nx.generators.small.house_graph"]], "house_x_graph() (in module graphscope.nx.generators.small)": [[531, "graphscope.nx.generators.small.house_x_graph"]], "icosahedral_graph() (in module graphscope.nx.generators.small)": [[532, "graphscope.nx.generators.small.icosahedral_graph"]], "krackhardt_kite_graph() (in module graphscope.nx.generators.small)": [[533, "graphscope.nx.generators.small.krackhardt_kite_graph"]], "make_small_graph() (in module graphscope.nx.generators.small)": [[534, "graphscope.nx.generators.small.make_small_graph"]], "moebius_kantor_graph() (in module graphscope.nx.generators.small)": [[535, "graphscope.nx.generators.small.moebius_kantor_graph"]], "octahedral_graph() (in module graphscope.nx.generators.small)": [[536, "graphscope.nx.generators.small.octahedral_graph"]], "pappus_graph() (in module graphscope.nx.generators.small)": [[537, "graphscope.nx.generators.small.pappus_graph"]], "petersen_graph() (in module graphscope.nx.generators.small)": [[538, "graphscope.nx.generators.small.petersen_graph"]], "sedgewick_maze_graph() (in module graphscope.nx.generators.small)": [[539, "graphscope.nx.generators.small.sedgewick_maze_graph"]], "tetrahedral_graph() (in module graphscope.nx.generators.small)": [[540, "graphscope.nx.generators.small.tetrahedral_graph"]], "truncated_cube_graph() (in module graphscope.nx.generators.small)": [[541, "graphscope.nx.generators.small.truncated_cube_graph"]], "truncated_tetrahedron_graph() (in module graphscope.nx.generators.small)": [[542, "graphscope.nx.generators.small.truncated_tetrahedron_graph"]], "tutte_graph() (in module graphscope.nx.generators.small)": [[543, "graphscope.nx.generators.small.tutte_graph"]], "davis_southern_women_graph() (in module graphscope.nx.generators.social)": [[544, "graphscope.nx.generators.social.davis_southern_women_graph"]], "florentine_families_graph() (in module graphscope.nx.generators.social)": [[545, "graphscope.nx.generators.social.florentine_families_graph"]], "karate_club_graph() (in module graphscope.nx.generators.social)": [[546, "graphscope.nx.generators.social.karate_club_graph"]], "les_miserables_graph() (in module graphscope.nx.generators.social)": [[547, "graphscope.nx.generators.social.les_miserables_graph"]], "spectral_graph_forge() (in module graphscope.nx.generators.spectral_graph_forge)": [[548, "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge"]], "sudoku_graph() (in module graphscope.nx.generators.sudoku)": [[549, "graphscope.nx.generators.sudoku.sudoku_graph"]], "prefix_tree() (in module graphscope.nx.generators.trees)": [[550, "graphscope.nx.generators.trees.prefix_tree"]], "random_tree() (in module graphscope.nx.generators.trees)": [[551, "graphscope.nx.generators.trees.random_tree"]], "triad_graph() (in module graphscope.nx.generators.triads)": [[552, "graphscope.nx.generators.triads.triad_graph"]], "random_internet_as_graph() (in module networkx.generators.internet_as_graphs)": [[553, "networkx.generators.internet_as_graphs.random_internet_as_graph"]], "stochastic_graph() (in module networkx.generators.stochastic)": [[554, "networkx.generators.stochastic.stochastic_graph"]], "graphscope.nx.generators.atlas": [[555, "module-graphscope.nx.generators.atlas"]], "graphscope.nx.generators.classic": [[555, "module-graphscope.nx.generators.classic"]], "graphscope.nx.generators.community": [[555, "module-graphscope.nx.generators.community"]], "graphscope.nx.generators.degree_seq": [[555, "module-graphscope.nx.generators.degree_seq"]], "graphscope.nx.generators.directed": [[555, "module-graphscope.nx.generators.directed"]], "graphscope.nx.generators.duplication": [[555, "module-graphscope.nx.generators.duplication"]], "graphscope.nx.generators.ego": [[555, "module-graphscope.nx.generators.ego"]], "graphscope.nx.generators.expanders": [[555, "module-graphscope.nx.generators.expanders"]], "graphscope.nx.generators.geometric": [[555, "module-graphscope.nx.generators.geometric"]], "graphscope.nx.generators.harary_graph": [[555, "module-graphscope.nx.generators.harary_graph"]], "graphscope.nx.generators.intersection": [[555, "module-graphscope.nx.generators.intersection"]], "graphscope.nx.generators.joint_degree_seq": [[555, "module-graphscope.nx.generators.joint_degree_seq"]], "graphscope.nx.generators.mycielski": [[555, "module-graphscope.nx.generators.mycielski"]], "graphscope.nx.generators.nonisomorphic_trees": [[555, "module-graphscope.nx.generators.nonisomorphic_trees"]], "graphscope.nx.generators.small": [[555, "module-graphscope.nx.generators.small"]], "graphscope.nx.generators.social": [[555, "module-graphscope.nx.generators.social"]], "graphscope.nx.generators.spectral_graph_forge": [[555, "module-graphscope.nx.generators.spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[555, "module-graphscope.nx.generators.sudoku"]], "graphscope.nx.generators.trees": [[555, "module-graphscope.nx.generators.trees"]], "graphscope.nx.generators.triads": [[555, "module-graphscope.nx.generators.triads"]], "networkx.generators.internet_as_graphs": [[555, "module-networkx.generators.internet_as_graphs"]], "networkx.generators.stochastic": [[555, "module-networkx.generators.stochastic"]], "digraph (class in graphscope.nx)": [[556, "graphscope.nx.DiGraph"]], "graph (class in graphscope.nx)": [[556, "graphscope.nx.Graph"]], "__contains__() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.__contains__"]], "__contains__() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.__contains__"]], "__getitem__() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.__getitem__"]], "__getitem__() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.__getitem__"]], "__init__() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.__init__"]], "__init__() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.__init__"]], "__iter__() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.__iter__"]], "__iter__() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.__iter__"]], "__len__() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.__len__"]], "__len__() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.__len__"]], "add_edge() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.add_edge"]], "add_edge() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.add_edge"]], "add_edges_from() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.add_edges_from"]], "add_edges_from() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.add_edges_from"]], "add_node() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.add_node"]], "add_node() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.add_node"]], "add_nodes_from() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.add_nodes_from"]], "add_nodes_from() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.add_nodes_from"]], "add_weighted_edges_from() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.add_weighted_edges_from"]], "add_weighted_edges_from() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.add_weighted_edges_from"]], "adj (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.adj"]], "adj (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.adj"]], "adjacency() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.adjacency"]], "adjacency() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.adjacency"]], "adjlist_inner_dict_factory (graphscope.nx.digraph attribute)": [[556, "graphscope.nx.DiGraph.adjlist_inner_dict_factory"]], "adjlist_inner_dict_factory (graphscope.nx.graph attribute)": [[556, "graphscope.nx.Graph.adjlist_inner_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.digraph attribute)": [[556, "graphscope.nx.DiGraph.adjlist_outer_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.graph attribute)": [[556, "graphscope.nx.Graph.adjlist_outer_dict_factory"]], "clear() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.clear"]], "clear() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.clear"]], "clear_edges() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.clear_edges"]], "clear_edges() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.clear_edges"]], "copy() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.copy"]], "copy() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.copy"]], "degree (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.degree"]], "degree (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.degree"]], "edge_attr_dict_factory (graphscope.nx.digraph attribute)": [[556, "graphscope.nx.DiGraph.edge_attr_dict_factory"]], "edge_attr_dict_factory (graphscope.nx.graph attribute)": [[556, "graphscope.nx.Graph.edge_attr_dict_factory"]], "edge_subgraph() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.edge_subgraph"]], "edge_subgraph() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.edge_subgraph"]], "edges (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.edges"]], "edges (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.edges"]], "get_edge_data() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.get_edge_data"]], "get_edge_data() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.get_edge_data"]], "graph_attr_dict_factory (graphscope.nx.digraph attribute)": [[556, "graphscope.nx.DiGraph.graph_attr_dict_factory"]], "graph_attr_dict_factory (graphscope.nx.graph attribute)": [[556, "graphscope.nx.Graph.graph_attr_dict_factory"]], "graph_cache_factory (graphscope.nx.digraph attribute)": [[556, "graphscope.nx.DiGraph.graph_cache_factory"]], "graph_cache_factory (graphscope.nx.graph attribute)": [[556, "graphscope.nx.Graph.graph_cache_factory"]], "graph_type (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.graph_type"]], "graph_type (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.graph_type"]], "has_edge() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.has_edge"]], "has_edge() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.has_edge"]], "has_node() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.has_node"]], "has_node() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.has_node"]], "has_predecessor() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.has_predecessor"]], "has_successor() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.has_successor"]], "in_degree (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.in_degree"]], "in_edges (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.in_edges"]], "is_directed() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.is_directed"]], "is_directed() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.is_directed"]], "is_multigraph() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.is_multigraph"]], "is_multigraph() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.is_multigraph"]], "key (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.key"]], "key (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.key"]], "name (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.name"]], "name (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.name"]], "nbunch_iter() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.nbunch_iter"]], "nbunch_iter() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.nbunch_iter"]], "neighbors() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.neighbors"]], "neighbors() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.neighbors"]], "node_attr_dict_factory (graphscope.nx.digraph attribute)": [[556, "graphscope.nx.DiGraph.node_attr_dict_factory"]], "node_attr_dict_factory (graphscope.nx.graph attribute)": [[556, "graphscope.nx.Graph.node_attr_dict_factory"]], "node_dict_factory (graphscope.nx.digraph attribute)": [[556, "graphscope.nx.DiGraph.node_dict_factory"]], "node_dict_factory (graphscope.nx.graph attribute)": [[556, "graphscope.nx.Graph.node_dict_factory"]], "nodes (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.nodes"]], "nodes (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.nodes"]], "number_of_edges() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.number_of_edges"]], "number_of_edges() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.number_of_edges"]], "number_of_nodes() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.number_of_nodes"]], "number_of_nodes() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.number_of_nodes"]], "op (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.op"]], "op (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.op"]], "order() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.order"]], "order() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.order"]], "out_degree (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.out_degree"]], "out_edges (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.out_edges"]], "pred (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.pred"]], "predecessors() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.predecessors"]], "remove_edge() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.remove_edge"]], "remove_edge() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.remove_edge"]], "remove_edges_from() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.remove_edges_from"]], "remove_edges_from() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.remove_edges_from"]], "remove_node() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.remove_node"]], "remove_node() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.remove_node"]], "remove_nodes_from() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.remove_nodes_from"]], "remove_nodes_from() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.remove_nodes_from"]], "reverse() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.reverse"]], "schema (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.schema"]], "schema (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.schema"]], "session (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.session"]], "session (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.session"]], "session_id (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.session_id"]], "session_id (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.session_id"]], "set_edge_data() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.set_edge_data"]], "set_edge_data() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.set_edge_data"]], "set_node_data() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.set_node_data"]], "set_node_data() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.set_node_data"]], "signature (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.signature"]], "signature (graphscope.nx.graph property)": [[556, "graphscope.nx.Graph.signature"]], "size() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.size"]], "size() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.size"]], "subgraph() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.subgraph"]], "subgraph() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.subgraph"]], "succ (graphscope.nx.digraph property)": [[556, "graphscope.nx.DiGraph.succ"]], "successors() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.successors"]], "to_directed() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.to_directed"]], "to_directed() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.to_directed"]], "to_undirected() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.to_undirected"]], "to_undirected() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.to_undirected"]], "to_undirected_class() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.to_undirected_class"]], "to_undirected_class() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.to_undirected_class"]], "update() (graphscope.nx.digraph method)": [[556, "graphscope.nx.DiGraph.update"]], "update() (graphscope.nx.graph method)": [[556, "graphscope.nx.Graph.update"]], "read_adjlist() (in module graphscope.nx)": [[558, "graphscope.nx.read_adjlist"]], "read_edgelist() (in module graphscope.nx)": [[558, "graphscope.nx.read_edgelist"]], "__init__() (in module graphscope.nx.graph)": [[559, "graphscope.nx.Graph.__init__"]], "_convert_arrow_to_dynamic() (in module graphscope.nx.graph)": [[559, "graphscope.nx.Graph._convert_arrow_to_dynamic"]], "operation (class in graphscope.framework.operation)": [[560, "graphscope.framework.operation.Operation"]], "graphscope.framework.dag_utils": [[560, "module-graphscope.framework.dag_utils"]], "session (class in graphscope)": [[563, "graphscope.Session"]], "__enter__() (graphscope.session method)": [[563, "graphscope.Session.__enter__"]], "__exit__() (graphscope.session method)": [[563, "graphscope.Session.__exit__"]], "__init__() (graphscope.session method)": [[563, "graphscope.Session.__init__"]], "add_lib() (graphscope.session method)": [[563, "graphscope.Session.add_lib"]], "as_default() (graphscope.session method)": [[563, "graphscope.Session.as_default"]], "close() (graphscope.session method)": [[563, "graphscope.Session.close"]], "connected() (graphscope.session method)": [[563, "graphscope.Session.connected"]], "engine_config (graphscope.session property)": [[563, "graphscope.Session.engine_config"]], "g() (graphscope.session method)": [[563, "graphscope.Session.g"]], "get_config() (graphscope.session method)": [[563, "graphscope.Session.get_config"]], "get_vineyard_object_mapping_table() (graphscope.session method)": [[563, "graphscope.Session.get_vineyard_object_mapping_table"]], "graphlearn() (graphscope.session method)": [[563, "graphscope.Session.graphlearn"]], "info (graphscope.session property)": [[563, "graphscope.Session.info"]], "interactive() (graphscope.session method)": [[563, "graphscope.Session.interactive"]], "load_from() (graphscope.session method)": [[563, "graphscope.Session.load_from"]], "restore_from_pvc() (graphscope.session method)": [[563, "graphscope.Session.restore_from_pvc"]], "run_fetches() (graphscope.session method)": [[563, "graphscope.Session.run_fetches"]], "store_to_pvc() (graphscope.session method)": [[563, "graphscope.Session.store_to_pvc"]]}})