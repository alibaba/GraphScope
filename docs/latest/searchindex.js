Search.setIndex({"docnames": ["analytical_engine/builtin_algorithms", "analytical_engine/customized_algorithms", "analytical_engine/deployment", "analytical_engine/design_of_gae", "analytical_engine/dev_and_test", "analytical_engine/faqs", "analytical_engine/flash", "analytical_engine/getting_started", "analytical_engine/guide_and_examples", "analytical_engine/ingress", "analytical_engine/key_concepts", "analytical_engine/networkx_compatibility", "analytical_engine/overview_and_architecture", "analytical_engine/performance_tuning", "analytical_engine/programming_model_pie", "analytical_engine/tutorial_dev_algo_cpp_flash", "analytical_engine/tutorial_dev_algo_cpp_pie", "analytical_engine/tutorial_dev_algo_java", "analytical_engine/tutorial_dev_algo_python", "analytical_engine/tutorial_networkx_algorithms", "analytical_engine/tutorial_networkx_operations", "analytical_engine/tutorial_run_builtin_algo", "analytical_engine/tutorial_run_giraph_apps", "analytical_engine/tutorial_run_graphx_apps", "analytical_engine/vertex_centric_models", "contact_us", "deployment/deploy_graphscope_on_clouds", "deployment/deploy_graphscope_on_self_managed_k8s", "deployment/deploy_graphscope_operator", "deployment/deploy_graphscope_with_helm", "deployment/deploy_with_existing_vineyard_cluster", "deployment/install_in_offline_env", "deployment/install_on_local", "deployment/persistent_storage_of_graphs_on_k8s", "design_of_gae", "development/code_style_guide", "development/dev_guide", "development/how_to_contribute", "development/how_to_debug", "development/how_to_instrument", "development/how_to_submit_pr", "development/how_to_test", "error_codes", "flex/coordinator", "flex/coordinator/dev_guide", "flex/coordinator/development/dev_and_test", "flex/coordinator/development/python/README", "flex/coordinator/development/python/docs/AlertApi", "flex/coordinator/development/python/docs/BaseEdgeType", "flex/coordinator/development/python/docs/BaseEdgeTypeVertexTypePairRelationsInner", "flex/coordinator/development/python/docs/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/coordinator/development/python/docs/BasePropertyMeta", "flex/coordinator/development/python/docs/BaseVertexType", "flex/coordinator/development/python/docs/BaseVertexTypeXCsrParams", "flex/coordinator/development/python/docs/ColumnMapping", "flex/coordinator/development/python/docs/ColumnMappingColumn", "flex/coordinator/development/python/docs/CreateAlertReceiverRequest", "flex/coordinator/development/python/docs/CreateAlertRuleRequest", "flex/coordinator/development/python/docs/CreateDataloadingJobResponse", "flex/coordinator/development/python/docs/CreateEdgeType", "flex/coordinator/development/python/docs/CreateGraphRequest", "flex/coordinator/development/python/docs/CreateGraphResponse", "flex/coordinator/development/python/docs/CreateGraphSchemaRequest", "flex/coordinator/development/python/docs/CreatePropertyMeta", "flex/coordinator/development/python/docs/CreateStoredProcRequest", "flex/coordinator/development/python/docs/CreateStoredProcResponse", "flex/coordinator/development/python/docs/CreateVertexType", "flex/coordinator/development/python/docs/DataSourceApi", "flex/coordinator/development/python/docs/DataloadingJobConfig", "flex/coordinator/development/python/docs/DataloadingJobConfigEdgesInner", "flex/coordinator/development/python/docs/DataloadingJobConfigLoadingConfig", "flex/coordinator/development/python/docs/DataloadingJobConfigLoadingConfigFormat", "flex/coordinator/development/python/docs/DataloadingJobConfigVerticesInner", "flex/coordinator/development/python/docs/DataloadingMRJobConfig", "flex/coordinator/development/python/docs/DateType", "flex/coordinator/development/python/docs/DeploymentApi", "flex/coordinator/development/python/docs/EdgeMapping", "flex/coordinator/development/python/docs/EdgeMappingTypeTriplet", "flex/coordinator/development/python/docs/Error", "flex/coordinator/development/python/docs/FixedChar", "flex/coordinator/development/python/docs/FixedCharChar", "flex/coordinator/development/python/docs/GSDataType", "flex/coordinator/development/python/docs/GetAlertMessageResponse", "flex/coordinator/development/python/docs/GetAlertReceiverResponse", "flex/coordinator/development/python/docs/GetAlertRuleResponse", "flex/coordinator/development/python/docs/GetEdgeType", "flex/coordinator/development/python/docs/GetGraphResponse", "flex/coordinator/development/python/docs/GetGraphSchemaResponse", "flex/coordinator/development/python/docs/GetPodLogResponse", "flex/coordinator/development/python/docs/GetPropertyMeta", "flex/coordinator/development/python/docs/GetResourceUsageResponse", "flex/coordinator/development/python/docs/GetStorageUsageResponse", "flex/coordinator/development/python/docs/GetStoredProcResponse", "flex/coordinator/development/python/docs/GetVertexType", "flex/coordinator/development/python/docs/GraphApi", "flex/coordinator/development/python/docs/JobApi", "flex/coordinator/development/python/docs/JobStatus", "flex/coordinator/development/python/docs/LongText", "flex/coordinator/development/python/docs/NodeStatus", "flex/coordinator/development/python/docs/Parameter", "flex/coordinator/development/python/docs/PodStatus", "flex/coordinator/development/python/docs/PrimitiveType", "flex/coordinator/development/python/docs/ResourceUsage", "flex/coordinator/development/python/docs/RunningDeploymentInfo", "flex/coordinator/development/python/docs/RunningDeploymentStatus", "flex/coordinator/development/python/docs/SchemaMapping", "flex/coordinator/development/python/docs/ServiceApi", "flex/coordinator/development/python/docs/ServiceStatus", "flex/coordinator/development/python/docs/ServiceStatusSdkEndpoints", "flex/coordinator/development/python/docs/StartServiceRequest", "flex/coordinator/development/python/docs/StoredProcedureApi", "flex/coordinator/development/python/docs/StoredProcedureMeta", "flex/coordinator/development/python/docs/StringType", "flex/coordinator/development/python/docs/StringTypeString", "flex/coordinator/development/python/docs/TemporalType", "flex/coordinator/development/python/docs/TemporalTypeTemporal", "flex/coordinator/development/python/docs/TimeStampType", "flex/coordinator/development/python/docs/TypedValue", "flex/coordinator/development/python/docs/UpdateAlertMessageStatusRequest", "flex/coordinator/development/python/docs/UpdateStoredProcRequest", "flex/coordinator/development/python/docs/UploadFileResponse", "flex/coordinator/development/python/docs/UtilsApi", "flex/coordinator/development/python/docs/VarChar", "flex/coordinator/development/python/docs/VarCharVarChar", "flex/coordinator/development/python/docs/VertexMapping", "flex/coordinator/development/python/python_sdk", "flex/coordinator/getting_started", "flex/coordinator/restful_api", "flex/interactive/configuration", "flex/interactive/custom_graph_data", "flex/interactive/data_import", "flex/interactive/data_model", "flex/interactive/deployment", "flex/interactive/dev_guide", "flex/interactive/development/dev_and_test", "flex/interactive/development/java/APIResponseWithCode", "flex/interactive/development/java/BaseEdgeType", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInner", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/interactive/development/java/BasePropertyMeta", "flex/interactive/development/java/BaseVertexType", "flex/interactive/development/java/BaseVertexTypeXCsrParams", "flex/interactive/development/java/ColumnMapping", "flex/interactive/development/java/CreateEdgeType", "flex/interactive/development/java/CreateGraphRequest", "flex/interactive/development/java/CreateGraphResponse", "flex/interactive/development/java/CreateGraphSchemaRequest", "flex/interactive/development/java/CreateProcedureRequest", "flex/interactive/development/java/CreateProcedureResponse", "flex/interactive/development/java/CreatePropertyMeta", "flex/interactive/development/java/CreateVertexType", "flex/interactive/development/java/DateType", "flex/interactive/development/java/DeleteEdgeRequest", "flex/interactive/development/java/DeleteVertexRequest", "flex/interactive/development/java/EdgeApi", "flex/interactive/development/java/EdgeData", "flex/interactive/development/java/EdgeMapping", "flex/interactive/development/java/EdgeMappingDestinationVertexMappingsInner", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInner", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInnerColumn", "flex/interactive/development/java/EdgeMappingTypeTriplet", "flex/interactive/development/java/EdgeRequest", "flex/interactive/development/java/EdgeStatistics", "flex/interactive/development/java/FixedChar", "flex/interactive/development/java/FixedCharChar", "flex/interactive/development/java/GSDataType", "flex/interactive/development/java/GetEdgeType", "flex/interactive/development/java/GetGraphResponse", "flex/interactive/development/java/GetGraphSchemaResponse", "flex/interactive/development/java/GetGraphStatisticsResponse", "flex/interactive/development/java/GetProcedureResponse", "flex/interactive/development/java/GetPropertyMeta", "flex/interactive/development/java/GetVertexType", "flex/interactive/development/java/GraphManagementApi", "flex/interactive/development/java/JobManagementApi", "flex/interactive/development/java/JobResponse", "flex/interactive/development/java/JobStatus", "flex/interactive/development/java/LongText", "flex/interactive/development/java/Parameter", "flex/interactive/development/java/PrimitiveType", "flex/interactive/development/java/ProcedureManagementApi", "flex/interactive/development/java/Property", "flex/interactive/development/java/QueryRequest", "flex/interactive/development/java/QueryServiceApi", "flex/interactive/development/java/SchemaMapping", "flex/interactive/development/java/SchemaMappingLoadingConfig", "flex/interactive/development/java/SchemaMappingLoadingConfigDataSource", "flex/interactive/development/java/SchemaMappingLoadingConfigFormat", "flex/interactive/development/java/SchemaMappingLoadingConfigXCsrParams", "flex/interactive/development/java/ServiceManagementApi", "flex/interactive/development/java/ServiceStatus", "flex/interactive/development/java/SnapshotStatus", "flex/interactive/development/java/StartServiceRequest", "flex/interactive/development/java/StopServiceRequest", "flex/interactive/development/java/StoredProcedureMeta", "flex/interactive/development/java/StringType", "flex/interactive/development/java/StringTypeString", "flex/interactive/development/java/TemporalType", "flex/interactive/development/java/TemporalTypeTemporal", "flex/interactive/development/java/TimeStampType", "flex/interactive/development/java/TypedValue", "flex/interactive/development/java/UpdateProcedureRequest", "flex/interactive/development/java/UploadFileResponse", "flex/interactive/development/java/VarChar", "flex/interactive/development/java/VarCharVarChar", "flex/interactive/development/java/VertexApi", "flex/interactive/development/java/VertexData", "flex/interactive/development/java/VertexEdgeRequest", "flex/interactive/development/java/VertexMapping", "flex/interactive/development/java/VertexRequest", "flex/interactive/development/java/VertexStatistics", "flex/interactive/development/java/VertexTypePairStatistics", "flex/interactive/development/java/java_sdk", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/Driver", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/Session", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/common/Result", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/common/Status", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/impl/DefaultSession", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/utils/Decoder", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/utils/Encoder", "flex/interactive/development/java/reference/index", "flex/interactive/development/python/APIResponseWithCode", "flex/interactive/development/python/BaseEdgeType", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInner", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "flex/interactive/development/python/BasePropertyMeta", "flex/interactive/development/python/BaseVertexType", "flex/interactive/development/python/BaseVertexTypeXCsrParams", "flex/interactive/development/python/ColumnMapping", "flex/interactive/development/python/CreateEdgeType", "flex/interactive/development/python/CreateGraphRequest", "flex/interactive/development/python/CreateGraphResponse", "flex/interactive/development/python/CreateGraphSchemaRequest", "flex/interactive/development/python/CreateProcedureRequest", "flex/interactive/development/python/CreateProcedureResponse", "flex/interactive/development/python/CreatePropertyMeta", "flex/interactive/development/python/CreateVertexType", "flex/interactive/development/python/DateType", "flex/interactive/development/python/DeleteEdgeRequest", "flex/interactive/development/python/DeleteVertexRequest", "flex/interactive/development/python/EdgeApi", "flex/interactive/development/python/EdgeData", "flex/interactive/development/python/EdgeMapping", "flex/interactive/development/python/EdgeMappingDestinationVertexMappingsInner", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInner", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInnerColumn", "flex/interactive/development/python/EdgeMappingTypeTriplet", "flex/interactive/development/python/EdgeRequest", "flex/interactive/development/python/EdgeStatistics", "flex/interactive/development/python/FixedChar", "flex/interactive/development/python/FixedCharChar", "flex/interactive/development/python/GSDataType", "flex/interactive/development/python/GetEdgeType", "flex/interactive/development/python/GetGraphResponse", "flex/interactive/development/python/GetGraphSchemaResponse", "flex/interactive/development/python/GetGraphStatisticsResponse", "flex/interactive/development/python/GetProcedureResponse", "flex/interactive/development/python/GetPropertyMeta", "flex/interactive/development/python/GetVertexType", "flex/interactive/development/python/GraphManagementApi", "flex/interactive/development/python/JobManagementApi", "flex/interactive/development/python/JobResponse", "flex/interactive/development/python/JobStatus", "flex/interactive/development/python/LongText", "flex/interactive/development/python/ModelProperty", "flex/interactive/development/python/Parameter", "flex/interactive/development/python/PrimitiveType", "flex/interactive/development/python/ProcedureManagementApi", "flex/interactive/development/python/QueryRequest", "flex/interactive/development/python/QueryServiceApi", "flex/interactive/development/python/SchemaMapping", "flex/interactive/development/python/SchemaMappingLoadingConfig", "flex/interactive/development/python/SchemaMappingLoadingConfigDataSource", "flex/interactive/development/python/SchemaMappingLoadingConfigFormat", "flex/interactive/development/python/SchemaMappingLoadingConfigXCsrParams", "flex/interactive/development/python/ServiceManagementApi", "flex/interactive/development/python/ServiceStatus", "flex/interactive/development/python/SnapshotStatus", "flex/interactive/development/python/StartServiceRequest", "flex/interactive/development/python/StopServiceRequest", "flex/interactive/development/python/StoredProcedureMeta", "flex/interactive/development/python/StringType", "flex/interactive/development/python/StringTypeString", "flex/interactive/development/python/TemporalType", "flex/interactive/development/python/TemporalTypeTemporal", "flex/interactive/development/python/TimeStampType", "flex/interactive/development/python/TypedValue", "flex/interactive/development/python/UpdateProcedureRequest", "flex/interactive/development/python/UploadFileResponse", "flex/interactive/development/python/VarChar", "flex/interactive/development/python/VarCharVarChar", "flex/interactive/development/python/VertexApi", "flex/interactive/development/python/VertexData", "flex/interactive/development/python/VertexEdgeRequest", "flex/interactive/development/python/VertexMapping", "flex/interactive/development/python/VertexRequest", "flex/interactive/development/python/VertexStatistics", "flex/interactive/development/python/VertexTypePairStatistics", "flex/interactive/development/python/driver", "flex/interactive/development/python/encoder", "flex/interactive/development/python/python_sdk", "flex/interactive/development/python/python_sdk_ref", "flex/interactive/development/python/result", "flex/interactive/development/python/session", "flex/interactive/development/python/status", "flex/interactive/development/restful_api", "flex/interactive/development/stored_procedure/cpp_procedure", "flex/interactive/getting_started", "flex/interactive/glossary", "flex/interactive/installation", "flex/interactive/overview", "flex/interactive/stored_procedures", "flex/interactive_intro", "frag_intro", "frequently_asked_questions", "getting_started_gle", "graph_workloads", "graphscope_for_data_scientists", "how_to_report_bugs", "index", "interactive_engine/benchmark_tool", "interactive_engine/deployment", "interactive_engine/design_of_gie", "interactive_engine/dev_and_test", "interactive_engine/getting_started", "interactive_engine/gopt", "interactive_engine/graph_planner", "interactive_engine/neo4j/cypher_sdk", "interactive_engine/neo4j/llm_assistant", "interactive_engine/neo4j/supported_cypher", "interactive_engine/neo4j_eco", "interactive_engine/tinkerpop/faq", "interactive_engine/tinkerpop/guide_and_examples", "interactive_engine/tinkerpop/supported_gremlin_steps", "interactive_engine/tinkerpop/tinkerpop_gremlin", "interactive_engine/tinkerpop/tutorial_ldbc_gremlin", "interactive_engine/tinkerpop_eco", "java_tutorials", "key_features", "learning_engine/design_of_gle", "learning_engine/dev_and_test", "learning_engine/getting_started", "learning_engine/graph_sampling", "learning_engine/guide_and_examples", "learning_engine/tutorial_node_classification_k8s", "learning_engine/tutorial_node_classification_local", "learning_engine/tutorial_node_classification_pyg_k8s", "learning_engine/tutorial_node_classification_pyg_local", "loading_graphs", "overview/design_of_graphscope", "overview/getting_started", "overview/glossary", "overview/graph_analytics_workloads", "overview/graph_interactive_workloads", "overview/graph_learning_workloads", "overview/intro", "overview/positioning", "performance_and_benchmark", "python_tutorials", "reference/analytical_engine_index", "reference/app", "reference/context", "reference/cython_sdk", "reference/flex/index", "reference/gae_java/about", "reference/gae_java/index", "reference/generated/graphscope.Vertex", "reference/generated/graphscope.declare", "reference/generated/graphscope.framework.app.load_app", "reference/generated/graphscope.framework.dag_utils.add_column", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic", "reference/generated/graphscope.framework.dag_utils.bind_app", "reference/generated/graphscope.framework.dag_utils.clear_edges", "reference/generated/graphscope.framework.dag_utils.clear_graph", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe", "reference/generated/graphscope.framework.dag_utils.context_to_numpy", "reference/generated/graphscope.framework.dag_utils.copy_graph", "reference/generated/graphscope.framework.dag_utils.create_app", "reference/generated/graphscope.framework.dag_utils.create_graph", "reference/generated/graphscope.framework.dag_utils.create_graph_view", "reference/generated/graphscope.framework.dag_utils.create_loader", "reference/generated/graphscope.framework.dag_utils.create_subgraph", "reference/generated/graphscope.framework.dag_utils.create_unload_op", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow", "reference/generated/graphscope.framework.dag_utils.get_context_data", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph", "reference/generated/graphscope.framework.dag_utils.modify_edges", "reference/generated/graphscope.framework.dag_utils.modify_vertices", "reference/generated/graphscope.framework.dag_utils.output", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph", "reference/generated/graphscope.framework.dag_utils.project_to_simple", "reference/generated/graphscope.framework.dag_utils.report_graph", "reference/generated/graphscope.framework.dag_utils.run_app", "reference/generated/graphscope.framework.dag_utils.to_data_sink", "reference/generated/graphscope.framework.dag_utils.to_directed", "reference/generated/graphscope.framework.dag_utils.to_undirected", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor", "reference/generated/graphscope.framework.dag_utils.unload_app", "reference/generated/graphscope.framework.dag_utils.unload_context", "reference/generated/graphscope.framework.dag_utils.unload_graph", "reference/generated/graphscope.framework.operation.Operation.__init__", "reference/generated/graphscope.framework.operation.Operation.as_op_def", "reference/generated/graphscope.framework.operation.Operation.eval", "reference/generated/graphscope.framework.operation.Operation.evaluated", "reference/generated/graphscope.framework.operation.Operation.key", "reference/generated/graphscope.framework.operation.Operation.signature", "reference/generated/graphscope.g", "reference/generated/graphscope.get_default_session", "reference/generated/graphscope.graphlearn", "reference/generated/graphscope.gremlin", "reference/generated/graphscope.has_default_session", "reference/generated/graphscope.session", "reference/generated/graphscope.set_option", "reference/gnn_engine/algo_en", "reference/gnn_engine/data_loader_en", "reference/gnn_engine/graph_object_en", "reference/gnn_engine/graph_query_en", "reference/gnn_engine/graph_sampling_en", "reference/gnn_engine/graph_traverse_en", "reference/gnn_engine/gsl_en", "reference/gnn_engine/install_en", "reference/gnn_engine/model_programming_en", "reference/gnn_engine/negative_sampling_en", "reference/gnn_engine/operator", "reference/gnn_engine/other_source", "reference/gnn_engine/quick_start_en", "reference/gnn_engine/system_config", "reference/graph", "reference/interactive", "reference/learning", "reference/networkx/builtin", "reference/networkx/functions", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle", "reference/networkx/generated/graphscope.nx.classes.function.add_path", "reference/networkx/generated/graphscope.nx.classes.function.add_star", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy", "reference/networkx/generated/graphscope.nx.classes.function.degree", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram", "reference/networkx/generated/graphscope.nx.classes.function.density", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.edges", "reference/networkx/generated/graphscope.nx.classes.function.freeze", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.info", "reference/networkx/generated/graphscope.nx.classes.function.is_directed", "reference/networkx/generated/graphscope.nx.classes.function.is_empty", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted", "reference/networkx/generated/graphscope.nx.classes.function.neighbors", "reference/networkx/generated/graphscope.nx.classes.function.nodes", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.non_edges", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges", "reference/networkx/generated/graphscope.nx.classes.function.subgraph", "reference/networkx/generated/graphscope.nx.classes.function.to_directed", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph", "reference/networkx/generators", "reference/networkx/graphs", "reference/networkx/index", "reference/networkx/io", "reference/networkx/transformation", "reference/operation", "reference/python_index", "reference/selector", "reference/session", "resources_estimator", "storage_engine/gart", "storage_engine/getting_started", "storage_engine/graphar", "storage_engine/grin", "storage_engine/groot", "storage_engine/vineyard", "tutorial/builtin", "tutorial/scaling", "user_guide_and_examples_of_gae", "user_guide_and_examples_of_gle", "utilities/error_codes", "utilities/gs", "utilities/how_to_find_logs", "utilities/monitoring", "zh/analytics_engine", "zh/deployment", "zh/developer_guide", "zh/frequently_asked_questions", "zh/getting_started", "zh/graph_transformation", "zh/index", "zh/installation", "zh/interactive_engine", "zh/learning_engine", "zh/loading_graph", "zh/tutorials"], "filenames": ["analytical_engine/builtin_algorithms.md", "analytical_engine/customized_algorithms.md", "analytical_engine/deployment.md", "analytical_engine/design_of_gae.md", "analytical_engine/dev_and_test.md", "analytical_engine/faqs.md", "analytical_engine/flash.md", "analytical_engine/getting_started.md", "analytical_engine/guide_and_examples.md", "analytical_engine/ingress.md", "analytical_engine/key_concepts.rst", "analytical_engine/networkx_compatibility.md", "analytical_engine/overview_and_architecture.md", "analytical_engine/performance_tuning.md", "analytical_engine/programming_model_pie.md", "analytical_engine/tutorial_dev_algo_cpp_flash.md", "analytical_engine/tutorial_dev_algo_cpp_pie.md", "analytical_engine/tutorial_dev_algo_java.md", "analytical_engine/tutorial_dev_algo_python.rst", "analytical_engine/tutorial_networkx_algorithms.md", "analytical_engine/tutorial_networkx_operations.md", "analytical_engine/tutorial_run_builtin_algo.md", "analytical_engine/tutorial_run_giraph_apps.md", "analytical_engine/tutorial_run_graphx_apps.md", "analytical_engine/vertex_centric_models.md", "contact_us.md", "deployment/deploy_graphscope_on_clouds.md", "deployment/deploy_graphscope_on_self_managed_k8s.md", "deployment/deploy_graphscope_operator.md", "deployment/deploy_graphscope_with_helm.md", "deployment/deploy_with_existing_vineyard_cluster.md", "deployment/install_in_offline_env.md", "deployment/install_on_local.md", "deployment/persistent_storage_of_graphs_on_k8s.md", "design_of_gae.md", "development/code_style_guide.md", "development/dev_guide.md", "development/how_to_contribute.md", "development/how_to_debug.md", "development/how_to_instrument.md", "development/how_to_submit_pr.md", "development/how_to_test.md", "error_codes.md", "flex/coordinator.md", "flex/coordinator/dev_guide.md", "flex/coordinator/development/dev_and_test.md", "flex/coordinator/development/python/README.md", "flex/coordinator/development/python/docs/AlertApi.md", "flex/coordinator/development/python/docs/BaseEdgeType.md", "flex/coordinator/development/python/docs/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/coordinator/development/python/docs/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/coordinator/development/python/docs/BasePropertyMeta.md", "flex/coordinator/development/python/docs/BaseVertexType.md", "flex/coordinator/development/python/docs/BaseVertexTypeXCsrParams.md", "flex/coordinator/development/python/docs/ColumnMapping.md", "flex/coordinator/development/python/docs/ColumnMappingColumn.md", "flex/coordinator/development/python/docs/CreateAlertReceiverRequest.md", "flex/coordinator/development/python/docs/CreateAlertRuleRequest.md", "flex/coordinator/development/python/docs/CreateDataloadingJobResponse.md", "flex/coordinator/development/python/docs/CreateEdgeType.md", "flex/coordinator/development/python/docs/CreateGraphRequest.md", "flex/coordinator/development/python/docs/CreateGraphResponse.md", "flex/coordinator/development/python/docs/CreateGraphSchemaRequest.md", "flex/coordinator/development/python/docs/CreatePropertyMeta.md", "flex/coordinator/development/python/docs/CreateStoredProcRequest.md", "flex/coordinator/development/python/docs/CreateStoredProcResponse.md", "flex/coordinator/development/python/docs/CreateVertexType.md", "flex/coordinator/development/python/docs/DataSourceApi.md", "flex/coordinator/development/python/docs/DataloadingJobConfig.md", "flex/coordinator/development/python/docs/DataloadingJobConfigEdgesInner.md", "flex/coordinator/development/python/docs/DataloadingJobConfigLoadingConfig.md", "flex/coordinator/development/python/docs/DataloadingJobConfigLoadingConfigFormat.md", "flex/coordinator/development/python/docs/DataloadingJobConfigVerticesInner.md", "flex/coordinator/development/python/docs/DataloadingMRJobConfig.md", "flex/coordinator/development/python/docs/DateType.md", "flex/coordinator/development/python/docs/DeploymentApi.md", "flex/coordinator/development/python/docs/EdgeMapping.md", "flex/coordinator/development/python/docs/EdgeMappingTypeTriplet.md", "flex/coordinator/development/python/docs/Error.md", "flex/coordinator/development/python/docs/FixedChar.md", "flex/coordinator/development/python/docs/FixedCharChar.md", "flex/coordinator/development/python/docs/GSDataType.md", "flex/coordinator/development/python/docs/GetAlertMessageResponse.md", "flex/coordinator/development/python/docs/GetAlertReceiverResponse.md", "flex/coordinator/development/python/docs/GetAlertRuleResponse.md", "flex/coordinator/development/python/docs/GetEdgeType.md", "flex/coordinator/development/python/docs/GetGraphResponse.md", "flex/coordinator/development/python/docs/GetGraphSchemaResponse.md", "flex/coordinator/development/python/docs/GetPodLogResponse.md", "flex/coordinator/development/python/docs/GetPropertyMeta.md", "flex/coordinator/development/python/docs/GetResourceUsageResponse.md", "flex/coordinator/development/python/docs/GetStorageUsageResponse.md", "flex/coordinator/development/python/docs/GetStoredProcResponse.md", "flex/coordinator/development/python/docs/GetVertexType.md", "flex/coordinator/development/python/docs/GraphApi.md", "flex/coordinator/development/python/docs/JobApi.md", "flex/coordinator/development/python/docs/JobStatus.md", "flex/coordinator/development/python/docs/LongText.md", "flex/coordinator/development/python/docs/NodeStatus.md", "flex/coordinator/development/python/docs/Parameter.md", "flex/coordinator/development/python/docs/PodStatus.md", "flex/coordinator/development/python/docs/PrimitiveType.md", "flex/coordinator/development/python/docs/ResourceUsage.md", "flex/coordinator/development/python/docs/RunningDeploymentInfo.md", "flex/coordinator/development/python/docs/RunningDeploymentStatus.md", "flex/coordinator/development/python/docs/SchemaMapping.md", "flex/coordinator/development/python/docs/ServiceApi.md", "flex/coordinator/development/python/docs/ServiceStatus.md", "flex/coordinator/development/python/docs/ServiceStatusSdkEndpoints.md", "flex/coordinator/development/python/docs/StartServiceRequest.md", "flex/coordinator/development/python/docs/StoredProcedureApi.md", "flex/coordinator/development/python/docs/StoredProcedureMeta.md", "flex/coordinator/development/python/docs/StringType.md", "flex/coordinator/development/python/docs/StringTypeString.md", "flex/coordinator/development/python/docs/TemporalType.md", "flex/coordinator/development/python/docs/TemporalTypeTemporal.md", "flex/coordinator/development/python/docs/TimeStampType.md", "flex/coordinator/development/python/docs/TypedValue.md", "flex/coordinator/development/python/docs/UpdateAlertMessageStatusRequest.md", "flex/coordinator/development/python/docs/UpdateStoredProcRequest.md", "flex/coordinator/development/python/docs/UploadFileResponse.md", "flex/coordinator/development/python/docs/UtilsApi.md", "flex/coordinator/development/python/docs/VarChar.md", "flex/coordinator/development/python/docs/VarCharVarChar.md", "flex/coordinator/development/python/docs/VertexMapping.md", "flex/coordinator/development/python/python_sdk.md", "flex/coordinator/getting_started.md", "flex/coordinator/restful_api.rst", "flex/interactive/configuration.md", "flex/interactive/custom_graph_data.md", "flex/interactive/data_import.md", "flex/interactive/data_model.md", "flex/interactive/deployment.md", "flex/interactive/dev_guide.md", "flex/interactive/development/dev_and_test.md", "flex/interactive/development/java/APIResponseWithCode.md", "flex/interactive/development/java/BaseEdgeType.md", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/interactive/development/java/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/interactive/development/java/BasePropertyMeta.md", "flex/interactive/development/java/BaseVertexType.md", "flex/interactive/development/java/BaseVertexTypeXCsrParams.md", "flex/interactive/development/java/ColumnMapping.md", "flex/interactive/development/java/CreateEdgeType.md", "flex/interactive/development/java/CreateGraphRequest.md", "flex/interactive/development/java/CreateGraphResponse.md", "flex/interactive/development/java/CreateGraphSchemaRequest.md", "flex/interactive/development/java/CreateProcedureRequest.md", "flex/interactive/development/java/CreateProcedureResponse.md", "flex/interactive/development/java/CreatePropertyMeta.md", "flex/interactive/development/java/CreateVertexType.md", "flex/interactive/development/java/DateType.md", "flex/interactive/development/java/DeleteEdgeRequest.md", "flex/interactive/development/java/DeleteVertexRequest.md", "flex/interactive/development/java/EdgeApi.md", "flex/interactive/development/java/EdgeData.md", "flex/interactive/development/java/EdgeMapping.md", "flex/interactive/development/java/EdgeMappingDestinationVertexMappingsInner.md", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInner.md", "flex/interactive/development/java/EdgeMappingSourceVertexMappingsInnerColumn.md", "flex/interactive/development/java/EdgeMappingTypeTriplet.md", "flex/interactive/development/java/EdgeRequest.md", "flex/interactive/development/java/EdgeStatistics.md", "flex/interactive/development/java/FixedChar.md", "flex/interactive/development/java/FixedCharChar.md", "flex/interactive/development/java/GSDataType.md", "flex/interactive/development/java/GetEdgeType.md", "flex/interactive/development/java/GetGraphResponse.md", "flex/interactive/development/java/GetGraphSchemaResponse.md", "flex/interactive/development/java/GetGraphStatisticsResponse.md", "flex/interactive/development/java/GetProcedureResponse.md", "flex/interactive/development/java/GetPropertyMeta.md", "flex/interactive/development/java/GetVertexType.md", "flex/interactive/development/java/GraphManagementApi.md", "flex/interactive/development/java/JobManagementApi.md", "flex/interactive/development/java/JobResponse.md", "flex/interactive/development/java/JobStatus.md", "flex/interactive/development/java/LongText.md", "flex/interactive/development/java/Parameter.md", "flex/interactive/development/java/PrimitiveType.md", "flex/interactive/development/java/ProcedureManagementApi.md", "flex/interactive/development/java/Property.md", "flex/interactive/development/java/QueryRequest.md", "flex/interactive/development/java/QueryServiceApi.md", "flex/interactive/development/java/SchemaMapping.md", "flex/interactive/development/java/SchemaMappingLoadingConfig.md", "flex/interactive/development/java/SchemaMappingLoadingConfigDataSource.md", "flex/interactive/development/java/SchemaMappingLoadingConfigFormat.md", "flex/interactive/development/java/SchemaMappingLoadingConfigXCsrParams.md", "flex/interactive/development/java/ServiceManagementApi.md", "flex/interactive/development/java/ServiceStatus.md", "flex/interactive/development/java/SnapshotStatus.md", "flex/interactive/development/java/StartServiceRequest.md", "flex/interactive/development/java/StopServiceRequest.md", "flex/interactive/development/java/StoredProcedureMeta.md", "flex/interactive/development/java/StringType.md", "flex/interactive/development/java/StringTypeString.md", "flex/interactive/development/java/TemporalType.md", "flex/interactive/development/java/TemporalTypeTemporal.md", "flex/interactive/development/java/TimeStampType.md", "flex/interactive/development/java/TypedValue.md", "flex/interactive/development/java/UpdateProcedureRequest.md", "flex/interactive/development/java/UploadFileResponse.md", "flex/interactive/development/java/VarChar.md", "flex/interactive/development/java/VarCharVarChar.md", "flex/interactive/development/java/VertexApi.md", "flex/interactive/development/java/VertexData.md", "flex/interactive/development/java/VertexEdgeRequest.md", "flex/interactive/development/java/VertexMapping.md", "flex/interactive/development/java/VertexRequest.md", "flex/interactive/development/java/VertexStatistics.md", "flex/interactive/development/java/VertexTypePairStatistics.md", "flex/interactive/development/java/java_sdk.md", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/Driver.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/Session.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/common/Result.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/common/Status.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/impl/DefaultSession.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/utils/Decoder.rst", "flex/interactive/development/java/reference/com/alibaba/graphscope/interactive/client/utils/Encoder.rst", "flex/interactive/development/java/reference/index.rst", "flex/interactive/development/python/APIResponseWithCode.md", "flex/interactive/development/python/BaseEdgeType.md", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInner.md", "flex/interactive/development/python/BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.md", "flex/interactive/development/python/BasePropertyMeta.md", "flex/interactive/development/python/BaseVertexType.md", "flex/interactive/development/python/BaseVertexTypeXCsrParams.md", "flex/interactive/development/python/ColumnMapping.md", "flex/interactive/development/python/CreateEdgeType.md", "flex/interactive/development/python/CreateGraphRequest.md", "flex/interactive/development/python/CreateGraphResponse.md", "flex/interactive/development/python/CreateGraphSchemaRequest.md", "flex/interactive/development/python/CreateProcedureRequest.md", "flex/interactive/development/python/CreateProcedureResponse.md", "flex/interactive/development/python/CreatePropertyMeta.md", "flex/interactive/development/python/CreateVertexType.md", "flex/interactive/development/python/DateType.md", "flex/interactive/development/python/DeleteEdgeRequest.md", "flex/interactive/development/python/DeleteVertexRequest.md", "flex/interactive/development/python/EdgeApi.md", "flex/interactive/development/python/EdgeData.md", "flex/interactive/development/python/EdgeMapping.md", "flex/interactive/development/python/EdgeMappingDestinationVertexMappingsInner.md", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInner.md", "flex/interactive/development/python/EdgeMappingSourceVertexMappingsInnerColumn.md", "flex/interactive/development/python/EdgeMappingTypeTriplet.md", "flex/interactive/development/python/EdgeRequest.md", "flex/interactive/development/python/EdgeStatistics.md", "flex/interactive/development/python/FixedChar.md", "flex/interactive/development/python/FixedCharChar.md", "flex/interactive/development/python/GSDataType.md", "flex/interactive/development/python/GetEdgeType.md", "flex/interactive/development/python/GetGraphResponse.md", "flex/interactive/development/python/GetGraphSchemaResponse.md", "flex/interactive/development/python/GetGraphStatisticsResponse.md", "flex/interactive/development/python/GetProcedureResponse.md", "flex/interactive/development/python/GetPropertyMeta.md", "flex/interactive/development/python/GetVertexType.md", "flex/interactive/development/python/GraphManagementApi.md", "flex/interactive/development/python/JobManagementApi.md", "flex/interactive/development/python/JobResponse.md", "flex/interactive/development/python/JobStatus.md", "flex/interactive/development/python/LongText.md", "flex/interactive/development/python/ModelProperty.md", "flex/interactive/development/python/Parameter.md", "flex/interactive/development/python/PrimitiveType.md", "flex/interactive/development/python/ProcedureManagementApi.md", "flex/interactive/development/python/QueryRequest.md", "flex/interactive/development/python/QueryServiceApi.md", "flex/interactive/development/python/SchemaMapping.md", "flex/interactive/development/python/SchemaMappingLoadingConfig.md", "flex/interactive/development/python/SchemaMappingLoadingConfigDataSource.md", "flex/interactive/development/python/SchemaMappingLoadingConfigFormat.md", "flex/interactive/development/python/SchemaMappingLoadingConfigXCsrParams.md", "flex/interactive/development/python/ServiceManagementApi.md", "flex/interactive/development/python/ServiceStatus.md", "flex/interactive/development/python/SnapshotStatus.md", "flex/interactive/development/python/StartServiceRequest.md", "flex/interactive/development/python/StopServiceRequest.md", "flex/interactive/development/python/StoredProcedureMeta.md", "flex/interactive/development/python/StringType.md", "flex/interactive/development/python/StringTypeString.md", "flex/interactive/development/python/TemporalType.md", "flex/interactive/development/python/TemporalTypeTemporal.md", "flex/interactive/development/python/TimeStampType.md", "flex/interactive/development/python/TypedValue.md", "flex/interactive/development/python/UpdateProcedureRequest.md", "flex/interactive/development/python/UploadFileResponse.md", "flex/interactive/development/python/VarChar.md", "flex/interactive/development/python/VarCharVarChar.md", "flex/interactive/development/python/VertexApi.md", "flex/interactive/development/python/VertexData.md", "flex/interactive/development/python/VertexEdgeRequest.md", "flex/interactive/development/python/VertexMapping.md", "flex/interactive/development/python/VertexRequest.md", "flex/interactive/development/python/VertexStatistics.md", "flex/interactive/development/python/VertexTypePairStatistics.md", "flex/interactive/development/python/driver.rst", "flex/interactive/development/python/encoder.rst", "flex/interactive/development/python/python_sdk.md", "flex/interactive/development/python/python_sdk_ref.md", "flex/interactive/development/python/result.rst", "flex/interactive/development/python/session.rst", "flex/interactive/development/python/status.rst", "flex/interactive/development/restful_api.rst", "flex/interactive/development/stored_procedure/cpp_procedure.md", "flex/interactive/getting_started.md", "flex/interactive/glossary.md", "flex/interactive/installation.md", "flex/interactive/overview.md", "flex/interactive/stored_procedures.md", "flex/interactive_intro.md", "frag_intro.md", "frequently_asked_questions.rst", "getting_started_gle.md", "graph_workloads.md", "graphscope_for_data_scientists.md", "how_to_report_bugs.md", "index.rst", "interactive_engine/benchmark_tool.md", "interactive_engine/deployment.md", "interactive_engine/design_of_gie.md", "interactive_engine/dev_and_test.md", "interactive_engine/getting_started.md", "interactive_engine/gopt.md", "interactive_engine/graph_planner.md", "interactive_engine/neo4j/cypher_sdk.md", "interactive_engine/neo4j/llm_assistant.md", "interactive_engine/neo4j/supported_cypher.md", "interactive_engine/neo4j_eco.md", "interactive_engine/tinkerpop/faq.md", "interactive_engine/tinkerpop/guide_and_examples.md", "interactive_engine/tinkerpop/supported_gremlin_steps.md", "interactive_engine/tinkerpop/tinkerpop_gremlin.md", "interactive_engine/tinkerpop/tutorial_ldbc_gremlin.md", "interactive_engine/tinkerpop_eco.md", "java_tutorials.md", "key_features.md", "learning_engine/design_of_gle.md", "learning_engine/dev_and_test.md", "learning_engine/getting_started.md", "learning_engine/graph_sampling.md", "learning_engine/guide_and_examples.md", "learning_engine/tutorial_node_classification_k8s.md", "learning_engine/tutorial_node_classification_local.md", "learning_engine/tutorial_node_classification_pyg_k8s.md", "learning_engine/tutorial_node_classification_pyg_local.md", "loading_graphs.rst", "overview/design_of_graphscope.md", "overview/getting_started.md", "overview/glossary.md", "overview/graph_analytics_workloads.md", "overview/graph_interactive_workloads.md", "overview/graph_learning_workloads.md", "overview/intro.md", "overview/positioning.md", "performance_and_benchmark.md", "python_tutorials.md", "reference/analytical_engine_index.rst", "reference/app.rst", "reference/context.rst", "reference/cython_sdk.rst", "reference/flex/index.rst", "reference/gae_java/about.rst", "reference/gae_java/index.rst", "reference/generated/graphscope.Vertex.rst", "reference/generated/graphscope.declare.rst", "reference/generated/graphscope.framework.app.load_app.rst", "reference/generated/graphscope.framework.dag_utils.add_column.rst", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph.rst", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic.rst", "reference/generated/graphscope.framework.dag_utils.bind_app.rst", "reference/generated/graphscope.framework.dag_utils.clear_edges.rst", "reference/generated/graphscope.framework.dag_utils.clear_graph.rst", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.context_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.copy_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_app.rst", "reference/generated/graphscope.framework.dag_utils.create_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_graph_view.rst", "reference/generated/graphscope.framework.dag_utils.create_loader.rst", "reference/generated/graphscope.framework.dag_utils.create_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.create_unload_op.rst", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow.rst", "reference/generated/graphscope.framework.dag_utils.get_context_data.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.modify_edges.rst", "reference/generated/graphscope.framework.dag_utils.modify_vertices.rst", "reference/generated/graphscope.framework.dag_utils.output.rst", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph.rst", "reference/generated/graphscope.framework.dag_utils.project_to_simple.rst", "reference/generated/graphscope.framework.dag_utils.report_graph.rst", "reference/generated/graphscope.framework.dag_utils.run_app.rst", "reference/generated/graphscope.framework.dag_utils.to_data_sink.rst", "reference/generated/graphscope.framework.dag_utils.to_directed.rst", "reference/generated/graphscope.framework.dag_utils.to_undirected.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor.rst", "reference/generated/graphscope.framework.dag_utils.unload_app.rst", "reference/generated/graphscope.framework.dag_utils.unload_context.rst", "reference/generated/graphscope.framework.dag_utils.unload_graph.rst", "reference/generated/graphscope.framework.operation.Operation.__init__.rst", "reference/generated/graphscope.framework.operation.Operation.as_op_def.rst", "reference/generated/graphscope.framework.operation.Operation.eval.rst", "reference/generated/graphscope.framework.operation.Operation.evaluated.rst", "reference/generated/graphscope.framework.operation.Operation.key.rst", "reference/generated/graphscope.framework.operation.Operation.signature.rst", "reference/generated/graphscope.g.rst", "reference/generated/graphscope.get_default_session.rst", "reference/generated/graphscope.graphlearn.rst", "reference/generated/graphscope.gremlin.rst", "reference/generated/graphscope.has_default_session.rst", "reference/generated/graphscope.session.rst", "reference/generated/graphscope.set_option.rst", "reference/gnn_engine/algo_en.rst", "reference/gnn_engine/data_loader_en.rst", "reference/gnn_engine/graph_object_en.rst", "reference/gnn_engine/graph_query_en.rst", "reference/gnn_engine/graph_sampling_en.rst", "reference/gnn_engine/graph_traverse_en.rst", "reference/gnn_engine/gsl_en.rst", "reference/gnn_engine/install_en.rst", "reference/gnn_engine/model_programming_en.rst", "reference/gnn_engine/negative_sampling_en.rst", "reference/gnn_engine/operator.rst", "reference/gnn_engine/other_source.rst", "reference/gnn_engine/quick_start_en.rst", "reference/gnn_engine/system_config.rst", "reference/graph.rst", "reference/interactive.rst", "reference/learning.rst", "reference/networkx/builtin.rst", "reference/networkx/functions.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_path.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_star.rst", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram.rst", "reference/networkx/generated/graphscope.nx.classes.function.density.rst", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.freeze.rst", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.info.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_empty.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g.rst", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques.rst", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model.rst", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph.rst", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph.rst", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge.rst", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph.rst", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree.rst", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree.rst", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph.rst", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph.rst", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph.rst", "reference/networkx/generators.rst", "reference/networkx/graphs.rst", "reference/networkx/index.rst", "reference/networkx/io.rst", "reference/networkx/transformation.rst", "reference/operation.rst", "reference/python_index.rst", "reference/selector.rst", "reference/session.rst", "resources_estimator.md", "storage_engine/gart.md", "storage_engine/getting_started.md", "storage_engine/graphar.md", "storage_engine/grin.md", "storage_engine/groot.md", "storage_engine/vineyard.md", "tutorial/builtin.rst", "tutorial/scaling.rst", "user_guide_and_examples_of_gae.md", "user_guide_and_examples_of_gle.md", "utilities/error_codes.md", "utilities/gs.md", "utilities/how_to_find_logs.md", "utilities/monitoring.md", "zh/analytics_engine.rst", "zh/deployment.rst", "zh/developer_guide.rst", "zh/frequently_asked_questions.rst", "zh/getting_started.rst", "zh/graph_transformation.rst", "zh/index.rst", "zh/installation.rst", "zh/interactive_engine.rst", "zh/learning_engine.rst", "zh/loading_graph.rst", "zh/tutorials.rst"], "titles": ["Built-in Algorithms", "Customized Algorithms", "Deployment for GAE", "Design of Analytical Engine", "Dev and Test", "FAQs", "Programming Model: FLASH", "Getting Started", "Guide and Examples", "Ingress: Incrementalize Graph Algorithms", "Key Concepts", "NetworkX Compatibility", "Overview and Architecture", "Performance Tuning", "Programming Model: PIE", "Tutorial: Develop Your Algorithms in C++ with FLASH Model", "Tutorial: Develop your Algorithm in C++ with PIE Model", "Tutorial: Develop your Algorithm in Java with PIE Model", "Tutorial: Develop algorithms in Python", "Tutorial: Graph Algorithms with NetworkX APIs", "Tutorial: Graph Operations with NetworkX APIs", "Tutorial: Running Builtin Algorithms", "Tutorial: Run Giraph Applications on GraphScope", "Tutorial: Run GraphX Applications on GraphScope", "Vertex-Centric Model", "Contact Us", "Deploy GraphScope on Clouds", "Deploy on K8s Cluster", "Deploy GraphScope Operator", "Deploy GraphScope with <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code>", "Deploy with Existing Vineyard Cluster", "Install GraphScope in offline environment", "Install GraphScope on Local", "Persistent storage of graphs on the Kubernetes cluster", "Design of Analytical Engine", "Code Style Guide", "Development Guide", "How to Contribute", "Debugging on local deployment", "How to instrument", "How to Submit Pull-requests", "How to Test", "Error Codes", "Coordinator", "Development guide", "Dev and Test", "Coordinator Python SDK Reference", "graphscope.flex.rest.AlertApi", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "ColumnMappingColumn", "CreateAlertReceiverRequest", "CreateAlertRuleRequest", "CreateDataloadingJobResponse", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreatePropertyMeta", "CreateStoredProcRequest", "CreateStoredProcResponse", "CreateVertexType", "graphscope.flex.rest.DataSourceApi", "DataloadingJobConfig", "DataloadingJobConfigEdgesInner", "DataloadingJobConfigLoadingConfig", "DataloadingJobConfigLoadingConfigFormat", "DataloadingJobConfigVerticesInner", "DataloadingMRJobConfig", "DateType", "graphscope.flex.rest.DeploymentApi", "EdgeMapping", "EdgeMappingTypeTriplet", "Error", "FixedChar", "FixedCharChar", "GSDataType", "GetAlertMessageResponse", "GetAlertReceiverResponse", "GetAlertRuleResponse", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetPodLogResponse", "GetPropertyMeta", "GetResourceUsageResponse", "GetStorageUsageResponse", "GetStoredProcResponse", "GetVertexType", "graphscope.flex.rest.GraphApi", "graphscope.flex.rest.JobApi", "JobStatus", "LongText", "NodeStatus", "Parameter", "PodStatus", "PrimitiveType", "ResourceUsage", "RunningDeploymentInfo", "RunningDeploymentStatus", "SchemaMapping", "graphscope.flex.rest.ServiceApi", "ServiceStatus", "ServiceStatusSdkEndpoints", "StartServiceRequest", "graphscope.flex.rest.StoredProcedureApi", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateAlertMessageStatusRequest", "UpdateStoredProcRequest", "UploadFileResponse", "graphscope.flex.rest.UtilsApi", "VarChar", "VarCharVarChar", "VertexMapping", "FLEX Coordinator Python SDK", "Getting Started", "Coordinator RESTFul API", "Configuration", "Using Custom Graph", "Data Import Configuration", "Data Model", "Deployment", "Development guide", "Dev and Test", "APIResponseWithCode", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreateProcedureRequest", "CreateProcedureResponse", "CreatePropertyMeta", "CreateVertexType", "DateType", "DeleteEdgeRequest", "DeleteVertexRequest", "EdgeAPI", "EdgeData", "EdgeMapping", "EdgeMappingDestinationVertexMappingsInner", "EdgeMappingSourceVertexMappingsInner", "EdgeMappingSourceVertexMappingsInnerColumn", "EdgeMappingTypeTriplet", "EdgeRequest", "EdgeStatistics", "FixedChar", "FixedCharChar", "GSDataType", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetGraphStatisticsResponse", "GetProcedureResponse", "GetPropertyMeta", "GetVertexType", "GraphManagementApi", "JobManagementApi", "JobResponse", "JobStatus", "LongText", "Parameter", "PrimitiveType", "ProcedureManagementApi", "Property", "QueryRequest", "QueryServiceApi", "SchemaMapping", "SchemaMappingLoadingConfig", "SchemaMappingLoadingConfigDataSource", "SchemaMappingLoadingConfigFormat", "SchemaMappingLoadingConfigXCsrParams", "ServiceManagementApi", "ServiceStatus", "SnapshotStatus", "StartServiceRequest", "StopServiceRequest", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateProcedureRequest", "UploadFileResponse", "VarChar", "VarCharVarChar", "VertexApi", "VertexData", "VertexEdgeRequest", "VertexMapping", "VertexRequest", "VertexStatistics", "VertexTypePairStatistics", "Java SDK Reference", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "APIResponseWithCode", "BaseEdgeType", "BaseEdgeTypeVertexTypePairRelationsInner", "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams", "BasePropertyMeta", "BaseVertexType", "BaseVertexTypeXCsrParams", "ColumnMapping", "CreateEdgeType", "CreateGraphRequest", "CreateGraphResponse", "CreateGraphSchemaRequest", "CreateProcedureRequest", "CreateProcedureResponse", "CreatePropertyMeta", "CreateVertexType", "DateType", "DeleteEdgeRequest", "DeleteVertexRequest", "EdgeApi", "EdgeData", "EdgeMapping", "EdgeMappingDestinationVertexMappingsInner", "EdgeMappingSourceVertexMappingsInner", "EdgeMappingSourceVertexMappingsInnerColumn", "EdgeMappingTypeTriplet", "EdgeRequest", "EdgeStatistics", "FixedChar", "FixedCharChar", "GSDataType", "GetEdgeType", "GetGraphResponse", "GetGraphSchemaResponse", "GetGraphStatisticsResponse", "GetProcedureResponse", "GetPropertyMeta", "GetVertexType", "GraphManagementApI", "gs_interactive.AdminServiceJobManagementApi", "JobResponse", "JobStatus", "LongText", "ModelProperty", "Parameter", "PrimitiveType", "gs_interactive.AdminServiceProcedureManagementApi", "QueryRequest", "gs_interactive.QueryServiceApi", "SchemaMapping", "SchemaMappingLoadingConfig", "SchemaMappingLoadingConfigDataSource", "SchemaMappingLoadingConfigFormat", "SchemaMappingLoadingConfigXCsrParams", "gs_interactive.AdminServiceServiceManagementApi", "ServiceStatus", "SnapshotStatus", "StartServiceRequest", "StopServiceRequest", "StoredProcedureMeta", "StringType", "StringTypeString", "TemporalType", "TemporalTypeTemporal", "TimeStampType", "TypedValue", "UpdateProcedureRequest", "UploadFileResponse", "VarChar", "VarCharVarChar", "VertexApi", "VertexData", "VertexEdgeRequest", "VertexMapping", "VertexRequest", "VertexStatistics", "VertexTypePairStatistics", "Driver", "Encoder and Decoder", "Python SDK Guide", "Python SDK Reference", "Result", "Session", "Status", "Interactive RESTFul API", "Create c++ Stored Procedures on GraphScope Interactive", "Getting Started", "Glossary", "Installation", "Overview", "Stored Procedures", "GraphScope Interactive", "Introduction to ArrowFragment", "Frequently Asked Questions", "Getting Started for GLE", "Graph Workloads", "GraphScope for Data Scientists", "How to Report Bugs", "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba", "A Generic Benchmark Tool", "Standalone Deployment for GIE", "Design of GIE", "Dev and Test", "Getting Started", "GOpt: A Graph-Native Query Optimization Framework", "Graph Planner Interface by JNI and RESTful API", "GIE for Cypher", "Using LLM as an Assistant in GIE", "Cypher Support", "Neo4j Ecosystem", "FAQs for GIE Gremlin Usage", "Guide and Examples", "Supported Gremlin Steps", "GIE for Gremlin", "Tutorial: LDBC Gremlin", "Apache TinkerPop Ecosystem", "Tutorials for Java Users", "Key Features", "Design of GLE", "Dev and Test", "Getting Started", "Graph Sampling", "Guide and Examples", "Tutorial: Training a Node Classification Model on K8s Cluster", "Tutorial: Training a Node Classification Model on Your Local Machine", "Tutorial: Training a Node Classification Model (PyG) on a K8S Cluster", "Tutorial: Training a Node Classification Model (PyG) on Your Local Machine", "Loading Graphs", "Design of GraphScope", "Getting Started", "Glossary", "Graph Analytics Workloads", "Graph Interactive Workloads", "Graph Learning Workloads", "Introducing GraphScope", "Positioning of GraphScope", "Performance and Benchmark", "Tutorials for Python Users", "Analytical Engine API Reference", "Analytical App", "Context", "Cython SDK API", "Flex API Reference", "About Grape JDK", "Java Reference (javadoc)", "graphscope.Vertex", "graphscope.declare", "graphscope.framework.app.load_app", "graphscope.framework.dag_utils.add_column", "graphscope.framework.dag_utils.add_labels_to_graph", "graphscope.framework.dag_utils.arrow_to_dynamic", "graphscope.framework.dag_utils.bind_app", "graphscope.framework.dag_utils.clear_edges", "graphscope.framework.dag_utils.clear_graph", "graphscope.framework.dag_utils.context_to_dataframe", "graphscope.framework.dag_utils.context_to_numpy", "graphscope.framework.dag_utils.copy_graph", "graphscope.framework.dag_utils.create_app", "graphscope.framework.dag_utils.create_graph", "graphscope.framework.dag_utils.create_graph_view", "graphscope.framework.dag_utils.create_loader", "graphscope.framework.dag_utils.create_subgraph", "graphscope.framework.dag_utils.create_unload_op", "graphscope.framework.dag_utils.dynamic_to_arrow", "graphscope.framework.dag_utils.get_context_data", "graphscope.framework.dag_utils.graph_to_dataframe", "graphscope.framework.dag_utils.graph_to_numpy", "graphscope.framework.dag_utils.gremlin_to_subgraph", "graphscope.framework.dag_utils.modify_edges", "graphscope.framework.dag_utils.modify_vertices", "graphscope.framework.dag_utils.output", "graphscope.framework.dag_utils.project_arrow_property_graph", "graphscope.framework.dag_utils.project_to_simple", "graphscope.framework.dag_utils.report_graph", "graphscope.framework.dag_utils.run_app", "graphscope.framework.dag_utils.to_data_sink", "graphscope.framework.dag_utils.to_directed", "graphscope.framework.dag_utils.to_undirected", "graphscope.framework.dag_utils.to_vineyard_dataframe", "graphscope.framework.dag_utils.to_vineyard_tensor", "graphscope.framework.dag_utils.unload_app", "graphscope.framework.dag_utils.unload_context", "graphscope.framework.dag_utils.unload_graph", "graphscope.framework.operation.Operation.__init__", "graphscope.framework.operation.Operation.as_op_def", "graphscope.framework.operation.Operation.eval", "graphscope.framework.operation.Operation.evaluated", "graphscope.framework.operation.Operation.key", "graphscope.framework.operation.Operation.signature", "graphscope.g", "graphscope.get_default_session", "graphscope.graphlearn", "graphscope.gremlin", "graphscope.has_default_session", "graphscope.session", "graphscope.set_option", "Developing Your Own Model", "Data Source", "Graph Object", "Graph Query", "Graph Sampling", "Graph Traversal", "Graph Sampling Language\uff08GSL)", "Install from pip", "Graph Learning Model", "Negative Sampling", "Defining Your Own Operator", "Integrating Other Data Sources", "Quick Start", "System configuration", "Graph", "Interactive Query", "Graph Learning", "Builtin algorithms", "Functions", "graphscope.nx.classes.function.add_cycle", "graphscope.nx.classes.function.add_path", "graphscope.nx.classes.function.add_star", "graphscope.nx.classes.function.all_neighbors", "graphscope.nx.classes.function.common_neighbors", "graphscope.nx.classes.function.create_empty_copy", "graphscope.nx.classes.function.degree", "graphscope.nx.classes.function.degree_histogram", "graphscope.nx.classes.function.density", "graphscope.nx.classes.function.edge_subgraph", "graphscope.nx.classes.function.edges", "graphscope.nx.classes.function.freeze", "graphscope.nx.classes.function.induced_subgraph", "graphscope.nx.classes.function.info", "graphscope.nx.classes.function.is_directed", "graphscope.nx.classes.function.is_empty", "graphscope.nx.classes.function.is_frozen", "graphscope.nx.classes.function.is_negatively_weighted", "graphscope.nx.classes.function.is_weighted", "graphscope.nx.classes.function.neighbors", "graphscope.nx.classes.function.nodes", "graphscope.nx.classes.function.nodes_with_selfloops", "graphscope.nx.classes.function.non_edges", "graphscope.nx.classes.function.non_neighbors", "graphscope.nx.classes.function.number_of_edges", "graphscope.nx.classes.function.number_of_nodes", "graphscope.nx.classes.function.number_of_selfloops", "graphscope.nx.classes.function.selfloop_edges", "graphscope.nx.classes.function.subgraph", "graphscope.nx.classes.function.to_directed", "graphscope.nx.classes.function.to_undirected", "graphscope.nx.generators.atlas.graph_atlas", "graphscope.nx.generators.atlas.graph_atlas_g", "graphscope.nx.generators.classic.balanced_tree", "graphscope.nx.generators.classic.barbell_graph", "graphscope.nx.generators.classic.binomial_tree", "graphscope.nx.generators.classic.circulant_graph", "graphscope.nx.generators.classic.circular_ladder_graph", "graphscope.nx.generators.classic.complete_graph", "graphscope.nx.generators.classic.complete_multipartite_graph", "graphscope.nx.generators.classic.cycle_graph", "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "graphscope.nx.generators.classic.empty_graph", "graphscope.nx.generators.classic.full_rary_tree", "graphscope.nx.generators.classic.ladder_graph", "graphscope.nx.generators.classic.lollipop_graph", "graphscope.nx.generators.classic.null_graph", "graphscope.nx.generators.classic.path_graph", "graphscope.nx.generators.classic.star_graph", "graphscope.nx.generators.classic.trivial_graph", "graphscope.nx.generators.classic.turan_graph", "graphscope.nx.generators.classic.wheel_graph", "graphscope.nx.generators.community.LFR_benchmark_graph", "graphscope.nx.generators.community.caveman_graph", "graphscope.nx.generators.community.connected_caveman_graph", "graphscope.nx.generators.community.gaussian_random_partition_graph", "graphscope.nx.generators.community.planted_partition_graph", "graphscope.nx.generators.community.random_partition_graph", "graphscope.nx.generators.community.relaxed_caveman_graph", "graphscope.nx.generators.community.ring_of_cliques", "graphscope.nx.generators.community.stochastic_block_model", "graphscope.nx.generators.community.windmill_graph", "graphscope.nx.generators.degree_seq.configuration_model", "graphscope.nx.generators.degree_seq.degree_sequence_tree", "graphscope.nx.generators.degree_seq.directed_configuration_model", "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "graphscope.nx.generators.degree_seq.expected_degree_graph", "graphscope.nx.generators.degree_seq.havel_hakimi_graph", "graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "graphscope.nx.generators.directed.gn_graph", "graphscope.nx.generators.directed.gnc_graph", "graphscope.nx.generators.directed.gnr_graph", "graphscope.nx.generators.directed.random_k_out_graph", "graphscope.nx.generators.directed.scale_free_graph", "graphscope.nx.generators.duplication.duplication_divergence_graph", "graphscope.nx.generators.duplication.partial_duplication_graph", "graphscope.nx.generators.ego.ego_graph", "graphscope.nx.generators.expanders.chordal_cycle_graph", "graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "graphscope.nx.generators.expanders.paley_graph", "graphscope.nx.generators.geometric.geographical_threshold_graph", "graphscope.nx.generators.geometric.random_geometric_graph", "graphscope.nx.generators.geometric.soft_random_geometric_graph", "graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "graphscope.nx.generators.geometric.waxman_graph", "graphscope.nx.generators.harary_graph.hkn_harary_graph", "graphscope.nx.generators.harary_graph.hnm_harary_graph", "graphscope.nx.generators.intersection.general_random_intersection_graph", "graphscope.nx.generators.intersection.k_random_intersection_graph", "graphscope.nx.generators.intersection.uniform_random_intersection_graph", "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "graphscope.nx.generators.mycielski.mycielski_graph", "graphscope.nx.generators.mycielski.mycielskian", "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "graphscope.nx.generators.small.LCF_graph", "graphscope.nx.generators.small.bull_graph", "graphscope.nx.generators.small.chvatal_graph", "graphscope.nx.generators.small.cubical_graph", "graphscope.nx.generators.small.desargues_graph", "graphscope.nx.generators.small.diamond_graph", "graphscope.nx.generators.small.dodecahedral_graph", "graphscope.nx.generators.small.frucht_graph", "graphscope.nx.generators.small.heawood_graph", "graphscope.nx.generators.small.house_graph", "graphscope.nx.generators.small.house_x_graph", "graphscope.nx.generators.small.icosahedral_graph", "graphscope.nx.generators.small.krackhardt_kite_graph", "graphscope.nx.generators.small.make_small_graph", "graphscope.nx.generators.small.moebius_kantor_graph", "graphscope.nx.generators.small.octahedral_graph", "graphscope.nx.generators.small.pappus_graph", "graphscope.nx.generators.small.petersen_graph", "graphscope.nx.generators.small.sedgewick_maze_graph", "graphscope.nx.generators.small.tetrahedral_graph", "graphscope.nx.generators.small.truncated_cube_graph", "graphscope.nx.generators.small.truncated_tetrahedron_graph", "graphscope.nx.generators.small.tutte_graph", "graphscope.nx.generators.social.davis_southern_women_graph", "graphscope.nx.generators.social.florentine_families_graph", "graphscope.nx.generators.social.karate_club_graph", "graphscope.nx.generators.social.les_miserables_graph", "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "graphscope.nx.generators.sudoku.sudoku_graph", "graphscope.nx.generators.trees.prefix_tree", "graphscope.nx.generators.trees.random_tree", "graphscope.nx.generators.triads.triad_graph", "networkx.generators.internet_as_graphs.random_internet_as_graph", "networkx.generators.stochastic.stochastic_graph", "Graph generators", "Graph types", "NetworkX-style API", "Reading graphs", "Graph Transformation", "Operation", "Python API Reference", "Selector", "Session", "Resources Estimator", "GART: Bridging the Gap between Relational OLTP and Graph Workloads", "Getting Started", "GraphAr: Standard Graph Data File Format", "GRIN: Graph Retrieval INterface", "Groot: Persistent Graph Store", "In-memory immutable graphs on Vineyard", "Applications and algorithms", "Scaling and repartitioning", "User Guide and Examples of GAE", "User Guide and Examples of GLE", "Error Codes", "Command-line Utility <code class=\"docutils literal notranslate\"><span class=\"pre\">gsctl</span></code>", "How to Find logs", "Monitoring", "\u56fe\u5206\u6790\u5f15\u64ce", "\u90e8\u7f72", "\u5f00\u53d1\u8005\u6307\u5357", "\u5e38\u89c1\u95ee\u9898", "\u5feb\u901f\u4e0a\u624b", "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c", "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf", "\u5b89\u88c5", "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce", "\u56fe\u5b66\u4e60\u5f15\u64ce", "\u8f7d\u56fe", "\u5165\u95e8\u6559\u7a0b"], "terms": {"The": [0, 1, 2, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 27, 29, 31, 32, 34, 36, 37, 38, 41, 42, 43, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 128, 129, 130, 131, 132, 134, 136, 143, 152, 153, 154, 166, 173, 174, 180, 183, 205, 212, 222, 229, 238, 239, 240, 252, 259, 260, 267, 269, 291, 298, 300, 301, 303, 306, 307, 309, 311, 312, 314, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 341, 342, 344, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 370, 388, 389, 390, 393, 401, 403, 404, 411, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 438, 439, 443, 444, 445, 448, 449, 451, 453, 454, 459, 462, 467, 468, 469, 470, 471, 472, 475, 478, 481, 484, 486, 487, 488, 490, 491, 493, 495, 496, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 568, 569, 571, 572, 575, 576, 578, 581, 582, 583, 584, 585, 586, 589, 590, 592], "graph": [0, 1, 3, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 29, 36, 37, 38, 46, 67, 94, 95, 106, 110, 126, 128, 133, 154, 173, 174, 180, 183, 189, 190, 205, 240, 259, 260, 267, 269, 275, 276, 291, 301, 303, 307, 308, 311, 312, 314, 320, 321, 322, 323, 324, 327, 329, 330, 333, 334, 336, 337, 341, 343, 351, 355, 358, 359, 360, 361, 362, 369, 370, 371, 372, 373, 374, 377, 379, 380, 382, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 403, 410, 412, 418, 424, 427, 428, 432, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 570, 573, 574, 575, 576, 585, 586, 589, 592, 596, 597, 598, 600, 601, 602], "analyt": [0, 1, 5, 8, 12, 14, 15, 16, 17, 18, 23, 27, 32, 36, 37, 38, 41, 314, 335, 337, 351, 353, 355, 356, 358, 362, 364, 367, 372, 431, 569, 574, 582, 585, 586, 592], "engin": [0, 1, 2, 5, 8, 16, 17, 23, 27, 28, 30, 32, 38, 41, 43, 45, 103, 133, 300, 308, 310, 314, 317, 320, 321, 322, 323, 326, 328, 331, 332, 335, 339, 343, 344, 348, 350, 351, 352, 353, 354, 356, 360, 364, 372, 388, 412, 417, 425, 431, 432, 433, 569, 575, 576, 578, 582, 583, 584, 585, 595, 596], "gae": [0, 3, 10, 12, 14, 15, 28, 32, 34, 314, 319, 337, 338, 349, 352, 356, 357, 358, 364, 388, 432, 593, 594], "graphscop": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 18, 24, 33, 34, 35, 37, 38, 39, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 154, 173, 174, 180, 183, 189, 205, 212, 300, 307, 308, 309, 310, 311, 313, 314, 316, 320, 321, 323, 325, 326, 327, 328, 332, 333, 334, 335, 337, 338, 340, 343, 344, 345, 346, 347, 348, 350, 351, 353, 357, 358, 360, 361, 364, 431, 432, 433, 434, 569, 571, 572, 573, 574, 575, 576, 577, 581, 582, 583, 584, 585, 586, 589, 592, 593, 595, 596, 597, 600, 602, 603], "offer": [0, 2, 9, 12, 20, 34, 43, 126, 129, 130, 131, 212, 307, 309, 310, 311, 319, 323, 325, 329, 334, 338, 339, 349, 351, 355, 356, 581, 582], "mani": [0, 4, 6, 10, 12, 13, 14, 24, 32, 34, 36, 37, 45, 131, 306, 310, 312, 314, 317, 322, 340, 348, 350, 351, 352, 354, 418, 425, 472, 516, 518, 569, 581, 586], "which": [0, 2, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 38, 41, 45, 128, 129, 130, 131, 134, 136, 143, 166, 212, 222, 229, 252, 275, 300, 306, 309, 310, 311, 314, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 362, 364, 368, 371, 384, 393, 395, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 431, 432, 433, 434, 448, 473, 475, 488, 489, 490, 498, 500, 517, 518, 519, 526, 528, 529, 547, 559, 561, 563, 567, 568, 569, 571, 572, 573, 575, 576, 578, 580, 581, 582, 583, 584, 586, 589], "enabl": [0, 1, 4, 6, 13, 15, 17, 18, 23, 31, 56, 57, 83, 84, 128, 133, 170, 194, 256, 280, 309, 310, 311, 314, 320, 325, 326, 334, 335, 339, 344, 345, 349, 350, 351, 353, 354, 355, 356, 357, 359, 428, 434, 569, 576, 581, 582, 585, 586, 590], "user": [0, 2, 4, 6, 9, 11, 12, 13, 14, 15, 17, 18, 22, 23, 24, 27, 29, 31, 34, 37, 41, 43, 46, 128, 129, 130, 131, 133, 300, 301, 306, 307, 309, 310, 311, 314, 319, 320, 322, 325, 326, 328, 329, 331, 333, 335, 338, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 417, 419, 420, 421, 422, 423, 424, 426, 429, 432, 569, 575, 576, 578, 581, 585, 596, 599, 600], "analyz": [0, 7, 13, 19, 27, 320, 334, 349, 350, 352, 353, 355, 423, 581], "data": [0, 2, 3, 4, 6, 9, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 27, 30, 31, 33, 34, 67, 95, 121, 126, 128, 133, 134, 259, 299, 307, 308, 310, 312, 314, 319, 320, 322, 323, 326, 328, 330, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 367, 369, 375, 376, 381, 386, 387, 391, 399, 400, 417, 419, 420, 421, 422, 423, 427, 431, 441, 447, 463, 464, 479, 496, 512, 531, 561, 569, 571, 572, 575, 576, 578, 581, 583, 584, 586, 592, 593, 595, 596, 601], "least": [0, 6, 37, 129, 335, 434, 468, 490], "effort": [0, 34, 310, 333, 357, 581], "cover": [0, 6, 15, 41, 342], "wide": [0, 11, 12, 24, 324, 326, 337, 338, 342, 349, 350, 352, 353, 354, 356, 421, 580, 586], "rang": [0, 13, 18, 128, 130, 131, 325, 326, 331, 333, 335, 338, 341, 342, 344, 345, 346, 347, 349, 350, 353, 356, 359, 361, 362, 375, 376, 386, 387, 391, 399, 400, 417, 422, 426, 474, 476, 478, 481, 484, 496, 502, 516, 517, 518, 519, 547, 569, 574, 581, 592, 595, 596, 600, 601], "applic": [0, 1, 4, 6, 8, 10, 11, 13, 14, 24, 34, 39, 47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 189, 205, 212, 240, 259, 260, 267, 275, 291, 300, 308, 309, 310, 314, 321, 322, 325, 326, 327, 334, 336, 338, 339, 351, 352, 353, 354, 357, 359, 360, 362, 372, 421, 500, 524, 580, 590], "commun": [0, 4, 6, 8, 9, 12, 15, 16, 18, 24, 27, 338, 349, 350, 351, 352, 355, 359, 360, 364, 419, 427, 520, 561, 566, 570, 580, 589], "detect": [0, 6, 8, 9, 338, 349, 350, 352, 353, 355, 356, 360, 488, 492, 493, 494], "etc": [0, 6, 7, 15, 29, 317, 320, 322, 331, 339, 342, 348, 350, 351, 354, 357, 361, 417, 420, 421, 422, 425, 436, 448, 457, 462, 463, 569, 571, 582], "ar": [0, 1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 27, 29, 30, 32, 33, 34, 35, 37, 38, 46, 47, 67, 75, 94, 95, 106, 110, 121, 128, 129, 130, 131, 132, 134, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 298, 300, 301, 303, 306, 308, 309, 310, 311, 314, 317, 320, 321, 322, 323, 325, 326, 328, 329, 331, 333, 334, 335, 338, 339, 340, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 364, 367, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 443, 444, 445, 458, 459, 464, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 483, 484, 487, 488, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 508, 512, 514, 515, 516, 517, 518, 519, 520, 524, 526, 528, 530, 531, 534, 552, 561, 562, 563, 564, 565, 569, 572, 575, 576, 578, 580, 581, 582, 583, 585, 589, 590, 602], "implement": [0, 1, 4, 8, 9, 12, 13, 16, 18, 22, 24, 34, 45, 131, 134, 180, 212, 267, 301, 303, 306, 307, 317, 320, 322, 325, 326, 327, 329, 330, 331, 333, 336, 338, 339, 342, 346, 347, 348, 349, 353, 356, 359, 360, 364, 417, 419, 421, 422, 423, 425, 428, 429, 431, 432, 434, 510, 511, 515, 516, 518, 520, 521, 522, 563, 564, 572, 592], "pie": [0, 1, 3, 8, 12, 34, 335, 337, 338, 352, 364, 367, 574, 586, 596, 598], "program": [0, 3, 9, 15, 16, 17, 18, 20, 23, 24, 133, 310, 311, 320, 337, 338, 342, 349, 351, 352, 354, 356, 357, 364, 417, 422, 423, 581, 586], "model": [0, 1, 3, 8, 9, 18, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 154, 173, 180, 183, 189, 205, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 303, 306, 311, 312, 317, 322, 325, 330, 331, 335, 337, 338, 341, 342, 343, 348, 349, 350, 352, 353, 356, 364, 419, 421, 423, 424, 488, 492, 496, 498, 500, 502, 508, 510, 511, 516, 517, 518, 519, 520, 524, 525, 559, 566, 576, 580, 582, 586, 596], "highli": [0, 4, 12, 34, 330, 335, 338, 351, 352, 580], "optim": [0, 9, 12, 14, 34, 50, 53, 128, 130, 131, 134, 138, 141, 224, 227, 310, 311, 319, 322, 326, 334, 335, 336, 338, 339, 341, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 357, 360, 417, 429, 431, 581, 583, 596], "best": [0, 16, 306, 349, 351, 353, 356, 357, 360, 569, 592], "perform": [0, 3, 4, 6, 9, 12, 14, 17, 22, 23, 24, 37, 41, 128, 130, 134, 306, 310, 319, 320, 322, 325, 329, 333, 335, 336, 337, 339, 349, 351, 352, 354, 355, 356, 361, 419, 423, 425, 431, 526, 531, 561, 573, 575, 578, 582, 584, 586], "can": [0, 1, 2, 4, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 45, 46, 126, 128, 129, 130, 131, 132, 133, 134, 180, 183, 212, 267, 269, 275, 298, 300, 303, 306, 307, 308, 309, 310, 311, 314, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 344, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 364, 368, 370, 394, 395, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 443, 444, 447, 451, 472, 475, 488, 489, 490, 497, 498, 500, 516, 517, 518, 519, 526, 530, 531, 538, 540, 542, 547, 550, 555, 556, 561, 563, 569, 572, 573, 575, 576, 578, 580, 581, 582, 583, 584, 586, 589, 590, 592], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 28, 29, 30, 31, 33, 35, 36, 37, 38, 41, 45, 46, 50, 53, 126, 128, 130, 131, 134, 138, 141, 154, 205, 224, 227, 298, 300, 303, 306, 307, 308, 309, 310, 311, 312, 314, 317, 320, 322, 323, 324, 325, 326, 327, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 369, 370, 394, 395, 404, 409, 417, 418, 419, 420, 421, 423, 425, 428, 430, 431, 432, 433, 434, 453, 454, 463, 475, 478, 482, 488, 489, 490, 496, 498, 502, 503, 505, 507, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 526, 530, 534, 547, 552, 561, 563, 566, 567, 569, 571, 572, 574, 576, 580, 581, 582, 584, 585, 586, 589, 590, 592, 596, 602], "them": [0, 1, 2, 6, 8, 12, 14, 15, 17, 24, 27, 30, 33, 34, 36, 41, 128, 129, 212, 298, 300, 309, 314, 317, 322, 325, 329, 333, 335, 344, 349, 350, 352, 354, 356, 357, 358, 369, 417, 420, 429, 474, 561, 575, 581, 582, 592], "out": [0, 6, 9, 12, 27, 29, 33, 34, 37, 46, 154, 173, 174, 180, 183, 189, 205, 212, 306, 326, 331, 334, 339, 346, 347, 348, 350, 351, 352, 353, 356, 360, 362, 417, 420, 421, 423, 434, 491, 500, 501, 508, 509, 512, 526, 527, 563, 567, 569, 581, 583, 585, 596, 600], "box": [0, 351, 562], "manner": [0, 2, 17, 18, 32, 36, 310, 350, 352, 353], "here": [0, 4, 10, 14, 16, 17, 18, 20, 23, 27, 33, 36, 37, 38, 41, 42, 45, 128, 129, 131, 134, 154, 205, 306, 309, 314, 320, 321, 322, 323, 325, 326, 328, 329, 331, 333, 334, 335, 338, 340, 341, 344, 345, 348, 354, 357, 360, 418, 419, 423, 426, 428, 429, 431, 434, 488, 500, 515, 516, 518, 527, 547, 569, 572, 580, 581, 582, 596], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 143, 166, 173, 180, 183, 205, 212, 222, 229, 252, 259, 267, 269, 275, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 359, 360, 361, 362, 363, 364, 365, 368, 370, 394, 404, 406, 410, 411, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 442, 444, 446, 448, 449, 450, 451, 452, 453, 454, 463, 464, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 575, 576, 578, 580, 581, 582, 583, 584, 585, 586, 589, 590, 592, 595, 596, 600, 601, 602], "full": [0, 4, 12, 16, 17, 18, 22, 34, 130, 212, 300, 306, 331, 338, 339, 342, 349, 354, 356, 360, 417, 420, 421, 423, 479, 582, 586, 592, 601], "list": [0, 1, 16, 19, 20, 28, 31, 34, 37, 38, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 131, 136, 140, 143, 144, 146, 150, 152, 153, 154, 155, 156, 161, 162, 166, 167, 168, 169, 170, 172, 173, 174, 180, 182, 184, 194, 206, 207, 208, 209, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 303, 321, 329, 331, 333, 335, 338, 344, 346, 348, 351, 354, 358, 360, 362, 381, 382, 389, 390, 404, 418, 421, 423, 431, 434, 443, 445, 448, 455, 457, 463, 464, 467, 468, 472, 474, 475, 493, 496, 498, 500, 501, 502, 503, 504, 516, 520, 523, 526, 527, 532, 534, 547, 563, 569, 570, 572, 576, 580, 582, 585, 590, 597, 600], "support": [0, 3, 4, 6, 9, 10, 12, 13, 17, 18, 20, 22, 24, 29, 32, 34, 37, 43, 46, 47, 67, 75, 94, 95, 106, 110, 121, 128, 129, 131, 132, 134, 183, 212, 259, 269, 300, 301, 306, 307, 310, 311, 312, 314, 317, 320, 321, 322, 324, 325, 326, 330, 331, 335, 336, 337, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 364, 370, 417, 418, 419, 421, 422, 423, 425, 426, 428, 431, 432, 434, 569, 572, 575, 576, 578, 580, 582, 583, 585, 586, 589, 595], "bf": [0, 15, 17, 34, 357, 360, 592], "df": [0, 34, 580], "hit": [0, 34, 36, 360, 361, 434, 570, 575, 592], "lpa": [0, 7, 34, 350, 360, 592], "sssp": [0, 7, 8, 9, 13, 14, 17, 18, 22, 24, 34, 313, 350, 357, 360, 361, 368, 575, 576, 584, 585, 592], "thi": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 75, 94, 95, 106, 126, 128, 129, 130, 131, 132, 134, 173, 174, 183, 189, 212, 259, 260, 267, 269, 275, 300, 302, 304, 306, 307, 309, 310, 311, 314, 317, 320, 321, 322, 323, 324, 325, 328, 329, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 378, 391, 394, 409, 417, 418, 419, 421, 422, 423, 424, 425, 427, 429, 431, 434, 451, 465, 466, 467, 468, 469, 470, 475, 478, 480, 481, 488, 489, 490, 492, 493, 496, 497, 498, 500, 502, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 528, 530, 547, 549, 552, 557, 561, 563, 564, 566, 567, 568, 569, 571, 573, 575, 576, 577, 578, 580, 581, 582, 586, 589, 590, 592], "find": [0, 4, 8, 9, 17, 22, 31, 32, 36, 37, 41, 45, 46, 129, 306, 309, 311, 314, 317, 319, 323, 325, 331, 333, 335, 344, 348, 350, 352, 353, 357, 359, 368, 416, 434, 439, 458, 459, 488, 576, 581, 582, 589], "problem": [0, 2, 6, 9, 11, 14, 15, 24, 29, 31, 37, 38, 126, 306, 314, 316, 317, 322, 335, 352, 354], "from": [0, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 22, 23, 24, 27, 29, 30, 34, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 154, 174, 205, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 362, 368, 388, 389, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 448, 467, 469, 474, 476, 478, 481, 488, 491, 495, 496, 497, 498, 500, 503, 508, 509, 511, 512, 516, 517, 518, 519, 520, 521, 528, 535, 544, 556, 561, 563, 564, 568, 569, 571, 572, 575, 576, 580, 581, 583, 589, 592, 596, 597, 600, 602], "given": [0, 7, 9, 13, 14, 20, 34, 128, 130, 183, 212, 269, 300, 310, 312, 317, 321, 322, 323, 325, 333, 334, 335, 342, 348, 350, 353, 354, 356, 360, 421, 423, 426, 429, 431, 433, 468, 475, 486, 498, 499, 500, 501, 502, 503, 504, 512, 520, 521, 522, 526, 527, 528, 529, 533, 561, 564, 565, 568, 569, 575, 576, 580, 581, 584, 585], "weight": [0, 7, 19, 20, 33, 45, 129, 130, 154, 173, 212, 240, 259, 267, 300, 313, 333, 335, 342, 350, 352, 357, 360, 389, 417, 419, 420, 421, 422, 423, 426, 429, 431, 434, 436, 437, 438, 442, 453, 454, 496, 508, 512, 516, 519, 559, 567, 568, 569, 571, 576, 582, 601], "As": [0, 7, 12, 13, 15, 16, 18, 20, 22, 24, 27, 38, 126, 128, 307, 310, 314, 322, 324, 325, 329, 335, 341, 342, 349, 353, 417, 419, 425, 426, 427, 498, 580, 581], "result": [0, 2, 4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 24, 33, 37, 134, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 300, 301, 303, 306, 310, 311, 317, 322, 323, 324, 325, 326, 328, 331, 333, 334, 335, 338, 342, 349, 350, 352, 353, 354, 359, 360, 361, 369, 375, 376, 385, 391, 393, 395, 396, 399, 400, 417, 420, 421, 423, 425, 426, 428, 431, 432, 434, 498, 500, 503, 522, 569, 580, 582, 584, 592, 596], "comput": [0, 3, 4, 6, 9, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 31, 34, 37, 128, 308, 310, 322, 323, 325, 333, 335, 338, 339, 342, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 421, 422, 425, 427, 434, 515, 518, 519, 523, 528, 537, 560, 561, 573, 576, 582, 583, 592], "minimum": [0, 6, 314, 323, 325, 329, 333, 335, 360, 488, 576], "distanc": [0, 7, 15, 17, 18, 350, 360, 434, 469, 508, 512, 516, 517, 518, 519, 520, 538, 550, 592], "ani": [0, 2, 4, 17, 19, 20, 22, 24, 27, 30, 33, 34, 36, 37, 38, 45, 47, 75, 94, 95, 106, 128, 129, 134, 174, 183, 189, 212, 259, 260, 269, 275, 300, 303, 306, 321, 322, 324, 326, 329, 331, 333, 334, 335, 348, 349, 350, 352, 353, 356, 358, 359, 361, 370, 377, 421, 432, 433, 434, 445, 449, 464, 488, 493, 495, 498, 500, 516, 518, 520, 569, 572, 575, 581, 589], "vertex": [0, 2, 3, 4, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 30, 33, 34, 46, 67, 94, 129, 131, 134, 152, 153, 154, 157, 158, 205, 212, 238, 239, 240, 243, 244, 259, 291, 300, 301, 303, 306, 311, 313, 321, 329, 331, 333, 337, 338, 339, 342, 349, 350, 351, 352, 353, 354, 357, 359, 360, 361, 362, 367, 388, 418, 419, 420, 421, 422, 423, 426, 429, 431, 433, 434, 508, 513, 530, 531, 547, 572, 574, 578, 580, 582, 583, 586, 592, 597], "other": [0, 3, 4, 6, 8, 9, 10, 12, 14, 16, 20, 23, 24, 29, 30, 33, 34, 36, 37, 130, 131, 132, 133, 312, 314, 317, 320, 322, 325, 326, 331, 333, 335, 338, 339, 342, 344, 349, 351, 352, 353, 354, 355, 356, 360, 362, 417, 419, 421, 423, 427, 430, 431, 432, 434, 438, 469, 471, 475, 478, 488, 497, 503, 509, 518, 519, 561, 569, 571, 572, 575, 576, 580, 581, 585], "vertic": [0, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 33, 45, 68, 129, 130, 131, 173, 259, 306, 310, 311, 313, 321, 322, 324, 325, 329, 331, 333, 339, 342, 349, 350, 352, 353, 354, 359, 360, 361, 362, 390, 418, 419, 420, 421, 422, 423, 426, 429, 431, 492, 503, 513, 515, 530, 531, 542, 544, 555, 556, 562, 575, 576, 578, 580, 581, 582, 583, 592, 596, 597], "all_pairs_shortest_path_length": [0, 34], "refer": [0, 2, 4, 9, 10, 12, 16, 17, 23, 24, 29, 30, 33, 34, 37, 41, 43, 44, 45, 126, 128, 129, 131, 132, 133, 134, 180, 183, 269, 300, 306, 307, 308, 309, 310, 311, 312, 314, 321, 323, 324, 329, 331, 333, 335, 339, 340, 342, 352, 353, 354, 356, 360, 379, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 434, 467, 468, 479, 488, 489, 490, 491, 492, 493, 494, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 566, 568, 569, 582, 586, 600], "tendenc": [0, 20], "similar": [0, 10, 12, 20, 37, 321, 322, 326, 329, 331, 334, 335, 339, 342, 348, 349, 352, 356, 360, 417, 418, 419, 420, 423, 426, 431, 561, 569], "over": [0, 9, 12, 15, 16, 18, 22, 24, 33, 34, 309, 314, 317, 333, 337, 342, 349, 351, 352, 356, 357, 360, 362, 420, 434, 456, 457, 463, 515, 569, 578, 586], "dissimilar": 0, "measur": [0, 6, 20, 322, 352, 354, 360, 418, 434, 512, 513, 546], "extent": [0, 6], "same": [0, 2, 4, 6, 10, 13, 15, 17, 20, 22, 29, 30, 37, 131, 132, 298, 311, 322, 329, 331, 333, 335, 339, 348, 352, 353, 357, 418, 419, 423, 424, 427, 429, 431, 433, 434, 462, 463, 484, 492, 493, 498, 500, 526, 527, 529, 562, 563, 569, 576, 580, 581, 582, 583, 584], "properti": [0, 4, 6, 7, 9, 12, 15, 17, 20, 33, 45, 128, 129, 130, 131, 154, 173, 205, 212, 240, 259, 267, 291, 300, 301, 304, 312, 313, 320, 323, 325, 326, 328, 336, 350, 352, 353, 354, 359, 360, 361, 362, 379, 393, 407, 408, 409, 420, 423, 431, 432, 516, 531, 561, 566, 569, 572, 575, 576, 578, 582, 583, 590, 596, 597, 600], "each": [0, 6, 9, 10, 12, 13, 14, 15, 16, 19, 20, 24, 30, 34, 35, 36, 38, 41, 128, 129, 130, 131, 134, 173, 212, 259, 300, 303, 311, 320, 321, 322, 325, 326, 331, 333, 334, 335, 339, 341, 342, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 362, 408, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 431, 434, 443, 445, 463, 464, 469, 473, 475, 480, 486, 488, 490, 491, 492, 494, 495, 497, 498, 500, 501, 503, 508, 511, 513, 516, 517, 518, 519, 520, 523, 524, 526, 528, 529, 534, 537, 549, 554, 559, 563, 565, 566, 567, 569, 575, 576, 578, 580, 581, 582, 583, 586, 590], "attribute_assort": [0, 34], "nearest": [0, 360], "neighbor": [0, 6, 9, 13, 14, 17, 18, 313, 331, 333, 335, 339, 342, 346, 352, 353, 354, 360, 362, 417, 418, 420, 421, 423, 425, 426, 427, 429, 430, 434, 439, 440, 459, 511, 512, 526, 529, 562, 569, 578, 581, 592], "return": [0, 6, 9, 15, 18, 20, 92, 111, 134, 170, 194, 212, 256, 280, 299, 300, 302, 303, 304, 306, 307, 313, 322, 324, 325, 326, 327, 328, 329, 333, 334, 335, 342, 344, 346, 347, 350, 353, 360, 361, 362, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 410, 411, 412, 416, 417, 419, 420, 421, 422, 423, 426, 427, 428, 429, 431, 432, 433, 434, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 575, 576, 578, 581, 582, 592, 601], "success": [0, 13, 22, 47, 67, 94, 95, 110, 121, 129, 173, 174, 176, 180, 189, 212, 259, 260, 267, 275, 300, 302, 304, 364, 419, 503, 534], "0": [0, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 30, 31, 33, 35, 45, 46, 126, 128, 129, 130, 134, 154, 173, 212, 259, 300, 306, 307, 309, 311, 314, 317, 320, 321, 323, 324, 325, 326, 330, 333, 335, 339, 341, 342, 344, 345, 346, 347, 348, 350, 357, 359, 360, 361, 362, 376, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 434, 436, 437, 438, 440, 444, 445, 448, 449, 453, 463, 467, 468, 470, 471, 472, 473, 475, 478, 480, 481, 483, 484, 485, 487, 488, 491, 492, 493, 494, 496, 497, 498, 500, 501, 504, 507, 509, 516, 517, 518, 519, 520, 526, 527, 531, 534, 547, 552, 561, 563, 564, 569, 571, 572, 576, 578, 581, 582, 583, 584, 590, 592, 594, 595, 596, 597, 599, 600, 601, 602], "1": [0, 4, 6, 7, 9, 10, 13, 14, 15, 17, 19, 20, 22, 23, 24, 28, 30, 31, 33, 34, 35, 37, 45, 46, 126, 128, 130, 131, 134, 154, 173, 180, 183, 189, 205, 212, 240, 259, 269, 275, 291, 300, 303, 306, 307, 309, 311, 312, 317, 320, 321, 322, 323, 324, 325, 330, 331, 333, 335, 339, 341, 342, 344, 345, 346, 347, 348, 350, 353, 354, 357, 360, 361, 417, 420, 422, 423, 424, 426, 431, 432, 433, 434, 436, 437, 438, 440, 444, 445, 448, 453, 454, 457, 462, 463, 467, 469, 470, 471, 472, 473, 475, 479, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 571, 572, 576, 581, 583, 584, 590, 592, 596, 597, 599, 600, 601, 602], "2": [0, 6, 9, 10, 13, 14, 17, 18, 19, 20, 22, 23, 28, 31, 33, 34, 37, 45, 130, 131, 134, 154, 173, 174, 183, 212, 240, 259, 300, 303, 312, 320, 321, 322, 323, 324, 325, 330, 333, 335, 339, 341, 342, 344, 345, 346, 347, 348, 350, 353, 354, 357, 360, 361, 417, 420, 421, 422, 423, 424, 426, 431, 434, 436, 437, 438, 440, 448, 449, 453, 454, 457, 462, 463, 470, 471, 472, 475, 480, 481, 486, 488, 490, 492, 494, 495, 496, 498, 499, 500, 502, 503, 504, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 536, 538, 540, 541, 542, 546, 547, 549, 551, 552, 554, 561, 562, 563, 564, 569, 571, 572, 576, 580, 581, 583, 584, 592, 593, 594, 596, 597, 600, 601, 602], "average_degree_connect": [0, 360, 592], "source_degree_typ": 0, "target_degree_typ": 0, "paramet": [0, 2, 6, 9, 15, 16, 17, 30, 45, 46, 92, 111, 128, 170, 188, 194, 212, 256, 274, 280, 298, 301, 302, 303, 304, 306, 308, 310, 314, 320, 322, 325, 329, 333, 334, 335, 342, 347, 350, 354, 359, 360, 361, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 382, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 409, 416, 418, 419, 421, 423, 426, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 445, 447, 448, 449, 451, 452, 453, 454, 458, 459, 463, 464, 467, 469, 471, 472, 474, 475, 476, 478, 479, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 576, 580, 581, 582, 589], "str": [0, 20, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 124, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 287, 288, 291, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 344, 345, 346, 348, 360, 361, 362, 368, 369, 375, 376, 377, 379, 386, 387, 388, 391, 393, 394, 395, 396, 399, 400, 429, 431, 432, 447, 449, 563, 569, 571, 575, 576, 597, 602], "target": [0, 6, 17, 22, 24, 82, 212, 320, 323, 326, 333, 339, 340, 349, 350, 354, 356, 360, 362, 423, 425, 431, 434, 505, 507, 526, 529, 561, 592], "base": [0, 4, 6, 9, 11, 12, 13, 14, 18, 32, 34, 46, 128, 130, 131, 133, 134, 306, 310, 317, 320, 321, 322, 323, 325, 326, 328, 331, 333, 335, 338, 342, 349, 350, 351, 352, 353, 354, 357, 359, 360, 361, 383, 389, 417, 419, 421, 423, 424, 425, 434, 505, 544, 559, 569, 581, 582, 586, 592, 601], "v": [0, 2, 6, 7, 9, 10, 13, 14, 15, 18, 20, 22, 24, 33, 37, 45, 212, 240, 291, 313, 317, 324, 329, 331, 334, 335, 342, 350, 353, 354, 359, 360, 361, 362, 417, 420, 421, 422, 423, 426, 429, 431, 432, 433, 434, 440, 463, 488, 491, 496, 498, 502, 508, 511, 516, 519, 526, 529, 531, 563, 569, 575, 576, 580, 581, 582, 592, 596, 600, 601], "sum": [0, 20, 329, 331, 346, 352, 360, 362, 434, 488, 493, 496, 498, 499, 500, 509, 516, 519, 520, 527, 528, 567, 569, 600], "fraction": [0, 360, 434, 488], "pass": [0, 2, 6, 9, 10, 14, 15, 16, 18, 20, 24, 27, 37, 128, 310, 322, 324, 325, 328, 333, 335, 342, 348, 353, 354, 360, 362, 367, 423, 427, 429, 478, 516, 518, 561, 569, 573, 592, 597, 602], "through": [0, 2, 4, 6, 12, 13, 14, 15, 16, 19, 22, 24, 27, 32, 34, 37, 38, 43, 126, 129, 307, 309, 311, 319, 320, 321, 322, 324, 325, 327, 328, 330, 333, 334, 335, 336, 339, 342, 348, 350, 352, 353, 354, 356, 361, 364, 418, 419, 421, 422, 423, 428, 429, 431, 434, 464, 478, 495, 534, 569, 580, 581], "betweenness_centr": [0, 34, 434], "normal": [0, 6, 27, 314, 335, 360, 423, 431, 434, 491, 581], "endpoint": [0, 9, 10, 27, 28, 29, 44, 45, 47, 75, 94, 95, 106, 126, 134, 174, 189, 205, 212, 259, 260, 275, 291, 298, 300, 307, 309, 310, 320, 321, 323, 325, 327, 329, 330, 333, 334, 344, 348, 350, 359, 423, 432, 434, 576, 578, 582, 589, 592, 600, 602], "bool": [0, 6, 14, 15, 20, 48, 51, 56, 57, 59, 63, 75, 83, 84, 85, 89, 92, 95, 99, 165, 179, 224, 256, 265, 274, 276, 280, 299, 304, 306, 313, 329, 348, 359, 360, 362, 406, 414, 431, 434, 441, 451, 453, 454, 463, 492, 502, 508, 512, 528, 569, 571, 576, 581, 602], "whether": [0, 37, 130, 134, 299, 302, 304, 321, 322, 325, 326, 333, 335, 348, 349, 353, 359, 360, 418, 419, 423, 431, 491, 493, 496, 516, 527, 528, 569, 580, 581, 582, 583], "should": [0, 6, 9, 13, 16, 19, 20, 22, 23, 27, 28, 30, 33, 37, 128, 130, 134, 152, 238, 306, 320, 321, 322, 324, 328, 331, 333, 335, 348, 349, 350, 354, 359, 360, 368, 371, 384, 393, 427, 428, 431, 433, 434, 464, 488, 516, 517, 518, 519, 569, 571, 576, 578, 581, 582, 583, 584], "includ": [0, 3, 4, 6, 7, 9, 12, 16, 17, 20, 22, 24, 27, 30, 35, 36, 37, 43, 45, 130, 131, 134, 152, 173, 174, 238, 259, 260, 306, 310, 317, 319, 320, 322, 323, 325, 326, 329, 330, 335, 338, 339, 340, 341, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 419, 420, 423, 425, 431, 434, 449, 488, 496, 502, 512, 561, 568, 569, 580, 581, 582, 589, 590], "count": [0, 6, 33, 180, 210, 211, 212, 267, 296, 297, 300, 306, 311, 320, 322, 324, 325, 326, 329, 331, 334, 335, 342, 350, 352, 359, 360, 421, 422, 426, 427, 430, 434, 444, 502, 569, 582, 596, 600], "an": [0, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 34, 37, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 183, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 306, 307, 310, 312, 314, 317, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 364, 368, 371, 372, 373, 374, 375, 376, 378, 379, 381, 384, 386, 387, 388, 389, 390, 391, 394, 395, 396, 399, 400, 401, 403, 404, 412, 417, 418, 419, 421, 422, 423, 425, 426, 428, 429, 431, 433, 434, 445, 446, 451, 456, 457, 463, 464, 466, 467, 468, 470, 473, 474, 475, 476, 478, 479, 481, 483, 484, 487, 489, 490, 498, 500, 501, 502, 504, 505, 508, 509, 510, 511, 515, 516, 517, 518, 519, 520, 525, 526, 527, 528, 529, 530, 534, 536, 542, 547, 551, 554, 555, 559, 561, 562, 563, 564, 566, 567, 569, 572, 573, 575, 576, 578, 580, 581, 582, 583, 584, 585, 586, 589], "travers": [0, 6, 13, 15, 17, 310, 321, 322, 329, 331, 334, 339, 349, 350, 351, 352, 417, 420, 423, 425, 429, 432, 563, 569, 578, 581, 582, 583, 592, 600], "It": [0, 2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 24, 27, 29, 34, 36, 37, 41, 43, 130, 131, 134, 302, 303, 304, 310, 311, 314, 317, 320, 321, 322, 324, 325, 326, 328, 329, 331, 333, 334, 335, 338, 339, 345, 348, 350, 351, 352, 353, 354, 355, 356, 359, 360, 364, 410, 417, 418, 419, 423, 425, 427, 431, 432, 434, 438, 493, 497, 521, 522, 526, 529, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 550, 553, 555, 556, 561, 569, 576, 580, 581, 582, 583, 589, 590], "start": [0, 2, 4, 6, 9, 16, 19, 20, 27, 28, 29, 31, 32, 37, 39, 43, 44, 45, 106, 131, 132, 133, 183, 189, 275, 298, 301, 303, 309, 310, 311, 312, 319, 320, 321, 327, 328, 329, 331, 333, 334, 342, 344, 346, 347, 348, 353, 355, 358, 359, 361, 417, 421, 423, 432, 433, 434, 469, 494, 498, 500, 501, 504, 520, 534, 563, 571, 576, 581, 582, 586, 599], "root": [0, 4, 27, 32, 36, 46, 314, 348, 351, 469, 471, 562, 563, 580], "explor": [0, 17, 43, 130, 309, 312, 317, 323, 325, 333, 335, 349, 350, 353, 581], "present": [0, 2, 20, 27, 128, 130, 333, 335, 342, 343, 344, 345, 346, 347, 349, 350, 352, 364, 434, 445, 488, 569, 580, 581], "prior": [0, 12, 34, 134, 325, 333, 335, 338, 349], "move": [0, 4, 6, 310, 328, 351, 423, 526, 529], "next": [0, 6, 9, 12, 14, 16, 24, 29, 30, 33, 34, 334, 335, 339, 342, 343, 348, 349, 354, 417, 418, 421, 423, 425, 427, 428, 429, 495, 563, 575, 578, 581, 584], "level": [0, 6, 12, 38, 128, 183, 269, 317, 322, 325, 349, 351, 354, 360, 425, 479, 526, 527, 566, 581, 582], "int": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 33, 47, 53, 55, 57, 78, 80, 84, 85, 89, 93, 100, 123, 128, 221, 227, 245, 248, 250, 252, 253, 255, 256, 257, 258, 262, 274, 276, 277, 290, 296, 297, 299, 303, 306, 313, 331, 344, 346, 348, 359, 360, 361, 362, 394, 418, 419, 420, 421, 422, 423, 426, 429, 430, 431, 433, 434, 462, 467, 469, 471, 474, 476, 478, 479, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 504, 505, 506, 507, 508, 510, 511, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 530, 531, 532, 533, 564, 569, 571, 576, 578, 582, 592, 600, 602], "evalu": [0, 6, 14, 15, 16, 18, 37, 320, 325, 338, 350, 351, 354, 357, 359, 360, 361, 372, 395, 404, 406, 410, 412, 431, 576, 586, 600], "also": [0, 1, 2, 4, 6, 9, 10, 12, 16, 17, 19, 20, 22, 23, 27, 29, 30, 32, 34, 36, 37, 38, 45, 128, 129, 130, 131, 133, 134, 212, 300, 306, 307, 308, 309, 310, 311, 314, 317, 320, 321, 322, 325, 328, 331, 333, 335, 338, 341, 343, 344, 349, 350, 351, 352, 354, 356, 357, 359, 360, 362, 364, 417, 418, 419, 421, 424, 425, 426, 429, 431, 432, 434, 469, 488, 513, 515, 516, 520, 539, 544, 549, 561, 563, 567, 569, 572, 575, 576, 578, 580, 581, 582, 585, 586, 592], "known": [0, 6, 8, 9, 24, 32, 321, 324, 328, 329, 335, 352, 353, 360, 451, 469, 472, 521, 522, 539, 563, 584], "see": [0, 2, 4, 13, 19, 20, 27, 29, 30, 36, 37, 38, 42, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 126, 130, 134, 154, 174, 205, 307, 309, 310, 311, 314, 321, 324, 328, 331, 334, 335, 338, 348, 355, 360, 361, 364, 410, 412, 418, 419, 421, 426, 429, 431, 467, 477, 482, 488, 491, 492, 493, 494, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 523, 524, 525, 526, 529, 534, 561, 564, 566, 569, 571, 575, 576, 580, 581, 582, 585], "max_round": [0, 360, 580, 592], "10": [0, 13, 15, 16, 17, 20, 27, 31, 128, 131, 134, 307, 314, 316, 317, 322, 327, 331, 333, 335, 341, 342, 344, 345, 346, 347, 350, 357, 360, 418, 419, 420, 422, 423, 429, 431, 434, 436, 437, 438, 472, 478, 488, 491, 493, 502, 503, 504, 505, 507, 511, 516, 520, 524, 540, 546, 551, 564, 569, 576, 580, 590, 592, 596, 600], "maximum": [0, 128, 131, 311, 321, 329, 331, 333, 335, 352, 360, 420, 434, 488, 504, 519, 520, 521, 522, 527, 568, 582], "round": [0, 9, 14, 17, 24, 320, 360, 362, 486, 496], "default": [0, 6, 13, 15, 20, 23, 28, 29, 30, 32, 36, 41, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 128, 130, 131, 132, 134, 154, 205, 212, 298, 300, 303, 306, 307, 309, 310, 311, 314, 317, 320, 321, 323, 324, 325, 326, 331, 333, 335, 341, 344, 346, 348, 357, 359, 360, 361, 362, 379, 388, 410, 411, 414, 418, 419, 423, 430, 431, 433, 434, 436, 437, 438, 441, 463, 465, 466, 469, 471, 472, 474, 476, 478, 479, 481, 483, 484, 487, 488, 491, 492, 493, 494, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 529, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 561, 562, 564, 566, 567, 569, 571, 572, 576, 578, 580, 582, 589, 590, 602], "origin": [0, 4, 6, 9, 12, 13, 22, 129, 322, 325, 326, 331, 333, 339, 344, 345, 354, 359, 361, 388, 417, 419, 431, 432, 488, 510, 516, 555, 563, 567, 569, 575, 576, 582, 583], "reciproc": [0, 434], "n": [0, 19, 20, 30, 33, 38, 46, 47, 67, 75, 94, 95, 106, 110, 121, 128, 130, 173, 212, 267, 300, 307, 320, 322, 324, 326, 327, 329, 333, 335, 338, 342, 350, 354, 357, 360, 361, 421, 423, 426, 428, 434, 444, 448, 449, 451, 455, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 497, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 530, 531, 534, 547, 562, 563, 564, 566, 569, 582], "reachabl": [0, 311, 434], "node": [0, 4, 10, 13, 15, 18, 27, 30, 33, 100, 104, 131, 314, 317, 325, 329, 330, 333, 341, 342, 343, 349, 350, 352, 354, 356, 358, 360, 361, 362, 382, 385, 390, 393, 394, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 455, 457, 459, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 576, 581, 582, 583, 592, 595, 596, 601], "wasserman": 0, "faust": 0, "propos": [0, 3, 6, 12, 14, 24, 34, 338, 349, 351, 352, 354, 356, 421, 427, 578, 581], "improv": [0, 6, 9, 17, 19, 23, 134, 310, 331, 351, 354, 355, 356, 585], "formula": 0, "more": [0, 2, 3, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 20, 27, 29, 30, 32, 34, 36, 37, 38, 41, 45, 46, 126, 131, 132, 212, 306, 307, 309, 310, 311, 312, 314, 317, 320, 322, 323, 324, 325, 328, 331, 333, 335, 338, 339, 340, 341, 342, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 361, 364, 417, 418, 421, 422, 423, 427, 428, 431, 434, 467, 508, 515, 516, 530, 531, 563, 569, 571, 576, 580, 581, 582, 585, 586, 589], "than": [0, 13, 15, 18, 23, 24, 29, 30, 33, 37, 130, 310, 311, 314, 321, 322, 325, 329, 333, 335, 337, 342, 348, 349, 352, 353, 355, 356, 360, 419, 421, 423, 430, 434, 444, 478, 486, 488, 490, 495, 497, 508, 510, 519, 576, 581, 582, 585, 586], "one": [0, 2, 6, 9, 10, 12, 13, 14, 15, 19, 20, 22, 24, 29, 30, 36, 37, 41, 128, 129, 131, 183, 212, 269, 275, 300, 306, 310, 314, 317, 319, 321, 322, 325, 329, 331, 333, 335, 339, 342, 348, 350, 353, 354, 356, 359, 360, 362, 368, 369, 409, 417, 418, 419, 420, 421, 423, 427, 431, 434, 443, 467, 468, 471, 472, 475, 484, 485, 488, 497, 498, 503, 505, 506, 507, 508, 509, 511, 526, 529, 537, 540, 544, 547, 553, 554, 555, 561, 563, 565, 569, 575, 576, 578, 580, 581, 582, 585, 596, 600], "compon": [0, 4, 6, 12, 19, 29, 32, 34, 38, 41, 75, 131, 134, 314, 324, 325, 326, 349, 351, 352, 353, 359, 360, 434, 502, 516, 575, 581, 582], "ratio": [0, 13, 335, 561], "actor": [0, 134, 335, 349, 546], "group": [0, 2, 310, 314, 322, 346, 348, 350, 352, 353, 359, 425, 431, 492, 493, 494, 496, 513, 541, 559, 580, 582, 600, 602], "who": [0, 11, 29, 310, 325, 335, 349, 353, 424, 429], "closeness_centr": [0, 34], "wf": 0, "quantifi": 0, "how": [0, 2, 4, 8, 9, 12, 13, 14, 16, 20, 27, 30, 33, 34, 36, 38, 44, 45, 126, 130, 131, 132, 134, 154, 174, 205, 306, 307, 310, 311, 314, 316, 317, 319, 321, 323, 325, 326, 328, 332, 333, 334, 335, 336, 337, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 356, 358, 361, 364, 372, 418, 419, 423, 425, 576, 577, 580, 581, 582, 583, 585, 586, 596], "its": [0, 4, 6, 7, 9, 10, 12, 13, 14, 18, 24, 30, 31, 34, 128, 129, 130, 134, 212, 300, 310, 317, 325, 326, 328, 331, 333, 335, 339, 341, 342, 345, 348, 349, 350, 352, 353, 354, 360, 361, 362, 409, 417, 419, 423, 427, 429, 431, 434, 476, 479, 486, 488, 508, 513, 526, 529, 537, 556, 566, 576, 581, 582, 584], "being": [0, 128, 131, 134, 325, 331, 342, 353, 431, 468, 498, 578, 581, 583], "cliqu": [0, 6, 325, 335, 349, 352, 489, 490, 494, 495, 497, 511], "complet": [0, 14, 31, 33, 34, 132, 212, 300, 322, 325, 326, 328, 331, 335, 348, 351, 417, 419, 423, 444, 469, 470, 472, 474, 475, 481, 486, 495, 526, 529, 553, 569, 582], "have": [0, 2, 4, 6, 8, 9, 11, 12, 13, 15, 19, 20, 23, 24, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 45, 126, 129, 131, 132, 134, 212, 300, 306, 307, 309, 311, 314, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 333, 335, 337, 338, 340, 342, 348, 349, 350, 352, 353, 354, 356, 360, 361, 364, 368, 417, 418, 419, 420, 421, 423, 424, 426, 427, 429, 431, 434, 444, 448, 451, 463, 469, 474, 479, 488, 498, 499, 500, 502, 508, 511, 526, 527, 529, 545, 549, 563, 569, 575, 576, 580, 581, 582, 584, 586, 589, 590, 596], "edg": [0, 6, 7, 9, 12, 13, 15, 17, 18, 19, 22, 24, 30, 33, 37, 45, 46, 67, 68, 77, 94, 129, 131, 136, 143, 152, 154, 160, 166, 173, 212, 222, 229, 238, 240, 246, 252, 259, 300, 301, 303, 310, 313, 321, 322, 325, 328, 329, 331, 333, 339, 341, 342, 344, 345, 346, 347, 349, 350, 352, 353, 354, 356, 359, 360, 361, 362, 373, 374, 377, 382, 389, 393, 394, 412, 417, 418, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 432, 433, 434, 436, 437, 438, 441, 444, 445, 447, 448, 449, 451, 453, 454, 457, 458, 460, 462, 463, 464, 468, 470, 471, 472, 473, 474, 475, 478, 480, 481, 482, 485, 486, 488, 490, 493, 494, 496, 498, 499, 500, 502, 504, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 526, 527, 528, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 553, 554, 555, 556, 559, 563, 566, 567, 568, 569, 570, 572, 575, 576, 578, 580, 582, 583, 584, 592, 596, 597, 601], "u": [0, 6, 14, 16, 18, 20, 37, 306, 313, 314, 331, 335, 348, 350, 360, 423, 427, 429, 431, 434, 440, 463, 475, 488, 502, 508, 511, 516, 519, 531, 569, 581, 589, 592, 602], "equal": [0, 10, 154, 205, 311, 314, 329, 333, 335, 341, 345, 348, 350, 434, 486, 488, 519, 524, 562, 596], "degree_assortativity_coeffici": [0, 360, 592], "hold": [0, 10, 20, 333, 359, 360, 361, 362, 388, 396, 419, 431, 434, 569, 575], "numer": [0, 20, 45, 134, 325, 329, 331, 333, 349, 351, 352, 360, 361, 434, 569, 575, 581], "valu": [0, 6, 9, 13, 15, 18, 20, 24, 29, 36, 117, 128, 130, 131, 137, 138, 147, 152, 153, 154, 165, 167, 170, 176, 179, 181, 183, 185, 186, 190, 194, 200, 205, 206, 238, 239, 240, 264, 269, 286, 291, 292, 299, 302, 303, 306, 311, 313, 314, 321, 322, 324, 325, 326, 329, 339, 344, 346, 348, 352, 354, 359, 360, 361, 362, 395, 404, 416, 417, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 433, 434, 443, 463, 478, 488, 516, 517, 518, 519, 526, 528, 529, 561, 562, 563, 569, 571, 572, 575, 576, 578, 580, 581, 582, 583, 592, 600, 601, 602], "If": [0, 2, 4, 6, 7, 8, 13, 14, 15, 17, 20, 23, 27, 29, 30, 32, 33, 36, 37, 46, 126, 129, 130, 131, 134, 152, 183, 212, 238, 269, 275, 298, 300, 303, 306, 307, 309, 311, 314, 320, 321, 323, 324, 325, 328, 331, 333, 335, 341, 348, 350, 356, 360, 361, 364, 416, 418, 419, 423, 424, 427, 428, 430, 431, 432, 433, 434, 439, 440, 442, 449, 453, 454, 463, 464, 469, 470, 471, 472, 474, 475, 476, 478, 479, 481, 483, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 526, 529, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 561, 564, 565, 567, 569, 571, 572, 575, 576, 578, 581, 582, 583, 589, 590], "fals": [0, 13, 15, 17, 18, 19, 20, 130, 134, 306, 321, 328, 333, 346, 347, 348, 359, 360, 362, 410, 417, 418, 419, 423, 429, 431, 433, 434, 447, 451, 453, 454, 463, 465, 466, 491, 492, 493, 496, 502, 512, 527, 569, 572, 576, 580, 582, 592, 601], "ha": [0, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 17, 23, 28, 29, 31, 34, 37, 41, 131, 152, 212, 238, 300, 306, 310, 311, 314, 317, 320, 322, 323, 324, 325, 328, 329, 331, 332, 335, 339, 342, 343, 344, 348, 349, 350, 351, 353, 354, 355, 356, 359, 360, 361, 362, 364, 409, 417, 418, 419, 420, 421, 423, 426, 427, 428, 429, 431, 432, 434, 451, 453, 454, 457, 462, 463, 469, 484, 486, 488, 499, 503, 508, 516, 517, 518, 519, 520, 526, 529, 535, 536, 540, 541, 545, 551, 553, 556, 559, 561, 563, 567, 569, 573, 575, 576, 582, 584, 586, 596, 597, 600], "adjac": [0, 10, 16, 20, 24, 333, 335, 354, 360, 420, 425, 434, 457, 490, 514, 532, 547, 561, 562, 569, 570, 581], "direct": [0, 9, 10, 15, 48, 59, 85, 129, 131, 321, 325, 335, 339, 342, 345, 348, 350, 351, 354, 359, 360, 380, 410, 417, 419, 423, 426, 429, 431, 434, 439, 444, 450, 465, 476, 489, 490, 491, 492, 493, 496, 500, 501, 503, 512, 513, 514, 515, 526, 527, 536, 563, 567, 569, 570, 572, 576, 580, 581, 583, 597, 601, 602], "three": [0, 6, 10, 12, 14, 18, 30, 34, 38, 41, 128, 129, 131, 311, 325, 326, 335, 348, 349, 351, 356, 357, 364, 418, 421, 422, 423, 426, 427, 428, 429, 434, 463, 468, 475, 551, 556, 565, 569, 582, 586], "separ": [0, 6, 17, 30, 36, 47, 321, 323, 335, 349, 356, 418, 419, 516, 571, 581, 582], "defin": [0, 4, 6, 10, 12, 13, 18, 20, 24, 27, 42, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 129, 130, 131, 133, 134, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 300, 310, 312, 314, 320, 321, 325, 326, 328, 329, 331, 333, 335, 338, 341, 344, 348, 349, 350, 351, 353, 359, 360, 364, 379, 417, 418, 421, 423, 426, 428, 429, 434, 471, 493, 495, 518, 575, 576, 580, 581, 582, 596], "name": [0, 2, 4, 6, 12, 16, 17, 20, 22, 23, 27, 28, 29, 30, 32, 33, 37, 38, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 306, 307, 311, 314, 320, 321, 322, 323, 325, 326, 328, 329, 331, 333, 335, 346, 347, 348, 349, 351, 353, 359, 360, 361, 362, 368, 404, 418, 420, 423, 425, 427, 429, 431, 432, 434, 453, 454, 468, 535, 542, 547, 559, 565, 569, 571, 572, 575, 576, 580, 581, 582, 590, 592, 593, 595, 600, 602], "both": [0, 2, 10, 12, 13, 18, 19, 20, 32, 34, 128, 130, 131, 132, 134, 180, 212, 300, 307, 311, 320, 321, 324, 325, 326, 331, 339, 345, 348, 349, 350, 351, 352, 353, 354, 360, 362, 417, 418, 419, 431, 432, 433, 448, 457, 462, 463, 468, 488, 512, 515, 520, 526, 529, 576, 578, 580, 581, 582, 584, 585, 599, 600], "degree_centr": [0, 34, 317, 360, 434, 570, 592], "centrality_typ": [0, 360], "appli": [0, 6, 9, 10, 12, 13, 24, 27, 33, 134, 311, 321, 322, 325, 333, 337, 339, 349, 350, 352, 356, 511, 518, 534, 561, 578, 581, 582, 584, 586], "far": [0, 129, 349, 418], "possibl": [0, 4, 6, 15, 130, 310, 312, 314, 322, 325, 339, 353, 354, 360, 419, 425, 426, 434, 502, 510, 511, 526, 527, 528, 529, 561, 565, 581], "along": [0, 6, 10, 20, 24, 31, 326, 331, 333, 339, 362, 419, 423, 429, 563, 569, 582, 583], "branch": [0, 4, 134, 329, 335, 423, 469, 479, 600], "befor": [0, 4, 17, 22, 23, 27, 29, 30, 37, 126, 128, 129, 131, 134, 300, 306, 307, 311, 325, 328, 333, 335, 342, 344, 359, 360, 364, 417, 423, 430, 469, 471, 472, 474, 476, 479, 481, 483, 484, 487, 498, 500, 501, 503, 505, 506, 507, 513, 514, 515, 521, 522, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 564, 571, 576, 578, 581, 582, 584], "backtrack": 0, "influenc": [0, 27, 325, 434], "relationship": [0, 131, 134, 310, 311, 314, 322, 325, 329, 330, 335, 339, 342, 349, 352, 353, 354, 418, 419, 429, 581, 582], "high": [0, 6, 9, 310, 312, 317, 322, 325, 331, 335, 348, 351, 352, 354, 355, 356, 357, 425, 503, 534, 576, 578], "score": [0, 335, 354], "contribut": [0, 4, 319, 581], "low": [0, 6, 7, 13, 32, 322, 325, 341, 349, 350, 354, 355, 356, 561, 582], "A": [0, 6, 7, 9, 10, 24, 27, 28, 29, 37, 47, 128, 130, 131, 134, 259, 267, 299, 302, 306, 308, 311, 312, 317, 323, 326, 327, 329, 334, 335, 339, 341, 348, 349, 351, 352, 353, 354, 357, 359, 360, 361, 362, 369, 370, 372, 373, 374, 377, 380, 382, 389, 390, 394, 395, 404, 421, 422, 423, 426, 428, 431, 432, 433, 434, 436, 437, 438, 440, 441, 443, 445, 447, 448, 449, 451, 452, 453, 454, 457, 462, 463, 464, 467, 468, 469, 471, 472, 474, 478, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 504, 508, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 531, 535, 537, 546, 557, 561, 562, 563, 564, 566, 567, 569, 571, 576, 580, 581, 582, 583, 584], "mean": [0, 2, 20, 29, 30, 36, 37, 45, 128, 129, 130, 131, 132, 183, 212, 269, 300, 310, 321, 322, 325, 331, 344, 359, 361, 367, 406, 419, 422, 423, 433, 434, 474, 491, 498, 508, 517, 518, 519, 569, 572, 575, 576, 578, 580, 581, 582, 584, 589], "themselv": [0, 322, 335, 339, 563], "eigenvector_centr": [0, 34, 360, 434, 570, 592], "toler": [0, 325, 360, 434, 488], "doubl": [0, 9, 14, 16, 18, 33, 130, 154, 165, 179, 299, 313, 329, 331, 333, 348, 357, 362, 418, 428, 539, 563, 580, 584, 592, 600, 602], "error": [0, 2, 32, 36, 37, 38, 46, 47, 67, 75, 83, 94, 95, 106, 110, 121, 128, 133, 154, 173, 180, 183, 189, 205, 240, 259, 267, 269, 275, 291, 302, 304, 314, 319, 322, 324, 325, 326, 359, 360, 423, 427, 434, 468, 569, 582], "check": [0, 6, 12, 17, 27, 29, 30, 32, 33, 34, 35, 37, 38, 43, 129, 130, 259, 306, 312, 314, 321, 322, 325, 328, 333, 335, 342, 344, 352, 353, 360, 427, 431, 434, 527, 528, 569, 576, 581, 582, 590, 595, 596], "converg": [0, 6, 9, 14, 17, 24, 311, 354, 357, 360, 434], "number": [0, 8, 9, 13, 19, 20, 24, 28, 30, 33, 38, 45, 126, 128, 130, 131, 173, 259, 306, 307, 311, 317, 321, 323, 324, 331, 332, 333, 335, 339, 343, 344, 346, 350, 352, 354, 357, 359, 360, 362, 419, 420, 421, 422, 423, 426, 430, 434, 444, 449, 451, 460, 461, 462, 467, 468, 470, 472, 475, 479, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 542, 547, 552, 559, 561, 562, 564, 566, 567, 568, 569, 576, 578, 581, 582, 583, 590, 596, 600], "iter": [0, 6, 9, 14, 16, 17, 19, 20, 24, 311, 320, 333, 334, 339, 341, 342, 344, 345, 348, 349, 350, 351, 352, 354, 355, 360, 362, 417, 420, 429, 433, 434, 436, 437, 438, 439, 440, 445, 456, 457, 458, 459, 463, 464, 474, 475, 476, 478, 481, 483, 484, 487, 488, 516, 517, 518, 519, 520, 526, 529, 531, 563, 569, 592, 596, 601], "import": [0, 2, 4, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 29, 30, 33, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134, 154, 173, 174, 180, 183, 189, 205, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 306, 311, 312, 317, 319, 322, 324, 327, 328, 333, 334, 335, 337, 339, 341, 342, 344, 345, 347, 348, 350, 352, 354, 360, 361, 410, 412, 417, 418, 419, 421, 424, 426, 428, 429, 430, 431, 434, 488, 516, 517, 518, 519, 569, 576, 580, 584, 586, 590, 592, 593, 594, 596, 597, 600, 601, 602], "rate": [0, 129, 310, 312, 349, 355, 360, 516, 518, 519], "two": [0, 2, 6, 9, 13, 16, 17, 18, 19, 29, 37, 128, 131, 134, 306, 310, 314, 317, 321, 322, 325, 326, 328, 329, 331, 333, 335, 339, 340, 348, 350, 352, 353, 354, 356, 357, 417, 418, 419, 420, 421, 423, 425, 427, 429, 431, 434, 440, 463, 470, 471, 473, 475, 476, 480, 497, 508, 509, 516, 517, 518, 519, 520, 524, 526, 529, 530, 535, 536, 544, 562, 563, 568, 569, 580, 581, 582, 589, 596], "hub": [0, 29, 360, 361, 434, 487, 575], "author": [0, 27, 44, 133, 345, 350, 360, 434, 488, 576, 596], "estim": [0, 322, 325, 335, 352, 353, 429, 434], "within": [0, 13, 30, 36, 128, 130, 131, 134, 310, 311, 312, 325, 328, 329, 331, 333, 334, 335, 340, 349, 350, 351, 352, 353, 354, 423, 432, 434, 488, 491, 492, 512, 518, 519, 576, 581, 590, 596, 600], "we": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 41, 45, 126, 128, 129, 130, 131, 134, 154, 183, 205, 212, 269, 300, 301, 306, 307, 309, 310, 311, 314, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 361, 364, 368, 370, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 472, 486, 488, 498, 500, 526, 547, 569, 572, 575, 576, 580, 581, 582, 584, 586, 596, 602], "need": [0, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 29, 30, 31, 32, 33, 34, 36, 37, 41, 45, 46, 47, 75, 94, 95, 106, 128, 129, 130, 131, 134, 174, 189, 212, 259, 260, 275, 300, 306, 314, 317, 320, 321, 322, 328, 335, 338, 339, 340, 341, 344, 348, 349, 350, 351, 353, 354, 356, 359, 360, 364, 417, 418, 419, 421, 423, 426, 427, 428, 430, 431, 503, 516, 521, 527, 547, 563, 569, 572, 578, 581, 582, 584, 585, 586, 592], "rel": [0, 27, 46, 47, 67, 75, 94, 95, 106, 110, 121, 130, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 301, 322, 323, 339, 348, 354, 419, 423, 434, 582], "immedi": [0, 6, 310, 322, 355, 360, 362, 423, 434, 572, 576, 582], "under": [0, 9, 10, 14, 17, 24, 38, 45, 126, 128, 131, 310, 320, 325, 326, 335, 341, 348, 349, 360, 364, 423, 425, 426, 434, 581], "consider": [0, 331, 348, 434, 491], "katz_centr": [0, 34, 360, 434, 570, 592], "alpha": [0, 335, 360, 434, 508, 509, 520, 561], "beta": [0, 360, 434, 509, 520], "attenu": [0, 434], "factor": [0, 13, 320, 323, 325, 335, 360, 434, 469, 479, 501, 503, 581], "neighborhood": [0, 6, 349, 351, 354, 360, 423, 427, 434, 512], "maxim": [0, 6, 434, 522, 568], "subgraph": [0, 6, 9, 17, 33, 311, 320, 335, 336, 338, 350, 351, 352, 360, 382, 388, 417, 423, 425, 431, 432, 434, 445, 448, 470, 481, 512, 569, 580, 596, 600], "contain": [0, 2, 4, 6, 8, 17, 20, 23, 27, 32, 37, 38, 126, 129, 130, 133, 302, 303, 304, 309, 311, 314, 317, 321, 322, 325, 326, 329, 332, 333, 335, 339, 342, 343, 346, 348, 349, 350, 352, 354, 356, 357, 359, 362, 364, 417, 418, 421, 423, 426, 427, 428, 429, 431, 434, 436, 437, 438, 445, 448, 449, 464, 474, 475, 476, 478, 481, 496, 521, 522, 526, 527, 569, 572, 573, 576, 580, 581, 582, 590, 594, 600], "found": [0, 4, 9, 16, 17, 18, 36, 134, 154, 173, 180, 205, 240, 259, 267, 291, 306, 314, 320, 321, 326, 334, 335, 339, 340, 351, 357, 410, 430, 488, 530, 531, 567, 569, 576, 580, 581, 582, 586], "recurs": [0, 6, 423, 471], "prune": [0, 325], "less": [0, 2, 6, 13, 17, 27, 321, 328, 329, 333, 348, 360, 423, 430, 434, 486, 497, 508, 510, 582], "kkore": [0, 34], "order": [0, 6, 34, 130, 306, 310, 322, 325, 329, 338, 351, 353, 354, 360, 361, 418, 423, 429, 434, 436, 437, 443, 467, 468, 471, 476, 483, 496, 497, 500, 532, 533, 536, 561, 562, 569, 575, 578, 582, 600], "That": [0, 27, 360, 428, 486, 529, 572, 584], "kshell": [0, 34], "fast": [0, 9, 20, 322, 325, 360, 427], "where": [0, 2, 6, 12, 13, 14, 18, 24, 37, 38, 41, 128, 131, 134, 306, 309, 311, 314, 325, 326, 328, 329, 331, 338, 339, 348, 349, 350, 353, 354, 356, 360, 404, 418, 419, 421, 423, 427, 434, 444, 451, 469, 498, 502, 504, 513, 516, 517, 518, 519, 547, 569, 576, 581, 582, 589, 596, 600], "assign": [0, 7, 9, 15, 18, 20, 36, 37, 134, 311, 321, 331, 340, 348, 350, 352, 354, 359, 360, 362, 434, 488, 496, 498, 500, 502, 516, 519, 524, 569, 572, 575, 578, 581, 582, 602], "unlabel": 0, "dure": [0, 6, 9, 13, 24, 128, 134, 314, 324, 325, 326, 333, 335, 351, 352, 354, 359, 418, 423, 488, 576, 578, 582, 583, 584, 585], "aim": [0, 22, 128, 310, 335, 345, 351, 352, 353, 354, 356], "local": [0, 2, 4, 6, 10, 13, 14, 22, 24, 27, 30, 34, 37, 126, 129, 130, 132, 133, 212, 300, 309, 314, 319, 320, 321, 327, 334, 335, 343, 348, 349, 350, 354, 359, 360, 364, 394, 418, 419, 427, 428, 429, 431, 580, 583, 589, 599, 600], "follow": [0, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 43, 45, 46, 126, 128, 129, 130, 131, 132, 134, 212, 300, 306, 307, 309, 311, 312, 314, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 364, 368, 417, 418, 419, 420, 421, 423, 426, 427, 429, 431, 433, 468, 488, 498, 502, 508, 511, 521, 522, 528, 531, 552, 565, 569, 576, 578, 580, 581, 582, 583, 585, 586, 589, 590], "specif": [0, 4, 6, 9, 12, 14, 15, 16, 20, 24, 33, 34, 37, 38, 41, 43, 45, 46, 126, 128, 132, 134, 188, 274, 314, 317, 320, 321, 322, 324, 325, 326, 329, 331, 333, 335, 338, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 362, 421, 422, 423, 426, 429, 431, 488, 516, 520, 569, 575, 578, 580, 581, 582, 589], "ldbc": [0, 4, 34, 310, 320, 321, 323, 325, 331, 332, 338, 348, 352, 356, 357, 580, 597, 602], "wai": [0, 1, 4, 6, 10, 14, 20, 29, 36, 37, 45, 131, 310, 311, 314, 317, 321, 322, 331, 334, 338, 351, 353, 354, 421, 423, 425, 427, 434, 488, 554, 561, 563, 569, 576, 580, 581, 583], "exist": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 20, 34, 37, 128, 154, 205, 240, 291, 306, 317, 319, 329, 333, 339, 348, 349, 351, 352, 353, 354, 356, 360, 362, 368, 370, 414, 416, 418, 421, 423, 427, 428, 431, 434, 453, 454, 458, 500, 509, 523, 567, 569, 576, 578, 580, 582], "variant": [0, 31, 354, 357, 431], "networkx": [0, 3, 7, 8, 12, 34, 317, 338, 355, 358, 359, 360, 394, 434, 436, 437, 438, 439, 440, 441, 443, 445, 447, 448, 449, 451, 452, 453, 454, 458, 459, 463, 464, 468, 469, 471, 472, 474, 475, 476, 479, 481, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 509, 512, 513, 514, 515, 520, 521, 522, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 562, 564, 569, 571, 572, 574, 598, 603], "damp": 0, "set": [0, 2, 4, 6, 7, 9, 10, 13, 14, 15, 16, 18, 20, 23, 27, 30, 31, 36, 39, 41, 43, 45, 126, 128, 130, 131, 134, 212, 307, 309, 310, 311, 314, 317, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 335, 336, 338, 341, 342, 348, 349, 350, 351, 353, 354, 357, 358, 359, 360, 362, 410, 416, 417, 418, 419, 421, 423, 426, 429, 430, 431, 432, 433, 434, 448, 472, 488, 502, 503, 508, 512, 520, 523, 524, 525, 530, 531, 549, 564, 567, 569, 572, 576, 580, 581, 582, 583, 586, 589, 594, 595, 599], "sampling_path": [0, 34], "source_id": [0, 14], "cutoff": 0, "fix": [0, 6, 131, 309, 333, 335, 339, 341, 354, 409, 561, 582, 584], "rank": [0, 6, 33, 346, 349, 359, 360, 361, 561, 575], "vote": [0, 362], "scheme": [0, 6, 9, 130, 186, 272, 300, 321, 348], "With": [0, 4, 12, 19, 24, 34, 41, 212, 298, 300, 306, 320, 323, 331, 333, 335, 338, 343, 344, 349, 350, 351, 507, 580, 589], "top": [0, 9, 12, 22, 34, 47, 67, 75, 94, 95, 106, 110, 121, 240, 259, 260, 267, 269, 275, 291, 325, 331, 333, 335, 356, 421, 543, 582, 600], "highest": [0, 335, 503], "elect": 0, "num_of_nod": [0, 360], "select": [0, 9, 15, 36, 131, 322, 325, 328, 331, 339, 342, 348, 349, 352, 354, 361, 369, 375, 376, 386, 387, 391, 399, 400, 417, 423, 431, 488, 497, 520, 532, 566, 569, 575, 576, 580, 581, 600], "influenti": 0, "extract": [0, 327, 329, 333, 348, 349, 350, 351, 360, 368, 432, 576, 578, 582], "weakli": [0, 360, 434, 508], "In": [1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 28, 29, 32, 34, 37, 38, 45, 126, 128, 129, 130, 131, 134, 212, 300, 306, 308, 309, 310, 311, 314, 317, 319, 321, 322, 323, 324, 325, 328, 329, 331, 333, 334, 335, 337, 338, 339, 342, 344, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 434, 491, 520, 523, 526, 527, 529, 569, 572, 575, 578, 581, 582, 584, 586, 589], "addit": [1, 4, 6, 9, 10, 12, 15, 18, 20, 24, 32, 34, 37, 128, 129, 134, 212, 309, 311, 317, 322, 323, 324, 325, 329, 331, 333, 335, 337, 338, 339, 342, 348, 351, 357, 379, 395, 418, 419, 420, 421, 431, 563, 569, 582, 586], "built": [1, 3, 4, 8, 9, 12, 15, 18, 20, 22, 32, 34, 36, 41, 126, 134, 306, 307, 310, 311, 314, 320, 323, 324, 325, 328, 329, 335, 349, 350, 354, 355, 357, 358, 417, 425, 431, 505, 506, 507, 578, 580, 582, 586], "provid": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 126, 128, 129, 130, 131, 133, 134, 183, 212, 269, 275, 291, 298, 300, 303, 306, 307, 310, 311, 314, 317, 319, 320, 321, 322, 325, 326, 328, 329, 331, 333, 334, 335, 337, 338, 339, 340, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 378, 417, 419, 423, 424, 425, 429, 434, 465, 466, 488, 516, 517, 518, 519, 566, 569, 571, 576, 578, 580, 581, 582, 583, 586, 589, 592], "run": [1, 2, 4, 6, 8, 9, 12, 13, 19, 20, 24, 27, 29, 30, 31, 32, 38, 44, 46, 126, 132, 133, 134, 176, 183, 189, 212, 240, 269, 275, 298, 300, 311, 314, 321, 323, 325, 327, 328, 331, 334, 337, 340, 343, 344, 348, 349, 350, 351, 354, 356, 358, 359, 360, 361, 395, 406, 423, 427, 428, 429, 431, 432, 521, 522, 572, 573, 576, 581, 582, 583, 584, 585, 586, 589, 590, 592, 594], "your": [1, 2, 4, 7, 8, 12, 13, 14, 20, 23, 24, 27, 29, 30, 31, 32, 36, 38, 41, 45, 126, 128, 129, 134, 212, 300, 306, 307, 309, 310, 311, 312, 314, 323, 324, 325, 326, 327, 328, 331, 334, 339, 340, 341, 343, 344, 350, 356, 358, 360, 364, 419, 424, 428, 429, 478, 498, 569, 576, 578, 581, 582, 592, 600], "own": [1, 4, 6, 8, 12, 15, 24, 34, 36, 37, 134, 212, 306, 307, 312, 320, 325, 328, 331, 337, 338, 352, 358, 364, 409, 421, 424, 429, 488, 498, 576, 581, 586], "design": [1, 4, 6, 7, 12, 13, 15, 18, 27, 128, 130, 131, 300, 306, 310, 312, 317, 319, 324, 331, 335, 341, 342, 343, 344, 351, 353, 354, 355, 356, 359, 417, 419, 425, 434, 569, 582], "extens": [1, 4, 6, 27, 36, 130, 322, 324, 325, 326, 329, 342, 349, 418], "henc": [1, 2, 10, 32, 348, 443, 566, 569, 582], "you": [1, 2, 4, 7, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 45, 46, 126, 128, 129, 130, 132, 134, 173, 183, 212, 269, 275, 298, 300, 306, 307, 309, 310, 311, 314, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340, 341, 343, 344, 348, 350, 353, 355, 356, 358, 360, 364, 416, 418, 419, 422, 423, 424, 427, 428, 431, 434, 447, 478, 488, 498, 500, 512, 517, 518, 519, 569, 576, 578, 580, 581, 582, 584, 589, 590, 592, 602], "flash": [1, 3, 8, 12, 349], "java": [1, 4, 8, 12, 14, 34, 132, 133, 180, 307, 312, 319, 323, 333, 336, 338, 351, 352, 356, 360, 364, 368, 581, 582, 592], "c": [1, 6, 8, 12, 14, 17, 18, 31, 34, 38, 133, 134, 180, 212, 300, 307, 308, 310, 311, 312, 325, 326, 329, 333, 335, 338, 339, 346, 349, 351, 352, 359, 360, 361, 364, 367, 379, 391, 419, 423, 427, 429, 434, 467, 468, 478, 498, 509, 522, 523, 526, 527, 561, 563, 565, 566, 569, 581, 584, 590, 592, 594, 600], "python": [1, 7, 8, 11, 12, 14, 16, 17, 20, 22, 23, 27, 29, 30, 32, 33, 34, 37, 43, 44, 45, 132, 133, 307, 309, 311, 312, 314, 317, 319, 321, 324, 328, 330, 335, 336, 339, 341, 344, 348, 349, 350, 352, 353, 355, 356, 359, 360, 367, 417, 420, 424, 427, 429, 432, 433, 569, 571, 572, 580, 581, 589, 590, 592, 593, 595, 596, 598, 599, 600, 602], "These": [1, 4, 9, 15, 20, 24, 130, 131, 132, 310, 311, 321, 329, 339, 348, 349, 350, 352, 353, 354, 355, 423, 429, 581, 589], "type": [1, 3, 4, 6, 9, 12, 13, 15, 16, 18, 19, 20, 27, 29, 30, 33, 34, 36, 37, 38, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 303, 306, 307, 309, 310, 311, 317, 321, 322, 323, 325, 326, 328, 330, 331, 333, 335, 339, 342, 344, 345, 346, 347, 349, 350, 352, 353, 354, 357, 359, 360, 361, 367, 368, 370, 371, 375, 376, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 396, 399, 400, 404, 410, 412, 417, 419, 420, 421, 422, 423, 426, 427, 428, 429, 431, 432, 433, 434, 439, 440, 443, 445, 448, 449, 451, 453, 454, 457, 458, 459, 462, 463, 464, 467, 468, 469, 471, 472, 474, 475, 476, 478, 479, 481, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 526, 527, 528, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 561, 562, 563, 564, 565, 566, 570, 571, 573, 574, 576, 578, 581, 582, 584, 593, 596, 601], "queri": [1, 2, 7, 9, 13, 14, 19, 22, 29, 34, 64, 92, 111, 128, 129, 133, 147, 154, 170, 180, 183, 189, 194, 205, 233, 240, 256, 259, 267, 269, 275, 280, 291, 301, 308, 312, 314, 317, 319, 320, 321, 323, 324, 326, 327, 329, 330, 332, 333, 334, 336, 337, 338, 339, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 369, 375, 376, 388, 391, 395, 399, 400, 404, 417, 419, 421, 423, 425, 429, 431, 433, 453, 454, 574, 575, 576, 581, 584, 586, 590, 596], "upon": [1, 2, 9, 14, 132, 300, 310, 329, 356, 431, 582, 583], "pregel": [1, 4, 8, 12, 17, 22, 34, 338, 349, 352, 574, 586, 596, 598], "alreadi": [2, 8, 20, 23, 24, 27, 29, 30, 36, 37, 41, 126, 154, 205, 240, 291, 307, 317, 323, 325, 335, 342, 348, 350, 417, 567, 569, 602], "deploi": [2, 15, 33, 37, 45, 126, 212, 300, 306, 307, 311, 312, 314, 319, 320, 322, 323, 324, 327, 334, 338, 341, 349, 351, 356, 419, 576, 578, 583, 589], "machin": [2, 4, 6, 7, 11, 14, 20, 24, 27, 30, 32, 36, 37, 38, 45, 130, 132, 134, 309, 310, 314, 321, 323, 324, 325, 327, 331, 334, 340, 341, 343, 344, 349, 350, 351, 352, 353, 354, 360, 417, 429, 576, 581], "take": [2, 4, 6, 9, 14, 15, 18, 24, 27, 29, 30, 36, 41, 45, 131, 132, 306, 311, 314, 320, 322, 325, 328, 335, 338, 339, 348, 350, 351, 354, 364, 381, 418, 421, 422, 423, 427, 429, 431, 434, 497, 518, 549, 567, 569, 573, 575, 581, 582, 583, 584], "advantag": [2, 322, 325, 338, 348, 355, 356, 585], "3": [2, 6, 9, 10, 13, 14, 17, 19, 20, 22, 23, 27, 30, 31, 32, 34, 37, 41, 46, 128, 131, 132, 154, 212, 240, 300, 303, 309, 312, 314, 317, 321, 322, 323, 324, 325, 330, 331, 333, 334, 335, 339, 342, 346, 347, 350, 354, 357, 360, 361, 420, 421, 422, 423, 426, 431, 432, 434, 436, 437, 438, 440, 445, 449, 453, 454, 470, 472, 475, 478, 484, 488, 489, 490, 492, 493, 494, 496, 500, 503, 504, 508, 509, 513, 515, 526, 527, 529, 531, 534, 537, 542, 546, 547, 550, 553, 556, 558, 561, 562, 563, 564, 569, 571, 572, 581, 584, 593, 596, 599, 600], "gie": [2, 32, 33, 319, 320, 329, 335, 338, 348, 349, 353, 356, 357, 358, 388, 576, 582, 593, 594, 603], "gle": [2, 32, 319, 338, 341, 342, 343, 349, 354, 356, 358, 593, 594, 601], "address": [2, 9, 14, 17, 23, 31, 309, 314, 325, 331, 346, 349, 354, 582, 600], "differ": [2, 6, 9, 10, 12, 13, 15, 17, 18, 20, 23, 27, 30, 34, 35, 36, 37, 41, 128, 130, 134, 300, 306, 309, 311, 317, 320, 321, 322, 325, 328, 333, 335, 336, 338, 339, 342, 348, 349, 350, 351, 352, 353, 354, 356, 357, 360, 379, 417, 418, 419, 420, 421, 422, 423, 425, 426, 428, 488, 492, 493, 494, 516, 519, 526, 546, 561, 569, 574, 576, 578, 580, 581, 582, 583, 584, 585, 586, 589], "complex": [2, 4, 6, 12, 22, 34, 37, 43, 128, 129, 212, 300, 310, 311, 317, 320, 322, 323, 325, 331, 332, 333, 338, 339, 348, 349, 351, 352, 353, 354, 355, 356, 360, 420, 434, 498, 502, 517, 518, 519, 581], "relat": [2, 4, 13, 23, 24, 27, 33, 38, 45, 49, 129, 131, 134, 137, 173, 212, 223, 259, 267, 300, 301, 308, 310, 314, 319, 320, 322, 328, 330, 334, 339, 342, 345, 349, 350, 351, 353, 354, 359, 419, 423, 429, 525, 561, 566, 580, 581, 582], "show": [2, 14, 19, 20, 27, 29, 30, 38, 126, 307, 311, 314, 322, 323, 335, 338, 343, 344, 350, 352, 353, 354, 420, 421, 429, 572, 576, 578, 581], "kubernet": [2, 29, 75, 314, 317, 319, 321, 323, 338, 343, 346, 348, 350, 355, 576, 582, 593, 595, 596, 598, 602, 603], "cluster": [2, 6, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 29, 34, 75, 314, 317, 319, 323, 327, 334, 335, 338, 341, 343, 348, 349, 350, 351, 352, 353, 354, 355, 360, 419, 429, 434, 491, 570, 576, 582, 583, 590, 592, 599], "howev": [2, 6, 9, 11, 13, 15, 20, 24, 30, 37, 128, 131, 134, 300, 307, 310, 314, 317, 321, 322, 324, 325, 328, 329, 331, 333, 335, 339, 348, 349, 354, 356, 418, 419, 420, 425, 434, 498, 569, 581, 582], "scenario": [2, 4, 6, 8, 12, 13, 41, 128, 131, 310, 322, 325, 331, 333, 334, 335, 339, 342, 348, 349, 353, 354, 356, 418, 419, 421], "quit": [2, 30, 300, 328, 488, 582], "common": [2, 6, 12, 15, 30, 154, 173, 174, 180, 189, 205, 306, 322, 328, 335, 339, 342, 348, 349, 351, 352, 353, 354, 356, 417, 418, 425, 426, 440, 561, 563, 569, 580, 581, 590], "intend": [2, 13, 36, 300, 329, 561, 575], "analysi": [2, 7, 8, 11, 13, 322, 325, 334, 335, 338, 348, 354, 355, 357, 358, 360, 522], "offlin": [2, 319, 338, 339, 351, 354, 355, 578], "everi": [2, 6, 23, 128, 131, 134, 333, 335, 342, 354, 359, 423, 434, 436, 437, 438, 453, 454, 472, 486, 549, 556, 569, 575, 581], "dai": [2, 20, 131, 335, 569, 572, 580], "export": [2, 4, 23, 29, 31, 33, 39, 45, 134, 212, 300, 306, 309, 311, 314, 323, 340, 580, 582, 595], "warehous": 2, "without": [2, 4, 6, 9, 14, 22, 27, 29, 30, 34, 37, 128, 275, 321, 325, 331, 333, 349, 351, 356, 364, 377, 418, 420, 421, 422, 423, 444, 481, 495, 502, 508, 509, 516, 517, 518, 519, 520, 569, 572, 576, 581, 582, 584, 600], "real": [2, 6, 9, 12, 13, 34, 306, 317, 321, 325, 331, 333, 338, 349, 350, 352, 354, 561, 580, 582], "time": [2, 6, 9, 12, 13, 14, 17, 19, 20, 23, 27, 29, 30, 33, 34, 37, 128, 131, 132, 183, 212, 269, 275, 300, 311, 314, 320, 322, 323, 324, 325, 326, 329, 331, 333, 335, 338, 342, 346, 347, 348, 350, 353, 354, 357, 360, 418, 419, 423, 434, 467, 468, 504, 505, 506, 507, 517, 518, 519, 521, 522, 531, 534, 569, 581, 582, 584, 596, 600], "sampl": [2, 29, 30, 31, 33, 129, 306, 312, 319, 321, 338, 339, 346, 349, 350, 356, 364, 418, 419, 420, 422, 425, 427, 430, 433, 508, 528, 561, 582, 601], "case": [2, 4, 6, 8, 10, 13, 14, 15, 18, 27, 37, 41, 45, 134, 303, 314, 317, 321, 322, 325, 326, 329, 331, 333, 335, 342, 348, 353, 357, 362, 418, 419, 423, 425, 427, 430, 434, 488, 496, 502, 526, 537, 553, 575, 576, 580, 581, 582, 586, 589], "unnecessari": [2, 6, 9, 335, 581], "capabl": [2, 6, 11, 16, 20, 134, 310, 325, 329, 330, 333, 336, 349, 351, 353, 356, 569], "independ": [2, 6, 30, 349, 356, 418, 432, 445, 448, 496, 523, 569], "document": [2, 10, 27, 29, 33, 35, 36, 38, 43, 44, 45, 132, 133, 134, 300, 306, 307, 311, 312, 314, 323, 325, 328, 329, 330, 333, 334, 336, 338, 340, 354, 360, 417, 418, 424, 576, 577, 582], "walk": [2, 4, 32, 126, 129, 307, 321, 335, 349, 350, 353, 423, 470, 481], "process": [2, 3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 27, 29, 30, 32, 34, 35, 37, 126, 128, 129, 132, 134, 306, 307, 308, 310, 312, 317, 319, 321, 323, 324, 325, 330, 334, 335, 337, 338, 339, 341, 342, 343, 344, 349, 351, 352, 353, 354, 355, 359, 370, 418, 419, 421, 423, 427, 429, 498, 500, 503, 531, 537, 569, 576, 578, 580, 581, 584, 586], "standalon": [2, 23, 27, 32, 190, 314, 319, 323, 324, 325, 326, 335, 348, 349, 583, 589, 602], "self": [2, 321, 335, 348, 404, 417, 420, 423, 434, 444, 457, 496, 498, 500, 502, 508, 516, 517, 518, 519, 520, 569, 570, 572, 576, 582, 597, 601, 602], "manag": [2, 4, 10, 12, 14, 16, 27, 29, 30, 126, 132, 133, 134, 212, 300, 301, 307, 308, 309, 311, 314, 317, 321, 330, 335, 338, 342, 343, 344, 349, 351, 352, 353, 354, 355, 356, 357, 359, 576, 582, 583, 589, 592], "k8": [2, 4, 7, 17, 22, 30, 37, 38, 41, 132, 190, 309, 314, 317, 319, 321, 327, 334, 338, 341, 343, 348, 356, 358, 576, 582, 592, 593, 594, 596, 599, 602], "7": [2, 10, 20, 23, 27, 30, 31, 32, 46, 212, 314, 324, 333, 335, 357, 418, 424, 429, 436, 437, 449, 472, 534, 540, 542, 546, 547, 550, 552, 564, 569, 582, 584, 595, 599, 600], "To": [2, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 29, 30, 32, 34, 36, 37, 45, 128, 129, 130, 132, 134, 212, 259, 300, 306, 307, 309, 310, 311, 314, 317, 321, 322, 325, 326, 335, 337, 338, 339, 340, 342, 344, 345, 348, 349, 350, 354, 356, 357, 360, 364, 417, 418, 419, 421, 423, 424, 425, 427, 429, 434, 447, 498, 500, 505, 507, 516, 519, 559, 563, 569, 571, 575, 576, 578, 581, 582, 585, 586, 589, 590], "get": [2, 4, 6, 12, 16, 18, 19, 20, 27, 29, 30, 31, 32, 33, 34, 38, 41, 43, 44, 45, 47, 67, 75, 94, 95, 106, 110, 132, 133, 154, 173, 174, 180, 189, 205, 240, 259, 260, 267, 275, 291, 298, 299, 301, 302, 303, 304, 310, 312, 314, 319, 321, 322, 323, 329, 335, 339, 342, 348, 353, 355, 358, 360, 361, 362, 380, 417, 420, 421, 422, 423, 426, 431, 432, 433, 434, 467, 488, 559, 569, 575, 576, 578, 581, 582, 586, 589, 590, 592, 595, 596], "instal": [2, 4, 15, 16, 17, 19, 23, 33, 35, 41, 44, 126, 128, 132, 133, 306, 312, 314, 321, 323, 327, 334, 350, 360, 364, 427, 569, 572, 576, 593, 594, 595, 596, 599], "client": [2, 17, 22, 23, 29, 33, 38, 41, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 189, 205, 212, 240, 259, 260, 267, 291, 298, 299, 300, 302, 303, 304, 306, 307, 311, 313, 320, 322, 326, 334, 336, 338, 344, 347, 359, 360, 429, 576, 578, 580, 581, 582, 583, 592, 594, 599], "prepar": [2, 4, 33, 36, 43, 129, 312, 321, 324, 325, 328, 339, 340, 341, 342, 344, 345, 350, 354, 358, 581, 596], "continu": [2, 6, 15, 16, 20, 27, 134, 275, 321, 322, 325, 334, 335, 338, 339, 349, 350, 354, 357, 417, 488, 526, 529, 581, 582, 583], "doesn": [2, 13, 29, 32, 37, 38, 41, 306, 321, 333, 335, 364, 423, 498, 500, 502, 569, 575, 584], "t": [2, 6, 8, 13, 17, 23, 29, 30, 32, 33, 36, 37, 38, 41, 128, 130, 300, 302, 306, 309, 313, 314, 321, 331, 333, 335, 346, 347, 348, 351, 357, 359, 360, 362, 364, 370, 417, 422, 423, 429, 433, 434, 447, 463, 498, 500, 502, 522, 526, 527, 561, 563, 566, 569, 575, 582, 584, 601], "could": [2, 4, 6, 9, 15, 22, 27, 28, 29, 31, 32, 36, 38, 41, 126, 128, 131, 134, 180, 183, 212, 269, 300, 306, 307, 309, 320, 321, 323, 324, 331, 333, 338, 340, 348, 358, 360, 412, 419, 421, 422, 431, 497, 580, 581, 582, 583], "creat": [2, 9, 10, 12, 13, 16, 17, 19, 23, 27, 29, 30, 31, 34, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 132, 133, 134, 154, 173, 180, 183, 205, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 303, 304, 310, 312, 314, 321, 323, 324, 326, 328, 333, 334, 335, 346, 348, 349, 350, 353, 354, 359, 360, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 394, 397, 398, 404, 410, 411, 412, 421, 423, 426, 428, 431, 432, 447, 469, 471, 472, 474, 475, 476, 478, 479, 481, 483, 484, 486, 487, 488, 490, 491, 493, 496, 498, 500, 501, 503, 504, 505, 506, 507, 509, 510, 511, 513, 514, 515, 517, 518, 519, 521, 522, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 563, 564, 569, 571, 572, 573, 576, 583, 584, 585, 590, 592, 595], "distinct": [2, 128, 325, 329, 333, 349, 350, 353, 474, 536, 562, 581], "method": [2, 15, 16, 17, 18, 20, 22, 23, 29, 46, 47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 300, 301, 302, 306, 320, 325, 326, 333, 335, 342, 344, 348, 352, 354, 359, 360, 362, 383, 394, 409, 417, 421, 425, 426, 432, 434, 497, 505, 507, 516, 518, 569, 572, 574, 576, 581, 582, 586, 592], "entir": [2, 9, 34, 310, 322, 350, 354, 423, 434, 569], "discret": [2, 339, 354, 417, 488, 501, 503, 509, 513, 524], "util": [2, 4, 6, 9, 15, 32, 36, 41, 43, 45, 128, 131, 133, 134, 180, 299, 306, 310, 311, 325, 326, 329, 330, 335, 338, 340, 345, 348, 349, 351, 352, 355, 359, 360, 362, 433, 534, 580, 581, 582, 585], "either": [2, 13, 30, 34, 130, 134, 306, 307, 311, 314, 320, 321, 325, 331, 334, 335, 342, 360, 419, 423, 431, 432, 472, 475, 488, 515, 526, 559, 569, 583], "aforement": [2, 300, 348, 352, 354, 418, 423, 582], "per": [2, 130, 310, 321, 331, 581, 582], "prefer": [2, 13, 27, 36, 310, 325, 581], "session": [2, 7, 8, 16, 17, 22, 27, 28, 29, 33, 45, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 291, 298, 300, 301, 306, 311, 314, 317, 324, 328, 332, 334, 335, 338, 341, 343, 346, 348, 350, 358, 360, 361, 379, 410, 411, 412, 414, 416, 431, 432, 569, 573, 574, 580, 582, 584, 589, 590, 592, 593, 594, 596, 597, 600, 602], "class": [2, 4, 9, 15, 17, 18, 20, 22, 23, 46, 47, 67, 75, 94, 95, 106, 110, 121, 134, 154, 173, 174, 180, 183, 189, 205, 212, 301, 306, 326, 329, 335, 342, 345, 348, 350, 354, 359, 360, 361, 362, 367, 417, 418, 431, 432, 433, 434, 478, 547, 569, 573, 576, 581, 582, 583, 592, 601], "option": [2, 4, 6, 13, 15, 27, 29, 31, 32, 37, 41, 46, 47, 48, 49, 50, 51, 52, 53, 55, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 85, 86, 89, 92, 93, 94, 95, 96, 99, 100, 104, 106, 107, 108, 109, 110, 111, 121, 124, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 201, 202, 205, 206, 207, 208, 210, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 287, 288, 291, 292, 293, 294, 296, 298, 300, 303, 309, 311, 312, 320, 321, 323, 325, 326, 327, 328, 329, 331, 333, 334, 335, 338, 340, 346, 348, 351, 353, 356, 360, 361, 364, 367, 388, 394, 395, 396, 406, 416, 418, 421, 423, 431, 432, 434, 436, 437, 438, 453, 454, 463, 469, 471, 472, 474, 476, 478, 479, 481, 483, 484, 487, 491, 492, 493, 496, 498, 500, 501, 503, 504, 505, 506, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 526, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 561, 564, 567, 569, 571, 572, 575, 576, 582, 583], "control": [2, 6, 27, 38, 45, 348, 349, 351, 359, 434, 569, 581, 582], "subset": [2, 6, 20, 134, 310, 325, 331, 333, 345, 350, 475, 486, 575, 576], "launch": [2, 8, 9, 17, 22, 29, 36, 41, 128, 132, 306, 314, 317, 321, 332, 341, 343, 344, 350, 358, 410, 428, 573, 576, 582, 583, 589, 592, 596], "For": [2, 4, 6, 9, 10, 12, 15, 16, 17, 20, 22, 29, 30, 35, 37, 41, 44, 45, 126, 128, 129, 131, 132, 133, 134, 183, 212, 269, 300, 303, 306, 307, 309, 310, 311, 314, 317, 320, 321, 322, 325, 329, 331, 333, 335, 338, 339, 342, 344, 348, 349, 350, 352, 353, 354, 360, 362, 368, 417, 418, 419, 420, 423, 425, 427, 429, 431, 434, 446, 467, 470, 472, 475, 498, 500, 502, 503, 508, 511, 512, 516, 517, 518, 519, 520, 531, 534, 563, 569, 573, 575, 576, 582, 584, 585, 590], "exampl": [2, 7, 10, 15, 16, 18, 19, 20, 27, 31, 37, 41, 128, 129, 131, 134, 212, 300, 306, 309, 311, 317, 319, 320, 321, 324, 325, 328, 329, 331, 334, 335, 336, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 360, 361, 367, 368, 410, 412, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 434, 436, 437, 438, 440, 445, 447, 448, 453, 454, 457, 462, 463, 468, 470, 472, 474, 475, 478, 481, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 504, 505, 507, 509, 512, 516, 517, 518, 519, 520, 526, 529, 534, 559, 561, 562, 563, 564, 567, 569, 571, 572, 573, 575, 576, 580, 581, 582, 583, 584, 589, 590, 592, 596, 601], "set_opt": [2, 7, 15, 17, 19, 29, 38, 314, 324, 328, 341, 344, 345, 346, 347, 350, 590, 595], "show_log": [2, 7, 15, 17, 19, 29, 38, 314, 324, 341, 344, 345, 346, 347, 350, 416, 590, 595], "true": [2, 6, 7, 9, 13, 15, 16, 17, 18, 19, 20, 29, 38, 45, 75, 95, 128, 129, 130, 134, 212, 300, 306, 314, 320, 321, 324, 325, 326, 333, 334, 335, 341, 342, 344, 345, 346, 347, 348, 350, 359, 360, 362, 364, 406, 410, 414, 417, 418, 419, 423, 426, 429, 431, 434, 441, 450, 451, 452, 453, 454, 463, 465, 466, 472, 474, 492, 496, 498, 502, 508, 512, 515, 527, 567, 569, 571, 572, 576, 582, 583, 590, 592, 595, 600, 601, 602], "sess": [2, 16, 17, 22, 27, 29, 30, 33, 212, 240, 259, 260, 267, 269, 275, 291, 300, 306, 317, 328, 344, 345, 346, 348, 360, 361, 406, 410, 431, 432, 576, 580, 582, 584, 590, 592, 593, 594, 596, 597, 600, 602], "enabled_engin": [2, 416, 576], "g": [2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 28, 29, 32, 33, 34, 37, 41, 45, 47, 129, 131, 134, 212, 306, 317, 320, 323, 324, 328, 329, 331, 333, 334, 335, 337, 338, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 368, 412, 417, 419, 420, 421, 422, 423, 424, 426, 427, 429, 431, 432, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 468, 469, 471, 472, 474, 475, 478, 479, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 507, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 525, 526, 529, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 561, 562, 566, 567, 569, 571, 572, 575, 576, 578, 580, 581, 582, 583, 585, 586, 590, 592, 595, 596, 597, 599, 600, 601, 602], "custom": [2, 3, 4, 7, 8, 22, 29, 35, 36, 45, 126, 130, 131, 212, 300, 306, 307, 309, 310, 311, 312, 320, 322, 329, 338, 342, 348, 349, 352, 354, 355, 417, 418, 421, 423, 425, 426, 427, 516, 518, 519, 566, 582, 586], "command": [2, 4, 7, 16, 23, 27, 29, 30, 31, 32, 35, 36, 41, 45, 126, 128, 129, 132, 134, 300, 309, 314, 319, 323, 325, 326, 340, 341, 346, 359, 418, 582, 583, 590], "line": [2, 4, 6, 7, 17, 36, 37, 38, 41, 45, 126, 128, 132, 134, 309, 319, 322, 340, 341, 351, 356, 417, 418, 569, 571, 582, 583, 590, 601], "releas": [2, 27, 31, 32, 35, 129, 298, 307, 314, 331, 344, 357, 526, 529, 575, 576, 582, 595, 599], "replac": [2, 17, 19, 22, 23, 29, 30, 129, 134, 173, 212, 300, 303, 306, 309, 311, 322, 323, 326, 328, 333, 351, 357, 420, 421, 422, 431, 569, 582], "my": [2, 18, 29, 569, 572, 576, 582], "illustr": [2, 4, 29, 129, 130, 131, 134, 311, 335, 339, 345, 346, 347, 352, 354, 420, 546, 582], "Then": [2, 9, 14, 15, 16, 17, 19, 22, 23, 27, 29, 30, 33, 46, 134, 212, 300, 306, 311, 317, 321, 322, 327, 334, 335, 342, 344, 348, 349, 350, 417, 423, 563, 578, 582, 584], "connect": [2, 6, 15, 17, 19, 20, 27, 37, 41, 43, 45, 131, 133, 154, 173, 174, 180, 183, 189, 205, 301, 306, 309, 310, 311, 312, 314, 320, 321, 322, 330, 333, 335, 336, 338, 342, 344, 348, 349, 350, 351, 352, 354, 360, 361, 362, 418, 419, 421, 423, 426, 432, 434, 438, 455, 470, 472, 474, 476, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 493, 495, 497, 502, 503, 508, 509, 511, 516, 518, 519, 520, 521, 522, 523, 525, 534, 544, 545, 547, 549, 551, 568, 569, 576, 583, 584, 592, 600], "servic": [2, 27, 28, 29, 38, 39, 43, 45, 46, 106, 130, 132, 133, 173, 183, 189, 259, 269, 275, 298, 303, 306, 311, 312, 320, 327, 334, 338, 344, 349, 350, 352, 354, 359, 576, 583], "detail": [2, 4, 6, 7, 9, 12, 13, 14, 17, 20, 27, 29, 30, 33, 34, 38, 39, 45, 46, 96, 126, 128, 129, 130, 131, 132, 134, 176, 212, 262, 300, 302, 306, 307, 310, 314, 316, 320, 321, 326, 329, 333, 335, 338, 341, 342, 348, 352, 354, 356, 359, 360, 361, 410, 412, 416, 418, 419, 421, 422, 425, 426, 427, 429, 526, 569, 576, 580, 582, 585, 586], "addr": [2, 29, 362, 576], "ip": [2, 29, 309, 321, 323, 334, 576, 582, 600], "port": [2, 23, 29, 38, 45, 126, 134, 212, 298, 300, 307, 309, 310, 311, 314, 321, 323, 328, 334, 346, 348, 359, 576, 582, 600, 602], "mai": [2, 4, 6, 7, 8, 14, 15, 18, 20, 22, 24, 27, 29, 30, 31, 32, 36, 37, 38, 45, 46, 128, 129, 132, 134, 212, 300, 306, 310, 311, 314, 317, 321, 322, 324, 325, 328, 331, 333, 335, 339, 341, 344, 348, 349, 350, 353, 354, 355, 356, 370, 418, 423, 425, 426, 427, 428, 431, 468, 491, 498, 500, 508, 569, 572, 575, 576, 581, 582, 584, 586, 589], "would": [2, 4, 20, 29, 31, 36, 37, 41, 45, 131, 314, 320, 323, 328, 335, 349, 359, 360, 423, 429, 572, 575, 576, 582], "previou": [2, 9, 15, 19, 27, 29, 31, 33, 41, 212, 335, 350, 360, 368, 369, 417, 421, 423, 507, 582], "wcc_result": 2, "wcc": [2, 13, 357, 360, 592, 597], "print": [2, 7, 16, 20, 29, 30, 33, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 306, 309, 311, 314, 317, 321, 324, 325, 326, 327, 328, 334, 335, 341, 342, 344, 345, 346, 347, 348, 350, 360, 361, 420, 422, 423, 426, 429, 431, 432, 434, 447, 496, 564, 569, 572, 580, 582, 589, 590, 597, 600, 602], "to_datafram": [2, 7, 15, 317, 350, 361, 431, 575, 580, 592], "id": [2, 4, 7, 9, 13, 15, 17, 18, 28, 30, 33, 38, 45, 47, 67, 82, 83, 84, 86, 92, 94, 95, 96, 106, 110, 111, 129, 130, 131, 154, 167, 170, 173, 174, 176, 180, 183, 194, 205, 212, 240, 253, 256, 259, 260, 262, 267, 269, 280, 291, 300, 303, 306, 311, 313, 314, 317, 321, 322, 323, 325, 326, 328, 329, 336, 339, 342, 348, 350, 353, 354, 357, 359, 360, 361, 362, 388, 394, 396, 417, 418, 419, 420, 421, 422, 423, 426, 427, 429, 430, 431, 433, 526, 527, 566, 569, 572, 575, 576, 580, 582, 583, 590, 592, 593, 595, 596, 600, 601, 602], "r": [2, 6, 7, 15, 16, 17, 22, 31, 33, 35, 306, 317, 321, 329, 350, 351, 354, 360, 361, 469, 479, 486, 492, 496, 508, 516, 525, 557, 562, 575, 576, 580, 582, 592, 596, 597], "tip": [2, 13, 554], "encount": [2, 32, 37, 126, 134, 300, 306, 310, 314, 352, 370, 582], "fail": [2, 37, 134, 154, 173, 174, 176, 180, 183, 189, 205, 212, 269, 300, 302, 304, 306, 314, 322, 325, 333, 354, 434, 569, 582], "project": [2, 4, 7, 13, 15, 17, 23, 33, 37, 46, 212, 307, 310, 322, 325, 327, 329, 350, 351, 353, 359, 360, 361, 393, 424, 431, 576, 580, 592, 596, 597, 600], "simpl": [2, 7, 9, 15, 16, 17, 20, 27, 30, 32, 33, 128, 129, 130, 180, 212, 299, 300, 314, 319, 322, 324, 325, 331, 333, 335, 341, 348, 349, 350, 353, 360, 361, 393, 417, 419, 432, 434, 498, 500, 503, 504, 526, 527, 528, 529, 531, 543, 561, 569, 575, 582, 592, 595, 596, 600], "empti": [2, 19, 29, 41, 183, 269, 299, 306, 313, 320, 325, 326, 333, 335, 348, 360, 362, 451, 475, 478, 508, 509, 547, 563, 569, 572, 582], "load": [2, 4, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 29, 33, 45, 95, 128, 134, 173, 174, 212, 259, 300, 303, 307, 308, 312, 314, 317, 319, 321, 322, 323, 324, 325, 327, 330, 334, 341, 350, 351, 352, 354, 357, 358, 359, 360, 368, 370, 372, 401, 417, 419, 428, 429, 431, 576, 581], "dataset": [2, 4, 7, 15, 16, 17, 18, 19, 20, 22, 23, 27, 33, 129, 314, 317, 324, 325, 330, 335, 341, 344, 345, 346, 347, 350, 354, 357, 360, 361, 417, 423, 429, 576, 580, 582, 592, 594, 596, 600, 602], "load_modern_graph": [2, 7, 30, 33, 324, 350, 360, 432], "modern": [2, 6, 7, 33, 129, 134, 307, 312, 321, 323, 324, 335, 338, 350, 351, 352, 578, 582, 583], "current": [2, 7, 11, 12, 13, 16, 17, 22, 27, 29, 32, 37, 38, 45, 106, 126, 128, 129, 130, 131, 134, 183, 189, 212, 269, 275, 300, 301, 303, 307, 310, 311, 314, 317, 320, 321, 322, 325, 326, 329, 331, 333, 335, 338, 342, 344, 346, 348, 350, 352, 353, 355, 360, 362, 411, 414, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 561, 564, 569, 576, 581, 582, 589, 592, 599], "e": [2, 4, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 22, 23, 32, 34, 37, 46, 47, 67, 75, 94, 95, 106, 110, 121, 129, 130, 131, 180, 212, 267, 306, 313, 317, 320, 323, 325, 329, 331, 335, 337, 338, 341, 342, 344, 348, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 370, 419, 420, 421, 422, 423, 426, 429, 431, 432, 433, 434, 470, 488, 498, 500, 502, 503, 505, 506, 507, 510, 515, 516, 523, 524, 525, 526, 529, 531, 547, 552, 558, 560, 569, 571, 572, 575, 576, 578, 580, 581, 583, 585, 586, 592, 596, 599, 600, 602], "path": [2, 4, 6, 7, 9, 17, 19, 22, 23, 24, 27, 28, 30, 31, 33, 39, 45, 128, 129, 130, 134, 212, 259, 300, 303, 306, 311, 320, 321, 322, 323, 326, 328, 329, 336, 338, 339, 342, 346, 348, 350, 352, 353, 356, 360, 368, 418, 419, 421, 423, 428, 429, 431, 434, 437, 470, 476, 480, 481, 483, 500, 563, 569, 571, 573, 575, 576, 580, 582, 584, 592, 593, 596, 597, 600], "store": [2, 10, 12, 13, 16, 17, 30, 34, 110, 128, 131, 132, 133, 134, 180, 183, 269, 298, 301, 303, 307, 310, 312, 314, 319, 321, 329, 330, 331, 333, 335, 338, 348, 349, 351, 352, 353, 355, 356, 361, 362, 375, 376, 391, 399, 400, 419, 425, 431, 432, 488, 493, 516, 517, 518, 519, 520, 569, 571, 576, 578, 580, 581, 583, 590, 592, 595], "pod": [2, 27, 28, 29, 30, 38, 41, 75, 104, 298, 314, 317, 321, 344, 348, 576, 582, 590, 593, 595, 596, 602], "elimin": [2, 6, 14, 419], "extran": 2, "resourc": [2, 27, 29, 33, 38, 46, 75, 128, 134, 298, 310, 314, 317, 325, 334, 344, 349, 356, 360, 368, 488, 521, 576, 582, 585, 589, 595], "fewer": 2, "inconveni": 2, "requir": [2, 4, 6, 13, 15, 17, 20, 31, 32, 35, 37, 44, 47, 67, 75, 94, 95, 106, 110, 121, 128, 130, 131, 133, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291, 309, 311, 314, 317, 322, 324, 325, 326, 328, 331, 333, 335, 339, 342, 344, 348, 349, 350, 354, 356, 360, 364, 378, 417, 418, 419, 421, 422, 426, 427, 428, 429, 430, 467, 515, 516, 520, 569, 576, 581, 582, 585, 599], "equival": [2, 20, 314, 329, 331, 333, 335, 423, 488, 525, 569], "function": [2, 4, 6, 9, 12, 14, 16, 17, 19, 20, 24, 34, 36, 43, 126, 128, 131, 134, 306, 309, 310, 314, 325, 328, 329, 331, 333, 334, 335, 339, 348, 349, 351, 354, 356, 359, 423, 427, 434, 467, 468, 475, 478, 498, 500, 505, 516, 517, 518, 519, 520, 528, 564, 567, 568, 569, 570, 571, 574, 580, 581, 586, 589, 592], "when": [2, 4, 6, 9, 10, 13, 20, 23, 24, 27, 29, 30, 31, 37, 46, 47, 67, 75, 94, 95, 106, 110, 121, 128, 130, 131, 134, 212, 300, 306, 309, 310, 311, 314, 317, 321, 322, 325, 328, 329, 333, 334, 335, 339, 342, 344, 349, 351, 352, 354, 356, 357, 360, 361, 362, 370, 404, 410, 418, 419, 420, 421, 422, 423, 426, 427, 428, 430, 431, 433, 434, 478, 488, 508, 516, 517, 518, 519, 525, 569, 571, 572, 576, 578, 580, 581, 582, 584, 589, 590], "close": [2, 6, 27, 29, 30, 33, 43, 298, 312, 334, 342, 344, 349, 360, 419, 429, 432, 571, 576, 582, 596], "free": [2, 9, 37, 306, 314, 326, 342, 356, 509, 516, 526, 529, 531, 562, 568, 576], "delet": [2, 9, 27, 29, 30, 33, 46, 47, 67, 94, 95, 110, 133, 154, 173, 174, 180, 205, 240, 259, 260, 267, 291, 301, 303, 306, 312, 314, 389, 428, 576, 578, 595], "handl": [3, 6, 8, 9, 11, 12, 20, 27, 34, 37, 128, 131, 134, 310, 312, 321, 322, 325, 331, 334, 335, 338, 349, 351, 352, 353, 354, 361, 391, 418, 430, 433, 569, 571, 581, 582], "variou": [3, 4, 8, 12, 14, 15, 20, 24, 30, 34, 38, 41, 128, 132, 134, 310, 320, 322, 325, 326, 331, 335, 338, 339, 349, 350, 351, 352, 354, 355, 381, 431, 534, 581, 586], "algorithm": [3, 4, 7, 8, 12, 13, 14, 20, 24, 30, 128, 311, 314, 317, 322, 325, 337, 339, 342, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 364, 419, 422, 423, 425, 431, 479, 488, 491, 492, 500, 501, 502, 503, 504, 508, 509, 510, 511, 516, 521, 522, 525, 526, 528, 529, 552, 561, 566, 569, 570, 572, 574, 575, 585], "deriv": [3, 12, 34, 350, 353, 359, 361, 431, 434, 578], "grape": [3, 4, 15, 16, 22, 23, 34, 319, 337, 349, 355, 359, 368, 578, 581, 583, 584, 585, 586, 592, 598], "system": [3, 6, 8, 9, 12, 24, 30, 31, 33, 34, 36, 37, 43, 128, 132, 134, 154, 173, 174, 180, 183, 189, 205, 212, 306, 307, 308, 309, 310, 314, 317, 321, 322, 324, 325, 326, 329, 330, 331, 335, 336, 337, 338, 341, 349, 351, 352, 353, 354, 355, 357, 418, 419, 424, 427, 566, 568, 578, 580, 581, 582, 584, 586, 592, 600], "sigmod": [3, 12, 14, 24, 34, 349, 592, 598], "2017": [3, 12, 14, 34, 349, 526, 527, 592], "further": [3, 6, 10, 14, 20, 27, 30, 34, 310, 317, 320, 323, 329, 331, 333, 335, 350, 351, 361, 419, 431, 432, 447, 578, 581], "enhanc": [3, 4, 9, 310, 311, 320, 325, 326, 331, 333, 350], "introduc": [3, 6, 10, 19, 20, 24, 130, 212, 301, 319, 322, 329, 331, 333, 335, 337, 339, 349, 351, 353, 356, 417, 420, 421, 423, 425, 434, 546, 568, 581, 582, 586], "lot": [3, 13, 37, 317, 335, 337, 586], "new": [3, 4, 6, 9, 12, 13, 14, 17, 20, 23, 30, 33, 34, 37, 47, 94, 110, 133, 134, 154, 173, 180, 183, 189, 205, 259, 267, 298, 302, 303, 304, 306, 310, 312, 322, 324, 326, 335, 340, 349, 350, 351, 359, 362, 369, 370, 411, 428, 431, 432, 434, 441, 447, 488, 500, 509, 511, 531, 560, 567, 569, 576, 578, 580, 581, 584, 596], "featur": [3, 6, 9, 12, 23, 32, 34, 212, 300, 301, 311, 312, 320, 329, 337, 339, 341, 344, 345, 349, 350, 353, 354, 355, 356, 359, 364, 417, 418, 425, 429, 431, 569, 576, 581, 586, 596, 601], "storag": [3, 9, 30, 43, 46, 50, 53, 75, 103, 128, 134, 138, 141, 183, 212, 224, 227, 269, 300, 306, 310, 314, 322, 323, 325, 329, 331, 335, 348, 351, 354, 356, 396, 419, 580, 582, 583], "languag": [3, 12, 16, 35, 43, 46, 134, 308, 312, 317, 320, 322, 324, 325, 331, 333, 334, 335, 336, 338, 339, 342, 349, 350, 351, 352, 353, 356, 364, 432, 581, 582, 586], "pattern": [3, 6, 12, 23, 30, 128, 310, 322, 323, 326, 328, 331, 333, 338, 342, 349, 352, 356, 360, 422, 427, 582], "better": [3, 8, 12, 20, 24, 29, 34, 321, 322, 325, 335, 337, 354, 356, 576, 582, 586], "integr": [3, 4, 9, 12, 13, 22, 23, 34, 130, 134, 212, 300, 307, 311, 320, 322, 324, 326, 328, 336, 337, 349, 351, 353, 355, 356, 562, 581, 582, 584, 586], "big": [3, 6, 12, 37, 337, 351, 586], "overview": [3, 23, 34, 307, 312, 325, 335, 350, 578], "architectur": [3, 9, 45, 126, 128, 134, 309, 310, 326, 349, 354, 360], "kei": [3, 4, 13, 20, 27, 129, 130, 131, 136, 143, 152, 153, 154, 157, 158, 166, 205, 212, 222, 229, 238, 239, 240, 243, 244, 252, 259, 291, 301, 303, 311, 312, 320, 321, 324, 325, 326, 329, 330, 333, 335, 348, 351, 353, 354, 355, 360, 361, 362, 393, 394, 395, 404, 420, 423, 429, 431, 434, 463, 512, 516, 517, 518, 519, 567, 569, 571, 572, 575, 576, 581, 582, 592, 602], "concept": [3, 134, 351, 354, 417, 418], "centric": [3, 6, 9, 12, 14, 15, 17, 18, 22, 34, 337, 338, 349, 351, 352, 586], "ingress": [3, 12], "increment": [3, 14, 16, 18, 20, 34, 334, 339, 351, 359, 586], "compat": [3, 7, 12, 13, 15, 19, 20, 23, 32, 34, 134, 309, 314, 317, 321, 324, 325, 329, 336, 338, 339, 341, 342, 343, 344, 345, 350, 354, 355, 358, 360, 425, 432, 575, 576, 578, 580, 596], "tune": [3, 317, 325, 348, 349], "guid": [4, 7, 9, 16, 27, 29, 32, 37, 41, 43, 45, 126, 129, 130, 212, 307, 309, 310, 311, 312, 319, 321, 324, 325, 326, 328, 330, 333, 334, 336, 341, 344, 345, 350, 364, 596], "code": [4, 6, 8, 14, 15, 16, 18, 29, 31, 32, 34, 36, 44, 45, 47, 67, 75, 78, 94, 95, 106, 110, 121, 126, 133, 135, 154, 173, 174, 180, 183, 189, 205, 212, 221, 240, 259, 260, 267, 269, 275, 291, 300, 304, 306, 308, 309, 310, 311, 312, 319, 320, 322, 323, 325, 326, 328, 329, 335, 340, 349, 350, 351, 356, 357, 359, 360, 362, 367, 417, 418, 419, 420, 423, 424, 429, 488, 530, 573, 581, 582, 584, 589], "organ": [4, 44, 45, 134, 328, 333, 335, 338, 339, 354, 358, 417, 419, 421, 425, 426, 505, 507, 546], "identifi": [4, 9, 13, 24, 131, 173, 183, 212, 259, 269, 300, 311, 329, 331, 333, 335, 349, 350, 352, 360, 409, 496, 563, 566, 569, 576, 582, 589, 602], "simplic": [4, 9], "suggest": [4, 13, 322, 328, 335, 336, 348, 351, 488], "prebuilt": [4, 41, 323], "docker": [4, 27, 32, 33, 36, 38, 41, 45, 126, 133, 309, 312, 314, 323, 338, 582, 589, 593, 596, 598, 599], "imag": [4, 29, 36, 38, 45, 100, 128, 132, 134, 309, 314, 323, 325, 338, 340, 346, 357, 420, 576, 589], "necessari": [4, 6, 23, 27, 37, 41, 306, 311, 323, 324, 325, 334, 348, 360, 371, 379, 384, 418, 419, 421, 423, 431, 581, 582, 590], "depend": [4, 13, 17, 22, 27, 30, 35, 36, 37, 41, 45, 133, 212, 309, 314, 320, 323, 325, 326, 327, 328, 334, 335, 340, 341, 351, 354, 360, 423, 491, 496, 582, 589, 592], "shm": [4, 32, 41, 323, 340, 346, 594], "size": [4, 6, 10, 13, 16, 17, 23, 24, 32, 41, 128, 130, 313, 314, 321, 323, 325, 334, 339, 340, 342, 346, 348, 354, 357, 362, 418, 420, 421, 423, 428, 430, 431, 474, 475, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 500, 511, 520, 524, 526, 569, 580, 581, 582, 583, 594], "4096m": [4, 32, 41, 323, 340], "registri": [4, 27, 32, 41, 45, 134, 312, 323, 325, 340, 346, 424, 576, 582, 594], "cn": [4, 23, 27, 29, 31, 32, 41, 45, 129, 134, 323, 325, 340, 346, 348, 424, 582, 593, 594, 602], "hongkong": [4, 27, 32, 41, 45, 134, 323, 325, 340, 346, 582, 594], "aliyunc": [4, 23, 27, 29, 31, 32, 41, 45, 129, 134, 323, 325, 340, 346, 348, 424, 582, 593, 594, 602], "com": [4, 7, 17, 19, 22, 23, 27, 29, 30, 31, 32, 35, 36, 41, 45, 46, 129, 132, 134, 154, 173, 174, 180, 183, 189, 205, 212, 291, 300, 306, 323, 324, 325, 326, 328, 340, 341, 346, 348, 351, 352, 357, 360, 364, 424, 427, 434, 521, 530, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 549, 554, 576, 581, 582, 592, 593, 594, 595, 602], "latest": [4, 14, 17, 32, 37, 38, 39, 41, 42, 45, 128, 132, 134, 307, 309, 323, 325, 328, 340, 341, 581, 582, 594, 599], "altern": [4, 131, 325, 326, 329, 497, 516, 520, 569, 581, 582], "manual": [4, 9, 27, 30, 33, 133, 212, 314, 349, 356, 431, 582], "all": [4, 6, 9, 10, 12, 13, 15, 16, 17, 20, 22, 23, 24, 27, 29, 30, 35, 37, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 126, 128, 130, 131, 134, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 300, 301, 303, 307, 309, 310, 311, 314, 320, 321, 322, 324, 325, 329, 331, 333, 334, 335, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 438, 439, 441, 442, 446, 448, 463, 464, 468, 469, 472, 474, 475, 479, 488, 497, 506, 512, 526, 527, 529, 531, 555, 563, 564, 567, 569, 576, 580, 581, 582, 585, 590], "pleas": [4, 9, 12, 14, 16, 17, 23, 24, 27, 30, 32, 33, 34, 37, 41, 45, 46, 126, 128, 129, 134, 180, 183, 212, 269, 300, 306, 307, 309, 310, 311, 314, 323, 328, 331, 342, 344, 348, 350, 417, 418, 419, 421, 422, 423, 424, 427, 429, 580, 582, 586, 589, 596], "environ": [4, 11, 19, 20, 23, 24, 27, 29, 33, 37, 38, 39, 44, 133, 212, 298, 300, 306, 309, 311, 314, 317, 319, 324, 325, 330, 338, 344, 350, 351, 358, 360, 364, 424, 428, 434, 576, 581, 582, 583, 589, 590, 595], "after": [4, 6, 9, 14, 15, 17, 18, 20, 22, 24, 29, 32, 33, 34, 45, 126, 129, 212, 298, 300, 306, 307, 317, 325, 326, 328, 331, 333, 339, 351, 352, 354, 360, 361, 362, 372, 417, 418, 419, 420, 427, 428, 429, 434, 531, 542, 561, 569, 573, 575, 576, 578, 581, 582, 583, 590, 592], "clone": [4, 17, 22, 29, 30, 31, 32, 36, 37, 132, 134, 212, 323, 328, 364, 424, 582, 594], "repositori": [4, 29, 36, 37, 46, 132, 134, 212, 321, 328, 364, 576, 582], "enter": [4, 46, 47, 67, 75, 94, 95, 106, 110, 121, 322, 334], "analytical_engin": [4, 15, 17, 31, 36, 364, 592], "directori": [4, 22, 27, 30, 31, 32, 33, 36, 38, 45, 128, 129, 134, 314, 320, 325, 326, 328, 334, 338, 359, 363, 365, 417, 428, 431, 576, 580, 589, 590, 593, 595, 596], "git": [4, 17, 22, 29, 30, 31, 32, 35, 36, 37, 46, 132, 134, 212, 323, 328, 364, 427, 581, 594], "http": [4, 7, 17, 19, 22, 23, 27, 29, 30, 31, 32, 35, 36, 45, 46, 126, 128, 129, 132, 134, 212, 298, 300, 301, 307, 309, 311, 314, 323, 324, 326, 327, 328, 330, 334, 341, 344, 345, 350, 351, 352, 360, 364, 424, 427, 434, 488, 492, 493, 494, 508, 511, 518, 519, 521, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 555, 556, 561, 576, 581, 582, 592, 593, 594, 595, 596, 599, 600, 602], "github": [4, 22, 29, 30, 31, 32, 35, 36, 45, 46, 129, 132, 134, 212, 300, 323, 328, 351, 352, 360, 364, 424, 427, 519, 576, 581, 592, 594, 602], "alibaba": [4, 17, 22, 23, 29, 31, 32, 36, 46, 129, 132, 134, 154, 173, 174, 180, 183, 189, 205, 212, 300, 306, 323, 325, 326, 338, 349, 351, 354, 355, 364, 424, 427, 592, 594, 602], "cd": [4, 17, 22, 29, 31, 32, 35, 36, 45, 132, 134, 212, 307, 320, 323, 325, 326, 327, 334, 364, 424, 427, 429, 582, 589, 590, 592, 594, 600], "sinc": [4, 6, 23, 24, 29, 30, 37, 128, 130, 131, 212, 275, 300, 306, 322, 328, 333, 335, 340, 344, 348, 349, 357, 370, 419, 423, 431, 467, 468, 498, 500, 547, 564, 571, 575, 580, 581, 582], "inherit": [4, 6, 9, 16, 306, 322, 351, 359, 417, 427], "libgrap": [4, 16, 31, 34, 351, 364], "lite": [4, 16, 31, 34, 351, 364], "note": [4, 13, 14, 20, 27, 29, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 306, 311, 320, 322, 325, 328, 329, 333, 335, 339, 344, 345, 348, 350, 351, 352, 360, 361, 362, 370, 409, 411, 419, 423, 431, 434, 443, 444, 447, 451, 464, 465, 466, 467, 468, 469, 475, 476, 481, 484, 486, 488, 489, 490, 491, 493, 495, 497, 498, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 529, 530, 531, 546, 561, 562, 563, 564, 566, 569, 571, 572, 575, 576, 580, 582, 589, 596, 602], "core": [4, 6, 12, 34, 37, 45, 128, 314, 322, 324, 331, 349, 350, 351, 360, 364, 429, 434, 576, 596], "structur": [4, 6, 9, 12, 15, 16, 17, 20, 24, 45, 128, 130, 131, 133, 134, 310, 317, 322, 325, 326, 334, 335, 345, 350, 351, 352, 353, 354, 360, 418, 419, 420, 431, 479, 498, 546, 561, 563, 569, 570, 580, 581, 585], "partition": [4, 313, 427], "worker": [4, 9, 13, 14, 23, 28, 34, 128, 134, 323, 331, 342, 344, 346, 419, 422, 429, 576, 580], "between": [4, 6, 9, 10, 12, 13, 18, 19, 45, 131, 134, 300, 311, 314, 319, 320, 322, 325, 329, 335, 336, 339, 352, 354, 359, 360, 418, 419, 421, 423, 429, 434, 491, 492, 493, 496, 502, 508, 509, 511, 515, 516, 517, 518, 520, 523, 525, 526, 527, 529, 534, 564, 566, 569, 581, 582, 589], "heavili": 4, "reus": [4, 30, 212, 300, 311, 339, 342, 351, 360, 429, 431, 576, 578], "want": [4, 6, 7, 18, 20, 22, 27, 29, 30, 32, 33, 45, 126, 128, 173, 212, 300, 306, 307, 309, 320, 331, 335, 341, 348, 355, 364, 370, 416, 427, 431, 478, 512, 569, 575, 576, 578, 580, 582, 589], "fulli": [4, 128, 130, 339, 342, 353, 360, 370, 511, 581, 592], "recommend": [4, 27, 30, 36, 37, 45, 306, 314, 321, 324, 328, 331, 335, 339, 348, 349, 350, 354, 423], "locat": [4, 23, 27, 36, 38, 128, 130, 131, 186, 272, 303, 309, 321, 323, 329, 335, 340, 348, 353, 363, 365, 419, 420, 431, 582, 583, 589], "like": [4, 14, 15, 18, 19, 20, 23, 24, 27, 29, 32, 36, 37, 41, 45, 126, 128, 129, 131, 134, 306, 311, 314, 317, 321, 322, 324, 325, 328, 335, 336, 338, 340, 348, 349, 350, 354, 355, 356, 358, 359, 360, 418, 423, 427, 429, 431, 488, 498, 500, 508, 569, 575, 576, 578, 580, 581, 582, 583, 602], "therebi": [4, 310, 331], "fledg": [4, 12, 349], "coordin": [4, 15, 27, 29, 35, 37, 38, 41, 44, 128, 132, 307, 309, 319, 324, 344, 359, 431, 481, 576, 582, 589, 590, 593, 594, 596], "while": [4, 6, 12, 19, 20, 29, 34, 126, 130, 131, 132, 212, 275, 300, 310, 311, 317, 320, 321, 325, 326, 327, 329, 331, 333, 334, 335, 339, 349, 351, 352, 353, 355, 356, 418, 423, 429, 465, 466, 526, 529, 531, 563, 569, 578, 581, 582, 590], "": [4, 6, 9, 13, 14, 15, 17, 18, 19, 20, 23, 24, 27, 29, 30, 32, 33, 35, 37, 38, 41, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 128, 129, 130, 131, 134, 154, 180, 189, 205, 212, 240, 267, 275, 291, 301, 306, 307, 310, 311, 314, 320, 321, 323, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 338, 339, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 357, 360, 370, 386, 387, 404, 417, 419, 421, 423, 426, 428, 430, 431, 434, 470, 481, 488, 491, 493, 496, 500, 503, 505, 506, 507, 523, 531, 532, 533, 556, 559, 561, 569, 575, 576, 578, 580, 581, 582, 583, 600, 601], "onli": [4, 6, 9, 12, 13, 14, 15, 17, 18, 20, 22, 23, 27, 29, 30, 34, 36, 128, 129, 130, 131, 134, 183, 212, 259, 269, 275, 298, 300, 303, 306, 310, 311, 317, 321, 322, 325, 329, 331, 333, 335, 338, 339, 341, 342, 348, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 364, 368, 417, 418, 419, 421, 422, 423, 424, 431, 432, 434, 453, 454, 463, 489, 490, 515, 516, 520, 528, 541, 562, 563, 569, 575, 576, 580, 581, 582, 583, 586], "ship": 4, "6": [4, 10, 17, 18, 22, 31, 154, 240, 317, 324, 325, 333, 334, 335, 350, 357, 360, 418, 423, 429, 434, 453, 472, 501, 502, 503, 520, 534, 536, 542, 543, 546, 549, 553, 554, 562, 564, 569, 582, 584, 592, 595, 596, 600], "graphalyt": [4, 356], "benchmark": [4, 34, 310, 319, 331, 335, 338, 352, 354, 356, 488], "flatten": [4, 13, 346], "thu": [4, 6, 12, 16, 20, 27, 34, 36, 45, 126, 128, 314, 317, 335, 344, 354, 360, 422, 464, 472, 569, 581], "execut": [4, 6, 9, 12, 14, 15, 17, 23, 24, 27, 29, 41, 46, 126, 128, 129, 131, 134, 212, 300, 301, 307, 308, 309, 310, 311, 317, 320, 321, 322, 323, 324, 325, 326, 330, 333, 335, 338, 350, 351, 353, 354, 359, 360, 361, 388, 423, 427, 431, 432, 434, 529, 573, 576, 578, 582, 584, 590, 592, 596, 600], "written": [4, 12, 20, 131, 134, 259, 335, 349, 351, 353, 547, 578, 581, 582, 584, 592], "giraph": [4, 7, 8, 12, 17, 23, 24, 337, 356, 586], "graphx": [4, 7, 8, 12, 17, 24, 337, 356, 586], "app": [4, 15, 16, 17, 18, 33, 132, 306, 361, 362, 364, 369, 372, 395, 401, 404, 418, 431, 574, 575, 581, 592], "librari": [4, 6, 12, 15, 16, 31, 32, 33, 92, 111, 170, 194, 212, 256, 280, 306, 310, 322, 323, 326, 349, 359, 360, 364, 582], "serv": [4, 27, 43, 128, 134, 212, 300, 311, 314, 325, 328, 331, 338, 350, 351, 354, 419, 582, 589], "layer": [4, 6, 45, 321, 322, 325, 339, 342, 351, 354, 356, 417, 418, 421, 425, 429, 601], "cuda": [4, 357], "suit": [4, 36, 317, 323, 339, 354], "gpu": [4, 351, 424], "acceler": [4, 27, 325, 581], "fragment": [4, 10, 12, 13, 14, 16, 17, 18, 313, 322, 352, 354, 362, 394, 431, 432, 578, 583, 586, 592], "extend": [4, 9, 17, 23, 310, 325, 331, 333, 334, 335, 356, 361, 418, 426, 427, 515, 581, 592], "loader": [4, 22, 323, 347, 359, 370, 381, 574, 583, 597, 598], "mutabl": [4, 134, 351], "io": [4, 27, 30, 33, 41, 306, 351, 352, 360, 428, 431, 519, 576, 582, 585, 599], "io_adaptor": 4, "parallel": [4, 6, 12, 14, 15, 16, 24, 34, 130, 188, 274, 317, 336, 338, 346, 349, 351, 353, 359, 362, 419, 498, 500, 537, 569, 572, 582, 592], "sub": [4, 12, 14, 18, 335, 338, 348, 361, 421, 423, 581, 586], "helper": [4, 589], "thread": [4, 6, 31, 128, 130, 212, 321, 323, 339, 357, 430], "messag": [4, 6, 10, 14, 15, 16, 17, 18, 24, 34, 36, 37, 38, 46, 47, 78, 82, 83, 129, 135, 221, 302, 304, 309, 314, 322, 326, 335, 342, 354, 359, 362, 430, 581, 592], "buffer": [4, 428], "sync": [4, 362, 428, 581], "serial": [4, 306, 333, 334, 359, 431, 576, 581, 600], "vertex_map": [4, 13, 45, 105, 124, 129, 130, 173, 212, 259, 270, 294, 300, 303, 410, 431, 576], "some": [4, 6, 10, 12, 13, 17, 20, 23, 29, 31, 34, 36, 37, 45, 128, 129, 132, 134, 306, 311, 320, 321, 322, 324, 325, 329, 331, 333, 334, 339, 348, 349, 352, 354, 360, 417, 418, 419, 425, 427, 429, 430, 431, 432, 479, 488, 498, 500, 503, 522, 563, 568, 569, 580, 581, 582, 583, 589], "map": [4, 6, 13, 45, 126, 129, 134, 157, 158, 170, 176, 187, 194, 202, 212, 243, 244, 300, 309, 312, 326, 329, 331, 333, 335, 352, 359, 418, 427, 431, 561, 576, 582, 583, 597, 600], "intern": [4, 13, 154, 173, 180, 183, 189, 205, 240, 259, 267, 269, 275, 291, 304, 306, 331, 352, 431, 469, 592, 594], "frame": [4, 354], "wrap": [4, 302, 348, 351, 359, 364], "becaus": [4, 37, 322, 328, 331, 335, 354, 417, 420, 434, 564, 581, 582], "reli": [4, 9, 19, 309, 328, 330, 424, 581], "templat": [4, 9, 15, 28, 311, 313, 320, 346, 359, 581], "inadequ": 4, "usual": [4, 9, 13, 19, 27, 38, 39, 314, 317, 322, 328, 333, 335, 339, 342, 343, 344, 354, 423, 427, 430, 497, 520, 563, 569, 581, 583, 584], "multipl": [4, 6, 12, 14, 17, 29, 30, 41, 43, 130, 131, 134, 183, 212, 269, 300, 310, 320, 321, 322, 329, 333, 338, 339, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 418, 419, 423, 434, 531, 569, 575, 580, 581, 584, 590], "label": [4, 6, 7, 13, 15, 20, 33, 77, 100, 129, 152, 153, 154, 160, 173, 205, 206, 209, 238, 239, 240, 246, 259, 291, 292, 295, 303, 306, 311, 313, 320, 321, 325, 326, 328, 329, 331, 341, 345, 346, 347, 349, 350, 352, 354, 359, 360, 361, 362, 370, 417, 420, 423, 429, 431, 434, 469, 473, 480, 484, 485, 487, 497, 498, 500, 501, 502, 503, 504, 546, 547, 569, 571, 572, 575, 576, 580, 582, 583, 596, 597, 600, 601], "cannot": [4, 27, 30, 134, 314, 325, 333, 335, 339, 354, 356, 359, 360, 364, 419, 431, 488, 527, 528, 575, 576, 582, 584, 595], "determin": [4, 37, 128, 134, 322, 325, 326, 333, 335, 339, 342, 348, 352, 353, 359, 360, 419, 423, 514, 517, 518, 519, 576], "reason": [4, 314, 331, 333, 339, 418, 419, 549], "jit": 4, "technologi": [4, 319, 322, 355], "compil": [4, 15, 31, 32, 34, 128, 133, 306, 310, 311, 312, 314, 321, 322, 323, 325, 326, 329, 334, 349, 360, 372, 581, 582, 584, 590], "associ": [4, 6, 9, 29, 129, 131, 325, 329, 333, 354, 503, 515, 561, 563, 569, 576, 581, 582], "runtim": [4, 6, 17, 23, 31, 132, 133, 134, 309, 311, 322, 349, 351, 352, 353, 359, 360, 364, 581, 594, 595], "wrapper": [4, 326, 327, 334, 336, 338, 353, 359, 372, 378, 431, 432, 581], "facilit": [4, 20, 311, 320, 323, 325, 333, 338, 339, 342, 354, 418, 581, 582], "task": [4, 6, 7, 14, 34, 37, 41, 95, 128, 322, 324, 335, 338, 339, 341, 343, 344, 345, 346, 347, 349, 351, 352, 354, 418, 429, 581], "api": [4, 8, 15, 16, 18, 22, 24, 30, 34, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 133, 134, 183, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 303, 306, 309, 312, 317, 319, 325, 330, 338, 349, 355, 358, 364, 370, 417, 419, 421, 422, 423, 427, 433, 569, 576, 580, 581, 582, 583, 592, 603], "jar": [4, 8, 22, 23, 35, 39, 212, 325, 360, 592], "read": [4, 8, 20, 24, 37, 130, 298, 303, 306, 310, 317, 320, 326, 327, 329, 332, 343, 348, 349, 351, 417, 418, 423, 428, 429, 431, 467, 468, 567, 569, 570, 574, 576, 578, 582, 600], "about": [4, 7, 12, 14, 17, 30, 34, 37, 38, 46, 154, 174, 205, 306, 309, 321, 323, 324, 335, 336, 340, 341, 349, 354, 355, 359, 360, 423, 427, 428, 575, 576, 580, 585, 592], "cmake": [4, 31, 32, 36, 133, 314, 424], "script": [4, 32, 37, 134, 320, 325, 356, 357, 388, 417, 418, 429, 432, 593], "configur": [4, 15, 16, 17, 23, 27, 31, 35, 37, 38, 39, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 129, 131, 134, 183, 212, 298, 300, 307, 309, 310, 312, 314, 323, 333, 334, 335, 344, 348, 349, 359, 360, 371, 372, 378, 379, 384, 409, 428, 429, 431, 488, 498, 500, 576, 578, 583, 589], "figur": [4, 6, 9, 12, 24, 27, 30, 34, 322, 328, 335, 339, 342, 350, 352, 353, 354, 419, 421, 552, 578], "abov": [4, 6, 7, 9, 13, 14, 15, 16, 19, 22, 27, 30, 32, 33, 129, 212, 303, 306, 317, 320, 321, 324, 331, 333, 335, 337, 341, 348, 352, 353, 417, 418, 419, 423, 427, 472, 488, 508, 531, 565, 575, 582, 584, 586, 590], "well": [4, 6, 8, 9, 12, 13, 18, 20, 27, 29, 34, 131, 309, 320, 322, 325, 328, 331, 338, 339, 348, 350, 351, 352, 353, 354, 358, 423, 431, 439, 472, 520, 569, 578, 582, 585, 586, 590], "thei": [4, 6, 20, 24, 27, 30, 31, 128, 130, 303, 317, 322, 328, 331, 333, 335, 338, 344, 349, 352, 354, 356, 417, 418, 426, 431, 475, 483, 488, 516, 518, 519, 562, 563, 569, 575, 576, 578, 581], "work": [4, 8, 11, 14, 18, 20, 32, 34, 36, 37, 41, 45, 131, 298, 317, 321, 322, 324, 326, 333, 338, 342, 348, 349, 350, 351, 352, 353, 354, 359, 361, 421, 423, 431, 568, 569, 575, 584], "partit": [4, 6, 9, 10, 12, 13, 14, 15, 18, 24, 321, 322, 331, 342, 349, 352, 354, 360, 422, 427, 486, 491, 492, 493, 496, 527, 586], "object": [4, 15, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 154, 155, 170, 176, 181, 187, 194, 200, 202, 205, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 304, 323, 324, 326, 327, 329, 333, 334, 335, 339, 342, 348, 349, 350, 352, 354, 357, 359, 371, 384, 396, 410, 418, 420, 421, 422, 423, 426, 429, 432, 433, 447, 467, 468, 526, 566, 569, 571, 572, 574, 575, 582, 592, 602], "messagemessag": 4, "strategi": [4, 9, 10, 12, 16, 24, 131, 134, 320, 331, 333, 334, 335, 342, 354, 357, 362, 421, 422, 423, 426, 427, 572, 585, 600], "respons": [4, 9, 12, 16, 27, 34, 36, 37, 46, 128, 134, 302, 304, 314, 322, 326, 328, 349, 359, 427, 430, 576, 578, 582], "state": [4, 6, 9, 10, 12, 24, 27, 34, 322, 338, 352, 353, 355, 357, 428, 431, 488, 491, 492, 493, 494, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 523, 524, 525, 529, 561, 564, 566], "synchron": [4, 6, 10, 12, 14, 15, 349, 581], "explicitli": [4, 13, 325, 359, 419, 488, 576, 582], "implicitli": [4, 370], "main": [4, 6, 30, 34, 37, 129, 134, 154, 173, 174, 180, 183, 189, 205, 212, 298, 300, 306, 310, 322, 325, 326, 331, 334, 335, 356, 417, 426, 429, 434, 576, 601, 602], "logic": [4, 6, 9, 14, 16, 17, 212, 300, 322, 325, 326, 333, 335, 338, 351, 353, 357, 420, 580, 581, 582, 590, 592], "access": [4, 6, 12, 14, 27, 29, 30, 31, 38, 128, 132, 306, 308, 310, 311, 312, 314, 320, 321, 323, 328, 333, 334, 335, 339, 342, 348, 349, 351, 352, 353, 354, 418, 419, 420, 421, 422, 423, 428, 429, 431, 569, 572, 576, 578, 580, 581, 582, 583, 590, 602], "send": [4, 6, 10, 18, 24, 320, 323, 326, 352, 362, 581, 592], "receiv": [4, 6, 9, 14, 16, 17, 24, 37, 46, 47, 298, 326, 348, 349, 352, 354, 362, 423, 427, 578, 581, 592], "messagemanag": [4, 17, 592], "call": [4, 6, 12, 13, 16, 17, 19, 24, 46, 47, 67, 75, 94, 95, 106, 110, 121, 132, 133, 183, 212, 269, 300, 303, 309, 310, 314, 325, 329, 331, 333, 335, 342, 359, 362, 417, 419, 423, 426, 427, 432, 464, 478, 479, 509, 520, 549, 561, 569, 572, 576, 581, 582], "encourag": [4, 6, 15, 24, 37], "fork": [4, 132, 134], "repo": [4, 29, 37, 129, 134, 300, 323, 351, 582, 593, 594], "much": [4, 6, 13, 19, 22, 314, 322, 333, 335, 419, 423, 581], "easier": [4, 32, 36, 37, 43, 333, 351, 352, 353, 423, 576], "begin": [4, 15, 16, 30, 134, 212, 300, 303, 313, 317, 328, 329, 332, 335, 350, 361, 362, 508, 575, 581], "small": [4, 9, 11, 13, 20, 310, 317, 325, 331, 335, 352, 353, 356, 434, 489, 490, 516, 559, 570, 576, 582], "chang": [4, 9, 11, 12, 14, 20, 23, 33, 34, 36, 45, 126, 128, 134, 306, 307, 335, 349, 353, 354, 356, 357, 360, 377, 409, 418, 431, 434, 447, 569, 576, 582], "revis": [4, 14, 17, 357], "ad": [4, 6, 9, 13, 15, 17, 19, 29, 37, 259, 303, 320, 325, 329, 338, 339, 354, 356, 357, 368, 369, 419, 431, 436, 437, 447, 505, 506, 507, 509, 563, 569, 578, 600, 602], "gradual": 4, "avoid": [4, 13, 331, 334, 581, 582], "larg": [4, 6, 7, 9, 11, 12, 13, 14, 18, 20, 23, 27, 34, 37, 131, 310, 314, 317, 321, 322, 324, 325, 330, 331, 334, 335, 336, 338, 339, 342, 343, 344, 349, 350, 351, 355, 356, 360, 404, 418, 419, 421, 423, 425, 429, 430, 443, 467, 468, 488, 523, 581, 592], "singl": [4, 6, 7, 11, 14, 15, 17, 20, 24, 27, 36, 37, 41, 131, 134, 183, 269, 299, 309, 311, 314, 321, 325, 329, 331, 333, 335, 340, 341, 343, 344, 349, 350, 352, 353, 360, 361, 417, 431, 442, 449, 471, 475, 480, 490, 495, 512, 518, 563, 565, 569, 576, 580, 584], "commit": [4, 134, 306, 357, 578], "cmakelist": 4, "txt": [4, 31, 35, 320, 592], "artifact": [4, 17, 23, 29, 36, 323, 325, 340], "grape_engin": [4, 38, 394, 590], "togeth": [4, 9, 10, 20, 41, 322, 335, 344, 349, 357, 423, 427, 470], "share": [4, 6, 30, 31, 37, 128, 131, 335, 340, 349, 351, 352, 581, 583, 594], "bunch": [4, 41, 356, 359], "binari": [4, 15, 27, 31, 134, 320, 354], "choos": [4, 6, 12, 22, 34, 41, 131, 321, 322, 325, 333, 335, 338, 339, 349, 354, 417, 418, 508, 509, 547], "install_prefix": [4, 36, 340, 594], "usr": [4, 582], "look": [4, 15, 18, 20, 27, 128, 212, 309, 321, 335, 348, 364, 430, 575, 578, 582, 583], "file": [4, 15, 17, 22, 23, 28, 29, 35, 37, 38, 39, 45, 46, 121, 128, 129, 131, 134, 186, 212, 300, 303, 306, 307, 310, 311, 312, 314, 319, 320, 321, 323, 325, 326, 328, 348, 359, 360, 368, 391, 417, 418, 424, 429, 431, 467, 468, 519, 569, 571, 576, 578, 582, 583, 589, 590, 592, 602], "investig": [4, 6], "ensur": [4, 6, 9, 32, 35, 36, 37, 128, 130, 132, 134, 300, 303, 309, 310, 311, 322, 325, 329, 331, 350, 356, 576, 582], "correct": [4, 6, 14, 37, 38, 311, 320, 322, 328, 423, 431, 434, 581], "unit": [4, 322, 335, 353, 427, 517, 518, 519, 582], "easili": [4, 12, 20, 22, 23, 24, 27, 29, 30, 34, 132, 306, 314, 321, 324, 335, 338, 349, 350, 351, 353, 354, 356, 423, 425, 581], "graphscope_hom": [4, 23, 594], "pwd": [4, 30, 429], "b": [4, 17, 18, 22, 37, 134, 325, 329, 333, 335, 423, 478, 496, 509, 515, 516, 520, 525, 526, 527, 529, 557, 565, 569, 592, 600], "master": [4, 6, 19, 22, 23, 24, 31, 134, 310, 346, 592], "depth": [4, 126, 134, 307, 323, 329, 350, 417, 429, 434, 601], "7br": 4, "gstest": [4, 19, 22, 23, 30, 134, 592, 594], "gs_test_dir": [4, 22, 33, 134], "app_test": 4, "sh": [4, 31, 35, 134, 320, 325, 334, 424, 582, 600], "test_dir": 4, "download": [4, 7, 17, 19, 22, 23, 27, 29, 30, 32, 35, 36, 39, 129, 212, 300, 324, 325, 327, 330, 334, 340, 341, 348, 357, 424, 429, 594], "against": [4, 14, 37, 323, 360, 551], "compar": [4, 19, 322, 325, 329, 331, 333, 335, 352, 357, 359, 360, 420, 488, 575], "ground": [4, 354], "truth": [4, 354], "distribut": [6, 10, 11, 12, 14, 15, 18, 20, 22, 23, 24, 27, 32, 34, 134, 310, 314, 319, 321, 322, 324, 325, 330, 331, 333, 336, 338, 339, 342, 343, 344, 346, 347, 349, 351, 352, 354, 355, 356, 360, 364, 417, 420, 422, 426, 428, 429, 433, 488, 491, 498, 500, 509, 516, 517, 518, 519, 520, 528, 582, 583], "broad": [6, 351], "spectrum": [6, 351, 434, 561], "central": [6, 15, 43, 317, 338, 339, 350, 351, 354, 355, 360, 423, 434, 546, 581], "match": [6, 15, 128, 130, 180, 212, 267, 300, 307, 310, 311, 322, 323, 324, 326, 327, 328, 329, 349, 350, 351, 360, 468, 488, 496, 498, 500, 527, 563, 582, 600], "mine": [6, 15, 349, 351, 352], "philosophi": [6, 24, 351], "step": [6, 9, 14, 15, 27, 29, 30, 31, 32, 33, 36, 37, 134, 307, 312, 321, 322, 323, 324, 327, 331, 334, 336, 338, 339, 346, 347, 348, 349, 350, 351, 353, 362, 417, 418, 419, 421, 423, 426, 429, 488, 496, 508, 561, 582, 590, 602], "stronger": [6, 351], "flexibl": [6, 12, 13, 23, 128, 131, 325, 326, 330, 335, 338, 349, 350, 351, 576, 580], "flow": [6, 351, 352, 417, 559], "oper": [6, 9, 12, 15, 30, 31, 36, 47, 110, 121, 126, 128, 134, 173, 174, 180, 189, 212, 259, 260, 267, 275, 300, 302, 304, 306, 309, 310, 311, 314, 317, 319, 321, 322, 324, 325, 330, 331, 333, 338, 339, 342, 348, 349, 351, 352, 353, 354, 355, 360, 362, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 389, 390, 391, 393, 394, 397, 398, 399, 400, 418, 419, 420, 421, 422, 423, 425, 426, 428, 430, 431, 451, 530, 531, 569, 572, 574, 576, 578, 581, 582, 589], "arbitrari": [6, 333, 335, 351, 421, 496, 500, 516, 517, 518, 519, 569, 572, 582, 600], "beyond": [6, 24, 351, 355, 529], "make": [6, 9, 13, 14, 15, 16, 23, 27, 29, 30, 31, 32, 35, 36, 37, 41, 43, 45, 126, 129, 134, 306, 307, 309, 310, 311, 319, 321, 322, 323, 325, 327, 328, 329, 333, 334, 335, 338, 340, 348, 351, 352, 353, 354, 357, 423, 424, 427, 429, 431, 447, 499, 563, 569, 576, 580, 581, 582, 589, 593, 594], "divers": [6, 10, 12, 34, 131, 319, 322, 326, 351, 352, 418, 578], "easi": [6, 7, 12, 36, 126, 310, 317, 321, 322, 324, 325, 327, 334, 335, 336, 338, 341, 342, 348, 349, 350, 351, 355, 418, 423, 427, 589], "write": [6, 8, 9, 12, 15, 17, 22, 24, 34, 37, 134, 259, 306, 310, 314, 317, 325, 329, 331, 333, 335, 338, 348, 349, 350, 351, 352, 353, 358, 362, 364, 417, 423, 427, 431, 432, 571, 572, 578, 581, 586, 592, 596], "few": [6, 29, 306, 310, 314, 321, 325, 351, 581], "satisfactori": [6, 351, 354], "major": [6, 12, 13, 14, 329, 352, 359], "recent": [6, 320, 421, 582], "framework": [6, 9, 15, 16, 17, 18, 22, 23, 24, 314, 319, 322, 336, 339, 342, 348, 349, 351, 352, 353, 354, 355, 356, 360, 361, 410, 421, 423, 425, 427, 431, 432, 573, 576, 578, 580, 592, 597, 602], "focu": [6, 41, 134, 325, 349, 353, 356, 427], "hand": [6, 30, 33, 322, 331, 333, 549], "point": [6, 13, 14, 22, 37, 43, 45, 134, 298, 322, 325, 326, 331, 333, 342, 352, 417, 472, 497, 526, 529, 569, 580, 582, 583, 584, 589], "breadth": [6, 360, 434], "first": [6, 13, 14, 15, 16, 17, 19, 20, 24, 29, 35, 37, 45, 126, 129, 130, 134, 173, 183, 212, 299, 300, 306, 307, 311, 314, 317, 322, 323, 324, 325, 327, 329, 331, 333, 334, 335, 339, 343, 344, 348, 350, 351, 353, 354, 360, 361, 417, 418, 423, 425, 427, 431, 434, 438, 468, 484, 487, 496, 509, 512, 523, 524, 525, 526, 527, 530, 563, 568, 569, 572, 575, 576, 578, 581, 582, 583, 584], "search": [6, 37, 311, 319, 325, 328, 339, 349, 352, 354, 356, 360, 434, 598], "pagerank": [6, 8, 9, 13, 17, 22, 33, 34, 37, 317, 349, 352, 355, 357, 360, 361, 434, 572, 575, 580, 592], "shortest": [6, 7, 19, 24, 311, 322, 329, 350, 352, 360, 434, 584], "leav": [6, 320, 335, 431, 469, 479], "varieti": [6, 12, 34, 317, 320, 349, 356, 394], "suffer": [6, 317], "effici": [6, 9, 12, 13, 16, 18, 23, 34, 131, 306, 310, 311, 314, 317, 319, 325, 326, 328, 331, 334, 335, 338, 339, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 364, 421, 423, 425, 502, 523, 580, 581, 583, 585], "limit": [6, 9, 13, 22, 47, 131, 134, 307, 312, 314, 321, 325, 326, 327, 328, 329, 331, 336, 339, 352, 353, 354, 356, 357, 576, 595, 600], "phase": [6, 16, 23, 24, 134, 325, 418, 423], "propag": [6, 7, 9, 14, 36, 349, 350, 352, 354, 360, 423, 441, 531], "short": [6, 351, 356, 357, 449, 581, 582], "isvp": 6, "until": [6, 9, 14, 17, 24, 27, 30, 134, 212, 300, 325, 333, 335, 354, 428, 488, 511, 582, 600], "updat": [6, 9, 12, 14, 15, 17, 20, 24, 27, 29, 32, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 134, 154, 180, 205, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 303, 306, 333, 338, 339, 349, 352, 354, 356, 424, 427, 569, 578, 582, 592, 593], "Such": [6, 13, 308, 353, 356, 391, 396, 528, 537], "abstract": [6, 43, 317, 338, 342, 345, 349, 350, 351, 417, 418, 425, 427, 428, 583], "bring": [6, 41, 325], "product": [6, 12, 32, 126, 134, 314, 342, 349, 353, 356, 362, 418, 419, 423, 589, 600], "sacrific": 6, "almost": [6, 22, 335, 504, 581], "infeas": 6, "kind": [6, 9, 12, 13, 15, 27, 33, 34, 129, 131, 306, 314, 320, 335, 346, 348, 350, 351, 356, 359, 361, 421, 423, 427, 428, 566, 575, 580, 582, 584, 585, 593, 595, 599], "At": [6, 12, 14, 15, 20, 34, 37, 45, 212, 322, 334, 335, 418, 428, 582, 584], "advanc": [6, 7, 15, 45, 322, 325, 341, 342, 351, 515], "pose": 6, "challeng": [6, 9, 300, 311, 316, 349, 581, 582], "repres": [6, 9, 12, 15, 128, 130, 131, 300, 304, 311, 317, 322, 326, 328, 331, 335, 339, 341, 342, 345, 348, 349, 350, 351, 352, 354, 357, 359, 360, 361, 368, 395, 418, 419, 420, 421, 423, 427, 429, 431, 475, 508, 516, 517, 518, 519, 520, 528, 535, 538, 542, 550, 559, 561, 563, 564, 569, 573, 576, 581, 582], "non": [6, 9, 27, 134, 333, 356, 359, 362, 420, 458, 459, 479, 498, 500, 503, 527, 531, 538, 556, 569, 570], "ones": [6, 9, 298, 355, 360, 425], "distil": 6, "critic": [6, 13, 128, 339, 360], "context": [6, 15, 17, 18, 20, 27, 31, 46, 47, 67, 75, 94, 95, 106, 110, 121, 126, 129, 131, 307, 311, 326, 331, 351, 353, 360, 362, 367, 368, 369, 375, 376, 391, 396, 399, 400, 402, 411, 414, 427, 431, 434, 559, 574, 576, 581, 589, 592], "fall": 6, "meet": [6, 15, 18, 29, 37, 306, 317, 322, 324, 342, 349, 354, 421, 422, 488, 517, 518, 519, 584, 586], "therefor": [6, 12, 15, 317, 322, 324, 328, 329, 331, 333, 335, 339, 350, 417, 418, 423, 515, 581, 590], "fulfil": [6, 15, 18, 310, 351], "ligra": 6, "By": [6, 13, 17, 20, 30, 36, 45, 128, 130, 132, 307, 309, 314, 317, 320, 325, 331, 333, 335, 336, 341, 348, 352, 354, 355, 418, 419, 434, 569, 578, 581, 589, 590], "must": [6, 13, 24, 27, 30, 37, 54, 128, 129, 130, 131, 142, 228, 311, 314, 321, 333, 335, 349, 359, 361, 370, 418, 419, 421, 422, 423, 431, 433, 434, 447, 486, 488, 496, 499, 509, 511, 513, 516, 518, 520, 528, 531, 567, 569, 571, 575, 581, 582], "race": 6, "schedul": [6, 23, 36, 68, 128, 331, 349, 351, 576], "do": [6, 15, 16, 18, 20, 29, 30, 31, 33, 35, 37, 41, 46, 173, 259, 314, 320, 321, 322, 323, 325, 328, 329, 331, 335, 348, 359, 360, 361, 378, 394, 419, 431, 488, 500, 512, 516, 526, 529, 547, 563, 569, 572, 575, 576, 580, 581, 582, 586, 589], "so": [6, 12, 13, 30, 37, 41, 129, 131, 212, 300, 309, 311, 314, 321, 322, 324, 326, 330, 334, 335, 339, 342, 344, 348, 349, 351, 360, 364, 417, 423, 425, 444, 479, 484, 497, 498, 499, 502, 517, 518, 519, 530, 563, 569, 581, 582, 596], "middlewar": 6, "flashwar": 6, "hide": [6, 317], "automat": [6, 9, 12, 14, 34, 46, 128, 130, 310, 320, 321, 322, 325, 327, 331, 334, 338, 348, 349, 352, 353, 354, 356, 361, 429, 431, 569, 582, 584, 585, 602], "adapt": [6, 22, 128, 306, 310, 322, 325, 354, 356, 357, 584, 585], "70": [6, 15, 600], "40": [6, 15, 357, 419, 420, 422, 496, 562], "commonli": [6, 128, 311, 320, 325, 329, 333, 338, 342, 348], "now": [6, 7, 20, 23, 27, 45, 126, 129, 212, 300, 307, 310, 321, 323, 325, 326, 328, 329, 334, 335, 341, 360, 427, 500, 582, 584, 597], "succinct": [6, 331], "interfac": [6, 9, 11, 12, 17, 18, 19, 22, 23, 34, 43, 45, 133, 134, 212, 300, 314, 317, 319, 322, 325, 335, 336, 337, 339, 342, 349, 352, 353, 354, 355, 356, 359, 364, 419, 420, 421, 423, 424, 425, 426, 569, 576, 582, 586], "help": [6, 9, 12, 13, 16, 17, 32, 37, 38, 45, 126, 307, 311, 328, 331, 333, 335, 346, 348, 352, 353, 427, 431, 581, 583, 589, 593], "demonstr": [6, 16, 129, 306, 321, 322, 325, 326, 338, 343, 345, 349, 350, 352, 354, 356, 361, 417, 429, 431, 576, 581, 582], "up": [6, 13, 20, 23, 37, 126, 134, 307, 328, 333, 335, 338, 340, 342, 355, 362, 427, 430, 468, 472, 496, 563, 581, 582, 599], "92": [6, 434], "bulk": [6, 15, 45, 129, 130, 173, 174, 212, 259, 300, 303], "bsp": [6, 15], "paradigm": [6, 15, 338, 342, 349, 417, 423], "primari": [6, 15, 129, 130, 131, 136, 143, 152, 153, 154, 157, 158, 166, 205, 212, 222, 229, 238, 239, 240, 243, 244, 252, 259, 291, 301, 303, 310, 311, 312, 326, 331, 349, 356, 582], "constitut": [6, 345, 348], "superstep": [6, 16, 17, 24, 362], "vertexsubset": [6, 15], "indic": [6, 13, 24, 37, 38, 130, 131, 134, 275, 310, 321, 335, 348, 351, 352, 353, 357, 368, 418, 420, 423, 431, 475, 478, 488, 491, 492, 493, 494, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 516, 517, 518, 519, 520, 523, 524, 525, 529, 559, 561, 564, 566, 571, 581], "maintain": [6, 10, 14, 35, 36, 130, 134, 311, 331, 333, 349, 352, 353, 582], "onc": [6, 12, 15, 17, 20, 24, 27, 29, 30, 34, 36, 131, 322, 323, 326, 339, 360, 362, 419, 420, 423, 429, 431, 432, 434, 464, 569, 576, 582, 589], "describ": [6, 27, 36, 37, 38, 44, 45, 131, 132, 134, 306, 314, 321, 323, 335, 339, 340, 349, 353, 354, 361, 418, 421, 423, 428, 429, 468, 472, 488, 489, 490, 493, 498, 500, 501, 526, 527, 540, 547, 549, 563, 565, 566, 577, 580, 581, 582, 590, 595], "vsize": [6, 15], "size_t": [6, 13, 313, 359, 362, 428, 578, 581], "vertexmap": [6, 13, 15, 46, 105, 184, 212, 270, 301, 313], "condit": [6, 9, 14, 24, 27, 38, 128, 322, 325, 335, 342, 351, 353, 357, 488, 517, 518, 519, 527, 528, 581], "f": [6, 20, 33, 45, 129, 306, 311, 321, 323, 341, 346, 347, 350, 423, 434, 521, 522, 568, 582, 590, 596], "output": [6, 14, 17, 24, 27, 29, 30, 34, 38, 126, 133, 183, 269, 307, 317, 320, 321, 323, 326, 328, 331, 333, 335, 339, 341, 342, 345, 349, 350, 354, 357, 359, 388, 396, 404, 417, 423, 425, 429, 431, 432, 516, 518, 520, 561, 573, 575, 582, 592, 593, 596, 601], "form": [6, 20, 121, 322, 330, 331, 333, 335, 339, 342, 353, 354, 360, 417, 419, 420, 423, 470, 490, 520, 535, 537, 540, 543, 547, 569, 575], "special": [6, 20, 310, 312, 325, 335, 349, 418, 537, 553, 563, 586], "m": [6, 7, 9, 18, 20, 23, 27, 28, 30, 31, 32, 35, 45, 128, 134, 320, 321, 322, 323, 324, 335, 341, 350, 360, 361, 434, 444, 475, 479, 481, 492, 498, 500, 502, 504, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 548, 557, 561, 562, 566, 569, 582, 592], "omit": [6, 311, 348, 361, 442, 583, 602], "filter": [6, 15, 23, 128, 322, 325, 336, 348, 353, 360, 361, 561, 575, 581, 600], "semant": [6, 322, 342, 422, 581], "unchang": 6, "edgemap": [6, 15, 46, 105, 184, 212, 270, 301], "sourc": [6, 7, 8, 9, 14, 15, 18, 22, 23, 24, 29, 33, 36, 37, 38, 44, 45, 67, 77, 125, 127, 131, 134, 152, 158, 160, 212, 238, 244, 246, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 312, 313, 314, 320, 321, 323, 324, 328, 329, 331, 335, 339, 340, 342, 348, 350, 352, 353, 354, 356, 359, 360, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 414, 416, 419, 420, 421, 422, 423, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 573, 575, 576, 578, 580, 581, 582, 584, 589, 592, 593, 594, 600, 602], "satisfi": [6, 9, 24, 32, 310, 324, 335, 353, 356, 360, 364, 428, 434, 486, 516, 520, 527, 528, 586], "h": [6, 9, 15, 16, 20, 36, 41, 306, 326, 339, 340, 357, 368, 434, 445, 448, 469, 496, 500, 516, 561, 568, 569, 581, 593, 598], "conduct": [6, 15, 335, 357, 423], "allow": [6, 11, 12, 20, 22, 24, 27, 30, 36, 43, 128, 129, 131, 134, 212, 300, 301, 307, 309, 310, 311, 317, 320, 321, 322, 325, 328, 329, 331, 333, 335, 336, 337, 338, 342, 348, 349, 350, 352, 353, 354, 355, 356, 418, 423, 493, 498, 500, 503, 508, 511, 516, 561, 569, 578, 581, 586, 589], "dynam": [6, 12, 34, 306, 308, 310, 322, 338, 349, 351, 352, 354, 360, 371, 384, 489, 490, 572, 578, 582], "even": [6, 8, 20, 128, 322, 328, 335, 351, 352, 425, 431, 434, 498, 508, 526, 528, 529, 569, 581], "virtual": [6, 9, 23, 131, 300, 324, 328, 350, 359, 427, 428], "gener": [6, 9, 13, 14, 17, 27, 34, 41, 45, 46, 82, 83, 125, 127, 131, 134, 212, 302, 305, 306, 311, 317, 319, 322, 325, 326, 330, 331, 333, 335, 339, 342, 348, 349, 350, 351, 352, 354, 360, 369, 417, 418, 419, 423, 429, 431, 433, 434, 569, 570, 574, 576, 578, 580, 581, 582, 583, 584, 590], "index": [6, 12, 13, 31, 45, 55, 129, 130, 159, 173, 212, 245, 259, 300, 306, 313, 319, 339, 342, 348, 354, 359, 360, 361, 419, 420, 428, 431, 433, 434, 443, 467, 468, 498, 500, 501, 502, 504, 581, 598, 602], "pre": [6, 29, 32, 314, 322, 325, 335, 341, 345, 350, 353, 576, 595], "conveni": [6, 29, 300, 314, 321, 328, 335, 339, 351, 423, 567, 569, 582], "revers": [6, 20, 329, 335, 377, 380, 433, 434, 512, 520, 569], "exchang": [6, 14], "chosen": [6, 498, 505, 506, 507, 508, 509, 520, 524, 564], "temporari": 6, "sequenti": [6, 12, 14, 18, 34, 36, 349, 467, 468, 504, 581, 586, 592], "pull": [6, 12, 14, 27, 29, 32, 34, 38, 45, 314, 321, 352, 424, 427, 576, 582, 594], "mode": [6, 15, 27, 32, 36, 45, 126, 128, 132, 309, 314, 325, 326, 334, 343, 346, 348, 359, 360, 361, 410, 417, 421, 427, 429, 431, 571, 576, 582, 586, 590, 602], "push": [6, 12, 34, 37, 128, 312, 322, 325, 352, 427], "anoth": [6, 9, 10, 20, 36, 131, 309, 322, 333, 335, 348, 349, 350, 354, 362, 498, 531, 569, 581, 584, 585], "final": [6, 9, 13, 14, 17, 19, 24, 173, 212, 300, 320, 322, 328, 335, 339, 344, 349, 353, 359, 417, 423, 425, 511, 531, 569, 582, 583], "reduc": [6, 9, 13, 14, 15, 17, 310, 322, 325, 328, 334, 342, 418, 421, 517, 518, 519, 569, 582], "commut": 6, "alwai": [6, 45, 335, 344, 361, 465, 466, 505, 507, 526, 529, 563, 581, 589], "ctrue": 6, "doe": [6, 11, 12, 13, 20, 34, 37, 47, 75, 94, 95, 106, 134, 174, 189, 259, 260, 275, 309, 310, 325, 333, 342, 348, 351, 353, 356, 420, 423, 428, 434, 453, 454, 496, 498, 500, 515, 526, 569, 571, 576, 581], "sometim": [6, 27, 335, 348, 479, 539], "similarli": [6, 19, 20, 131, 306, 309, 323, 335, 352, 434, 472, 498, 500, 516, 519, 526, 569, 590], "suppli": [6, 314, 331, 518], "edgeset": 6, "d": [6, 9, 15, 17, 19, 20, 134, 321, 325, 326, 335, 360, 421, 423, 426, 429, 434, 444, 489, 490, 498, 500, 501, 503, 504, 505, 507, 512, 516, 517, 518, 519, 520, 523, 560, 569, 571, 576], "auxiliari": [6, 15, 16, 335], "union": [6, 431, 497, 597], "minu": [6, 333, 472], "intersect": [6, 325, 353, 570], "add": [6, 15, 19, 20, 23, 29, 33, 37, 154, 205, 212, 240, 259, 291, 300, 301, 303, 307, 314, 320, 329, 333, 335, 348, 350, 359, 362, 369, 370, 379, 418, 429, 431, 436, 437, 438, 488, 495, 508, 526, 529, 531, 547, 569, 572, 576, 581, 582, 593, 596, 597, 602], "getv": [6, 322, 325], "besid": [6, 10, 38, 325, 329, 428, 429, 582], "combin": [6, 14, 18, 34, 131, 319, 322, 325, 335, 338, 349, 350, 353, 417, 418, 419, 423, 569, 576, 585, 592], "primit": [6, 351], "natur": [6, 12, 13, 24, 131, 317, 331, 335], "multi": [6, 31, 132, 319, 331, 335, 338, 339, 342, 349, 351, 353, 354, 355, 356, 360, 421, 423, 425, 578, 582], "tradit": [6, 322, 325, 328, 330, 331, 354, 546], "awkward": 6, "supplement": 6, "perspect": [6, 24, 351], "whole": [6, 9, 12, 24, 34, 310, 321, 322, 335, 339, 349, 351, 353, 354, 425, 580, 582, 585], "pick": [6, 335, 357, 511, 526, 529], "transfer": [6, 317, 319, 338, 353, 355, 600], "intuit": [6, 310, 322, 331, 338, 353, 576], "sever": [6, 9, 15, 17, 20, 23, 30, 33, 36, 37, 38, 47, 57, 82, 84, 310, 319, 322, 329, 335, 338, 339, 342, 348, 349, 352, 354, 355, 357, 361, 417, 423, 425, 427, 428, 434, 475, 569, 575, 576, 581], "shown": [6, 7, 9, 10, 12, 15, 16, 18, 24, 27, 34, 130, 134, 322, 324, 335, 341, 342, 352, 354, 357, 418, 419, 420, 423, 429], "input": [6, 9, 12, 13, 15, 17, 22, 24, 45, 76, 124, 129, 130, 133, 154, 156, 173, 205, 208, 212, 240, 242, 259, 291, 294, 300, 303, 311, 317, 325, 339, 341, 342, 345, 348, 349, 350, 353, 354, 360, 379, 383, 404, 417, 418, 419, 420, 421, 423, 426, 429, 432, 434, 502, 516, 518, 520, 526, 527, 561, 569, 572, 573, 576, 581, 582, 596, 601], "second": [6, 13, 27, 130, 306, 310, 311, 317, 329, 335, 339, 348, 353, 356, 357, 361, 425, 514, 515, 523, 524, 525, 526, 530, 568, 569, 576, 582, 583], "fundament": [6, 9, 131, 322, 351], "modul": [6, 8, 9, 15, 19, 20, 23, 134, 319, 322, 326, 328, 333, 338, 346, 349, 350, 351, 353, 354, 430, 568, 598], "produc": [6, 38, 41, 129, 322, 325, 326, 357, 360, 369, 417, 429, 431, 432, 434, 488, 502, 504, 512, 573, 582], "abil": [6, 12, 34, 328, 331, 335, 342, 349, 582], "activ": [6, 9, 23, 24, 30, 275, 306, 311, 324, 325, 344, 350, 354, 429, 576, 582], "dens": [6, 339, 352, 354, 420, 429], "spars": [6, 13, 339, 354, 417, 420, 496, 569, 572], "dispatch": [6, 34, 349, 359], "kernel": [6, 505], "auto": [6, 14, 16, 34, 306, 313, 335, 362, 578, 581, 583], "switch": [6, 12, 23, 34, 126, 129, 134, 212, 300, 306, 307, 325, 334, 352, 526, 529, 581, 582, 589], "prove": [6, 24, 561], "world": [6, 9, 13, 317, 325, 333, 335, 349, 350, 352, 359, 434, 489, 490, 516], "dual": 6, "edgemapdens": 6, "edgemapspars": 6, "instead": [6, 13, 16, 20, 23, 30, 37, 131, 212, 328, 333, 335, 348, 351, 419, 420, 421, 427, 428, 431, 495, 502, 507, 515, 516, 520, 526, 569, 575, 578, 581], "co": [6, 23, 317, 350, 418, 596], "lead": [6, 17, 24, 128, 314, 325, 335, 354, 498, 500], "broadcast": [6, 359, 581], "mirror": [6, 7, 10, 24, 27, 32, 324, 340, 341], "On": [6, 27, 30, 37, 310, 322, 331, 333, 360, 503, 566, 581], "contrari": 6, "total": [6, 8, 12, 34, 306, 311, 317, 322, 323, 324, 334, 335, 346, 362, 444, 488, 511, 528, 534, 569, 582, 583, 596], "4": [6, 9, 10, 13, 17, 19, 20, 22, 27, 31, 128, 134, 154, 240, 299, 303, 306, 307, 312, 314, 322, 323, 325, 327, 330, 331, 333, 334, 335, 346, 347, 350, 357, 368, 417, 419, 420, 422, 423, 424, 434, 440, 445, 447, 448, 453, 454, 472, 474, 475, 484, 492, 495, 497, 504, 513, 515, 520, 529, 536, 539, 540, 546, 547, 553, 555, 562, 563, 564, 569, 571, 572, 576, 581, 582, 583, 584, 585, 592, 595, 596, 600], "redund": 6, "programm": [6, 17, 349, 364], "scope": [6, 23, 37, 325, 351, 431], "disabl": [6, 31, 134, 323, 328, 357, 576, 582], "develop": [6, 8, 9, 11, 12, 14, 24, 29, 34, 37, 43, 128, 212, 300, 307, 310, 312, 317, 322, 323, 325, 330, 331, 335, 336, 337, 338, 339, 340, 349, 352, 353, 354, 356, 364, 421, 423, 424, 425, 427, 488, 581, 589], "katz": [6, 360, 434], "eigenvector": [6, 360, 434, 561], "harmon": 6, "coeffici": [6, 19, 360, 434], "fluid": 6, "version": [6, 15, 17, 18, 20, 23, 27, 29, 37, 46, 103, 128, 131, 132, 167, 212, 253, 309, 314, 324, 325, 328, 331, 333, 334, 341, 349, 351, 356, 357, 360, 424, 431, 489, 490, 505, 507, 520, 526, 547, 569, 578, 580, 581, 582, 589, 592, 595], "color": [6, 19, 20, 335, 569], "biconnect": 6, "bridg": [6, 319, 351], "seven": [6, 429, 468], "strongli": [6, 36, 45, 324, 328, 335, 423, 508], "cut": [6, 12, 24, 554], "k": [6, 20, 37, 240, 291, 311, 313, 323, 335, 339, 349, 350, 351, 353, 360, 361, 421, 434, 471, 479, 489, 490, 491, 492, 494, 496, 497, 498, 505, 508, 517, 518, 519, 521, 524, 525, 526, 527, 528, 529, 534, 569, 575, 581, 596, 600], "decomposit": [6, 325, 350, 434], "degeneraci": 6, "onion": 6, "minim": [6, 11, 45, 325, 352, 429, 520, 521, 542, 568], "domin": [6, 434, 581], "cycl": [6, 351, 353, 356, 359, 436, 472, 473, 476, 487, 509, 513, 534, 536, 552, 556], "triangl": [6, 33, 325, 335, 350, 353, 360, 434, 531, 535, 539, 543, 555, 570, 592, 596], "acycl": [6, 351, 563], "cyclic": [6, 325, 349, 351, 353, 476], "diamond": [6, 539], "rectangl": 6, "tail": [6, 306, 321, 328, 333, 335, 351, 590], "approxim": [6, 325, 488, 561], "densest": 6, "articlerank": 6, "hyperlink": [6, 360, 434], "induc": [6, 331, 333, 360, 382, 445, 448, 464, 512, 569], "topic": [6, 7, 324, 341, 350, 360, 582], "person": [6, 7, 30, 33, 45, 129, 130, 131, 154, 173, 180, 205, 212, 240, 259, 267, 291, 300, 306, 311, 321, 324, 325, 328, 331, 333, 335, 348, 350, 431, 549, 558, 569, 572, 575, 580, 581, 582, 583, 597, 602], "standard": [6, 35, 43, 307, 309, 319, 322, 325, 335, 336, 348, 351, 432, 502, 517, 518, 519, 581], "diamet": 6, "span": [6, 20], "forest": 6, "center": [6, 335, 484, 487, 512], "four": [6, 9, 12, 20, 345, 350, 351, 359, 417, 420, 429, 516, 520, 581], "random": [6, 28, 31, 342, 344, 349, 357, 421, 422, 423, 426, 429, 470, 481, 488, 491, 492, 493, 494, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 529, 561, 564, 566, 568, 576], "give": [7, 12, 13, 31, 34, 130, 180, 324, 335, 341, 348, 357, 423, 431, 496, 516, 536, 568, 569], "quick": [7, 324, 341, 599], "ll": [7, 13, 20, 29, 129, 130, 341], "python3": [7, 23, 27, 28, 30, 31, 32, 35, 36, 41, 45, 132, 134, 300, 314, 323, 324, 341, 346, 350, 592, 593, 594, 595], "pip": [7, 27, 30, 31, 32, 132, 133, 309, 314, 321, 324, 341, 350, 427, 582, 595, 599], "upgrad": [7, 23, 32, 324, 341, 599], "occur": [7, 9, 14, 32, 134, 314, 326, 333, 341, 582], "veri": [7, 13, 32, 129, 317, 322, 324, 335, 338, 341, 348, 350, 354, 419, 421, 592], "speed": [7, 32, 310, 312, 335, 340, 341, 351, 430, 496, 569], "try": [7, 17, 23, 29, 32, 36, 41, 46, 47, 67, 75, 94, 95, 106, 110, 121, 183, 212, 303, 306, 312, 314, 317, 324, 325, 334, 340, 341, 344, 345, 350, 358, 360, 447, 488, 572, 576, 596], "site": [7, 32, 324, 341], "aliyun": [7, 27, 32, 324, 340, 341, 357, 576, 593], "pypi": [7, 27, 32, 314, 324, 327, 341, 595], "trust": [7, 27, 32, 324, 341], "host": [7, 15, 17, 22, 23, 27, 28, 32, 45, 46, 47, 67, 75, 94, 95, 102, 106, 110, 121, 126, 128, 130, 205, 291, 298, 309, 317, 323, 324, 328, 334, 341, 348, 357, 359, 360, 361, 572, 576, 580, 592, 600, 602], "packag": [7, 8, 11, 17, 18, 20, 22, 23, 27, 29, 30, 36, 45, 46, 126, 132, 134, 212, 300, 309, 314, 320, 321, 324, 325, 341, 350, 427, 516, 518, 569, 572, 582, 589, 594], "everyth": [7, 341, 350, 581], "job": [7, 13, 23, 45, 46, 95, 173, 174, 212, 259, 260, 300, 301, 303, 317, 320, 322, 341, 349, 350, 351, 355, 359, 394, 418, 576, 582], "modern_graph": [7, 30, 33, 45, 129, 130, 134, 173, 212, 300, 321, 324, 350, 583, 589], "gremlin": [7, 29, 33, 108, 134, 212, 314, 317, 320, 321, 322, 323, 324, 325, 326, 332, 336, 339, 342, 349, 350, 351, 355, 356, 358, 388, 423, 432, 576, 590, 595, 596, 598, 603], "apach": [7, 17, 22, 23, 31, 319, 325, 331, 334, 337, 338, 349, 350, 353, 580, 586, 592, 594, 598], "tinkerpop": [7, 307, 317, 319, 321, 323, 324, 334, 338, 350, 351, 432, 598], "org": [7, 17, 23, 46, 212, 306, 307, 314, 327, 334, 341, 344, 345, 346, 350, 352, 360, 434, 492, 493, 494, 508, 511, 518, 531, 535, 536, 537, 538, 540, 541, 542, 548, 549, 550, 551, 553, 554, 555, 556, 561, 592, 595, 596, 600], "doc": [7, 16, 17, 30, 37, 45, 46, 126, 127, 305, 350, 351, 359, 363, 365, 431, 518, 599], "tutori": [7, 8, 12, 14, 24, 29, 321, 323, 324, 332, 338, 343, 348, 350, 352, 354, 429, 518, 586], "trigger": [7, 14, 15, 18, 37, 342, 350, 370, 584], "ret": [7, 18, 334, 350, 592, 597], "selector": [7, 15, 33, 38, 350, 359, 361, 369, 375, 376, 386, 387, 391, 399, 400, 431, 574, 576, 580, 592, 597], "homogen": [7, 339, 348, 350, 354, 419], "pg": [7, 350, 360, 576, 580, 581], "none": [7, 9, 20, 27, 31, 121, 128, 173, 275, 298, 299, 303, 329, 344, 346, 347, 348, 350, 360, 361, 368, 375, 376, 379, 382, 386, 387, 388, 389, 391, 394, 396, 399, 400, 404, 410, 412, 416, 417, 418, 423, 431, 432, 433, 434, 442, 446, 448, 449, 453, 454, 463, 464, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 561, 563, 564, 566, 569, 571, 572, 573, 576, 580, 581, 597, 601, 602], "know": [7, 8, 30, 33, 38, 45, 129, 130, 131, 154, 173, 212, 240, 259, 267, 300, 321, 325, 332, 333, 335, 343, 348, 350, 353, 418, 419, 427, 431, 580, 582, 583, 597, 600, 602], "src": [7, 13, 15, 16, 17, 18, 30, 34, 154, 212, 240, 301, 313, 317, 320, 325, 331, 334, 341, 342, 345, 348, 350, 360, 361, 368, 417, 419, 431, 575, 578, 581, 584, 592, 596, 601, 602], "our": [7, 12, 13, 17, 32, 34, 36, 37, 41, 45, 129, 130, 131, 134, 307, 317, 322, 325, 329, 331, 340, 350, 352, 353, 354, 356, 357, 358, 424, 425, 434, 582, 584, 592], "learn": [7, 27, 32, 36, 37, 38, 41, 45, 317, 322, 324, 338, 342, 343, 344, 346, 351, 352, 355, 358, 412, 418, 421, 422, 423, 424, 427, 429, 574, 576, 596, 598], "technic": [7, 341, 425, 563, 569], "disaggreg": [7, 36], "deploy": [7, 29, 30, 33, 46, 75, 128, 309, 312, 314, 317, 323, 335, 349, 355, 419, 429, 576, 582], "scale": [7, 11, 12, 13, 20, 23, 27, 34, 37, 310, 317, 321, 323, 325, 330, 334, 335, 336, 338, 339, 349, 350, 351, 352, 354, 355, 356, 419, 421, 423, 425, 430, 498, 509, 516, 568, 581], "usag": [7, 17, 29, 31, 32, 36, 37, 44, 75, 102, 132, 133, 309, 326, 333, 335, 336, 340, 341, 342, 361, 420, 421, 422, 426, 431, 488, 569, 576, 582, 583], "section": [8, 13, 27, 29, 128, 130, 131, 132, 320, 325, 332, 335, 339, 343, 349, 423, 424, 431, 468, 581, 582], "assum": [8, 23, 27, 30, 300, 306, 321, 332, 335, 343, 350, 418, 431, 467, 528, 567, 569, 576, 580, 581, 596], "getting_start": [8, 309, 332, 343], "most": [8, 9, 13, 15, 22, 33, 38, 45, 134, 310, 314, 322, 325, 328, 329, 333, 335, 339, 348, 350, 352, 354, 356, 357, 361, 417, 419, 423, 425, 427, 431, 489, 490, 514, 517, 518, 519, 580, 582], "suffici": [8, 17, 314, 331, 349, 418], "louvain": [8, 352, 360, 592], "social": [8, 131, 317, 323, 335, 349, 352, 354, 357, 496, 546, 561, 570], "scientist": [8, 338, 356], "familiar": [8, 14, 16, 29, 322], "manipul": [8, 11, 19, 20, 310, 335, 338, 353, 356, 358, 359, 569], "invok": [8, 9, 12, 14, 15, 17, 24, 34, 212, 300, 310, 311, 329, 348, 359, 421, 422, 426, 576, 592], "pydata": [8, 355], "eco": 8, "still": [8, 24, 27, 34, 38, 134, 317, 325, 335, 352, 447, 576, 581, 582], "directli": [8, 12, 20, 24, 30, 32, 34, 36, 37, 38, 46, 183, 269, 306, 309, 310, 317, 325, 328, 329, 331, 333, 335, 337, 339, 342, 348, 354, 359, 418, 421, 423, 424, 425, 426, 561, 569, 572, 576, 582, 586], "migrat": [8, 322, 341, 344, 345, 350, 351, 356, 578, 596], "transpar": [8, 349], "don": [8, 17, 23, 30, 33, 36, 37, 314, 321, 335, 370, 463, 569, 582], "autom": [9, 29, 351], "abl": [9, 24, 27, 212, 300, 321, 351, 422, 526, 581, 582], "batch": [9, 12, 19, 47, 67, 130, 323, 334, 339, 342, 346, 347, 351, 354, 417, 420, 422, 423, 425, 427, 429, 433, 582, 601], "counterpart": [9, 338, 351], "redesign": [9, 351], "underli": [9, 43, 317, 322, 325, 335, 351, 425, 581], "equip": [9, 325, 337, 338, 351, 357, 586], "polici": [9, 309, 314, 351, 359, 576], "memori": [9, 12, 23, 24, 27, 34, 75, 128, 130, 131, 310, 314, 317, 319, 331, 334, 338, 340, 343, 344, 346, 349, 351, 352, 354, 355, 356, 357, 417, 418, 419, 425, 429, 431, 569, 576, 582, 585, 594, 595], "todai": 9, "static": [9, 16, 31, 154, 173, 174, 180, 183, 189, 205, 212, 259, 302, 304, 306, 325, 326, 334, 359, 584], "recomput": 9, "costli": [9, 331], "consum": [9, 314, 325, 354, 425, 428], "especi": [9, 306, 348], "trillion": 9, "commerc": [9, 349, 352], "constantli": 9, "issu": [9, 17, 32, 37, 128, 134, 306, 314, 317, 321, 324, 325, 334, 351, 352, 356, 492, 493, 494, 558, 595], "involv": [9, 13, 37, 41, 310, 317, 322, 325, 331, 335, 339, 342, 349, 352, 353, 354, 355, 356], "adjust": [9, 12, 128, 314, 331], "old": [9, 12, 14, 32, 34, 328, 576], "typic": [9, 24, 45, 126, 128, 310, 317, 331, 333, 335, 349, 352, 353, 356, 418, 423, 498, 569, 575, 581], "often": [9, 37, 131, 310, 317, 321, 334, 349, 352, 353, 354, 356, 419, 420, 423, 569, 582, 590], "overlap": [9, 576], "intervent": 9, "burden": [9, 15, 419], "expert": 9, "light": 9, "overal": [9, 128, 331, 354], "verifi": [9, 27, 38, 275, 317, 321, 323, 325, 329, 357, 423], "characterist": [9, 325, 331, 342, 349, 354, 417, 422], "deduc": [9, 431, 602], "appropri": [9, 27, 41, 130, 131, 322, 325, 326, 339, 349, 354, 417], "record": [9, 13, 134, 300, 310, 311, 321, 324, 327, 328, 335, 350, 428, 578, 582], "part": [9, 13, 37, 134, 317, 322, 333, 339, 342, 351, 423, 424, 427, 429, 552, 569, 580, 581, 582], "intermedi": [9, 12, 17, 322, 335, 338, 349, 351], "deliv": [9, 600], "There": [9, 10, 12, 34, 37, 38, 129, 314, 321, 322, 335, 350, 352, 353, 354, 360, 419, 422, 423, 425, 569, 575, 576, 581, 582], "reshap": [9, 429], "eas": [9, 12, 34, 324, 326, 354, 356, 357], "achiev": [9, 12, 20, 24, 27, 34, 310, 335, 349, 352, 357, 578], "decid": [9, 419, 516], "due": [9, 128, 134, 314, 325, 349, 356, 423], "among": [9, 131, 134, 303, 320, 322, 335, 349, 356, 359, 428, 434, 563], "fetch": [9, 15, 17, 576, 582, 592], "suffic": 9, "replai": [9, 134, 342, 351, 578, 582], "affect": [9, 13, 30, 36, 37, 569], "area": [9, 15, 310, 328, 520, 566], "readili": 9, "obtain": [9, 14, 17, 29, 30, 129, 322, 323, 325, 327, 334, 338, 339, 342, 345, 350, 354, 418, 422, 423, 425, 544, 547, 563, 569, 576, 582], "simpli": [9, 17, 20, 128, 212, 311, 321, 328, 335, 348, 350, 423, 491, 495, 569], "coincid": 9, "idea": [9, 37, 339, 354, 364, 425], "invalid": [9, 154, 205, 240, 259, 291, 326, 431, 576], "miss": [9, 37, 421, 431, 479, 576], "comparison": [9, 19, 320, 329, 333, 335, 338, 356, 357, 361], "those": [9, 29, 131, 310, 311, 321, 323, 328, 329, 331, 335, 348, 358, 421, 431, 434, 445, 474, 476, 478, 569, 571, 575], "although": [9, 12, 14, 22, 34, 134, 183, 212, 269, 300, 317, 325, 350, 364, 468, 581, 582], "solut": [9, 31, 45, 128, 310, 314, 353, 354, 356, 434, 595], "enough": [9, 342, 418, 421, 488, 576, 580], "caus": [9, 14, 22, 32, 37, 314, 334, 341, 354, 419, 425, 431, 468], "overwhelm": 9, "overhead": [9, 13, 356, 418, 419], "mf": 9, "delta": [9, 12, 13, 33, 37, 360, 431], "php": 9, "mp": 9, "cc": [9, 306, 581, 597], "sswp": 9, "mv": [9, 328], "track": 9, "gcn": [9, 338, 342, 354, 358, 417, 421, 425, 429, 596, 598, 601, 603], "commnet": 9, "me": 9, "keep": [9, 333, 335, 342, 362, 423, 431, 526, 529, 582], "graphsag": [9, 338, 342, 346, 350, 354, 358, 417, 421, 423, 425, 429, 598, 601, 603], "gin": [9, 354], "vldb": [9, 592, 598], "paper": [9, 14, 24, 325, 339, 341, 344, 345, 346, 347, 349, 350, 351, 357, 429, 434, 566, 576, 592, 596], "publish": [9, 14, 24, 29, 325, 349, 350], "2021": [9, 351], "denot": [9, 131, 308, 310, 311, 333, 335, 422, 497], "w": [9, 134, 334, 360, 434, 496, 502, 516, 519, 521, 526, 529, 531, 559, 569, 571, 582, 600], "respect": [9, 16, 38, 319, 322, 329, 333, 348, 349, 350, 353, 354, 360, 379, 396, 404, 420, 423, 434, 475, 488, 535, 569, 575, 581, 582], "initi": [9, 16, 18, 19, 126, 128, 130, 134, 306, 307, 323, 325, 335, 346, 347, 352, 354, 359, 418, 419, 429, 431, 433, 434, 508, 510, 511, 569, 572, 580, 582, 586, 592], "init_v": 9, "init_m": 9, "aggreg": [9, 322, 329, 336, 354, 362, 417, 423, 425, 429, 581, 600], "vector": [9, 313, 339, 345, 350, 354, 359, 362, 417, 425, 427, 434, 516, 520], "element": [9, 13, 131, 329, 333, 335, 352, 359, 418, 421, 423, 431, 434, 464, 496, 541, 563, 575, 576, 581], "specifi": [9, 16, 17, 20, 23, 24, 30, 36, 128, 129, 130, 131, 134, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 298, 300, 302, 303, 304, 306, 309, 310, 311, 320, 321, 325, 326, 329, 331, 333, 338, 342, 346, 350, 352, 360, 362, 368, 375, 376, 386, 387, 391, 395, 399, 400, 416, 417, 418, 420, 423, 426, 431, 433, 434, 445, 453, 454, 475, 488, 498, 500, 501, 504, 505, 512, 516, 517, 518, 519, 520, 526, 529, 531, 534, 547, 566, 569, 571, 575, 576, 580, 582, 583, 589], "addition": [9, 12, 14, 36, 131, 325, 328, 329, 339, 345, 349, 351, 353, 356, 425, 434, 581, 582, 590], "correspond": [9, 10, 13, 15, 17, 18, 37, 41, 45, 128, 134, 320, 322, 325, 326, 328, 331, 333, 335, 338, 342, 348, 353, 356, 360, 394, 417, 418, 419, 420, 422, 423, 427, 431, 434, 467, 468, 498, 500, 501, 502, 503, 504, 516, 562, 563, 565, 569, 571, 572, 578, 582, 590], "iteratorkernel": 9, "void": [9, 14, 15, 16, 17, 24, 154, 173, 174, 180, 183, 189, 205, 212, 306, 313, 326, 359, 578, 581, 583, 592], "m1": [9, 314, 324, 470, 595, 599], "m2": [9, 470], "below": [9, 10, 12, 20, 34, 35, 36, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 128, 130, 134, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 320, 325, 326, 333, 342, 349, 350, 352, 353, 354, 357, 418, 421, 423, 426, 429, 468, 498, 500, 534, 569, 576, 582], "ssspkernel": 9, "public": [9, 15, 16, 17, 27, 154, 173, 174, 180, 183, 189, 205, 212, 306, 309, 326, 350, 357, 359, 427, 592, 596], "dbl_max": 9, "backend": [9, 27, 29, 326, 338, 341, 346, 349, 350, 354, 431, 569, 576, 583, 596], "seamless": [9, 317, 325, 355, 582], "block": [9, 309, 314, 322, 331, 420, 496, 582], "spawn": 9, "adopt": [9, 128, 310, 325, 356, 421, 582], "csc": [9, 580], "csr": [9, 13, 130, 313, 431, 580, 583], "sent": [9, 10, 14, 16, 24, 320, 334], "mainten": [9, 581], "preserv": [9, 13, 361, 431, 531, 561], "effect": [9, 36, 37, 45, 310, 317, 325, 333, 334, 342, 349, 354, 421, 500, 569, 582], "readi": [9, 30, 32, 37, 309, 310, 314, 317, 323, 325, 326, 334, 349, 419, 421, 576, 582, 590], "accept": [9, 47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291, 434, 516, 520, 582, 583], "insert": [9, 14, 131, 154, 240, 322, 389, 582], "newli": [9, 41, 212, 300], "particular": [9, 37, 329, 333, 360, 420, 423, 498], "incid": [9, 20, 331, 333, 335, 445, 446, 488, 510, 559, 569], "encod": [9, 13, 133, 212, 301, 326, 329, 331, 360, 418, 423, 429, 431, 433, 571, 601], "dummi": 9, "furthermor": [9, 320, 334, 335, 338, 349, 356], "proprieti": 9, "deduct": 9, "techniqu": [9, 34, 325, 342, 351, 352, 423], "cancel": [9, 95, 174, 176, 260, 303], "compens": 9, "whose": [9, 24, 303, 328, 335, 421, 423, 434, 439, 459, 541, 545, 561, 563, 564, 580, 581], "proce": [9, 134, 306, 488, 582], "inner": [10, 13, 16, 313, 335, 336, 362, 431, 581], "outer": [10, 14, 313, 329, 362, 484, 581], "cross": [10, 331, 364, 544], "f_": 10, "instanc": [10, 15, 23, 27, 28, 29, 30, 33, 38, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 131, 132, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 306, 309, 310, 311, 312, 314, 320, 321, 325, 331, 333, 335, 344, 349, 350, 352, 353, 357, 359, 360, 361, 368, 370, 372, 388, 395, 412, 420, 431, 469, 471, 472, 474, 476, 478, 479, 481, 483, 484, 487, 498, 500, 501, 503, 505, 506, 507, 509, 513, 514, 515, 521, 522, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 564, 571, 576, 581, 589, 590], "5": [10, 13, 19, 20, 31, 128, 134, 303, 314, 323, 325, 330, 333, 335, 341, 342, 344, 345, 346, 347, 350, 353, 357, 417, 420, 422, 423, 424, 426, 429, 434, 440, 445, 447, 453, 472, 475, 488, 492, 493, 494, 496, 497, 505, 507, 514, 515, 516, 517, 519, 520, 534, 535, 537, 538, 539, 540, 542, 543, 546, 548, 550, 552, 553, 559, 564, 569, 575, 576, 582, 584, 590, 595, 596, 600], "9": [10, 31, 154, 240, 321, 324, 325, 333, 335, 350, 418, 434, 472, 474, 520, 538, 546, 559, 564, 599], "12": [10, 20, 32, 205, 291, 314, 324, 335, 357, 360, 418, 419, 420, 422, 424, 436, 437, 438, 474, 536, 537, 541, 545, 549, 555, 593, 595, 599, 600], "split": [10, 130, 325, 333, 335, 344, 345, 346, 347, 418, 419, 576, 582], "roughli": 10, "across": [10, 14, 34, 35, 36, 309, 310, 326, 331, 346, 349, 351, 352, 356, 581, 583], "divid": [10, 212, 301, 329, 333, 335, 339, 349, 360, 418, 421, 425, 426, 434, 580], "place": [10, 18, 19, 36, 130, 321, 325, 335, 427, 428, 431, 496, 516, 517, 518, 519, 520, 549, 567], "itself": [10, 20, 22, 37, 333, 335, 339, 348, 349, 362, 417, 419, 575, 576, 581], "replic": [10, 323, 510], "resid": [10, 14, 38], "j": [10, 31, 134, 313, 360, 429, 434, 467, 468, 489, 490, 498, 500, 501, 503, 509, 520, 523, 524, 525, 547, 581], "outcom": 10, "outgo": [10, 13, 16, 24, 131, 325, 333, 335, 353, 362, 423, 434, 569, 581], "incom": [10, 13, 14, 16, 34, 45, 128, 131, 333, 335, 359, 362, 434], "consid": [10, 15, 18, 27, 37, 300, 325, 335, 342, 352, 360, 361, 418, 419, 434, 498, 561, 578, 581], "vice": [10, 516], "versa": [10, 516], "compani": [10, 581], "syncstateonoutervertexastarget": 10, "certain": [10, 24, 110, 317, 333, 348, 356, 418, 419, 423, 426, 431, 581, 582], "regardless": [10, 329, 351, 418, 514, 581], "friendli": [11, 12, 37, 319, 325, 338, 352, 354, 355, 356], "research": [11, 325, 342, 354, 559, 576], "particularli": [11, 354, 561], "field": [11, 27, 30, 33, 38, 128, 129, 131, 134, 306, 311, 321, 325, 326, 342, 344, 345, 348, 350, 421, 425, 429, 431, 515, 576, 582, 593, 596], "scienc": [11, 523, 546], "solv": [11, 24, 37, 314, 316, 335, 352], "recast": [12, 14, 34], "ga": 12, "plug": [12, 34, 349], "minor": [12, 14, 34, 338, 349, 354, 357, 584], "cope": [12, 34], "life": [12, 32, 34, 321, 349], "extrem": [12, 27, 349, 425, 470, 481, 581], "fashion": [12, 20], "consist": [12, 13, 20, 24, 30, 34, 35, 36, 43, 131, 134, 322, 326, 331, 333, 335, 338, 339, 342, 351, 352, 354, 356, 357, 359, 360, 362, 420, 421, 423, 425, 471, 472, 473, 484, 487, 495, 541, 563, 576, 578, 580, 581, 582, 583], "format": [12, 13, 20, 22, 34, 35, 45, 47, 68, 70, 129, 130, 131, 183, 185, 269, 271, 300, 317, 319, 325, 326, 329, 335, 339, 346, 348, 354, 355, 357, 360, 388, 395, 417, 420, 423, 425, 428, 429, 431, 432, 569, 571, 576, 578, 594], "unifi": [12, 34, 43, 317, 319, 322, 325, 418, 578, 582], "care": [12, 34, 306, 335, 427, 428, 581], "foreign": [12, 581], "ecosystem": [12, 307, 319, 324, 337, 338, 353, 356, 586], "freedom": 12, "accord": [12, 19, 36, 45, 314, 320, 321, 322, 328, 333, 335, 339, 348, 349, 353, 354, 359, 421, 423, 427, 488, 496, 508, 509, 578, 582], "demand": [12, 310, 322, 352, 581, 582, 586], "sdk": [12, 18, 43, 44, 132, 133, 134, 298, 303, 307, 309, 312, 314, 321, 325, 327, 336, 337, 338, 352, 353, 356, 364, 574, 586, 592], "domain": [12, 328, 349, 354, 516, 517, 518, 519, 520], "dedic": [12, 128], "treat": [12, 14, 20, 34, 335, 431, 569, 571, 576, 589], "immut": [12, 34, 134, 319, 331, 351], "persist": [12, 15, 30, 34, 134, 314, 319, 321, 349, 351, 356, 580], "fortun": [12, 20, 129, 306, 317], "grin": [12, 319], "awar": [12, 37, 128, 314, 321, 325, 333, 351], "introduct": [12, 34, 336, 352, 422, 423, 426, 434, 479, 561, 581], "foundat": [12, 312, 349], "visit": [12, 29, 126, 306, 307, 328, 335, 353, 418], "meanwhil": [12, 317, 338, 354, 581], "compress": [12, 13, 350, 360, 418, 534], "pipelin": [12, 34, 338, 349, 352, 356, 585], "balanc": [12, 419, 469], "link": [12, 31, 37, 38, 131, 314, 316, 322, 325, 331, 339, 354, 357, 360, 431, 434, 471, 492, 494, 495, 505, 506, 507, 566, 569, 576], "popular": [12, 22, 29, 308, 317, 348, 350, 353, 354, 417, 429, 582], "freeli": [12, 24], "background": [12, 316], "interoper": [12, 581], "panda": [12, 317, 328, 359, 361, 375, 386, 431, 569, 598], "mar": [12, 27, 317, 333, 351, 576], "fastffi": [12, 364], "via": [12, 14, 17, 18, 20, 22, 23, 24, 27, 32, 43, 46, 128, 134, 212, 300, 306, 307, 309, 310, 314, 321, 325, 326, 329, 330, 331, 333, 336, 337, 338, 349, 351, 353, 356, 359, 470, 481, 488, 564, 567, 569, 582, 586, 592], "emploi": [12, 24, 34, 134, 325, 331, 345, 351, 352], "captur": [12, 354], "20": [12, 13, 27, 29, 32, 34, 321, 324, 333, 335, 338, 357, 360, 361, 419, 420, 422, 431, 488, 516, 517, 538, 540, 569, 582, 592, 593, 599, 600], "100": [12, 34, 134, 328, 335, 341, 344, 345, 350, 360, 429, 434, 491, 498, 502, 509, 518, 569, 576, 582, 596, 600], "been": [12, 17, 23, 24, 28, 29, 33, 37, 45, 134, 212, 300, 306, 311, 314, 320, 322, 323, 324, 325, 328, 333, 335, 337, 339, 349, 351, 352, 353, 354, 356, 360, 409, 421, 423, 431, 432, 434, 488, 511, 561, 573, 586], "go": [13, 340, 429, 496, 549, 582], "impact": [13, 353], "dive": 13, "arrowfrag": [13, 16, 359, 583], "vineyard": [13, 15, 16, 23, 28, 31, 33, 313, 314, 319, 321, 331, 338, 343, 344, 349, 355, 356, 359, 361, 391, 396, 399, 400, 431, 432, 576, 581, 582, 590, 592, 595, 596, 597, 600, 602], "basic": [13, 16, 20, 45, 129, 130, 134, 325, 353, 417, 420, 425, 427, 428, 429, 488, 498, 503, 575], "member": [13, 16, 333, 335, 359, 559], "string": [13, 17, 23, 33, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 129, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 205, 206, 208, 209, 210, 211, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 303, 306, 311, 321, 325, 326, 328, 329, 331, 333, 348, 359, 360, 362, 367, 404, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431, 433, 434, 449, 453, 454, 463, 561, 563, 565, 569, 571, 578, 580, 581, 582, 583, 592, 600, 602], "consecut": 13, "hashmap": [13, 313, 431], "arrai": [13, 17, 154, 205, 299, 313, 329, 339, 348, 354, 359, 360, 361, 420, 421, 423, 426, 429, 569, 572, 584, 592], "o2g_": 13, "fragment_id": 13, "_": [13, 30, 37, 327, 333, 348, 360, 431, 434, 569, 572, 592, 595, 597, 602], "vertex_label": [13, 311, 359, 362], "perfect": [13, 134, 431], "int64_t": [13, 313, 321, 348, 359, 360, 431, 584, 602], "std": [13, 14, 15, 306, 313, 326, 359, 578, 583], "string_view": 13, "uint64_t": [13, 16, 431, 578], "oid_arrays_": [13, 313], "topologi": [13, 339, 342, 351, 420, 425, 566, 578, 580, 581], "row": [13, 130, 321, 325, 339, 354, 418, 431, 562, 582], "matrix": [13, 348, 354, 360, 425, 434, 496, 514, 529, 532, 561, 569, 572], "src_type": [13, 420], "edge_typ": [13, 45, 62, 87, 129, 131, 173, 212, 232, 254, 259, 267, 300, 341, 344, 345, 350, 417, 419, 420, 421, 422, 423, 426, 429, 433, 581, 582, 596, 601], "pair": [13, 20, 324, 329, 331, 335, 359, 360, 362, 416, 429, 468, 473, 474, 480, 496, 514, 520, 569, 572, 575, 581, 583], "indptr": 13, "ie_lists_": [13, 313], "edge_label": [13, 238, 240, 241, 247, 303, 311, 325, 328, 359, 362, 576, 582], "neighbor_vertex_id": 13, "edge_table_index": 13, "tabl": [13, 128, 134, 312, 320, 326, 331, 335, 339, 348, 357, 417, 419, 431, 576, 578, 580, 581, 583], "uint32_t": [13, 359, 431], "num_edg": 13, "ie_offsets_lists_": [13, 313], "offset": [13, 313, 359, 420, 428, 472, 582], "slice": [13, 322, 361, 431, 575], "ie_list": 13, "ie_offset": 13, "num_vertic": 13, "oe_lists_": [13, 313], "oe_offsets_lists_": [13, 313], "oe_list": 13, "oe_offset": 13, "edge_tables_": [13, 313], "vertex_tables_": [13, 313], "oid_t": [13, 15, 16, 313, 359], "vid_t": [13, 15, 16, 313, 359], "sizeof": 13, "uint8_t": 13, "load_factor": 13, "observ": [13, 23, 300, 314, 325, 582], "practic": [13, 16, 28, 309, 322, 331, 339, 342, 349, 354, 418, 419, 421, 582], "load_factori": 13, "15": [13, 314, 335, 344, 345, 347, 357, 419, 420, 422, 423, 529, 551, 562, 569, 576], "extra": [13, 37, 259, 314, 321, 323, 434, 530, 595], "column": [13, 18, 33, 45, 54, 129, 131, 142, 157, 158, 173, 212, 228, 243, 244, 259, 300, 312, 313, 317, 322, 326, 331, 339, 348, 350, 354, 359, 361, 362, 369, 418, 428, 431, 562, 578, 582, 583, 592, 596, 602], "edge_id": 13, "uniqu": [13, 130, 131, 212, 300, 311, 322, 328, 329, 331, 333, 348, 349, 350, 351, 360, 408, 409, 418, 422, 427, 428, 431, 434, 536, 542, 575, 582, 583], "kept": [13, 333, 335, 359], "summari": [13, 356, 449], "argument": [13, 23, 30, 134, 182, 268, 269, 333, 335, 342, 346, 348, 434, 436, 437, 438, 467, 475, 505, 512, 516, 517, 518, 519, 520, 547, 569, 572, 575, 576, 583, 592], "use_perfect_hash": [13, 359, 410, 431, 576], "load_from": [13, 22, 30, 431, 576, 580], "realli": 13, "margin": 13, "former": [13, 352], "globalvertexmap": 13, "later": [13, 18, 20, 32, 33, 324, 328, 335, 353, 431, 576, 581, 582, 599], "localvertexmap": 13, "suitabl": [13, 131, 349, 356, 419, 423, 429, 488, 582, 585], "dozen": 13, "hundr": [13, 498, 509], "repeatedli": [13, 322, 352], "add_vertic": [13, 317, 328, 348, 431, 569, 572, 573, 596, 597, 602], "sure": [13, 23, 27, 30, 41, 45, 126, 129, 306, 307, 309, 311, 323, 325, 328, 335, 423, 427, 429, 576], "fairli": [13, 324], "8": [13, 20, 31, 32, 33, 35, 37, 46, 132, 134, 205, 212, 291, 299, 300, 309, 314, 321, 324, 328, 333, 335, 338, 341, 357, 360, 418, 472, 495, 514, 537, 546, 548, 554, 558, 564, 566, 569, 571, 582, 584, 595, 600], "absolut": 13, "int32_t": [13, 348, 431, 602], "vid_typ": [13, 33, 359, 410, 431, 576], "compact_edg": [13, 359, 410, 431, 576], "compact": [13, 359, 431], "varint": [13, 431], "half": [13, 431], "generated_eid": 13, "save": [13, 18, 28, 29, 129, 321, 419, 431, 434, 582], "interact": [13, 27, 29, 33, 36, 37, 38, 41, 43, 44, 127, 129, 131, 133, 154, 173, 174, 180, 183, 189, 205, 212, 269, 298, 300, 301, 303, 308, 310, 317, 320, 321, 322, 323, 327, 328, 330, 332, 334, 335, 336, 338, 348, 349, 351, 352, 355, 356, 358, 388, 431, 510, 559, 574, 576, 589, 596, 600], "vertex_id": [13, 24, 317, 348, 602], "retain_oid": [13, 321, 348, 359, 410, 431, 576, 583, 602], "gain": [13, 37], "signific": [13, 351, 356], "arrowprojectedfrag": [13, 15, 16, 359, 368], "implicit": [13, 572], "arrowflattenfrag": 13, "thought": [13, 497], "view": [13, 20, 24, 45, 126, 307, 312, 348, 349, 380, 442, 446, 465, 466, 569, 572, 578, 590], "mainli": [13, 130, 134, 322, 329, 335, 356, 425], "purpos": [13, 43, 335, 349, 581], "penalti": 13, "arrowprojectfrag": 13, "r1": [13, 361, 584, 585], "r2": [13, 361, 584, 585], "r3": [13, 361, 584], "projected_g": 13, "_project_to_simpl": [13, 16, 17, 22], "otherwis": [13, 33, 303, 306, 335, 352, 360, 418, 422, 423, 424, 434, 451, 488, 508, 518, 567, 569, 576, 581, 582], "express": [14, 15, 24, 322, 325, 329, 330, 331, 342, 351, 353, 361, 418, 420, 423, 520, 569, 600], "modifi": [14, 20, 24, 28, 128, 310, 320, 321, 325, 329, 334, 373, 374, 389, 390, 424, 447, 500, 567, 580, 581], "adher": [14, 35, 131, 326, 581], "think": [14, 24], "principl": [14, 427], "privileg": 14, "experienc": [14, 353], "inform": [14, 15, 16, 19, 27, 29, 38, 45, 75, 126, 212, 300, 303, 307, 309, 314, 322, 323, 325, 328, 329, 331, 345, 350, 352, 354, 355, 364, 378, 417, 418, 419, 420, 423, 425, 427, 431, 434, 449, 467, 508, 530, 531, 559, 569, 576, 578, 582, 589], "hop": [14, 311, 322, 331, 333, 335, 338, 339, 342, 349, 353, 354, 417, 421, 423, 425, 426, 427, 429], "slow": [14, 324], "consequ": [14, 128, 349, 352], "piec": [14, 308, 319, 428, 576], "destin": [14, 33, 77, 129, 130, 131, 152, 157, 160, 185, 238, 243, 246, 271, 321, 328, 329, 335, 339, 348, 350, 359, 361, 377, 418, 419, 420, 422, 423, 429, 431, 433, 575, 580, 581, 582, 602], "abovement": 14, "peval": [14, 16, 17, 18, 34, 352, 359, 367, 586, 592], "incev": [14, 16, 17, 18, 34, 352, 359, 367, 586, 592], "assembl": [14, 34, 322, 351, 352, 359, 431], "unlik": [14, 17, 330, 339, 342, 349, 569], "modif": [14, 22, 306, 325, 338, 349, 354, 431, 572], "convent": [14, 37, 314, 502, 528, 590], "taught": [14, 335], "colleg": 14, "textbook": 14, "answer": [14, 34, 37, 314, 328, 349, 582], "collect": [14, 34, 42, 46, 47, 325, 329, 333, 334, 335, 353, 354, 355, 429, 569], "partial": [14, 16, 18, 34, 333, 359, 361, 418, 511, 586], "intricaci": 14, "fixpoint": 14, "monoton": 14, "guarante": [14, 130, 134, 321, 342, 356, 418, 426, 434, 504, 569], "accur": [14, 325, 328], "long": [14, 17, 30, 33, 38, 299, 306, 325, 328, 331, 333, 335, 351, 356, 360, 423, 581, 582, 592, 600], "const": [14, 15, 16, 306, 313, 326, 359, 362, 427, 428, 581, 583], "fragment_t": [14, 15, 16, 359], "frag": [14, 17, 18, 313, 367, 578, 583, 592], "context_t": [14, 15, 16, 359], "ctx": [14, 17, 22, 359, 580, 592], "message_manager_t": [14, 16, 359], "vertex_t": [14, 16, 313, 359], "native_sourc": [14, 18, 592], "getinnervertex": [14, 359], "partial_result": 14, "getoutgoingadjlist": [14, 16, 17, 313, 359, 578, 592], "get_neighbor": 14, "min": [14, 18, 24, 57, 84, 325, 329, 362, 592, 600], "static_cast": [14, 16, 306, 313, 578], "get_data": [14, 313], "isoutervertex": [14, 359], "put": [14, 16, 17, 22, 46, 47, 110, 131, 134, 154, 180, 205, 212, 240, 259, 267, 291, 299, 301, 427], "channel": [14, 16, 37], "syncstateonoutervertex": 14, "els": [14, 16, 18, 154, 173, 174, 180, 183, 189, 205, 212, 300, 313, 335, 419, 429, 431, 527, 581, 582, 592], "next_modifi": 14, "inner_vertic": [14, 16], "innervertic": [14, 16, 17, 313, 359, 578, 592], "parallelprocess": [14, 16], "thread_num": [14, 16], "tid": [14, 16], "msg": [14, 16, 24, 302, 335, 362, 581], "atomic_min": 14, "curr_modifi": 14, "foreach": [14, 16], "distv": [14, 18, 592], "ndistu": 14, "outer_vertic": 14, "outervertic": [14, 313, 359], "dijkstra": [14, 18, 352, 434, 592], "checkout": [14, 37, 424], "seri": [15, 335, 354, 359, 423, 581], "strong": [15, 309, 322, 352], "typenam": [15, 16, 136, 140, 143, 150, 162, 166, 172, 208, 210, 313, 359], "frag_t": [15, 16, 359], "yourapp": 15, "flashappbas": 15, "v_type": 15, "install_flash_work": 15, "flashvertexdatacontext": 15, "v_res_typ": 15, "sync_all_": 15, "re": [15, 37, 128, 300, 309, 321, 334, 335, 353, 420, 423, 427, 429, 575, 582, 584], "shared_ptr": [15, 313, 359, 578, 583], "fw_t": 15, "fw": 15, "Or": [15, 17, 19, 22, 29, 36, 41, 132, 134, 311, 328, 335, 348, 576, 592, 602], "global": [15, 24, 129, 322, 331, 333, 335, 354, 410, 431, 561, 576, 583, 589, 600], "flashglobaldatacontext": 15, "g_res_typ": 15, "let": [15, 18, 19, 41, 130, 321, 322, 335, 348, 354, 531, 575], "bfsflash": 15, "bfs_type": 15, "value_t": 15, "di": 15, "o_sourc": 15, "oid2flashid": 15, "definemapv": 15, "init": [15, 16, 17, 18, 130, 134, 185, 300, 313, 344, 348, 359, 360, 362, 367, 417, 419, 420, 424, 427, 429, 569, 572, 578, 586, 592, 601, 602], "vset_t": 15, "ctruev": 15, "definefv": 15, "definemap": 15, "cond": [15, 477], "len": [15, 333, 335, 344, 346, 419, 434, 443, 474, 491, 493, 496, 498, 499, 503, 569], "ed": [15, 23, 502, 516, 523, 546, 552], "ctruee": 15, "rather": [15, 18, 130, 310, 335, 348, 353, 355, 356, 434, 488, 530, 581], "py": [15, 32, 36, 41, 45, 46, 47, 67, 75, 94, 95, 106, 110, 121, 132, 134, 300, 323, 346, 417, 424, 429, 576, 589, 592, 593, 594, 601], "project_to_simpl": 15, "not_compatible_for": 15, "arrow_properti": [15, 30, 371, 572], "dynamic_properti": [15, 384, 572], "def": [15, 18, 23, 300, 327, 341, 344, 345, 346, 347, 348, 350, 367, 417, 419, 420, 421, 422, 423, 426, 429, 475, 582, 592, 596, 597, 601, 602], "arg": [15, 154, 173, 174, 180, 183, 189, 205, 212, 306, 326, 344, 346, 359, 360, 361, 362, 395, 413, 420, 421, 422, 423, 426, 429, 433, 576], "appasset": [15, 18, 367, 368, 372, 574, 592], "algo": [15, 16, 17, 22, 23, 360, 368], "flash_bf": 15, "vertex_data": [15, 16, 292, 360, 368], "gscoordin": [15, 28, 36, 45], "builtin": [15, 19, 20, 126, 307, 312, 570, 572, 574], "gs_conf": [15, 16, 368], "yaml": [15, 16, 28, 29, 38, 45, 125, 127, 128, 130, 131, 133, 134, 300, 305, 307, 311, 321, 326, 334, 346, 360, 368, 576, 580, 582, 600], "cpp_flash": 15, "class_nam": [15, 16, 368], "compatible_graph": [15, 16, 368], "immutableedgecutfrag": 15, "log": [15, 17, 46, 75, 88, 96, 128, 134, 176, 262, 314, 319, 320, 344, 345, 349, 351, 581, 583, 595], "p2p": [15, 17, 22, 23], "network": [15, 27, 131, 309, 314, 317, 319, 323, 335, 339, 343, 345, 349, 350, 352, 355, 356, 357, 358, 360, 417, 418, 419, 421, 423, 425, 429, 434, 489, 490, 496, 498, 502, 505, 506, 507, 510, 522, 546, 557, 558, 560, 561, 566, 570, 584, 595], "load_p2p_network": [15, 16, 17, 18, 317, 360, 361, 592], "attribut": [15, 19, 131, 331, 342, 345, 350, 352, 354, 359, 360, 393, 404, 419, 420, 422, 425, 429, 430, 433, 434, 436, 437, 438, 453, 454, 463, 475, 488, 493, 512, 516, 517, 518, 519, 520, 523, 524, 525, 559, 561, 563, 566, 567, 569, 570, 572, 578], "convert": [15, 20, 23, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 134, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 306, 311, 326, 329, 339, 360, 375, 376, 386, 387, 399, 400, 417, 418, 425, 429, 489, 490, 547, 564, 569, 571, 572, 578, 582], "simple_graph": [15, 16], "dist": [15, 17, 307, 320, 327, 360, 361, 424, 427, 516, 518, 520, 576, 592, 600], "codegen": [15, 46, 134, 322], "bit": [15, 324, 329, 333, 335, 580], "longer": [15, 344, 362, 576], "build": [15, 31, 35, 37, 44, 46, 130, 132, 133, 212, 314, 322, 325, 328, 334, 338, 339, 348, 351, 359, 360, 370, 372, 419, 423, 425, 427, 428, 431, 517, 518, 519, 561, 576, 578, 589, 594, 601], "retriev": [15, 133, 259, 303, 319, 328, 329, 331, 333, 350, 351, 361, 375, 376, 386, 387, 391, 395, 399, 400, 420, 421, 423, 429, 434, 575, 582, 583], "displai": [15, 309, 325, 334, 418], "vertex_rang": [15, 361, 375, 376, 386, 387, 391, 399, 400, 431, 575], "end": [15, 16, 313, 317, 320, 329, 333, 335, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 356, 361, 362, 423, 428, 434, 448, 457, 462, 463, 476, 488, 571, 575, 581, 586], "sort_valu": 15, "pip3": [16, 19, 23, 35, 36, 37, 45, 126, 132, 300, 309, 314, 327, 334, 582, 589, 593, 595, 599], "degre": [16, 19, 20, 313, 317, 335, 342, 360, 362, 420, 421, 426, 434, 443, 468, 469, 488, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 514, 526, 527, 528, 529, 563, 569, 570, 582], "vertexdatacontext": [16, 17, 359, 434, 592], "myappcontext": 16, "explicit": [16, 359, 513, 569, 576], "parallelmessagemanag": [16, 17, 592], "param1": [16, 205, 291], "setvalu": [16, 17, 592], "vertex_array_t": [16, 359], "variabl": [16, 29, 33, 39, 41, 131, 212, 298, 300, 306, 309, 311, 314, 323, 333, 367, 488, 576, 582, 583, 595], "And": [16, 18, 23, 29, 31, 36, 38, 317, 322, 324, 335, 348, 357, 360, 361, 422, 427, 572, 575, 576, 582], "zero": [16, 131, 351, 360, 418, 423, 434, 451, 469, 478, 511, 563, 564, 583], "myapp": 16, "parallelappbas": [16, 17, 592], "parallelengin": [16, 17, 592], "install_parallel_work": 16, "constexpr": [16, 359], "messagestrategi": [16, 18, 359, 362, 592], "message_strategi": [16, 359], "ksynconoutervertex": [16, 18, 359, 362, 592], "loadstrategi": [16, 359], "load_strategi": [16, 359], "kbothoutin": [16, 359], "initchannel": 16, "noth": [16, 128, 362, 378, 431, 433, 569], "forc": [16, 37, 348, 589], "forcecontinu": [16, 17, 592], "getincomingadjlist": [16, 313, 359], "counter": [16, 335], "runnabl": [16, 17, 23, 92, 170, 256, 306], "content": [16, 47, 67, 75, 94, 95, 106, 110, 121, 131, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291, 306, 317, 325, 326, 335, 345, 348, 350, 434, 566, 580, 602], "my_app": [16, 18, 592], "cpp_pie": [16, 360, 368], "context_typ": [16, 359, 360, 368], "dynamicprojectedfrag": 16, "codebas": [16, 35, 44, 133], "my_app_context": 16, "zip": [16, 129, 307, 327, 328, 334, 368, 516, 520, 569, 600], "jr": 16, "load_app": [16, 17, 18, 22, 592], "path_to_your_gar_resourc": 16, "to_numpi": [16, 17, 22, 360, 361, 431, 575, 592], "demo": [17, 22, 23, 45, 324, 364, 576, 582, 590, 592], "turn": [17, 310, 314, 328, 357, 364, 563, 590], "verbos": [17, 23, 38, 128, 314, 590], "cluster_typ": [17, 22, 103, 104, 328, 348, 360, 361, 576, 580, 592, 602], "add_lib": [17, 22, 576], "home": [17, 22, 23, 28, 38, 130, 314, 317, 348, 359, 424, 425, 427, 428, 430, 431, 434, 478, 589, 590, 592, 594, 602], "19": [17, 22, 23, 32, 132, 307, 309, 314, 327, 335, 357, 419, 420, 422, 590, 595, 599], "shade": [17, 22, 23, 592], "java_pi": [17, 360], "threadnum": [17, 592], "info": [17, 38, 107, 128, 134, 173, 259, 314, 324, 335, 346, 362, 431, 569, 572, 576, 581, 582, 583, 590], "avail": [17, 23, 29, 30, 41, 129, 130, 212, 259, 300, 308, 309, 317, 325, 326, 328, 329, 331, 334, 342, 348, 351, 357, 360, 416, 429, 517, 518, 519, 569, 576, 578, 581, 592], "mvn": [17, 22, 134, 212, 320, 326, 364], "clean": [17, 32, 134, 212, 317, 320, 324, 325, 326, 328, 350, 364, 427, 581], "dskiptest": [17, 134, 326, 364], "pom": [17, 23, 212], "xml": [17, 23, 359, 582], "groupid": [17, 23, 212, 325, 592], "artifactid": [17, 23, 212, 325, 592], "shall": [17, 23], "fat": 17, "plugin": [17, 23, 325, 592], "spark": [17, 580], "drastic": 17, "great": [17, 23, 37, 582], "suppos": [17, 335, 563, 581], "traversecontext": [17, 592], "overrid": [17, 128, 306, 348, 359, 417, 427, 589, 592], "ifrag": [17, 592], "parallelcontextbas": [17, 592], "adjlist": [17, 359, 362, 580, 592], "nbr": [17, 20, 313, 359, 362, 569, 592], "dst": [17, 18, 30, 154, 212, 240, 301, 317, 331, 342, 348, 361, 417, 420, 431, 433, 575, 578, 581, 592, 601, 602], "largest": [17, 335, 434, 514, 592], "vertexarrai": [17, 359, 362, 592], "math": [17, 341, 345, 350, 434, 518, 519, 596, 598], "max": [17, 329, 362, 430, 434, 592, 600], "pars": [17, 322, 326, 348, 360, 418, 578, 582], "maxiter": [17, 592], "jsonobject": [17, 592], "gsvertexarrai": [17, 592], "createfficontext": [17, 592], "containskei": [17, 592], "getinteg": [17, 592], "javadoc": [17, 35], "proper": [17, 37], "javaapp": [17, 574, 592], "But": [17, 321, 335, 348, 356, 364, 569, 575], "rememb": [17, 22, 23, 30, 33, 45, 126, 129, 212, 300, 309, 311, 582, 589], "pack": [17, 23, 320, 592], "param": [17, 23, 29, 92, 111, 170, 194, 256, 269, 280, 298, 303, 306, 314, 324, 326, 328, 346, 360, 380, 381, 395, 410, 412, 416, 423, 429, 576, 582, 592], "bother": 17, "click": [17, 36, 37, 325, 342, 419, 420, 423, 593], "pure": [18, 359, 586], "just": [18, 19, 23, 27, 45, 126, 129, 130, 306, 307, 309, 314, 317, 321, 325, 333, 335, 356, 364, 427, 431, 569, 572, 576, 582, 584], "udf": [18, 367, 575, 592], "decor": [18, 592], "vd_type": [18, 362, 367, 592], "md_type": [18, 362, 367, 592], "youralgorithm": [18, 592], "staticmethod": [18, 367, 592], "statu": [18, 27, 29, 30, 38, 43, 45, 46, 47, 67, 75, 82, 94, 95, 96, 100, 106, 107, 110, 118, 121, 129, 133, 134, 154, 173, 174, 176, 180, 183, 189, 190, 191, 205, 212, 240, 259, 260, 262, 267, 269, 275, 276, 277, 291, 298, 300, 301, 302, 303, 312, 314, 344, 427, 428, 434, 582, 586, 590], "cython": [18, 34, 314, 395, 574, 592], "sssp_pie": [18, 592], "v_label_num": [18, 583, 592], "vertex_label_num": [18, 306, 362, 578, 583, 592], "v_label_id": [18, 362, 592], "init_valu": [18, 362, 592], "1000000000": [18, 360, 592], "pieaggregatetyp": [18, 362, 592], "kminaggreg": [18, 362, 592], "register_sync_buff": [18, 362, 592], "get_config": [18, 362, 576, 592], "declar": [18, 212, 298, 300, 309, 322, 333, 335, 338, 353, 356, 419, 592], "get_inner_nod": [18, 362, 592], "break": [18, 37, 212, 300, 310, 334, 429, 592], "set_node_valu": [18, 362, 592], "e_label_num": [18, 313, 583, 592], "edge_label_num": [18, 362, 578, 583, 592], "e_label_id": [18, 592], "get_outgoing_edg": [18, 362, 592], "third": [18, 134, 311, 348, 349, 353, 431, 554, 555], "get_int": [18, 299, 306, 362, 592], "get_node_valu": [18, 362, 592], "iv": [18, 592], "inner_nod": [18, 362, 592], "v_dist": [18, 592], "u_dist": [18, 313, 592], "classic": [18, 342, 422, 570], "yourpregelalgorithm": [18, 592], "sssp_pregel": [18, 592], "set_valu": [18, 362, 592], "src_id": [18, 130, 313, 342, 418, 419, 420, 422, 423, 426, 429, 433, 592], "cur_dist": [18, 592], "new_dist": [18, 592], "outgoing_edg": [18, 362, 592], "vote_to_halt": [18, 362, 592], "sin": [18, 592], "m_pi": [18, 592], "translat": [18, 37, 328, 349], "generate_eid": [18, 321, 348, 359, 410, 431, 576, 583, 592, 602], "test": [18, 23, 29, 33, 43, 44, 129, 133, 173, 180, 212, 259, 267, 306, 309, 311, 312, 314, 319, 321, 324, 325, 335, 338, 341, 344, 345, 350, 354, 417, 427, 429, 433, 453, 454, 488, 569, 571, 576, 581, 582, 593, 594, 596, 601], "futur": [18, 128, 131, 134, 212, 301, 310, 320, 329, 333, 335, 348], "to_gar": [18, 592], "tmp": [18, 19, 28, 38, 45, 134, 173, 321, 323, 391, 396, 429, 431, 576, 580, 582, 590, 592, 595], "my_sssp_pregel": [18, 592], "gar": [18, 360, 368, 592], "construct": [19, 134, 298, 302, 303, 304, 310, 312, 326, 335, 339, 342, 348, 349, 350, 351, 359, 410, 417, 418, 419, 420, 421, 431, 432, 436, 437, 477, 498, 500, 501, 503, 509, 513, 514, 515, 523, 526, 527, 528, 529, 531, 547, 551, 555, 561, 563, 576, 580, 583], "expand": [19, 310, 322, 325, 335, 336, 421, 423, 570], "add_edges_from": [19, 20, 453, 569], "add_nod": [19, 20, 569, 572], "number_of_nod": [19, 20, 434, 478, 562, 569], "number_of_edg": [19, 20, 443, 478, 562, 569], "sort": [19, 20, 313, 322, 325, 335, 434, 440, 468, 472, 475, 478, 503, 504, 562, 563, 569, 581], "connected_compon": [19, 434], "nx": [19, 20, 317, 371, 373, 374, 377, 380, 382, 384, 389, 390, 394, 397, 398, 431, 434, 569, 571, 572], "add_nodes_from": [19, 20, 569], "red": [19, 20, 37, 328, 418, 569], "green": [19, 20, 36, 37], "add_edg": [19, 20, 259, 303, 317, 328, 348, 431, 447, 453, 454, 457, 462, 463, 569, 572, 596, 597, 602], "1415": [19, 20], "all_pairs_shortest_path": 19, "sp": [19, 308], "dict": [19, 20, 27, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 360, 361, 388, 396, 416, 419, 420, 423, 431, 432, 516, 517, 518, 519, 526, 527, 547, 569, 575, 576, 582], "draw": [19, 310, 335, 516, 519], "matplotlib": [19, 335], "with_label": 19, "font_weight": 19, "bold": [19, 357], "twitter": [19, 357], "wget": [19, 22, 23, 29, 35, 129, 300, 307, 327, 424, 600], "raw": [19, 22, 23, 129, 130, 134, 300, 303, 321, 322, 339, 386, 387, 419, 425, 427, 428, 433], "githubusercont": [19, 22, 23, 129, 300], "p": [19, 20, 31, 36, 134, 180, 212, 311, 328, 333, 335, 350, 351, 360, 419, 429, 434, 492, 493, 494, 496, 505, 506, 507, 510, 511, 513, 515, 517, 518, 519, 520, 523, 525, 600], "o": [19, 22, 23, 27, 30, 33, 38, 306, 359, 429, 434, 451, 502, 504, 509, 517, 518, 519, 521, 522, 523, 569, 582, 593, 596], "gs_nx": 19, "g1": [19, 431, 573, 584, 585], "read_edgelist": [19, 571], "expandvar": [19, 22], "nodetyp": [19, 571], "create_us": [19, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 498, 499, 500, 501, 503, 505, 506, 507, 509, 513, 514, 515, 521, 522, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 564, 571], "g2": [19, 431, 569, 573, 584, 585], "ret_g": 19, "ret_nx": 19, "lack": [20, 32, 325, 328, 333, 355, 434], "hashabl": [20, 449, 464, 526, 569, 571], "float": [20, 91, 98, 165, 179, 299, 329, 331, 333, 344, 348, 357, 360, 417, 418, 419, 420, 428, 429, 430, 434, 488, 491, 492, 493, 494, 496, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 523, 524, 525, 561, 569, 571, 576, 580, 584, 600, 601, 602], "tupl": [20, 335, 348, 418, 419, 420, 429, 431, 434, 453, 454, 463, 475, 516, 520, 526, 565, 569, 571, 576], "though": [20, 306, 488, 569, 582], "yield": [20, 212, 311, 325, 423, 429, 516, 520, 569], "node_attribute_dict": 20, "discuss": [20, 128, 306, 314, 335, 434, 581, 595], "incorpor": [20, 134], "path_graph": [20, 434, 445, 447, 448, 454, 569, 571], "grown": [20, 478, 511, 569], "unpack": [20, 334, 359, 569], "ebunch": [20, 569], "dictionari": [20, 298, 308, 360, 404, 434, 516, 517, 518, 519, 526, 527, 528, 529, 569, 571, 580], "11": [20, 27, 30, 31, 32, 47, 68, 134, 321, 324, 335, 341, 357, 360, 418, 419, 420, 422, 436, 437, 438, 474, 569, 590], "complaint": 20, "clear": [20, 37, 325, 333, 335, 373, 374, 469, 471, 472, 474, 476, 478, 479, 481, 483, 484, 487, 498, 500, 501, 503, 505, 506, 507, 509, 513, 514, 515, 521, 522, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 564, 569, 571], "quietli": [20, 464, 569], "ignor": [20, 325, 434, 445, 464, 569, 576], "spam": 20, "stage": [20, 134, 314, 319, 339, 355, 356, 423, 581], "seen": [20, 126, 307, 322, 349, 581], "report": [20, 314, 320, 357, 394, 492, 493, 494, 569, 572], "adj": [20, 362, 434, 569], "item": [20, 29, 130, 307, 312, 346, 349, 418, 419, 420, 423, 429, 434, 569, 582], "One": [20, 322, 329, 349, 353, 354, 355, 356, 360, 421, 423, 500, 509, 563], "nbunch": [20, 442, 446, 448, 464, 569], "remove_nod": [20, 569], "remove_nodes_from": [20, 569], "remove_edg": [20, 569], "remove_edges_from": [20, 498, 500, 569], "instanti": [20, 360, 429, 584], "digraph": [20, 431, 436, 446, 448, 453, 454, 457, 462, 463, 474, 491, 492, 493, 496, 500, 501, 503, 505, 506, 507, 508, 512, 563, 564, 565, 567, 570, 571, 572], "edgelist": [20, 547, 571], "subscript": [20, 569], "notat": [20, 128, 130, 534, 536, 538, 540, 542, 548, 550, 569], "yellow": [20, 418], "blue": [20, 418, 569], "undirect": [20, 131, 348, 354, 360, 380, 419, 423, 431, 434, 440, 444, 466, 489, 490, 496, 498, 505, 507, 510, 512, 513, 514, 516, 517, 518, 519, 520, 526, 531, 535, 536, 539, 542, 543, 545, 551, 564, 566, 569, 583], "twice": [20, 547, 569], "fg": [20, 583], "add_weighted_edges_from": [20, 453, 569], "125": [20, 418, 502, 513], "75": [20, 335, 341, 344, 345, 350, 357, 434, 492, 493, 494, 496, 576, 596], "375": 20, "eattr": [20, 569], "wt": 20, "attach": [20, 359, 418, 505, 508], "fridai": [20, 569, 572], "mondai": 20, "5pm": [20, 569], "2pm": [20, 569], "room": [20, 569], "714": [20, 569], "to_direct": [20, 431, 489, 490, 505, 507, 569], "represent": [20, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 131, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 310, 322, 349, 351, 354, 431, 567, 569, 580], "dg": [20, 338, 354], "dgv": 20, "as_view": [20, 465, 466, 569], "shallow": 20, "out_edg": [20, 446, 569], "in_degre": [20, 342, 344, 421, 423, 426, 429, 500, 526, 527, 569], "predecessor": [20, 439, 512, 563, 569], "successor": [20, 406, 439, 506, 507, 512, 569], "out_degre": [20, 500, 526, 527, 569], "feel": [20, 37, 306, 314], "inconsist": [20, 357], "inde": [20, 22], "lump": 20, "danger": 20, "probabl": [20, 37, 333, 342, 354, 360, 421, 426, 491, 492, 493, 494, 496, 498, 502, 505, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 523, 525], "to_undirect": [20, 431, 505, 507, 569], "theoret": 20, "load_ldbc": [20, 335, 580, 600], "foo": [20, 569], "famou": [22, 23, 568], "hadoop": [22, 582], "stop": [22, 27, 30, 46, 106, 189, 212, 275, 300, 301, 303, 325, 351, 355, 359, 434], "open": [22, 36, 37, 134, 306, 309, 323, 334, 336, 342, 353, 356, 429, 571, 581, 582], "actual": [22, 23, 28, 125, 126, 127, 129, 131, 212, 300, 305, 307, 323, 325, 331, 333, 335, 342, 363, 365, 422, 520, 569, 572, 580, 590], "vertexinputformat": 22, "edgeinputformat": 22, "vformat": [22, 431], "p2pvertexinputformat": 22, "eformat": [22, 431], "p2pedgeinputformat": 22, "graphscope_sess": [22, 431], "31": [22, 23, 309, 317, 348, 419, 420, 422, 602], "v_prop": [22, 359, 393], "vdata": 22, "e_prop": [22, 359, 393], "giraph_sssp": 22, "sourceid": 22, "faster": [22, 434], "toward": [22, 325, 582], "offici": [22, 320, 321, 323, 324, 334, 353], "pl": 22, "snapshot": [22, 259, 301, 303, 320, 325, 331, 356, 578, 582], "writabl": 22, "degrad": [22, 356], "procedur": [22, 29, 46, 110, 128, 132, 133, 180, 183, 267, 269, 298, 301, 303, 307, 310, 312, 321, 322, 329, 335, 370, 511], "except": [22, 46, 47, 67, 75, 94, 95, 106, 110, 121, 134, 212, 300, 302, 303, 304, 306, 310, 314, 326, 334, 341, 344, 345, 348, 350, 355, 422, 429, 447, 464, 468, 479, 488, 498, 500, 549, 569, 576, 581, 596], "right": [22, 329, 333, 348, 427, 470, 479, 481, 502, 567], "inputformat": 22, "sparksess": 23, "gssparksess": 23, "experi": [23, 32, 37, 128, 311, 317, 322, 325, 338, 352, 354, 356, 357, 491], "proceed": [23, 27, 126, 307, 491, 509], "side": [23, 37, 82, 83, 322, 326, 333, 334, 360, 379, 419, 472, 581], "venv": [23, 324, 350], "virtualenv": [23, 300], "pyspark_venv": 23, "bin": [23, 31, 134, 320, 323, 324, 325, 326, 334, 335, 349, 350, 443, 582, 590, 594, 600], "pyspark_venv_g": 23, "tar": [23, 29, 31, 320, 325, 326, 582], "gz": [23, 31, 320, 325, 326, 571, 582], "upload": [23, 45, 46, 121, 129, 130, 303, 306, 321], "pyspark_driver_python": 23, "pyspark_python": 23, "archiv": [23, 349, 580, 600], "oss": [23, 29, 31, 129, 348, 359, 424, 431, 582, 592, 593, 602], "beij": [23, 29, 31, 339, 354, 418, 582, 593], "fixm": 23, "yuansi": 23, "env": [23, 314, 324, 346, 350, 424], "var": [23, 33, 38, 314, 348, 429, 582, 590, 602], "gs_jar": 23, "l": [23, 29, 35, 45, 126, 134, 307, 342, 354, 421, 489, 490, 492, 493, 494, 501, 502, 503, 505, 506, 507, 510, 517, 518, 519, 520, 522, 526, 527, 528, 529, 558, 561, 569, 589, 590], "lib": [23, 31, 212, 308, 323, 325, 326, 368, 582], "7077": 23, "master_url": 23, "conf": [23, 323, 325, 326, 334, 359, 582, 600], "executor": [23, 35, 38, 321, 323, 349, 432, 590], "driver": [23, 27, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 291, 300, 301, 306, 311, 330, 334, 348, 396, 431, 582, 600], "2g": 23, "10g": [23, 594], "minregisteredresourcesratio": 23, "bfstest": 23, "placehold": [23, 128, 329], "url": [23, 29, 96, 176, 262, 323, 431, 432, 600], "rdd": 23, "classifi": [23, 339, 341, 345, 350, 354, 429, 592], "maven": [23, 133, 320, 325, 326, 364, 592], "conflict": [23, 324, 335, 341, 431, 559, 582], "correctli": [23, 37, 306, 311, 314, 338, 434, 582], "resolv": [23, 28, 314, 348, 431, 583], "goal": [23, 310, 312, 322, 329, 339, 351, 354, 581], "reloc": 23, "shadedpattern": 23, "vineyardmemori": 23, "memorystr": 23, "builder": [23, 313, 322, 475], "config": [23, 27, 28, 31, 45, 46, 73, 95, 128, 129, 298, 320, 321, 323, 325, 326, 334, 346, 394, 404, 416, 417, 430, 433, 573, 576, 578, 582, 583, 600, 601], "socket": [23, 28, 30, 323, 359, 583], "bound": [23, 131, 180, 212, 267, 300, 331, 333, 335, 353, 395, 488, 576, 581, 584], "vineyardsock": 23, "filepath": [23, 202], "sock": [23, 28, 323], "gssubmitjar": 23, "grapegraph": 23, "togsgraph": 23, "vd": 23, "classtag": 23, "grapegraphimpl": 23, "loadgraphtog": 23, "vfilepath": 23, "efilepath": 23, "numpartit": 23, "shell": [23, 35, 311, 321, 323, 325, 330, 353, 360], "grow": [24, 310, 317, 325, 338, 349, 488, 498, 505, 506, 507, 568, 581], "capac": [24, 33, 323, 569, 576], "indivis": 24, "succinctli": 24, "oppos": [24, 342], "orient": [24, 342, 356, 426, 582], "googl": [24, 35, 304, 352, 594], "powergraph": [24, 356, 357], "wa": [24, 29, 30, 37, 94, 298, 326, 333, 335, 351, 357, 423, 434, 488, 503, 516, 517, 518, 519, 568, 582], "2010": [24, 357, 360, 434, 494, 561, 566], "sequenc": [24, 329, 333, 335, 360, 431, 468, 488, 498, 499, 500, 501, 502, 503, 504, 520, 526, 527, 530, 563, 564, 569, 570, 583], "conceptu": 24, "behavior": [24, 128, 134, 333, 335, 348, 362, 576], "becom": [24, 317, 335, 342, 569, 581, 582], "inact": 24, "again": [24, 314, 333, 348, 584, 589], "termin": [24, 36, 328], "halt": [24, 353, 362, 508], "individu": [24, 321, 323, 345, 350], "messageiter": [24, 362], "mindist": 24, "issourc": 24, "inf": 24, "done": [24, 130, 339, 342, 418, 429, 434, 531, 583], "getvalu": [24, 154, 173, 174, 180, 183, 189, 205, 212, 306, 313], "mutablevalu": 24, "outedgeiter": 24, "getoutedgeiter": 24, "sendmessageto": 24, "votetohalt": 24, "drop": [24, 37, 314], "dramat": 24, "face": [24, 31, 322, 335, 352, 554, 555], "power": [24, 128, 212, 300, 301, 311, 325, 329, 330, 333, 335, 338, 353, 360, 434, 488, 498, 546, 569], "law": [24, 488, 498], "gather": [24, 320, 576], "scatter": [24, 419], "accumul": [24, 306, 342, 563], "workload": [27, 36, 310, 317, 319, 322, 323, 325, 331, 332, 335, 338, 349, 351, 357, 582, 584, 585], "grpc": [27, 28, 31, 108, 314, 359, 593, 595], "linux": [27, 30, 31, 36, 134, 309, 321, 341, 357, 364, 599], "maco": [27, 30, 36, 134, 309, 314, 324, 593, 595, 596, 599], "skip": [27, 31, 35, 325, 326, 353, 364, 582], "minikub": [27, 29, 30, 582], "instruct": [27, 29, 30, 33, 37, 44, 45, 132, 134, 306, 307, 310, 321, 323, 324, 325, 327, 328, 334, 350, 353, 359, 372, 423], "platform": [27, 32, 37, 43, 132, 134, 309, 319, 321, 322, 341, 355, 356, 357, 364, 418, 560, 576], "desktop": [27, 582, 596], "server": [27, 29, 47, 67, 75, 82, 83, 94, 95, 106, 110, 121, 134, 154, 173, 183, 205, 240, 259, 269, 291, 303, 304, 309, 320, 322, 323, 328, 331, 334, 336, 338, 342, 347, 349, 351, 353, 358, 422, 427, 428, 429, 582, 594, 600], "kubectl": [27, 29, 30, 33, 38, 314, 321, 582, 590, 595], "kube": [27, 576], "apivers": [27, 33, 346], "v1": [27, 33, 35, 46, 47, 67, 75, 94, 95, 106, 110, 121, 134, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 301, 314, 333, 335, 341, 344, 345, 346, 350, 353, 417, 534, 547, 572, 595, 596, 601], "certif": 27, "ca": 27, "crt": 27, "last": [27, 30, 335, 423, 428, 431, 491, 563, 590], "16": [27, 31, 321, 323, 331, 335, 357, 417, 419, 420, 422, 424, 525, 548, 562, 601], "2023": [27, 47, 68, 590], "44": [27, 357, 419, 420, 422, 562], "05": [27, 496, 509], "cst": 27, "sig": [27, 592, 599], "28": [27, 333, 335, 339, 354, 357, 419, 420, 422, 566], "cluster_info": 27, "172": [27, 357], "21": [27, 31, 47, 68, 317, 335, 357, 360, 419, 420, 422, 542, 582], "67": [27, 357, 360], "111": 27, "8443": 27, "context_info": 27, "namespac": [27, 28, 29, 30, 33, 38, 306, 346, 576], "profil": [27, 325, 600], "encapsul": [27, 212, 300, 311, 338, 339, 417, 423, 576], "entranc": [27, 134, 423], "tag": [27, 41, 128, 132, 309, 326, 333, 335, 357, 496, 576, 582, 594], "intranet": 27, "internet": [27, 29, 31, 309, 328, 335, 352, 566, 568], "might": [27, 128, 131, 134, 300, 314, 434, 526, 569, 582, 585], "k8s_image_registri": [27, 33, 576], "k8s_image_repositori": [27, 576], "k8s_image_tag": [27, 33, 346, 576], "fit": [27, 310, 317, 321, 343, 344, 364], "increas": [27, 38, 128, 314, 317, 331, 419, 467, 468, 476, 498, 500, 508, 526, 529, 531, 581], "cpu": [27, 75, 128, 134, 314, 321, 346, 347, 424, 576, 585, 595], "num_work": [27, 28, 33, 346, 347, 416, 576, 600], "k8s_engine_cpu": [27, 416, 576], "32": [27, 331, 333, 357, 419, 420, 422, 430, 434, 580], "k8s_engine_mem": [27, 314, 346, 416, 576, 595], "256gi": 27, "vineyard_shared_mem": [27, 314, 346, 416, 576, 595], "preexist": 27, "k8s_client_config": [27, 576], "disk": [27, 129, 310, 314, 321, 349, 582], "test_data": [27, 341, 345, 350, 593, 596], "testingdata": [27, 30, 33, 593, 596], "k8s_volum": [27, 30, 33, 416, 576, 593, 596], "constructor": [27, 326, 348, 469, 471, 472, 474, 476, 478, 479, 481, 483, 484, 487, 498, 500, 501, 503, 505, 506, 507, 509, 513, 514, 515, 521, 522, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 564, 571], "vm": [27, 30, 359], "copi": [27, 29, 30, 309, 321, 349, 351, 356, 377, 434, 441, 445, 447, 448, 506, 512, 567, 569, 572, 580, 581, 582, 583, 584], "hostpath": [27, 30, 33, 321, 576, 593, 596], "expandus": [27, 593, 596], "mountpath": [27, 30, 33, 346, 576, 593, 596], "expect": [27, 34, 37, 306, 314, 320, 348, 364, 498, 500, 502, 572, 576], "monitor": [27, 29, 338], "wait": [27, 128, 129, 176, 212, 300, 314, 325, 576], "finish": [27, 129, 212, 313, 334, 344, 362, 419, 422, 582], "remov": [27, 29, 126, 154, 173, 205, 240, 259, 291, 307, 333, 335, 360, 364, 424, 441, 447, 449, 495, 498, 500, 502, 544, 547, 563, 569, 582], "remain": [27, 128, 310, 329, 333, 348, 352, 418, 423, 503, 530], "statefulset": [27, 582], "svc": [27, 321], "left": [27, 36, 128, 329, 333, 360, 431, 434, 470, 502], "service_port": 28, "63800": 28, "launcher_typ": [28, 45], "operator_launch": 28, "gae_endpoint": 28, "60001": 28, "instance_id": [28, 45, 583], "0000": [28, 317, 335], "rpc_port": 28, "9600": 28, "sai": [28, 41], "configmap": [28, 346], "mount": [28, 30, 33, 314, 322, 348, 428, 576, 593, 595, 596], "ideal": [29, 37, 131, 310, 356], "deploy_graphscope_on_self_managed_k8": 29, "chart": [29, 314, 321, 323, 335, 582, 593, 595], "minut": [29, 314, 322], "succe": [29, 134], "past": [29, 131, 322, 584], "noteport": 29, "node_ip": [29, 582], "ojsonpath": 29, "hostip": 29, "node_port": 29, "spec": [29, 33, 346, 359, 429], "nodeport": [29, 346, 576, 582, 596], "echo": [29, 31], "listen": [29, 309, 310, 323, 359], "statement": [29, 423, 582], "ident": [29, 361, 377, 465, 466, 470, 541, 561, 563, 569], "expos": [29, 309, 320, 326, 331, 337, 421, 432, 576, 586], "reconnect": [29, 576], "disconnect": [29, 126, 307, 434, 510, 511, 526, 529, 576, 589], "sess2": 29, "comment": [29, 37, 317, 325, 328, 329, 335, 348, 418, 569, 571, 572, 580, 597, 602], "homepag": 29, "remot": [29, 36, 212, 334, 346, 347, 364, 432, 576, 600], "cater": [29, 349], "tgz": 29, "unzip": [29, 307, 320, 325, 327, 328, 334, 600], "zxvf": 29, "bundl": [30, 576], "aliv": 30, "reserv": [30, 128], "simplifi": [30, 43, 321, 325, 349, 350, 351, 353, 355, 418, 423, 581], "etcd": [30, 314, 321, 576, 578, 593], "replica": [30, 321, 346], "etcd_replica": 30, "greater": [30, 33, 311, 329, 333, 360, 419, 434, 488, 519, 576, 581], "ag": [30, 33, 45, 129, 130, 131, 173, 205, 212, 259, 267, 291, 300, 322, 331, 333, 335, 339, 354, 417, 418, 431, 575, 582, 590, 600, 601], "33": [30, 310, 333, 419, 420, 422, 559, 562], "vineyardd": [30, 33, 323], "vineyardctl": [30, 576], "v6d": [30, 31, 321, 348, 576], "blob": [30, 314, 592], "cmd": [30, 359, 576], "readm": [30, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 364], "md": [30, 307, 320, 429], "notic": [30, 33, 321, 331, 335, 349, 423, 431, 562, 569, 576, 584], "charact": [30, 130, 560, 565, 571], "vineyard_deploy": 30, "restart": [30, 46, 106, 189, 212, 275, 301, 303, 306, 311, 325, 590], "etcd0": 30, "73m": 30, "5db59987f": 30, "vr2fg": 30, "beforehand": 30, "onto": 30, "stai": [30, 325], "k8s_namespac": [30, 33, 416, 576], "k8s_vineyard_deploy": [30, 33, 416, 576], "reload": [30, 582], "vineyard_id": [30, 33, 431, 590], "new_sess": 30, "22731319746904674": 30, "objectid": [30, 33, 359, 431, 576, 581, 583], "softwar": [30, 33, 130, 311, 321, 324, 333, 338, 349, 431, 583], "successfulli": [30, 47, 67, 75, 94, 95, 106, 110, 129, 154, 183, 205, 212, 240, 269, 291, 300, 309, 323, 325, 328, 339, 344, 488, 582], "folder": [31, 38, 45, 134, 346, 348, 581], "cento": [31, 32, 314, 324, 357, 595, 599], "82": [31, 357], "boost": [31, 128, 338, 349, 359], "perl": 31, "v3": [31, 353, 357], "24": [31, 205, 291, 321, 335, 357, 419, 420, 422, 536, 554, 562], "openmpi": [31, 357], "gflag": 31, "glog": 31, "arrow": [31, 130, 313, 359, 371, 384, 431, 572], "74": [31, 357, 560], "openssl": [31, 314, 595], "zlib": 31, "protobuf": [31, 42, 304, 326], "49": [31, 335, 357, 419, 420, 422], "13": [31, 35, 335, 357, 418, 419, 420, 422, 474, 515], "libclang": 31, "curl": [31, 334], "lo": [31, 334], "czf": 31, "mkdir": [31, 134, 314, 429, 595], "workdir": 31, "xzf": 31, "yum": 31, "scl": 31, "rh": [31, 313], "y": [31, 32, 335, 346, 347, 360, 515, 516, 520], "devtoolset": 31, "python38": 31, "opt": [31, 36, 128, 134, 322, 323, 340, 429], "bash": [31, 134, 325, 333, 346, 582, 590, 594], "euxo": 31, "pipefail": 31, "dir": [31, 303, 320, 582], "prefix": [31, 37, 308, 314, 320, 323, 329, 333, 346, 431, 563, 581, 600], "ld_library_path": 31, "lib64": 31, "py2": 31, "py3": [31, 594], "manylinux2010_x86_64": 31, "whl": [31, 424, 427], "x86_64": [31, 45, 132, 309, 346], "licens": [31, 594], "dbuild_shared_lib": 31, "ON": 31, "dcmake_prefix_path": 31, "dcmake_install_prefix": 31, "boost_1_74_0": 31, "bootstrap": 31, "filesystem": [31, 418], "program_opt": 31, "regex": [31, 333], "chrono": 31, "atom": [31, 582], "date_tim": [31, 131], "b2": 31, "openssl_1_1_1h": 31, "fpic": 31, "cpp": [31, 134, 147, 170, 194, 306], "darrow_comput": 31, "darrow_with_utf8proc": 31, "off": [31, 322, 349, 554, 582], "darrow_csv": 31, "darrow_filesystem": 31, "darrow_ipc": 31, "darrow_build_benchmark": 31, "darrow_build_exampl": 31, "darrow_build_integr": 31, "darrow_build_util": 31, "darrow_build_test": 31, "darrow_enable_timing_test": 31, "darrow_fuzz": 31, "darrow_jemalloc": 31, "darrow_build_shar": 31, "darrow_build_stat": 31, "mpi": [31, 359], "cxx": 31, "dlopen": 31, "nproc": 31, "dgrpc_instal": 31, "dgrpc_build_test": 31, "dgrpc_build_csharp_ext": 31, "dgrpc_build_grpc_csharp_plugin": 31, "dgrpc_build_grpc_node_plugin": 31, "dgrpc_build_grpc_objective_c_plugin": 31, "dgrpc_build_grpc_php_plugin": 31, "dgrpc_build_grpc_python_plugin": 31, "dgrpc_build_grpc_ruby_plugin": 31, "dgrpc_backwards_compatibility_mod": 31, "dgrpc_protobuf_provid": 31, "dgrpc_zlib_provid": 31, "dgrpc_ssl_provid": 31, "dopenssl_root_dir": 31, "dcmake_cxx_flag": 31, "fpermiss": 31, "dbuild_vineyard_test": 31, "dbuild_vineyard_python_bind": 31, "j4": 31, "dnetworkx": 31, "denable_java_sdk": 31, "dbuild_test": 31, "ubuntu": [32, 134, 309, 314, 321, 324, 424, 593, 595, 599], "04": [32, 134, 314, 321, 324, 335, 357, 424, 593, 595, 599], "intel": [32, 324, 593, 595, 599], "appl": [32, 314, 324, 569, 593, 595, 599], "silicon": [32, 324, 593, 595], "jdk": [32, 321, 324, 337, 586, 592], "wheel": [32, 314, 487, 553, 595, 598], "manylinux2014": [32, 594], "abi": 32, "wish": [32, 37, 307], "nightli": [32, 314, 595], "tidi": 32, "quickli": [32, 36, 310, 325, 338, 350, 353, 354, 356, 429, 576], "insid": [32, 38, 45, 130, 314, 333, 335, 360, 368, 418, 430, 431, 544, 575, 576, 600], "apt": [32, 424], "ipython": 32, "tensorflow": [32, 338, 339, 341, 344, 345, 349, 350, 354, 355, 417, 418, 419, 422, 423, 425, 429, 596], "tool": [32, 35, 36, 45, 126, 132, 134, 307, 309, 310, 317, 319, 321, 330, 336, 338, 340, 349, 516, 518, 578, 581, 582, 583, 599], "gsctl": [32, 41, 43, 129, 132, 133, 134, 300, 307, 309, 311, 312, 319, 323, 340, 582, 593, 594], "dep": [32, 35, 133, 589, 593, 594], "fly": [32, 310, 350], "clang": [32, 35, 324, 594], "essenti": [32, 130, 131, 306, 311, 314, 329, 333, 338, 353, 355], "arm": [32, 134], "preliminari": 32, "yet": [32, 212, 300, 301, 309, 327, 333, 361, 526, 529, 569, 575], "calcul": [33, 311, 322, 333, 335, 360, 362, 420, 434, 488, 520], "period": [33, 582], "persistentvolum": [33, 582], "dump": [33, 360, 396], "cat": [33, 45, 346, 347, 582, 590], "eof": [33, 45], "metadata": [33, 45, 71, 120, 129, 130, 134, 173, 174, 180, 187, 202, 259, 260, 267, 273, 288, 314, 326, 346, 359, 431, 569, 578, 582], "1gi": 33, "accessmod": 33, "readwriteonc": 33, "storageclassnam": 33, "importantli": 33, "lost": [33, 576], "persistentvolumeclaim": [33, 576, 582], "matchlabel": 33, "request": [33, 45, 46, 128, 212, 301, 303, 306, 314, 326, 348, 359, 388, 419, 427, 430, 432, 463, 569, 576, 582, 595], "extern": [33, 37, 306, 342, 349, 576, 582], "ccc": 33, "sub_graph": [33, 331, 350, 596, 597], "haslabel": [33, 317, 324, 331, 335, 350, 600], "simple_g": [33, 350, 592, 596], "pr_result": 33, "tc_result": 33, "add_column": [33, 350, 359, 431, 592, 596, 597], "tc": [33, 350, 596], "997255889378630": 33, "997163552113975": 33, "store_graphs_to_pvc": 33, "graphid": [33, 145, 154, 173, 180, 183, 189, 192, 193, 205, 212, 259, 306, 576], "pvc_name": [33, 576], "schema": [33, 45, 46, 54, 94, 129, 130, 134, 142, 144, 167, 173, 212, 228, 259, 267, 300, 301, 303, 306, 310, 313, 322, 323, 326, 328, 329, 330, 331, 335, 344, 345, 348, 360, 418, 419, 428, 431, 569, 578, 580, 581, 583, 597, 600, 602], "oid_typ": [33, 348, 359, 360, 388, 410, 431, 576, 602], "ulong": 33, "lang": [33, 35, 130, 324, 328, 333, 350, 432], "eid": [33, 313, 328, 431], "restore_graphs_from_pvc": 33, "anymor": 33, "nativ": [34, 128, 306, 319, 322, 326, 330, 349, 353, 355, 356], "behind": [34, 344, 581, 584, 589, 590], "scene": [34, 322, 344, 426], "lower": [34, 322, 325, 326, 331, 333, 335, 353, 488, 495, 508], "cost": [34, 322, 325, 335, 349, 353, 434, 582], "ownership": 34, "cach": [34, 325, 339, 346, 352, 356, 569], "layout": [34, 352, 582], "were": [34, 37, 335, 357, 520], "outperform": [34, 325, 338, 352, 354, 355, 356], "art": [34, 338, 352, 355, 357], "voderank": 34, "average_degree_assort": 34, "degree_assort": 34, "guidelin": [35, 37, 310], "promot": 35, "readabl": [35, 333, 569], "qualiti": [35, 37, 354], "black": [35, 594], "enforc": [35, 326], "rule": [35, 46, 47, 128, 134, 311, 322, 335, 342, 352, 421, 427, 431, 468, 578], "cpplint": 35, "flake8": 35, "fmt": 35, "lint": [35, 37], "makefil": 35, "graphscope_clformat": 35, "graphscope_cpplint": 35, "dev": [35, 43, 44, 133, 312, 319, 346, 593, 594], "pushd": 35, "isort": 35, "diff": 35, "popd": 35, "interactive_engin": [35, 36, 134, 323, 326, 334], "check_format": 35, "files_to_format": 35, "aosp": 35, "toolchain": [36, 45, 340], "devcontain": 36, "json": [36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 154, 173, 174, 180, 189, 205, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 320, 321, 323, 326, 329, 576, 578, 582, 583], "setup": [36, 37, 46, 128, 300, 314, 431, 576, 594], "visual": [36, 37, 310, 349], "studio": 36, "collabor": [36, 349, 581], "stabl": [36, 360, 431, 578, 582, 599], "haven": [36, 300, 309, 335], "navig": [36, 326, 581, 589], "icon": 36, "bottom": [36, 479], "corner": 36, "window": [36, 335, 599], "reopen": 36, "marketplac": 36, "prompt": [36, 328, 334], "shift": [36, 329, 333, 335, 434, 534], "ctrl": 36, "made": [36, 37, 45, 321, 325, 342, 357, 418, 421, 427, 434, 529, 581], "rebuild": 36, "subcommand": [36, 45, 340], "assembli": [36, 323, 326], "learning_engin": 36, "graphlearn": [36, 38, 339, 341, 344, 345, 346, 350, 417, 418, 419, 423, 424, 429, 430, 433, 576, 590, 596, 601], "compos": [36, 38, 134, 339, 342, 350, 352, 356], "alon": [36, 322, 331, 589], "circul": [36, 472], "edit": [36, 37, 45, 328, 515, 552, 589], "entrypoint": [36, 589, 596], "plai": [36, 322, 325, 337, 358, 428, 433, 586], "thank": [37, 317, 328, 349], "interest": [37, 335, 338, 352, 582], "focus": [37, 325, 335, 349, 355, 357, 423, 561, 582], "eager": [37, 360, 361, 410, 412, 431, 576], "contributor": [37, 562], "welcom": [37, 307], "engag": [37, 309, 349, 350], "good": 37, "particip": [37, 128], "join": [37, 128, 325, 329, 335, 346, 419, 429, 470, 473, 481, 488, 497, 498, 511, 513, 516, 517, 518, 519, 520, 528, 529, 569, 581], "ask": [37, 319], "question": [37, 319, 330, 335, 595], "ve": [37, 321, 327, 334, 349], "hasn": [37, 335], "confirm": [37, 325], "concis": [37, 331, 353, 432], "descript": [37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 306, 311, 321, 322, 326, 329, 333, 342, 346, 348, 418, 421, 426, 427, 431, 526, 534, 582], "relev": [37, 128, 129, 424, 463, 569, 580], "reproduc": [37, 569], "yourself": 37, "why": [37, 314, 335, 360], "saw": 37, "incomplet": 37, "inaccur": 37, "knowledg": [37, 317, 328, 339, 354, 425], "submiss": 37, "fact": [37, 322, 328, 526, 529], "page": [37, 125, 126, 127, 129, 305, 307, 319, 351, 360, 363, 365, 479, 494, 558, 598], "button": [37, 328], "tbf": [37, 318, 357, 577, 588, 591], "isn": [37, 331, 422], "someon": 37, "approach": [37, 128, 310, 325, 328, 331, 338, 339, 349, 351, 353, 354, 422, 498, 511, 566, 581], "spend": 37, "secret": [37, 348, 576, 593, 602], "accident": 37, "hook": 37, "titl": [37, 129, 335, 345, 350], "grammar": 37, "spell": [37, 130], "500": [37, 47, 67, 75, 94, 95, 106, 110, 121, 134, 154, 173, 180, 183, 189, 205, 240, 259, 267, 269, 275, 291, 488], "word": [37, 335, 345, 350, 353, 354, 429, 431, 569], "42": [37, 335, 357, 419, 420, 422, 492, 494, 504, 562], "ticket": 37, "chines": 37, "everyon": 37, "beginn": [37, 353], "patch": 37, "rest": [37, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 133, 134, 312, 319, 569, 582], "attain": 37, "brief": [37, 306, 316, 326], "valid": [37, 134, 303, 311, 320, 322, 325, 344, 345, 354, 367, 417, 464, 488, 510, 516, 565, 576, 578], "typo": 37, "feat": 37, "inv": [37, 423, 429, 600], "refactor": 37, "gulp": 37, "broccoli": 37, "npm": 37, "ci": 37, "perf": 37, "neither": 37, "nor": 37, "chore": 37, "routin": [37, 128, 434, 569], "insight": [37, 45, 259, 301, 317, 352, 354, 589], "feedback": [37, 317], "discourag": 37, "rebas": 37, "workflow": [37, 45, 134, 317, 349, 354, 355, 359, 582], "upstream": [37, 423], "leas": 37, "ping": [37, 592], "await": 37, "unfamiliar": 37, "acronym": 37, "glossari": [37, 312, 319, 562], "approv": 37, "date": [37, 131, 329, 335, 580, 581, 582], "todo": [37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 132, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 307, 329, 346, 347, 427], "dongz": 37, "potenti": [37, 128, 134, 310, 339, 349, 581], "concern": [37, 349, 356, 581], "reach": [37, 311, 314, 325, 331, 335, 353, 423, 428, 431, 434, 511, 526, 529, 581], "action": 37, "realiti": [37, 423], "uncommon": 37, "infrastructur": 37, "vital": 37, "inspect": [37, 38, 348, 576], "failur": [37, 134, 356], "stream": [38, 314, 321, 333, 334, 335, 339, 423, 428, 431], "stdout": 38, "log_level": [38, 128, 134, 346, 416], "permiss": [38, 46, 131, 314, 368, 595], "consol": [38, 321, 323, 328, 336, 338, 348, 353, 432, 582, 598], "frontend": [38, 39, 103, 134, 321, 323, 324, 326, 327, 334, 582, 590], "event": [38, 488], "involvedobject": 38, "warn": [38, 128, 569], "pinpoint": 38, "exec": [38, 590], "diagnost": 38, "forward": [38, 310, 339, 341, 342, 344, 345, 350, 354, 423, 582, 596], "browser": [38, 335], "explain": [38, 325, 335, 418, 576, 581, 600], "leverag": [39, 128, 212, 325, 330, 331, 337, 338, 351, 353, 364, 561, 578, 582, 586], "opentelemetri": 39, "javaag": 39, "agent": 39, "protocol": [39, 306, 326, 327, 330, 348, 356, 576, 582], "java_tool_opt": 39, "TO": 39, "otel_service_nam": 39, "compris": [41, 129, 134, 329, 331, 345, 349, 422], "busi": [41, 128, 320, 322, 335, 339, 348, 349, 350, 356], "e2": [41, 548], "coupl": [41, 351, 356, 549, 578], "entri": [43, 298, 322, 325, 326, 333, 335, 342, 344, 433, 434, 481, 498, 500, 501, 526, 528, 529, 547, 589], "swagger": 43, "shield": 43, "understand": [43, 44, 129, 130, 133, 306, 335, 342, 353, 417, 423, 431, 581], "flex": [43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 129, 134, 212, 300, 305, 306, 310, 312, 329, 589], "destroi": [43, 312, 589], "arch": 45, "amd64": [45, 132], "vscode": 45, "openapi": [45, 46, 125, 127, 134, 305], "middl": [45, 438], "http_port": 45, "8080": [45, 126, 128, 132, 307, 326, 582], "referenc": [45, 134, 361], "pytest": [45, 46, 300], "test_interact": 45, "storedprocedur": [45, 144, 167], "127": [45, 126, 212, 300, 307, 309, 311, 320, 323, 357, 582], "explan": [45, 131, 310, 325, 326, 360, 421], "test_graph": [45, 129, 212, 259, 267, 300, 582], "vertex_typ": [45, 62, 87, 129, 131, 173, 212, 232, 254, 259, 267, 300, 582], "type_nam": [45, 46, 48, 52, 59, 66, 67, 69, 72, 85, 93, 94, 124, 129, 130, 131, 173, 212, 222, 226, 229, 236, 248, 252, 258, 259, 267, 294, 296, 300, 303, 582], "property_nam": [45, 51, 63, 89, 129, 130, 131, 173, 212, 225, 235, 257, 259, 267, 300, 335, 361, 362, 575, 582], "property_typ": [45, 51, 63, 89, 129, 131, 173, 212, 225, 235, 257, 259, 267, 300, 582], "primitive_typ": [45, 81, 101, 129, 131, 173, 212, 251, 259, 266, 267, 269, 300, 326, 582], "dt_signed_int64": [45, 129, 131, 165, 173, 179, 212, 259, 267, 300, 326, 582], "long_text": [45, 97, 113, 129, 131, 173, 212, 259, 263, 267, 282, 300, 582], "dt_signed_int32": [45, 129, 131, 165, 173, 179, 212, 259, 267, 269, 300, 582], "primary_kei": [45, 48, 52, 59, 66, 85, 93, 129, 131, 173, 212, 222, 226, 229, 236, 252, 258, 259, 267, 300, 582], "vertex_type_pair_rel": [45, 48, 59, 85, 129, 131, 173, 212, 222, 229, 252, 259, 267, 300, 582], "source_vertex": [45, 49, 69, 77, 129, 130, 131, 173, 212, 223, 246, 259, 267, 297, 300, 582], "destination_vertex": [45, 49, 69, 77, 129, 130, 131, 173, 212, 223, 246, 259, 267, 297, 300, 582], "many_to_mani": [45, 129, 131, 137, 173, 212, 259, 267, 300, 582], "dt_doubl": [45, 129, 131, 165, 173, 179, 212, 259, 267, 300, 582], "bind": [45, 67, 126, 360, 581], "submit": [45, 95, 129, 133, 174, 183, 269, 303, 306, 310, 312, 322, 327, 328, 333, 334, 335, 350, 353, 418, 419, 432, 578, 596], "datasourc": [45, 46, 67, 129, 185, 348, 602], "graph_id": [45, 46, 61, 67, 94, 95, 106, 107, 109, 110, 154, 173, 174, 180, 183, 205, 212, 231, 240, 259, 260, 267, 269, 275, 278, 279, 291, 300, 301, 303, 306, 576, 582], "csv": [45, 129, 173, 212, 259, 300, 312, 317, 321, 325, 328, 348, 431, 569, 572, 580, 582, 583, 596, 597, 602], "column_map": [45, 54, 76, 124, 129, 130, 173, 212, 228, 242, 259, 294, 300], "edge_map": [45, 76, 105, 129, 130, 173, 212, 242, 259, 270, 300, 303], "type_triplet": [45, 76, 129, 130, 173, 212, 242, 259, 300], "person_knows_person": [45, 129, 130, 173, 212, 259, 300, 582], "source_vertex_map": [45, 76, 129, 130, 173, 212, 242, 259, 300], "destination_vertex_map": [45, 76, 129, 130, 173, 212, 242, 259, 300], "loaderjob": [45, 129], "job_config": 45, "loading_config": [45, 68, 129, 130, 270, 300, 303], "import_opt": [45, 70, 129, 130, 271, 300], "overwrit": [45, 129, 130, 185, 576, 582], "delimit": [45, 129, 130, 321, 325, 431, 571, 583, 597], "header_row": [45, 129, 130, 321, 431, 583], "openapitool": 46, "pythonclientcodegen": 46, "git_user_id": 46, "git_repo_id": 46, "sudo": [46, 300, 424, 593, 594], "apiexcept": [46, 47, 67, 75, 94, 95, 106, 110, 121, 183, 302, 304], "pprint": [46, 47, 67, 75, 94, 95, 106, 110, 121], "localhost": [46, 47, 67, 75, 94, 95, 106, 110, 121, 134, 307, 323, 326, 327, 334, 346, 348, 576, 602], "apicli": [46, 47, 67, 75, 94, 95, 106, 110, 121, 183, 576], "api_cli": [46, 47, 67, 75, 94, 95, 106, 110, 121, 576], "api_inst": [46, 47, 67, 75, 94, 95, 106, 110, 121], "alertapi": 46, "create_alert_receiver_request": [46, 47, 56], "createalertreceiverrequest": [46, 47], "api_respons": [46, 47, 67, 75, 94, 95, 106, 110, 121, 582], "create_alert_receiv": 46, "uri": [46, 47, 67, 75, 94, 95, 106, 110, 121, 134, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 301, 303, 326, 327, 348, 431, 580, 602], "post": [46, 47, 67, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 301, 314, 326, 335, 348, 423, 488, 602], "alert": [46, 47], "delete_alert_message_in_batch": 46, "delete_alert_receiver_by_id": 46, "receiver_id": [46, 47], "delete_alert_rule_by_id": 46, "rule_id": [46, 47], "list_alert_messag": 46, "list_alert_receiv": 46, "list_alert_rul": 46, "update_alert_message_in_batch": 46, "update_alert_receiver_by_id": 46, "update_alert_rule_by_id": 46, "datasourceapi": 46, "bind_datasource_in_batch": 46, "get_datasource_by_id": 46, "unbind_edge_datasourc": 46, "unbind_vertex_datasourc": 46, "deploymentapi": 46, "get_deployment_info": 46, "get_deployment_pod_log": 46, "get_deployment_resource_usag": 46, "get_deployment_statu": 46, "get_storage_usag": 46, "graphapi": 46, "create_edge_typ": [46, 59, 229, 259, 303, 582], "create_graph": [46, 259, 267, 300, 303, 582], "create_vertex_typ": [46, 66, 236, 259, 303, 582], "delete_edge_type_by_nam": 46, "delete_graph_by_id": 46, "delete_vertex_type_by_nam": 46, "get_graph_by_id": 46, "get_schema_by_id": 46, "import_schema_by_id": 46, "list_graph": [46, 259, 303], "jobapi": 46, "delete_job_by_id": 46, "job_id": [46, 58, 95, 129, 174, 212, 259, 260, 261, 300, 301, 303], "get_dataloading_job_config": 46, "dataload": [46, 95, 173, 174, 212, 259, 260, 301, 346, 347], "get_job_by_id": 46, "list_job": [46, 260, 303], "submit_dataloading_job": 46, "serviceapi": 46, "get_service_status_by_id": 46, "list_service_statu": 46, "restart_servic": [46, 275, 303], "start_servic": [46, 275, 300, 303], "stop_servic": [46, 275, 300, 303], "storedprocedureapi": 46, "create_stored_procedur": 46, "storedproc": [46, 110, 128, 132, 306, 308, 311], "delete_stored_procedure_by_id": 46, "stored_procedure_id": [46, 65, 110], "get_stored_procedure_by_id": 46, "list_stored_procedur": 46, "update_stored_procedure_by_id": 46, "utilsapi": 46, "upload_fil": [46, 303], "baseedgetyp": [46, 212, 301], "baseedgetypevertextypepairrelationsinn": [46, 48, 59, 85, 136, 143, 166, 212, 222, 229, 252, 259, 301, 582], "baseedgetypevertextypepairrelationsinnerxcsrparam": [46, 49, 137, 212, 223, 301], "basepropertymeta": [46, 212, 301], "basevertextyp": [46, 212, 301], "basevertextypexcsrparam": [46, 52, 66, 93, 140, 150, 172, 212, 226, 236, 258, 301], "columnmap": [46, 76, 124, 156, 208, 212, 242, 294, 301], "columnmappingcolumn": [46, 54], "createalertrulerequest": [46, 47], "createdataloadingjobrespons": [46, 95], "createedgetyp": [46, 62, 94, 146, 212, 232, 301, 303, 582], "creategraphrequest": [46, 94, 173, 212, 259, 267, 300, 301, 303, 582], "creategraphrespons": [46, 94, 173, 212, 259, 301, 303], "creategraphschemarequest": [46, 60, 94, 144, 212, 230, 301], "createpropertymeta": [46, 59, 66, 143, 150, 212, 229, 236, 259, 301, 582], "createstoredprocrequest": [46, 60, 110], "createstoredprocrespons": [46, 110], "createvertextyp": [46, 62, 94, 146, 212, 232, 301, 303, 582], "dataloadingjobconfig": [46, 95], "dataloadingjobconfigedgesinn": [46, 68], "dataloadingjobconfigloadingconfig": [46, 68], "dataloadingjobconfigloadingconfigformat": [46, 70], "dataloadingjobconfigverticesinn": [46, 68], "dataloadingmrjobconfig": [46, 95], "datetyp": [46, 212, 301], "edgemappingtypetriplet": [46, 76, 156, 212, 242, 301], "fixedchar": [46, 212, 301], "fixedcharchar": [46, 79, 113, 163, 196, 212, 249, 282, 301], "gsdatatyp": [46, 51, 63, 89, 99, 117, 139, 149, 171, 178, 183, 200, 212, 225, 235, 257, 259, 265, 269, 286, 301, 582], "getalertmessagerespons": [46, 47], "getalertreceiverrespons": [46, 47], "getalertrulerespons": [46, 47], "getedgetyp": [46, 87, 168, 212, 254, 301], "getgraphrespons": [46, 94, 173, 190, 212, 259, 276, 301, 303], "getgraphschemarespons": [46, 86, 94, 167, 173, 212, 253, 259, 301, 303], "getpodlogrespons": [46, 75], "getpropertymeta": [46, 85, 93, 166, 172, 212, 252, 258, 301], "getresourceusagerespons": [46, 75], "getstorageusagerespons": [46, 75], "getstoredprocrespons": [46, 86, 110], "getvertextyp": [46, 87, 168, 212, 254, 301], "jobstatu": [46, 95, 174, 212, 260, 301, 303], "longtext": [46, 196, 212, 301], "nodestatu": [46, 104], "podstatu": [46, 104], "primitivetyp": [46, 165, 183, 212, 269, 301], "resourceusag": [46, 90], "runningdeploymentinfo": [46, 75], "runningdeploymentstatu": [46, 75], "schemamap": [46, 67, 167, 173, 212, 253, 259, 300, 301, 303], "servicestatu": [46, 106, 189, 212, 275, 301, 303], "servicestatussdkendpoint": [46, 107], "startservicerequest": [46, 106, 189, 212, 275, 300, 301, 303, 306], "storedproceduremeta": [46, 212, 301], "stringtyp": [46, 212, 301], "stringtypestr": [46, 81, 112, 165, 195, 212, 251, 281, 301], "temporaltyp": [46, 212, 301], "temporaltypetempor": [46, 81, 114, 165, 197, 212, 251, 283, 301], "timestamptyp": [46, 212, 301], "typedvalu": [46, 182, 183, 212, 268, 269, 301], "updatealertmessagestatusrequest": [46, 47], "updatestoredprocrequest": [46, 110], "uploadfilerespons": [46, 121, 212, 301, 303], "varchar": [46, 196, 212, 301], "varcharvarchar": [46, 113, 122, 196, 203, 212, 282, 289, 301], "inc": 46, "No": [47, 67, 75, 94, 95, 106, 110, 121, 130, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291, 314, 333, 569], "200": [47, 67, 75, 94, 95, 106, 110, 121, 134, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291, 335, 417, 575, 585, 601], "back": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 335, 338, 344, 427, 581, 589], "message_id": [47, 118], "message_ids_exampl": 47, "comma": [47, 418], "id1": [47, 600], "id2": [47, 600], "id3": 47, "Not": [47, 67, 75, 94, 95, 106, 110, 154, 173, 174, 180, 189, 205, 240, 259, 260, 267, 275, 291, 310, 569, 582], "receiver_id_exampl": 47, "rule_id_exampl": 47, "alert_typ": 47, "start_tim": [47, 96, 107, 262, 276], "end_tim": [47, 96, 262], "get_alert_message_respons": [47, 82], "alert_type_exampl": 47, "status_exampl": 47, "severity_exampl": 47, "start_time_exampl": 47, "02": [47, 68, 335, 496], "56": [47, 68, 335, 357, 468, 562], "30": [47, 68, 335, 357, 419, 420, 422, 493, 538, 540, 545, 582, 600], "end_time_exampl": 47, "quot": [47, 130], "get_alert_receiver_respons": [47, 83], "get_alert_rule_respons": [47, 84], "update_alert_message_status_request": [47, 118], "create_alert_rule_request": [47, 57], "base_edge_typ": [48, 222], "base_edge_type_inst": [48, 222], "from_json": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297], "to_json": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297], "base_edge_type_dict": [48, 222], "to_dict": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297], "base_edge_type_from_dict": 48, "from_dict": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 300, 582], "x_csr_param": [49, 52, 66, 93, 130, 131, 223, 226, 236, 258, 271], "base_edge_type_vertex_type_pair_relations_inn": [49, 223], "base_edge_type_vertex_type_pair_relations_inner_inst": [49, 223], "base_edge_type_vertex_type_pair_relations_inner_dict": [49, 223], "base_edge_type_vertex_type_pair_relations_inner_from_dict": 49, "edge_storage_strategi": [50, 131, 224], "base_edge_type_vertex_type_pair_relations_inner_x_csr_param": [50, 224], "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_inst": [50, 224], "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_dict": [50, 224], "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_from_dict": 50, "nullabl": [51, 63, 89], "default_valu": [51, 63, 89], "base_property_meta": [51, 225], "base_property_meta_inst": [51, 225], "base_property_meta_dict": [51, 225], "base_property_meta_from_dict": 51, "base_vertex_typ": [52, 226], "base_vertex_type_inst": [52, 226], "base_vertex_type_dict": [52, 226], "base_vertex_type_from_dict": 52, "max_vertex_num": [53, 131, 227], "base_vertex_type_x_csr_param": [53, 227], "base_vertex_type_x_csr_params_inst": [53, 227], "base_vertex_type_x_csr_params_dict": [53, 227], "base_vertex_type_x_csr_params_from_dict": 53, "var_properti": [54, 228, 243, 244], "align": [54, 128, 129, 130, 131, 142, 228, 307, 322, 333, 342, 353, 417, 420, 421, 520, 581], "column_mapping_inst": [54, 228], "column_mapping_dict": [54, 228], "column_mapping_from_dict": 54, "column_mapping_column": 55, "column_mapping_column_inst": 55, "column_mapping_column_dict": 55, "column_mapping_column_from_dict": 55, "webhook_url": [56, 83], "at_user_id": [56, 83], "is_at_al": [56, 83], "create_alert_receiver_request_inst": 56, "create_alert_receiver_request_dict": 56, "create_alert_receiver_request_from_dict": 56, "metric_typ": [57, 82, 84], "conditions_descript": [57, 84], "frequenc": [57, 84, 443], "create_alert_rule_request_inst": 57, "create_alert_rule_request_dict": 57, "create_alert_rule_request_from_dict": 57, "create_dataloading_job_respons": [58, 95], "create_dataloading_job_response_inst": 58, "create_dataloading_job_response_dict": 58, "create_dataloading_job_response_from_dict": 58, "create_edge_type_inst": [59, 229], "create_edge_type_dict": [59, 229], "create_edge_type_from_dict": 59, "stored_procedur": [60, 86, 230, 253], "var_schema": [60, 86, 230, 253], "create_graph_request": [60, 94, 230, 259, 267, 300, 582], "create_graph_request_inst": [60, 230], "create_graph_request_dict": [60, 230], "create_graph_request_from_dict": 60, "create_graph_respons": [61, 94, 231], "create_graph_response_inst": [61, 231], "create_graph_response_dict": [61, 231], "create_graph_response_from_dict": 61, "create_graph_schema_request": [62, 94, 232], "create_graph_schema_request_inst": [62, 232], "create_graph_schema_request_dict": [62, 232], "create_graph_schema_request_from_dict": 62, "create_property_meta": [63, 235], "create_property_meta_inst": [63, 235], "create_property_meta_dict": [63, 235], "create_property_meta_from_dict": 63, "create_stored_proc_request": [64, 110], "create_stored_proc_request_inst": 64, "create_stored_proc_request_dict": 64, "create_stored_proc_request_from_dict": 64, "create_stored_proc_respons": [65, 110], "create_stored_proc_response_inst": 65, "create_stored_proc_response_dict": 65, "create_stored_proc_response_from_dict": 65, "create_vertex_type_inst": [66, 236], "create_vertex_type_dict": [66, 236], "create_vertex_type_from_dict": 66, "schema_map": [67, 105, 259, 270, 303], "graph_id_exampl": [67, 94, 95, 106, 110], "400": [67, 94, 95, 106, 110, 134, 154, 173, 180, 205, 240, 259, 267, 291, 575], "bad": [67, 94, 95, 106, 110, 154, 180, 205, 240, 267, 291, 325], "source_vertex_typ": [67, 94, 303], "destination_vertex_typ": [67, 94, 303], "unbind": 67, "ourc": 67, "type_name_exampl": [67, 94], "source_vertex_type_exampl": [67, 94], "destination_vertex_type_exampl": [67, 94], "repeat": [68, 331, 353, 354, 423, 429, 503, 508, 511, 531, 534, 600], "dataloading_job_config": [68, 95], "dataloading_job_config_inst": 68, "dataloading_job_config_dict": 68, "dataloading_job_config_from_dict": 68, "dataloading_job_config_edges_inn": 69, "dataloading_job_config_edges_inner_inst": 69, "dataloading_job_config_edges_inner_dict": 69, "dataloading_job_config_edges_inner_from_dict": 69, "dataloading_job_config_loading_config": 70, "dataloading_job_config_loading_config_inst": 70, "dataloading_job_config_loading_config_dict": 70, "dataloading_job_config_loading_config_from_dict": 70, "dataloading_job_config_loading_config_format": 71, "dataloading_job_config_loading_config_format_inst": 71, "dataloading_job_config_loading_config_format_dict": 71, "dataloading_job_config_loading_config_format_from_dict": 71, "dataloading_job_config_vertices_inn": 72, "dataloading_job_config_vertices_inner_inst": 72, "dataloading_job_config_vertices_inner_dict": 72, "dataloading_job_config_vertices_inner_from_dict": 72, "dataloading_mr_job_config": [73, 95], "dataloading_mr_job_config_inst": 73, "dataloading_mr_job_config_dict": 73, "dataloading_mr_job_config_from_dict": 73, "date32": [74, 115, 131, 151, 198, 237, 284], "date_typ": [74, 237], "date_type_inst": [74, 237], "date_type_dict": [74, 237], "date_type_from_dict": 74, "running_deployment_info": [75, 103], "pod_nam": [75, 582, 590, 595], "from_cach": 75, "deprec": [75, 431, 449, 547], "get_pod_log_respons": [75, 88], "pod_name_exampl": 75, "component_exampl": 75, "get_resource_usage_respons": [75, 90], "running_deployment_statu": [75, 104], "groot": [75, 301, 319, 331, 349, 356], "get_storage_usage_respons": [75, 91], "edge_mapping_inst": [76, 242], "edge_mapping_dict": [76, 242], "edge_mapping_from_dict": 76, "edge_mapping_type_triplet": [77, 246], "edge_mapping_type_triplet_inst": [77, 246], "edge_mapping_type_triplet_dict": [77, 246], "edge_mapping_type_triplet_from_dict": 77, "error_inst": 78, "error_dict": 78, "error_from_dict": 78, "char": [79, 113, 130, 131, 249, 282, 428, 431, 581], "fixed_char": [79, 131, 249], "fixed_char_inst": [79, 249], "fixed_char_dict": [79, 249], "fixed_char_from_dict": 79, "fixed_length": [80, 131, 250], "fixed_char_char": [80, 250], "fixed_char_char_inst": [80, 250], "fixed_char_char_dict": [80, 250], "fixed_char_char_from_dict": 80, "tempor": [81, 114, 165, 197, 251, 283, 329, 333], "gs_data_typ": [81, 251], "gs_data_type_inst": [81, 251], "gs_data_type_dict": [81, 251], "gs_data_type_from_dict": 81, "alert_nam": 82, "trigger_tim": 82, "get_alert_message_response_inst": 82, "get_alert_message_response_dict": 82, "get_alert_message_response_from_dict": 82, "get_alert_receiver_response_inst": 83, "get_alert_receiver_response_dict": 83, "get_alert_receiver_response_from_dict": 83, "get_alert_rule_response_inst": 84, "get_alert_rule_response_dict": 84, "get_alert_rule_response_from_dict": 84, "type_id": [85, 93, 248, 252, 258, 296], "get_edge_typ": [85, 252], "get_edge_type_inst": [85, 252], "get_edge_type_dict": [85, 252], "get_edge_type_from_dict": 85, "store_typ": [86, 253], "creation_tim": [86, 100, 103, 253, 256], "data_update_tim": [86, 253], "schema_update_tim": 86, "get_graph_respons": [86, 94, 253], "get_graph_response_inst": [86, 253], "get_graph_response_dict": [86, 253], "get_graph_response_from_dict": 86, "get_graph_schema_respons": [87, 94, 254], "get_graph_schema_response_inst": [87, 254], "get_graph_schema_response_dict": [87, 254], "get_graph_schema_response_from_dict": 87, "get_pod_log_response_inst": 88, "get_pod_log_response_dict": 88, "get_pod_log_response_from_dict": 88, "property_id": [89, 257, 362], "get_property_meta": [89, 257], "get_property_meta_inst": [89, 257], "get_property_meta_dict": [89, 257], "get_property_meta_from_dict": 89, "cpu_usag": [90, 98, 100], "memory_usag": [90, 98, 100], "get_resource_usage_response_inst": 90, "get_resource_usage_response_dict": 90, "get_resource_usage_response_from_dict": 90, "storage_usag": 91, "get_storage_usage_response_inst": 91, "get_storage_usage_response_dict": 91, "get_storage_usage_response_from_dict": 91, "bound_graph": [92, 256], "get_stored_proc_respons": [92, 110], "get_stored_proc_response_inst": 92, "get_stored_proc_response_dict": 92, "get_stored_proc_response_from_dict": 92, "get_vertex_typ": [93, 258], "get_vertex_type_inst": [93, 258], "get_vertex_type_dict": [93, 258], "get_vertex_type_from_dict": 93, "delete_schedul": 95, "job_id_exampl": 95, "mapreduc": [95, 582], "job_statu": [95, 96, 262], "logview": 96, "job_status_inst": [96, 262], "job_status_dict": [96, 262], "job_status_from_dict": 96, "long_text_inst": [97, 263], "long_text_dict": [97, 263], "long_text_from_dict": 97, "disk_usag": 98, "node_statu": 98, "node_status_inst": 98, "node_status_dict": 98, "node_status_from_dict": 98, "allow_cast": [99, 265], "parameter_inst": [99, 265], "parameter_dict": [99, 265], "parameter_from_dict": 99, "restart_count": 100, "timestamp": [100, 102, 115, 116, 131, 198, 199, 284, 285, 580, 582], "component_belong_to": 100, "pod_statu": 100, "pod_status_inst": 100, "pod_status_dict": 100, "pod_status_from_dict": 100, "primitive_type_inst": [101, 266], "primitive_type_dict": [101, 266], "primitive_type_from_dict": 101, "resource_usag": 102, "resource_usage_inst": 102, "resource_usage_dict": 102, "resource_usage_from_dict": 102, "instance_nam": 103, "running_deployment_info_inst": 103, "running_deployment_info_dict": 103, "running_deployment_info_from_dict": 103, "running_deployment_status_inst": 104, "running_deployment_status_dict": 104, "running_deployment_status_from_dict": 104, "schema_mapping_inst": [105, 270], "schema_mapping_dict": [105, 270], "schema_mapping_from_dict": 105, "service_statu": [106, 107, 276], "start_service_request": [106, 109, 275, 278, 300, 303], "sdk_endpoint": 107, "service_status_inst": [107, 276], "service_status_dict": [107, 276], "service_status_from_dict": 107, "cypher": [108, 128, 129, 132, 133, 134, 147, 170, 180, 194, 267, 298, 306, 311, 312, 320, 321, 322, 323, 324, 325, 326, 328, 330, 349, 350, 351, 355, 356, 432, 576], "hqp": [108, 134], "service_status_sdk_endpoint": 108, "service_status_sdk_endpoints_inst": 108, "service_status_sdk_endpoints_dict": 108, "service_status_sdk_endpoints_from_dict": 108, "start_service_request_inst": [109, 278], "start_service_request_dict": [109, 278], "start_service_request_from_dict": 109, "stored_procedure_id_exampl": 110, "update_stored_proc_request": [110, 119], "stored_procedure_meta": [111, 280], "stored_procedure_meta_inst": [111, 280], "stored_procedure_meta_dict": [111, 280], "stored_procedure_meta_from_dict": 111, "string_typ": [112, 281], "string_type_inst": [112, 281], "string_type_dict": [112, 281], "string_type_from_dict": 112, "var_char": [113, 122, 131, 282, 289], "string_type_str": [113, 282], "string_type_string_inst": [113, 282], "string_type_string_dict": [113, 282], "string_type_string_from_dict": 113, "temporal_typ": [114, 283], "temporal_type_inst": [114, 283], "temporal_type_dict": [114, 283], "temporal_type_from_dict": 114, "temporal_type_tempor": [115, 284], "temporal_type_temporal_inst": [115, 284], "temporal_type_temporal_dict": [115, 284], "temporal_type_temporal_from_dict": 115, "time_stamp_typ": [116, 285], "time_stamp_type_inst": [116, 285], "time_stamp_type_dict": [116, 285], "time_stamp_type_from_dict": 116, "typed_valu": [117, 286], "typed_value_inst": [117, 286], "typed_value_dict": [117, 286], "typed_value_from_dict": 117, "update_alert_message_status_request_inst": 118, "update_alert_message_status_request_dict": 118, "update_alert_message_status_request_from_dict": 118, "update_stored_proc_request_inst": 119, "update_stored_proc_request_dict": 119, "update_stored_proc_request_from_dict": 119, "file_path": [120, 288], "upload_file_respons": [120, 121, 288], "upload_file_response_inst": [120, 288], "upload_file_response_dict": [120, 288], "upload_file_response_from_dict": 120, "filestorag": [121, 303], "bytearrai": [121, 299], "multipart": 121, "var_char_inst": [122, 289], "var_char_dict": [122, 289], "var_char_from_dict": 122, "max_length": [123, 131, 290], "var_char_var_char": [123, 290], "var_char_var_char_inst": [123, 290], "var_char_var_char_dict": [123, 290], "var_char_var_char_from_dict": 123, "vertex_mapping_inst": [124, 294], "vertex_mapping_dict": [124, 294], "vertex_mapping_from_dict": 124, "stub": [125, 127, 305, 357, 363, 365, 498, 526, 529], "openapi_coordin": [125, 127], "redeploi": 126, "what": [126, 128, 307, 314, 321, 335, 336, 353, 428, 515, 569, 575, 581], "gs_interactive_default_graph": [126, 306, 307, 311], "shutdown": [126, 307, 346], "uninstal": [126, 307, 314, 321, 595], "v0": [128, 309, 357, 424, 572], "admin": [128, 132, 133, 134, 275, 298, 303, 309, 310, 325, 431, 582], "7777": [128, 132, 134, 212, 300, 309, 311], "10000": [128, 132, 134, 212, 300, 309, 311, 566], "7687": [128, 132, 134, 212, 300, 309, 310, 311, 320, 321, 323, 327, 328], "meta": [128, 132, 134, 303, 323, 325, 329, 339, 348, 359, 420, 421, 580, 582], "8081": [128, 132], "7778": [128, 132], "7688": [128, 132], "10001": [128, 132, 418, 419, 420, 422], "tailor": [128, 325], "interactive_config": 128, "unconfigur": 128, "glimps": 128, "fatal": 128, "verbose_level": 128, "compute_engin": [128, 134], "thread_num_per_work": [128, 134], "planner": [128, 134, 311, 319, 325], "is_on": [128, 134], "rbo": [128, 134, 322, 325], "filtermatchrul": [128, 134, 325], "filterintojoinrul": [128, 134, 325], "notexisttoantijoinrul": 128, "query_timeout": [128, 134], "20000": 128, "timeout": [128, 314, 323, 324, 582], "millisecond": [128, 131, 329, 333, 357, 580], "hiactor": [128, 134, 349], "seastar": [128, 134], "smp": 128, "autonom": [128, 566, 568], "promis": [128, 354], "cooper": [128, 417, 431], "micro": 128, "significantli": [128, 325, 328, 331, 352, 355], "throughput": [128, 310, 312, 320, 322, 349, 355, 356, 582], "delai": [128, 584], "idl": 128, "rout": [128, 520], "problemat": 128, "queryservic": 128, "adminservic": [128, 133], "crucial": [128, 131, 134, 349], "heavi": 128, "4409": 128, "alloc": [128, 314, 331, 340, 344], "exclus": [128, 131, 329], "won": [128, 423, 584], "declin": 128, "peak": 128, "concurr": [128, 310, 312, 331, 349, 419], "http_servic": [128, 134], "sharding_mod": 128, "hierarchi": [128, 130], "propertynam": [128, 139, 149, 171, 582], "databas": [128, 133, 134, 308, 314, 320, 322, 325, 329, 330, 333, 335, 349, 351, 353, 355, 357, 582, 592], "benefit": [128, 334, 348, 352, 581], "wal_uri": 128, "graph_data_dir": 128, "wal": [128, 134, 351, 578], "popul": [128, 468, 469, 471, 472, 474, 476, 479, 481, 483, 484, 487, 498, 500, 501, 503, 505, 506, 507, 513, 514, 515, 521, 522, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 564, 571], "claus": [128, 310, 330], "calcit": [128, 321, 325], "notmatchtoantijoinrul": [128, 134], "transform": [128, 322, 325, 335, 359, 371, 384, 561, 569, 570, 574, 580], "anti": [128, 329, 349, 353, 356], "3000000": [128, 323, 324, 582], "repli": [128, 335], "max_content_length": 128, "1gb": [128, 347], "length": [128, 131, 299, 306, 313, 317, 326, 329, 333, 335, 348, 353, 360, 421, 434, 473, 475, 480, 502, 523, 527, 533, 555, 564, 569, 602], "string_default_max_length": 128, "256": [128, 341, 345, 346, 347, 350, 357, 498, 558, 582, 596], "definit": [129, 134, 333, 349, 434, 515, 516, 518], "comprehens": [129, 212, 310, 320, 325, 349, 355, 357, 358], "consult": [129, 132], "dataourc": 129, "xxx": [129, 320, 324, 328, 427, 431, 576, 592], "desc": [129, 311, 326, 333, 335], "hangzhou": [129, 348, 418, 602], "taglin": 129, "born": 129, "acted_in": [129, 325], "review": [129, 349, 360, 434, 498, 516], "wrote": 129, "graph_algo": 129, "seek": [129, 428], "larger": [129, 310, 325, 331, 335, 345, 516], "imdb": 129, "delv": 130, "deeper": [130, 325], "thorough": [130, 320], "data_sourc": [130, 271, 300, 303], "col_nam": 130, "disregard": 130, "examin": [130, 350], "modern_graph_import": 130, "showcas": 130, "dissect": 130, "prepend": [130, 306], "build_csr_in_mem": [130, 274], "use_mmap_vector": [130, 274], "quote_char": 130, "double_quot": 130, "escape_char": 130, "block_siz": 130, "4mb": 130, "dst_id": [130, 418, 419, 420, 422, 423, 429, 433], "person_created_softwar": 130, "dd_graph": 130, "your_proj_nam": 130, "table_nam": 130, "partition_col_nam": 130, "partition_nam": 130, "src_user_id": 130, "dst_user_id": 130, "mandatori": [130, 131, 350, 418], "ye": [130, 317, 569], "escap": 130, "header": [130, 321, 326, 431, 581, 582], "null_valu": 130, "recogn": [130, 581, 582], "null": [130, 329, 333, 434, 451, 467, 468, 475, 482, 534, 564, 569], "batch_siz": [130, 342, 344, 346, 347, 417, 421, 422, 423, 426, 429, 585, 601], "mmap_vector": 130, "mmap_arrai": 130, "triplet": [130, 325, 331], "outlin": [130, 323, 325, 326, 329], "seamlessli": [130, 212, 300, 301, 307, 317, 321, 325, 326, 330, 336, 338, 349, 355, 356], "encompass": [131, 327, 334, 345], "friendship": 131, "peopl": [131, 322, 328, 335, 569], "since_d": 131, "terminologi": [131, 329], "delin": 131, "plan": [131, 134, 310, 311, 322, 325, 326, 329, 349, 351, 352, 353, 364, 582, 590], "dt_unsigned_int32": [131, 165, 179], "dt_unsigned_int64": [131, 165, 179], "character": [131, 421], "symbol": 131, "skill": 131, "profici": [131, 335], "one_to_on": [131, 137], "one_to_mani": [131, 137], "many_to_on": [131, 137], "mmap": 131, "48": [131, 317, 357, 419, 420, 422, 521, 522, 568], "only_in": [131, 138], "only_out": [131, 138], "both_out_in": [131, 138], "pertain": [131, 321], "dt_bool": [131, 165, 179], "dt_float": [131, 165, 179], "categor": [131, 134, 310, 342], "subtyp": 131, "unlimit": 131, "text": [131, 183, 269, 354, 362, 470], "desir": [131, 311, 331, 431, 488, 510, 530, 532, 533], "restrict": 131, "uint32": [131, 329], "situat": [131, 333, 335, 338, 418, 419, 582], "df_yyyy_mm_dd": 131, "iso": 131, "2019": [131, 562], "01": [131, 335, 341, 345, 347, 350, 360, 418, 434, 493, 596], "date_format": 131, "tf_hh_mm_ss_sss": 131, "00": [131, 320, 335], "000": [131, 321, 335, 357], "time_format": 131, "tzf_utc": 131, "tzf_offset": 131, "time_zone_format": 131, "dtf_yyyy_mm_dd_hh_mm_ss_sss": 131, "date_time_format": 131, "int32": [131, 329, 341, 345, 350, 418, 420, 428, 429, 580, 596], "1970": 131, "time32": 131, "midnight": 131, "int64": [131, 329, 348, 362, 388, 410, 418, 420, 421, 426, 428, 429, 431, 576, 580, 602], "000000": 131, "zone": [131, 329], "signifi": [131, 453, 454], "integ": [131, 135, 141, 159, 162, 164, 166, 167, 169, 170, 171, 172, 176, 188, 190, 191, 204, 205, 210, 211, 299, 325, 329, 333, 434, 469, 472, 473, 474, 475, 476, 478, 480, 481, 483, 484, 487, 488, 491, 492, 493, 494, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 534, 547, 561, 562, 563, 564, 566, 569, 580], "januari": 131, "timezon": 131, "albeit": 131, "previous": [131, 335, 505, 506, 507, 580, 581], "mention": [131, 333, 335, 580, 581, 590], "component_typ": 131, "overflow": 131, "truncat": [131, 554, 555, 556, 561], "flexbuild": [132, 589], "arm64": [132, 309], "qemu": 132, "slower": 132, "buildx": 132, "manifest": 132, "your_image_registri": 132, "transact": [133, 306, 331, 349, 355, 356, 357, 578, 592], "setuptool": 133, "regist": [133, 180, 183, 212, 300, 307, 308, 310, 322, 325, 348, 359, 362, 391, 576], "decod": [133, 212, 301, 326, 417, 418, 419, 429, 601], "debian": 134, "redhat": 134, "22": [134, 335, 357, 419, 420, 422, 431, 562, 580], "x86": 134, "incompat": [134, 520, 581], "gen_code_from_plan": 134, "physic": [134, 311, 321, 322, 325, 326, 349, 360, 434, 492, 493, 494, 516, 580], "graph_db": [134, 306], "graphdb": [134, 306], "hqps_db": 134, "http_server": 134, "httpd": 134, "dockerfil": [134, 338, 424], "openapi_interact": [134, 305], "immutable_graph": 134, "rt_mutable_graph": 134, "mutable_csr": [134, 167, 188, 274], "third_parti": 134, "parti": [134, 349, 549], "lego": 134, "clariti": [134, 329], "gaia": [134, 320, 349, 600], "ir": [134, 321, 322, 323, 349, 351], "submodul": [134, 424, 427, 581], "pexperiment": 134, "build_test": 134, "build_doc": 134, "build_odps_fragment_load": 134, "odp": [134, 186, 312, 418], "use_pthash": 134, "hash": [134, 418, 431], "optimize_for_host": 134, "accuraci": [134, 325, 346, 347, 354], "establish": [134, 307, 309, 317, 582], "workspac": [134, 346], "github_workspac": 134, "flex_data_dir": 134, "tmp_interactive_workspac": 134, "interactive_workspac": 134, "schema_fil": 134, "bulk_load_fil": 134, "bulk_load": [134, 259, 260, 300, 303], "cp": [134, 321, 323, 326, 566, 581], "glog_v": 134, "akin": 134, "hous": [134, 349, 543, 544], "temp_workspac": 134, "graph_meta": 134, "indices_lock": 134, "job_meta": 134, "plugin_meta": 134, "plugins_lock": 134, "running_graph": 134, "subsequ": [134, 320, 321, 322, 323, 325, 334, 360, 418, 419], "hqps_admin_test": 134, "default_graph": 134, "interactive_config_test": 134, "mcsr": 134, "metadata_stor": 134, "reader": [134, 428], "interv": [134, 329, 488, 520, 576], "1000": [134, 212, 333, 360, 419, 434, 566, 569, 582], "statist": [134, 173, 259, 301, 303, 322, 325, 326, 329, 335, 420], "86400000": 134, "default_listen_address": 134, "bolt_connector": [134, 310], "gremlin_connector": 134, "8182": [134, 320, 321, 323, 334], "40000": 134, "gremlin_script_language_nam": 134, "antlr_gremlin_calcit": [134, 321], "admin_port": 134, "query_port": 134, "interactive_serv": 134, "engine_config": [134, 576], "subprocess": 134, "bodi": [134, 183, 269, 326, 423, 427, 535], "ok": [134, 300, 302, 304, 326, 359], "invalid_argu": 134, "unsupported_oper": 134, "not_found": 134, "404": [134, 154, 173, 180, 205, 240, 259, 267, 291], "already_exist": 134, "409": [134, 154, 205, 240, 291], "permission_deni": 134, "403": 134, "codegen_error": 134, "invalid_schema": 134, "101": [134, 360, 598], "illegal_oper": 134, "102": [134, 429, 565], "internal_error": 134, "103": 134, "invalid_import_fil": 134, "104": 134, "io_error": 134, "105": [134, 357, 489, 490], "query_fail": 134, "106": 134, "readtransact": [134, 306], "updatetransact": [134, 306], "inserttransact": 134, "throughout": [134, 321, 322, 333], "ahead": [134, 351, 578], "reliabl": [134, 522], "aris": [134, 537], "unforeseen": 134, "bug": 134, "mechan": [134, 335, 351, 354, 356, 578, 586], "failov": [134, 338, 356], "primarykei": [136, 140, 143, 150, 166, 172], "vertextypepairrel": [136, 143, 166], "sourcevertex": [137, 160, 211], "destinationvertex": [137, 160, 211], "xcsrparam": [137, 140, 150, 172, 185], "edgestoragestrategi": 138, "sortoncompact": 138, "boolean": [138, 170, 178, 188, 190, 194, 329, 333, 348, 360, 362, 419, 423, 434, 453, 454, 491, 493, 496, 527, 567, 580], "oemut": 138, "iemut": 138, "propertytyp": [139, 149, 171], "maxvertexnum": 141, "edgemappingsourcevertexmappingsinnercolumn": [142, 157, 158, 212, 228, 243, 244, 301], "createprocedurerequest": [144, 180, 212, 230, 267, 300, 301, 303, 306], "vertextyp": [146, 168], "edgetyp": [146, 168, 571], "procedureid": [148, 180, 183], "edgelabel": [152, 154, 155, 161, 333, 381], "srclabel": [152, 154, 155, 161, 582], "dstlabel": [152, 154, 155, 161, 582], "srcprimarykeyvalu": [152, 154, 155, 161], "dstprimarykeyvalu": [152, 154, 155, 161], "primarykeyvalu": [153, 205, 209], "interactive_admin_endpoint": [154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 298, 300, 301, 306, 309, 311, 582], "deleteedg": [154, 301], "edgerequest": [154, 207, 212, 240, 293, 301, 303, 582], "edgerequest3": 154, "aslist": [154, 205], "addpropertiesitem": [154, 205], "123": [154, 240, 259, 418], "edgerequest4": 154, "233": [154, 240], "arraylist": 154, "addedgerespons": 154, "isok": [154, 173, 174, 180, 183, 189, 205, 212, 306], "println": [154, 173, 174, 180, 183, 189, 205, 212, 306, 326], "getstatusmessag": [154, 173, 174, 180, 183, 189, 205, 212, 306], "edgedata": [154, 212, 240, 301], "getedgerespons": 154, "getproperti": 154, "getnam": [154, 205], "parsedoubl": 154, "tostr": [154, 212, 326, 359, 583], "assert": [154, 205, 240, 259, 260, 267, 269, 275, 291, 300, 306, 334, 360, 581, 582], "updateedgerequest": 154, "updateedgerespons": 154, "typetriplet": 156, "sourcevertexmap": 156, "edgemappingsourcevertexmappingsinn": [156, 212, 242, 301], "destinationvertexmap": 156, "edgemappingdestinationvertexmappingsinn": [156, 212, 242, 301], "typeid": [162, 166, 172, 210], "vertextypepairstatist": [162, 212, 248, 301], "_char": [163, 196], "fixedlength": 164, "signed_int32": [165, 179, 183], "unsigned_int32": [165, 179], "signed_int64": [165, 179], "unsigned_int64": [165, 179], "dt_string": [165, 179], "storetyp": 167, "creationtim": [167, 170], "dataupdatetim": 167, "getprocedurerespons": [167, 180, 212, 253, 267, 301, 303], "dataimportconfig": 167, "remotepath": 167, "totalvertexcount": 169, "totaledgecount": 169, "vertextypestatist": 169, "vertexstatist": [169, 212, 255, 301], "edgetypestatist": 169, "edgestatist": [169, 212, 255, 301], "boundgraph": 170, "updatetim": 170, "propertyid": 171, "getallgraph": 173, "getr": [173, 174, 180], "got": [173, 174, 180, 259], "privat": [173, 212, 326], "modern_graph_schema_json": 173, "fromjson": [173, 212], "rep": [173, 212], "getgraphid": [173, 212], "badrequest": [173, 259], "jobrespons": [173, 212, 259, 301, 303], "modern_graph_bulk_loading_json": 173, "throw": [173, 180, 183, 212, 269, 306, 326, 422], "ioexcept": [173, 212, 306], "getjobid": [173, 212], "deleter": [173, 180], "getgraphresponseresult": 173, "getgraphstatisticsrespons": [173, 212, 259, 301, 303], "503": [173, 259], "unavail": [173, 259, 326], "getschema": 173, "jobid": [174, 175, 212, 260], "histori": [174, 260, 333, 335, 353], "bulkload": [174, 212, 300, 301], "graphmanagementapi": [174, 212, 301], "getjobr": 174, "getjobstatu": [174, 212, 300], "getjobsr": 174, "starttim": [176, 190], "endtim": 176, "allowcast": 178, "procedure_id": [180, 212, 234, 267, 301, 303], "createprocedurerespons": [180, 212, 267, 301, 303, 306], "cppstoredprocedur": [180, 183, 269], "cypherstoredprocedur": [180, 183, 269], "testprocedur": [180, 183, 212, 300], "typeenum": [180, 212, 306], "resp": [180, 212, 240, 259, 260, 267, 269, 275, 291, 300, 306, 582], "runtimeexcept": [180, 212, 306], "listr": 180, "updateprocedurerequest": [180, 212, 267, 301, 303], "setdescript": [180, 306], "updater": 180, "querynam": [182, 320], "attempt": [183, 269, 317, 321, 352, 353, 356, 569], "irresult": 183, "collectiveresult": [183, 269, 303], "proto": [183, 269, 359, 379, 404], "creation": [183, 269, 338, 419, 493], "queryrequest": [183, 212, 269, 301, 303], "setquerynam": 183, "addargumentsitem": 183, "primitivetypeenum": 183, "queryr": 183, "plain": [183, 269, 354], "exit": [183, 306, 326, 334, 346, 360, 600], "byte": [183, 299, 303, 306, 326, 329, 360, 368, 428], "loadingconfig": 184, "schemamappingloadingconfig": [184, 212, 270, 301], "schemamappingloadingconfigxcsrparam": [185, 212, 271, 301], "schemamappingloadingconfigdatasourc": [185, 212, 271, 301], "importopt": 185, "schemamappingloadingconfigformat": [185, 212, 271, 301], "buildcsrinmem": 188, "usemmapvector": 188, "metric": [189, 275, 320, 354, 516, 517, 518, 519, 520], "deploymod": 190, "statisticsen": 190, "boltport": 190, "hqpsport": 190, "gremlinport": [190, 321], "snapshotid": 191, "maxlength": 204, "deletevertex": [205, 301], "vertexedgerequest": [205, 212, 291, 301, 303, 582], "vertexrequest": [205, 207, 212, 291, 293, 301, 582], "mike": [205, 291, 582], "addvertexrequestitem": 205, "addvertexrespons": 205, "vertexdata": [205, 212, 291, 301, 303], "value1": [205, 291, 321, 348, 602], "param2": [205, 291], "value2": [205, 291, 321], "getvertexrespons": 205, "updatevertexrequest": 205, "cindi": [205, 291], "updatevertexrespons": 205, "gradl": 212, "ossrh": 212, "interactive_stored_proc_endpoint": [212, 298, 300, 309, 311], "interactive_cypher_endpoint": [212, 298, 300, 309, 311], "neo4j": [212, 298, 300, 307, 308, 309, 310, 319, 321, 323, 324, 327, 328, 329, 351, 356, 357, 432, 580, 582], "gettingstart": [212, 310], "neo4jsess": 212, "getneo4jsess": [212, 298, 300, 311, 582], "persson": [212, 300, 582], "test_graph_schema_json": 212, "creategraph": [212, 300, 301, 582], "programmat": [212, 300, 582], "reprens": 212, "replas": 212, "reop": 212, "test_graph_bulk_loading_json": 212, "getstatu": 212, "statusenum": 212, "sleep": [212, 300, 429], "catch": [212, 306, 582], "interruptedexcept": 212, "printstacktrac": [212, 306], "createprocedur": [212, 301, 306], "procnam": 212, "term": [212, 300, 308, 339], "moment": [212, 300, 329, 364], "startservic": [212, 301, 306], "startservicerespons": [212, 306], "starservic": 212, "gremlincli": 212, "getgremlincli": [212, 582], "deletegraphrespons": 212, "deletegraph": [212, 301], "five": [212, 301], "categori": [212, 301, 329, 333, 339, 341, 342, 350, 354, 429], "proceduremanagementapi": [212, 301], "jobmanagementapi": [212, 301], "servicemanagementapi": [212, 301], "queryserviceapi": [212, 301], "vertexapi": [212, 301], "edgeapi": [212, 301], "getgraphmeta": [212, 301], "getgraphschema": [212, 301], "listgraph": [212, 301], "canceljob": [212, 301], "getjobbyid": [212, 301], "listjob": [212, 301], "deleteprocedur": [212, 301], "getprocedur": [212, 301], "listprocedur": [212, 301], "updateprocedur": [212, 301], "getservicestatu": [212, 301], "restartservic": [212, 301], "stopservic": [212, 301], "callprocedur": [212, 301, 306], "callprocedureoncurrentgraph": [212, 301], "addvertex": [212, 301], "getvertex": [212, 301, 359], "updatevertex": [212, 301], "addedg": [212, 301], "getedg": [212, 301], "updateedg": [212, 301], "defaultsess": 212, "apiresponsewithcod": [212, 301], "authent": [212, 301, 323, 327, 355, 582], "gs_interact": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 311, 582], "api_response_with_cod": 221, "api_response_with_code_inst": 221, "api_response_with_code_dict": 221, "api_response_with_code_form_dict": 221, "python_sdk": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307], "base_edge_type_form_dict": 222, "base_edge_type_vertex_type_pair_relations_inner_form_dict": 223, "sort_on_compact": 224, "oe_mut": 224, "ie_mut": 224, "base_edge_type_vertex_type_pair_relations_inner_x_csr_params_form_dict": 224, "base_property_meta_form_dict": 225, "base_vertex_type_form_dict": 226, "base_vertex_type_x_csr_params_form_dict": 227, "column_mapping_form_dict": 228, "create_edge_type_form_dict": 229, "create_graph_request_form_dict": 230, "create_graph_response_form_dict": 231, "create_graph_schema_request_form_dict": 232, "create_procedure_request": [233, 267], "create_procedure_request_inst": 233, "create_procedure_request_dict": 233, "create_procedure_request_form_dict": 233, "create_procedure_respons": 234, "create_procedure_response_inst": 234, "create_procedure_response_dict": 234, "create_procedure_response_form_dict": 234, "create_property_meta_form_dict": 235, "create_vertex_type_form_dict": 236, "date_type_form_dict": 237, "src_label": [238, 240, 241, 247, 303, 321, 325, 348, 431, 572, 576, 582, 583, 596, 597], "dst_label": [238, 240, 241, 247, 303, 321, 325, 348, 431, 572, 576, 582, 583, 596, 597], "src_primary_key_valu": [238, 240, 241, 247, 303, 582], "modelproperti": [238, 239, 240, 241, 247, 291, 292, 295, 582], "dst_primary_key_valu": [238, 240, 241, 247, 303, 582], "delete_edge_request": [238, 240, 303], "delete_edge_request_inst": 238, "delete_edge_request_dict": 238, "delete_edge_request_form_dict": 238, "primary_key_valu": [239, 291, 295, 303, 582], "delete_vertex_request": [239, 291, 303], "delete_vertex_request_inst": 239, "delete_vertex_request_dict": 239, "delete_vertex_request_form_dict": 239, "edge_request": [240, 247, 293, 303, 582], "is_ok": [240, 259, 260, 267, 269, 275, 291, 300, 302, 304, 306, 582], "get_valu": [240, 259, 260, 267, 269, 275, 291, 300, 302, 582], "deleteedgerequest": [240, 303], "edge_data": [241, 394, 584], "edge_data_inst": 241, "edge_data_dict": 241, "edge_data_form_dict": 241, "edge_mapping_form_dict": 242, "edge_mapping_destination_vertex_mappings_inn": 243, "edge_mapping_destination_vertex_mappings_inner_inst": 243, "edge_mapping_destination_vertex_mappings_inner_dict": 243, "edge_mapping_destination_vertex_mappings_inner_form_dict": 243, "edge_mapping_source_vertex_mappings_inn": 244, "edge_mapping_source_vertex_mappings_inner_inst": 244, "edge_mapping_source_vertex_mappings_inner_dict": 244, "edge_mapping_source_vertex_mappings_inner_form_dict": 244, "edge_mapping_source_vertex_mappings_inner_column": 245, "edge_mapping_source_vertex_mappings_inner_column_inst": 245, "edge_mapping_source_vertex_mappings_inner_column_dict": 245, "edge_mapping_source_vertex_mappings_inner_column_form_dict": 245, "edge_mapping_type_triplet_form_dict": 246, "edge_request_inst": 247, "edge_request_dict": 247, "edge_request_form_dict": 247, "vertex_type_pair_statist": [248, 297], "edge_statist": 248, "edge_statistics_inst": 248, "edge_statistics_dict": 248, "edge_statistics_form_dict": 248, "fixed_char_form_dict": 249, "fixed_char_char_form_dict": 250, "gs_data_type_form_dict": 251, "get_edge_type_form_dict": 252, "data_import_config": 253, "remote_path": 253, "get_graph_response_form_dict": 253, "get_graph_schema_response_form_dict": 254, "total_vertex_count": 255, "total_edge_count": 255, "vertex_type_statist": 255, "edge_type_statist": 255, "get_graph_statistics_respons": 255, "get_graph_statistics_response_inst": 255, "get_graph_statistics_response_dict": 255, "get_graph_statistics_response_form_dict": 255, "update_tim": 256, "get_procedure_respons": 256, "get_procedure_response_inst": 256, "get_procedure_response_dict": 256, "get_procedure_response_form_dict": 256, "get_property_meta_form_dict": 257, "get_vertex_type_form_dict": 258, "snapshot_id": [259, 277, 301, 303, 582], "test_graph_def": [259, 267, 300, 582], "delete_graph": [259, 300, 303, 582], "get_graph": 259, "get_graph_meta": [259, 303], "get_graph_statist": [259, 303], "get_graph_schema": [259, 303], "test_graph_datasourc": [259, 300], "bulk_load_request": [259, 260, 300], "vertex_type_request": 259, "new_person": [259, 582], "update_vertex_typ": [259, 303], "delete_vertex_typ": [259, 303], "vertex_type_nam": 259, "edge_type_request": 259, "new_know": [259, 582], "inclus": [259, 511], "update_edge_typ": [259, 303], "new_weight": 259, "delete_edge_typ": [259, 303], "delete_edge_type_request": 259, "edge_type_nam": [259, 581], "source_vertex_type_nam": 259, "destination_vertex_type_nam": 259, "src_type_nam": 259, "dst_type_nam": 259, "snapshotstatu": [259, 303], "get_snapshot_statu": [259, 303, 582], "realtim": [259, 582], "add_vertex": [259, 303, 582], "cancel_job": [260, 303], "loading_resp": 260, "get_job": [260, 300, 303], "job_respons": 261, "job_response_inst": 261, "job_response_dict": 261, "job_response_form_dict": 261, "job_status_form_dict": 262, "long_text_form_dict": 263, "model_properti": 264, "model_property_inst": 264, "model_property_dict": 264, "model_property_form_dict": 264, "parameter_form_dict": 265, "primitive_type_form_dict": 266, "create_procedur": [267, 300, 303, 306], "create_proc_request": [267, 300, 306], "test_procedur": [267, 300, 306, 311], "proc_id": [267, 269, 303], "delete_procedur": [267, 303], "get_procedur": [267, 303], "list_procedur": [267, 303], "update_procedur": [267, 303], "update_procedure_request": [267, 287], "update_proc_req": 267, "proc": [267, 308, 521, 522, 526, 527, 568], "query_nam": [268, 269], "query_request": 268, "query_request_inst": 268, "query_request_dict": 268, "query_request_form_dict": 268, "call_procedur": [269, 303], "req": [269, 427], "call_procedure_curr": [269, 303], "schema_mapping_form_dict": 270, "schema_mapping_loading_config": 271, "schema_mapping_loading_config_inst": 271, "schema_mapping_loading_config_dict": 271, "schema_mapping_loading_config_form_dict": 271, "schema_mapping_loading_config_data_sourc": 272, "schema_mapping_loading_config_data_source_inst": 272, "schema_mapping_loading_config_data_source_dict": 272, "schema_mapping_loading_config_data_source_form_dict": 272, "schema_mapping_loading_config_format": 273, "schema_mapping_loading_config_format_inst": 273, "schema_mapping_loading_config_format_dict": 273, "schema_mapping_loading_config_format_form_dict": 273, "schema_mapping_loading_config_x_csr_param": 274, "schema_mapping_loading_config_x_csr_params_inst": 274, "schema_mapping_loading_config_x_csr_params_dict": 274, "schema_mapping_loading_config_x_csr_params_form_dict": 274, "get_service_statu": [275, 303], "verif": [275, 322, 349], "stop_r": 275, "deploy_mod": 276, "statistics_en": 276, "bolt_port": 276, "hqps_port": 276, "gremlin_port": [276, 582], "service_status_form_dict": 276, "snapshot_statu": [277, 582], "snapshot_status_inst": 277, "snapshot_status_dict": 277, "snapshot_status_form_dict": 277, "start_service_request_form_dict": 278, "stop_service_request": 279, "stop_service_request_inst": 279, "stop_service_request_dict": 279, "stop_service_request_form_dict": 279, "stored_procedure_meta_form_dict": 280, "string_type_form_dict": 281, "string_type_string_form_dict": 282, "temporal_type_form_dict": 283, "temporal_type_temporal_form_dict": 284, "time_stamp_type_form_dict": 285, "typed_value_form_dict": 286, "update_procedure_request_inst": 287, "update_procedure_request_dict": 287, "update_procedure_request_form_dict": 287, "upload_file_response_form_dict": 288, "var_char_form_dict": 289, "var_char_var_char_form_dict": 290, "vertex_edge_request": [291, 293, 303, 582], "vertex_request": [291, 293, 295, 303, 582], "deletevertexrequest": [291, 303], "vertex_data_inst": 292, "vertex_data_dict": 292, "vertex_data_form_dict": 292, "vertex_edge_request_inst": 293, "vertex_edge_request_dict": 293, "vertex_edge_request_form_dict": 293, "vertex_mapping_form_dict": 294, "vertex_request_inst": 295, "vertex_request_dict": 295, "vertex_request_form_dict": 295, "vertex_statist": 296, "vertex_statistics_inst": 296, "vertex_statistics_dict": 296, "vertex_statistics_form_dict": 296, "vertex_type_pair_statistics_inst": 297, "vertex_type_pair_statistics_dict": 297, "vertex_type_pair_statistics_form_dict": 297, "admin_endpoint": 298, "stored_proc_endpoint": 298, "cypher_endpoint": 298, "gremlin_endpoint": [298, 334], "__init__": [298, 299, 302, 303, 304, 360, 417, 424, 431, 432, 433, 569, 570, 572, 576, 601], "getdefaultsess": 298, "getneo4jendpoint": 298, "bolt": [298, 307, 310, 323, 326, 327, 328, 353, 582], "read_endpoints_from_env": 298, "endian": 299, "littl": [299, 321, 333, 335], "get_byt": [299, 306], "put_byt": [299, 306], "put_doubl": 299, "put_int": [299, 306], "put_long": 299, "put_str": [299, 306], "byte_arrai": [299, 329], "get_doubl": [299, 362], "get_long": 299, "get_str": [299, 306, 362], "is_empti": 299, "assist": [300, 323, 330, 352], "har": [300, 301], "isol": [300, 331, 434, 530, 582], "build_proto": 300, "graph_nam": [300, 323], "dictionali": [300, 582], "pyyaml": [300, 582, 593], "yaml_str": [300, 582], "python_dict": [300, 582], "safe_load": [300, 582], "afterward": [300, 582], "interpret": [300, 317, 349, 434], "elif": [300, 429], "rais": [300, 303, 306, 314, 322, 325, 360, 368, 370, 404, 416, 423, 431, 432, 434, 440, 449, 453, 454, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 504, 508, 510, 513, 514, 515, 526, 529, 561, 564, 565, 569, 572, 576], "uncom": 300, "complelet": 300, "proc_nam": 300, "forbid": 300, "x": [301, 326, 334, 335, 346, 347, 357, 360, 417, 423, 429, 434, 472, 505, 513, 515, 516, 520, 544, 601], "updatevertextyp": 301, "deletevertextyp": 301, "updateedgetyp": 301, "deleteedgetyp": 301, "getgraphstatist": 301, "getsnapshotstatu": 301, "from_except": [302, 304], "from_respons": [302, 304], "apirespons": [302, 304], "get_statu": 302, "get_status_messag": 302, "is_error": [302, 304], "admin_uri": 303, "stored_proc_uri": 303, "call_procedure_current_raw": 303, "call_procedure_raw": [303, 306], "delete_edg": 303, "delete_vertex": 303, "ensure_param_str": 303, "param_nam": [303, 310, 311], "get_edg": [303, 420], "get_vertex": 303, "try_upload_fil": 303, "file1": 303, "file2": 303, "update_edg": 303, "update_vertex": 303, "upload_and_replace_input_inplac": 303, "enum_type_wrapp": 304, "enumtypewrapp": 304, "0x7f29f52ba190": 304, "statuscod": 304, "returnd": 304, "get_cod": 304, "get_messag": 304, "server_internal_error": 304, "apart": [306, 348, 516], "count_vertic": 306, "app_bas": 306, "graph_db_sess": 306, "app_util": 306, "readappbas": 306, "writeappbas": 306, "countvertic": 306, "graphdbsess": 306, "deseri": [306, 581], "txn": 306, "getreadtransact": 306, "label_nam": [306, 311, 361, 575], "has_vertex_label": 306, "label_id": [306, 313, 359, 361, 362, 394], "get_vertex_label_id": 306, "getvertexnum": 306, "createapp": 306, "db": [306, 320, 325], "deleteapp": 306, "cast": [306, 341, 345, 348, 350, 429, 581, 596], "versu": 306, "th": [306, 311, 335, 421, 434, 547], "too": [306, 310, 321, 335, 356, 419, 488, 569], "mayb": [306, 335], "hard": [306, 317, 333, 343, 344, 530, 581], "app_path": 306, "app_cont": 306, "nio": 306, "net": [306, 434, 488], "urisyntaxexcept": 306, "junit": 306, "jupit": 306, "createproceduretest": 306, "setnam": 306, "appfilepath": 306, "notexist": 306, "appfilecont": 306, "readallbyt": 306, "isempti": 306, "setqueri": 306, "settyp": 306, "inserttract": 306, "contact": [306, 314], "cypherapp": 306, "himself": 306, "callabl": 306, "procedurenam": 306, "labelnam": [306, 600], "callprocedureraw": 306, "startserviceongraph": 306, "num": [306, 313, 323, 331, 334, 335, 430, 581], "administr": [307, 546], "graph_data": 307, "breakdown": [307, 312], "connector": [307, 310, 327, 335], "opencyph": [307, 351], "supported_cyph": [307, 310], "storp": 308, "sproc": 308, "stopro": 308, "storeproc": 308, "subroutin": 308, "rdbm": [308, 328], "wikipedia": [308, 352, 360, 531, 535, 536, 537, 538, 540, 541, 542, 548, 549, 550, 551, 553, 554, 555, 556, 562], "sole": [309, 325, 328, 329], "theori": [309, 342, 421, 429], "mac": [309, 364, 594, 596], "apiserv": 309, "streamlin": [309, 333], "screen": [309, 584], "coordinator_port": 309, "secur": [309, 339, 354, 355], "firewal": 309, "impress": [310, 312], "Its": [310, 312, 314, 351, 548, 581], "timefram": [310, 312], "emphas": [310, 312, 356], "stand": [310, 356, 421, 422, 581], "shoulder": 310, "pivot": [310, 325], "pillar": 310, "qp": [310, 320, 321, 331, 335, 355, 582], "snb": [310, 335, 348, 597, 602], "180": 310, "87": [310, 357, 560], "op": [310, 361, 371, 373, 374, 375, 376, 378, 379, 381, 383, 384, 386, 387, 388, 389, 390, 391, 394, 395, 396, 399, 400, 401, 403, 404, 427, 569, 573, 576], "boast": 310, "highlight": [310, 320, 329, 349, 353], "laid": 310, "triumph": 310, "ten": [310, 325, 352, 356, 421], "thousand": 310, "swiftli": 310, "versatil": [310, 320, 355, 581], "craft": 310, "expans": [310, 325, 353, 354, 426, 600], "prowess": 310, "prime": [310, 513, 515], "gql": [310, 322, 325, 349, 356], "scalabl": [310, 321, 334, 352, 353, 354, 355, 356, 566], "possess": 310, "massiv": [310, 322, 353], "offload": [310, 582], "excess": [310, 325], "slave": 310, "constraint": [310, 325, 326, 329, 335, 336, 353], "portion": [310, 335, 352, 353, 361, 431], "occurr": [310, 328, 353], "ddl": 310, "acid": [310, 355], "movi": [311, 312, 325, 351, 419], "parameter": 311, "personnam": 311, "softwareid": 311, "softwarenam": 311, "marko": [311, 331, 333, 335], "devis": 311, "frequent": [311, 319, 349, 352, 582], "vertex_label_nam": [311, 362], "k_neighbor": 311, "src_vertex_label_nam": 311, "src_vertex_pk": 311, "vertex_pk": 311, "label_1": 311, "pk_1": 311, "label_2": 311, "pk_2": 311, "label_3": 311, "pk_3": 311, "page_rank": 311, "damping_factor": 311, "max_iter": 311, "epsilon": 311, "solid": [312, 537, 554, 555], "prerequisit": 312, "complic": [312, 317, 322, 335, 361], "entiti": [312, 331, 335, 345, 350, 354, 418], "helm": [312, 314, 319, 321, 582, 593, 595], "\u6807\u7b7e": 313, "\u8868\u793a\u67d0\u4e00\u7c7b\u9876\u70b9\u6216\u8005\u8fb9": 313, "\u5c5e\u6027": [313, 600, 602], "\u8868\u793a\u9876\u70b9\u6216\u8fb9\u6240\u5173\u8054\u7684\u6570\u636e": 313, "\u539f\u59cbid": 313, "oid": [313, 359, 361, 362], "\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684id": 313, "\u4e0d\u540c\u6807\u7b7e\u7684\u9876\u70b9\u5141\u8bb8\u6709\u76f8\u540c\u7684oid": 313, "\u5b50\u56feid": 313, "fid": [313, 359, 362, 394, 578], "\u5b50\u56fe\u7684\u552f\u4e00\u7f16\u53f7": 313, "\u5206\u533a\u5668": 313, "\u80fd\u591f\u786e\u5b9a\u9876\u70b9oid\u5230\u5206\u533aid": 313, "\u7684\u6620\u5c04": 313, "\u5b50\u56fe": 313, "\u901a\u8fc7\u5207\u8fb9\u5f97\u5230\u7684\u5b50\u56fe": 313, "\u5b58\u50a8\u4e86\u9876\u70b9": 313, "\u8fb9": [313, 592], "\u9876\u70b9\u6570\u636e": 313, "\u8fb9\u6570\u636e\u7b49\u4fe1\u606f": 313, "\u5185\u90e8\u70b9": 313, "\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 313, "\u5916\u90e8\u70b9": 313, "\u4e0d\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 313, "\u672c\u5730id": 313, "lid": [313, 359, 394], "\u53ea\u5728\u67d0\u4e2afragment\u5185\u90e8\u6709\u610f\u4e49": 313, "\u5168\u5c40id": 313, "gid": [313, 359, 394], "\u80fd\u591f\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u9876\u70b9": 313, "\u88abfragment\u5171\u8bc6": 313, "\u7528\u4e8e\u5b58\u50a8gid": 313, "oid\u7684\u6620\u5c04\u5173\u7cfb": 313, "\u7684\u8282\u70b9": 313, "\u5b58\u5728\u4ee5\u4e0b\u7f16\u7801\u65b9\u5f0f": 313, "gid\u7f16\u7801": 313, "\u5176\u4e2d": [313, 592, 597], "\u548c": [313, 423, 592, 594, 595, 596, 597, 599, 600, 601, 602], "\u5171\u540c\u7ec4\u6210": 313, "\u67d0\u4e00\u7c7b\u9876\u70b9\u5728\u67d0\u4e2a": 313, "\u7684\u9876\u70b9": 313, "\u5e8f\u53f7": 313, "lid\u7f16\u7801": 313, "\u586b\u5145": 313, "\u603b\u662f": 313, "\u6309\u7167\u6267\u884c\u6d41\u7a0b\u7f16\u53f7": 313, "\u63cf\u8ff0\u4e86\u8f7d\u56fe\u7684\u4e3b\u8981\u903b\u8f91": 313, "\u5206\u4e3ahashpartitioner\u548csegmentedpartition": 313, "\u521d\u59cb\u5316\u4ed6\u4eec\u9700\u8981\u7ed9\u51fafragment\u7684\u6570\u91cf": 313, "segmentedpartitioner\u8fd8\u9700\u7ed9\u51fa\u5168\u90e8\u7684oid": 313, "\u6bcf\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u4e00\u90e8\u5206\u70b9": 313, "\u8fb9\u6587\u4ef6": 313, "\u5f97\u5230\u591a\u4e2avertex": 313, "\u548cedg": 313, "etabl": 313, "\u5176\u4e2dvtable\u6309\u7167\u9876\u70b9\u6807\u7b7e": 313, "\u5206\u7ec4": 313, "etable\u5148\u6309\u7167\u8fb9\u6807\u7b7e": 313, "\u540c\u4e00\u4e2a\u8fb9\u6807\u7b7e\u4e0b\u9762\u53c8\u6309\u7167src\u548cdst\u7684\u9876\u70b9\u6807\u7b7e\u5206\u7ec4": 313, "\u539f\u59cb\u7684\u9876\u70b9\u8868": 313, "\u8fb9\u8868": 313, "\u6bcf\u4e2a\u8fdb\u7a0b\u6301\u6709\u90e8\u5206\u7684\u6570\u636e": 313, "partial_v_t": 313, "partial_e_t": 313, "table\u5305\u542boid": 313, "table\u5305\u62ecsrc\u548cdst\u7684oid": 313, "\u8bbf\u95eevtable\u7684oid\u5217": 313, "\u6839\u636eoid\u67e5\u8be2partit": 313, "\u5c06\u8868\u4e2d\u7684\u8bb0\u5f55\u5206\u53d1\u7ed9\u9876\u70b9\u7684\u62e5\u6709\u8005": 313, "\u4eceshuffle\u540e\u7684vtable\u53d6\u51faoid\u6267\u884cal": 313, "gather\u64cd\u4f5c": 313, "\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u591f\u83b7\u53d6\u7684\u6240\u6709oid": 313, "\u6839\u636efrag\u6570\u91cf": 313, "label\u6570\u91cf\u548c\u5168\u90e8oid": 313, "\u6bcf\u4e2a\u8fdb\u7a0b\u6784\u5efavertex": 313, "fid_t": [313, 359], "fnum_": 313, "label_id_t": [313, 359], "label_num_": 313, "hashmapbuild": 313, "cur_gid": 313, "id_parser_": 313, "generateid": 313, "\u8d77\u59cbgid": 313, "vnum": 313, "\u904d\u5386\u5168\u90e8\u5185\u90e8\u70b9": 313, "\u751f\u6210gid": 313, "emplac": 313, "getview": 313, "\u6309\u7167elabel\u904d\u5386\u6bcf\u4e00\u5f20edg": 313, "\u83b7\u53d6\u5230src\u548cdst\u7684label": 313, "\u8bbf\u95ee\u6bcf\u4e2asrc\u7684oid": 313, "\u6839\u636epartitioner\u83b7\u53d6fid": 313, "\u6839\u636efid": 313, "id\u548coid\u67e5\u8be2gid": 313, "\u751f\u6210gid\u6570\u7ec4": 313, "\u5904\u7406dst\u7684\u903b\u8f91\u540c\u7406": 313, "\u5f97\u5230src\u548cdst\u4e24\u4e2agid\u6570\u7ec4\u540e": 313, "\u66ff\u6362\u6389\u539fetable\u7684oid\u6570\u7ec4": 313, "\u5bf9etable\u6267\u884cshuffl": 313, "\u5c06\u76f8\u5e94\u7684\u884c\u4f20\u8f93\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b": 313, "\u5c06shuffle\u8fc7\u7684vtable\u548cetable\u9001\u7ed9basicarrowfragmentbuilder\u6784\u5efacsr": 313, "\u5904\u7406\u9876\u70b9": 313, "\u521d\u59cb\u5316id": 313, "parser": [313, 322, 346], "\u521d\u59cb\u5316ivnum": 313, "ovnum\u548ctvnum\u6570\u7ec4": 313, "\u6309\u7167vertex": 313, "label\u5206\u7ec4": 313, "\u904d\u5386\u6bcf\u4e00\u79cd\u9876\u70b9": 313, "\u5411vertex": 313, "map\u67e5\u8be2\u672cfragment\u7684\u5185\u90e8\u70b9\u6570\u91cf": 313, "\u5e76\u8bbe\u7f6e\u5bf9\u5e94\u7684ivnum": 313, "\u5c06vertex": 313, "table\u5408\u5e76\u6210\u4e00\u4e2achunk\u4fbf\u4e8e\u540e\u7eed\u8bbf\u95ee": 313, "vid_parser_": 313, "vertex_label_num_": 313, "resiz": 313, "ivnums_": 313, "ovnums_": 313, "tvnums_": 313, "combinechunk": 313, "default_memory_pool": 313, "vm_ptr_": 313, "getinnervertexs": [313, 359], "fid_": 313, "\u5904\u7406\u8fb9\u5305\u62ec\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4": 313, "\u904d\u5386\u6bcf\u4e00\u79cd\u8fb9": 313, "\u901a\u8fc7src": 313, "gid\u5217\u548cdst": 313, "gid\u5217\u67e5\u8be2\u51fa\u672cfragment\u6240\u6709\u7684\u5916\u90e8\u70b9": 313, "\u5e76\u6309\u7167vertex": 313, "edge_t": [313, 418, 429], "table\u5408\u5e76\u6210\u4e00\u4e2achunk": 313, "\u627e\u51fa\u672cfragment\u5168\u90e8\u5916\u90e8\u70b9\u7684gid": 313, "collect_outer_vertic": 313, "dynamic_pointer_cast": [313, 583], "converttoarrowtyp": [313, 359], "arraytyp": [313, 359], "chunk": [313, 404, 431, 580], "\u6839\u636e\u5916\u90e8\u70b9\u7684gid": 313, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efagid\u5230lid\u7684\u6620\u5c04\u4e0e\u53bb\u91cd\u7684gid\u6570\u7ec4": 313, "\u5916\u90e8\u70b9\u7684lid\u7531label": 313, "id\u548c\u9876\u70b9\u5e8f\u53f7\u7ec4\u6210": 313, "\u9876\u70b9\u5e8f\u53f7\u4eceivnum\u5f00\u59cb\u8ba1\u6570": 313, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u586b\u5145ovnum\u548ctvnum": 313, "ovg2l_maps_": 313, "ovgid_lists_": 313, "cur_list": 313, "collected_ovgids_": 313, "\u6392\u5e8fgid": 313, "cur_map": 313, "buildertyp": 313, "vec_build": 313, "\u751f\u6210\u5916\u90e8\u70b9\u7684lid": 313, "\u5176\u4e2dfid\u4e3a0": 313, "offset\u4eceivnum\u5f00\u59cb\u7f16\u53f7": 313, "cur_id": 313, "\u5904\u7406\u7b2c\u4e00\u4e2a\u5143\u7d20": 313, "append": [313, 335, 344, 345, 346, 347, 350, 362, 417, 428, 429, 500, 563, 596, 601], "cur_list_length": 313, "\u627e\u5230\u4e0d\u91cd\u590d\u7684\u4e24\u4e2agid": 313, "\u6839\u636e\u4e0a\u4e00\u6b65\u6784\u6210\u7684gid\u5230lid\u7684\u6620\u5c04": 313, "\u5c06src\u548cdst\u7684gid\u90fd\u8f6c\u6362\u6210lid": 313, "\u5220\u9664edg": 313, "table\u7684src\u5217\u548cdst\u5217": 313, "gid\u5230lid\u8f6c\u6362\u51fd\u6570": 313, "generate_local_id_list": 313, "gid_list": 313, "lid_list": 313, "vec": 313, "getfid": 313, "\u751f\u6210\u5185\u90e8\u70b9lid": 313, "getlabelid": 313, "getoffset": 313, "\u67e5\u8be2g2l": 313, "\u901a\u8fc7gid\u627e\u5230\u5916\u90e8\u70b9lid": 313, "\u6839\u636esrc\u548cdst\u5217\u7684gid\u751f\u6210lid": 313, "edge_src_": 313, "edge_dst_": 313, "table\u7684src\u5217\u548cgid\u5217": 313, "\u53ea\u4fdd\u7559\u5c5e\u6027": 313, "tmp_table0": 313, "removecolumn": 313, "\u6784\u5efacsr": 313, "\u5bf9\u4e8e\u6709\u5411\u56fe": 313, "\u6784\u5efa\u51fa\u8fb9\u548c\u5165\u8fb9\u4e24\u4e2acsr": 313, "\u9996\u5148\u6784\u5efa\u51fa\u8fb9csr": 313, "\u7edf\u8ba1\u6bcf\u79cd\u6e90\u9876\u70b9\u7684\u51fa\u5ea6": 313, "\u6784\u5efarow": 313, "offset\u6570\u7ec4": 313, "\u8bbf\u95ee\u6bcf\u6761\u8fb9": 313, "\u4f7f\u7528row": 313, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9nbr\u7684\u5730\u5740": 313, "\u586b\u5145dst": 313, "lid\u548ceid\u5230nbr": 313, "\u6309\u7167\u76ee\u7684\u9876\u70b9\u7684lid": 313, "\u5c06\u6bcf\u4e00\u4e2a\u6e90\u9876\u70b9\u7684\u76ee\u7684\u9876\u70b9\u6392\u5e8f": 313, "generate_directed_csr": 313, "vid_array_t": [313, 359], "src_list": 313, "dst_list": 313, "fixedsizebinaryarrai": 313, "int64arrai": 313, "edge_offset": 313, "actual_edge_num": 313, "v_label": [313, 359, 578], "edge_num": [313, 394, 596, 600], "src_list_ptr": 313, "raw_valu": 313, "dst_list_ptr": 313, "\u8ba1\u7b97\u6e90\u9876\u70b9\u7684\u5ea6": 313, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efarow": 313, "tvnum": 313, "offset_vec": 313, "degree_vec": 313, "int64build": 313, "podarraybuild": 313, "nbr_unit_t": [313, 359], "edge_build": 313, "v_offset": 313, "\u83b7\u53d6\u76ee\u7684\u9876\u70b9\u6307\u9488": 313, "ptr": 313, "mutablepoint": 313, "\u586b\u5145\u76ee\u7684\u9876\u70b9lid": 313, "\u5176\u4e2deid\u7528\u4e8e\u4e4b\u540e\u83b7\u53d6\u8fb9\u4e0a\u7684\u5c5e\u6027": 313, "vid": [313, 359, 431], "eid_t": [313, 359], "\u66f4\u65b0offset": 313, "\u6307\u5411\u6e90\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u51fa\u8fb9": 313, "\u5bf9\u4e34\u63a5\u70b9\u6309\u7167lid\u6392\u5e8f": 313, "offsets_ptr": 313, "lh": 313, "\u6784\u5efa\u5165\u8fb9csr\u548c\u51fa\u8fb9\u540c\u7406": 313, "\u5bf9\u4e8e\u65e0\u5411\u56fe": 313, "\u51fa\u8fb9\u548c\u5165\u8fb9\u5171\u7528\u4e00\u4e2acsr": 313, "\u903b\u8f91\u548c\u6709\u5411\u56fe\u7c7b\u4f3c": 313, "\u4f46\u662f\u8981\u540c\u65f6\u7edf\u8ba1\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9\u7684\u5ea6\u6765\u6784\u5efarow": 313, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u6e90\u9876\u70b9\u7684nbr\u586b\u5145\u5165\u8fb9\u7684src": 313, "lid\u548ceid": 313, "\u540c\u65f6\u8fd8\u8981\u4f7f\u7528offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9\u7684nbr\u586b\u5145dst": 313, "\u5c01\u88c5": 313, "seal": [313, 338, 354], "\u51c6\u5907\u597d\u9876\u70b9\u6570\u91cf": 313, "ovgid\u548cg2l_map\u540e": 313, "\u5c06\u4ed6\u4eec\u5c01\u88c5\u6210\u5404\u79cdvineyardobject": 313, "\u6839\u636emetadata\u4ecevineyard\u67e5\u8be2\u548c\u6784\u5efa\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4f5c\u4e3aarrowfragment\u7684\u6210\u5458": 313, "\u4e5f\u5c31\u662f\u8bf4": [313, 593], "\u4ee5\u4e0b\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728vineyard\u4e2d\u7684": 313, "\u5f53\u524dfragment": 313, "fragment\u603b\u6570": 313, "directed_": 313, "\u662f\u5426\u4e3a\u6709\u5411\u56fe": 313, "\u9876\u70b9\u79cd\u7c7b\u6570\u91cf": 313, "edge_label_num_": 313, "\u8fb9\u79cd\u7c7b\u6570\u91cf": 313, "propertygraphschema": 313, "schema_": 313, "\u5185\u90e8\u548c\u5916\u90e8\u70b9\u603b\u6570": 313, "\u9876\u70b9\u5c5e\u6027\u8868": 313, "\u4e0d\u5305\u542bid\u5217": 313, "\u5916\u90e8\u70b9gid": 313, "gid\u5230lid\u6620\u5c04": 313, "\u8fb9\u5c5e\u6027": 313, "csr\u7ed3\u6784\u7684column": 313, "\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709oe_lists_\u88ab\u4f7f\u7528": 313, "csr\u7ed3\u6784\u7684row": 313, "vertex_map_t": [313, 359], "\u5269\u4e0b\u7684\u6210\u5458\u5c06\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\u6765\u6784\u5efa": 313, "edge_tables_columns_": 313, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u5c5e\u6027\u5217\u5730\u5740": 313, "flatten_edge_tables_columns_": 313, "\u540c\u4e0a": 313, "vertex_tables_columns_": 313, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u5c5e\u6027\u5217\u5730\u5740": 313, "ie_ptr_lists_": 313, "oe_ptr_lists_": 313, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u6bcf\u4e00\u79cd\u5165": 313, "\u51fa\u8fb9\u7684\u8d77\u59cb\u5730\u5740": 313, "\u4e5f\u5c31\u662fcolumn": 313, "index\u7684\u8d77\u59cb\u5730\u5740": 313, "ie_offsets_ptr_lists_": 313, "oe_offsets_ptr_lists_": 313, "\u51fa\u8fb9\u7684row": 313, "offset\u8d77\u59cb\u5730\u5740": 313, "offset\u7684\u8d77\u59cb\u5730\u5740": 313, "\u4ee5\u4e0b\u662f\u6bcf\u4e00\u79cd\u9876\u70b9": 313, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u6e90\u9876\u70b9fid": 313, "\u76ee\u7684\u9876\u70b9fid": 313, "\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9fid\u6784\u6210\u7684csr\u7ed3\u6784": 313, "idst_": 313, "odst_": 313, "iodst_": 313, "idoffset_": 313, "odoffset_": 313, "iodoffset_": 313, "\u4ee5\u4e0b\u5185\u5bb9\u63cf\u8ff0\u4e86\u8bbf\u95ee\u9876\u70b9": 313, "\u9876\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e\u7684api\u548c\u5b9e\u73b0": 313, "\u5185\u90e8\u70b9\u8303\u56f4\u7531\u8d77\u59cblid\u548c\u7ec8\u6b62lid\u6784\u6210": 313, "lid\u7684\u7f16\u7801\u5305\u542b\u4e86\u9876\u70b9label": 313, "id\u548c\u9876\u70b9\u5e8f\u53f7": 313, "\u5185\u90e8\u70b9\u7684\u9876\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 313, "ivnum": 313, "\u5916\u90e8\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 313, "\u5168\u90e8\u9876\u70b9\u5e8f\u53f7\u4e3a": 313, "vertex_range_t": [313, 359], "\u751f\u6210lid\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u8303\u56f4": 313, "\u7ed3\u675f\u8303\u56f4\u662f\u5f00\u533a\u95f4": 313, "\u6839\u636e\u9876\u70b9lid\u83b7\u53d6\u9876\u70b9\u7c7b\u578b": 313, "\u5c5e\u6027id": 313, "\u5217\u53f7": 313, "\u83b7\u53d6\u5230\u5217\u6307\u9488": 313, "\u7136\u540e\u4ecelid\u83b7\u53d6\u5230\u9876\u70b9\u5e8f\u53f7": 313, "\u884c\u53f7": 313, "\u5373\u53ef\u8bbf\u95ee\u5230\u9876\u70b9\u7684\u67d0\u4e2a\u5c5e\u6027": 313, "getdata": [313, 359], "prop_id_t": [313, 359], "prop_id": 313, "property_graph_util": [313, 359], "valuegett": 313, "\u8bbf\u95ee\u51fa\u8fb9\u9700\u8981\u7ed9\u51fa\u6e90\u9876\u70b9lid\u548c\u67d0\u4e00\u79cd\u8fb9\u7684\u7c7b\u578b": 313, "\u800c\u6e90\u9876\u70b9\u7684\u7c7b\u578b\u5df2\u7ecf\u88ablid\u7f16\u7801\u6240\u5305\u542b": 313, "\u6240\u4ee5\u4e0d\u7528\u7ed9\u51fa": 313, "adj_list_t": [313, 359], "e_label": [313, 359], "\u83b7\u53d6\u6e90\u9876\u70b9lid": 313, "\u83b7\u53d6\u6e90\u9876\u70b9\u7c7b\u578b": 313, "\u83b7\u53d6\u6e90\u9876\u70b9\u5e8f\u53f7": 313, "offset_arrai": 313, "\u8bbf\u95eerow": 313, "oe": 313, "\u83b7\u53d6\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 313, "\u751f\u6210adjlist\u5bf9\u8c61": 313, "\u5206\u522b\u4e3a\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 313, "\u7ed3\u675f\u5730\u5740": 313, "\u8fb9\u5c5e\u6027\u5217\u5730\u5740": 313, "\u548c\u51fa\u8fb9\u540c\u7406": 313, "\u53ea\u9700\u8981\u628aoe\u76f8\u5173\u53d8\u91cf\u540d\u6362\u6210ie\u5373\u53ef": 313, "ie": 313, "\u56e0\u4e3a\u5728adjlist\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u51fa\u8fb9\u5c5e\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740": 313, "\u6bcf\u6761\u51fa\u8fb9\u8fd8\u5305\u542b\u4e86\u8fb9id": 313, "\u5bf9\u5e94\u5230\u884c\u53f7": 313, "\u56e0\u6b64\u518d\u7ed9\u51fa\u5c5e\u6027\u7684\u5217\u53f7\u5c31\u80fd\u591f\u53bb\u5f97\u5230\u5177\u4f53\u7684\u6570\u636e": 313, "\u4f8b\u5982": [313, 592, 596, 600, 602], "\u83b7\u53d6edg": 313, "struct": [313, 359, 492, 525], "\u83b7\u53d6\u5c5e\u6027\u5217\u7684\u5730\u5740": 313, "\u548ceid\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5c5e\u6027": 313, "edata_arrays_": 313, "nbr_": 313, "8g": [314, 346], "18": [314, 324, 335, 357, 419, 420, 422, 431, 434, 492, 541, 546, 550, 552, 555, 561, 580, 592, 595, 599], "debug": [314, 346, 418, 423, 576, 582, 590], "silent": [314, 569, 590], "did": [314, 429], "role": [314, 322, 325, 337, 346, 351, 419, 428, 434, 520, 558, 566, 582, 586, 590, 595], "rolebind": [314, 595], "recycl": 314, "seem": [314, 335], "stuck": 314, "consumpt": 314, "poor": [314, 425], "acquir": [314, 327, 334], "mostli": [314, 323, 395], "visibl": [314, 362], "volum": [314, 321, 334, 346, 492, 493, 494, 504, 513, 558, 576, 581], "cloud": [314, 355, 356, 582], "k8s_vineyard_mem": [314, 346, 416, 576, 595], "shape": [314, 341, 342, 345, 350, 359, 361, 420, 421, 422, 423, 426, 429, 433, 491, 596], "forth": 314, "smaller": [314, 325, 331, 335, 357, 432, 434, 490, 491, 495], "shared_mem": [314, 595], "grpcio": [314, 595], "grpc_python_build_system_openssl": [314, 595], "scipi": [314, 516, 517, 518, 519, 569, 572, 595], "anaconda": [314, 595], "workaround": 314, "openbla": 314, "tri": [314, 317, 344, 353, 498, 504], "pkgconfig": 314, "cmake_prefix_path": 314, "brew": 314, "deni": [314, 368, 595], "pv": [314, 321, 576, 582, 595], "nf": [314, 428, 595], "appear": [314, 322, 335, 360, 474, 476, 478, 481, 483, 510, 511, 569, 595], "kafka": [314, 578, 582, 595], "zookeep": [314, 595], "crashloopbackoff": [314, 595], "bitnami": [314, 595], "755": 314, "1001": [314, 582], "brutal": 314, "chmod": [314, 334, 595], "777": [314, 357, 595], "eleg": [314, 317], "grant": [314, 566], "timeout_second": [314, 416, 576, 595], "600": [314, 357, 576, 595], "enterpris": 314, "proxi": [314, 595], "properli": [314, 331, 582], "wrong": 314, "resolut": [314, 582], "occup": 314, "hostnam": [314, 595], "no_proxi": [314, 595], "suffix": [314, 320, 333], "flush": 314, "forcibli": 314, "slack": [314, 595], "dingtalk": [314, 595], "happi": 314, "90": [316, 357], "traffic": 317, "web": [317, 326, 360, 434, 502, 516, 521, 562], "ever": [317, 342], "amount": [317, 334, 340, 354, 421, 423, 425], "hidden": [317, 351, 352, 354, 417, 601], "attract": 317, "attent": [317, 354, 423], "difficult": [317, 418, 428, 582], "obstacl": 317, "curv": [317, 352], "sql": [317, 322, 329, 333, 335, 336], "deep": [317, 342, 349, 417, 422, 423, 425, 445, 448, 557, 569], "gnn": [317, 319, 339, 341, 342, 345, 349, 350, 355, 356, 417, 421, 422, 423, 425, 426, 576, 598, 601], "train": [317, 328, 339, 341, 342, 343, 349, 350, 355, 356, 358, 419, 422, 423, 425, 426, 429, 433, 576, 596, 601], "fist": 317, "mount_dataset": [317, 348], "ran": [317, 344], "p2p_network": 317, "embed": [317, 339, 345, 350, 354, 418, 425], "inter": [317, 430, 488, 491], "wherea": [317, 488, 581], "numpi": [317, 335, 339, 359, 361, 376, 387, 396, 420, 421, 423, 424, 425, 426, 429, 431, 433, 434, 561, 569, 572, 598], "datafram": [317, 348, 361, 375, 386, 396, 399, 431, 569, 592, 602], "head": [317, 321, 328, 333, 335], "creationd": [317, 333, 335, 348, 580, 597, 602], "locationip": [317, 348, 602], "browserus": [317, 335, 348, 602], "618475290625": 317, "2011": [317, 335, 502], "08": [317, 357, 434], "17t14": 317, "26": [317, 333, 335, 346, 357, 419, 420, 422, 518], "59": [317, 357], "961": 317, "210": [317, 357, 565], "17": [317, 335, 357, 419, 420, 422, 592], "chrome": [317, 335], "618475290626": 317, "17t11": 317, "570": 317, "comment_replyof_com": 317, "274877907301": 317, "274877907299": 317, "274877907302": 317, "pd": [317, 328, 348, 602], "df_v": [317, 348, 592, 602], "read_csv": [317, 328, 348, 602], "sep": [317, 328, 348, 431, 602], "df_e": [317, 348, 602], "graphcomput": [319, 600], "gl": [319, 342, 355, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430], "neural": [319, 339, 349, 350, 355, 356, 358, 417, 418, 421, 423, 425, 429], "posit": [319, 326, 335, 354, 355, 417, 423, 434, 479, 498, 500, 501, 503, 504, 508, 516, 517, 518, 519, 520, 564, 567, 581, 584], "gopt": [319, 326], "jni": [319, 364], "graphar": [319, 431], "gart": 319, "gap": 319, "oltp": [319, 349, 351], "style": [319, 338, 349, 574], "act": [320, 333, 417, 566, 569, 589, 601], "latenc": [320, 322, 331, 334, 349, 355, 356, 582], "notabl": [320, 329], "assess": [320, 354, 429, 546], "accommod": [320, 356, 582], "kuzudb": 320, "ic": 320, "bi": [320, 335, 352, 355], "lsqb": [320, 325], "benchark": 320, "mix": [320, 333, 360, 581], "fill": [320, 430, 470, 481, 491, 525], "substitution_paramet": 320, "robin": [320, 467, 468], "bench": [320, 325], "expected_result": 320, "kuzu": [320, 356], "ldbc_queri": 320, "bi_queri": 320, "intellig": [320, 322, 335, 349, 356, 526, 529], "lsqb_queri": 320, "anywher": 320, "xvf": 320, "job_benchmark": 320, "13a": 320, "resultcount": 320, "executetimem": 320, "3638": 320, "32a": 320, "266": 320, "9a": 320, "3669": 320, "5c": 320, "8603": 320, "3a": 320, "613": 320, "35": [320, 333, 335, 357, 419, 420, 422, 429, 496, 546, 562], "7068": 320, "253": 320, "5122": 320, "13623": 320, "4676": 320, "avg": [320, 329, 333, 434], "p50": 320, "p90": 320, "p95": 320, "p99": 320, "path_to_db": 320, "example_db": 320, "job_db": 320, "substitut": 320, "custom_queri": 320, "custom_constant_queri": 320, "latter": [320, 333, 335, 352], "cypher_queri": 320, "exemplifi": [320, 582], "job_expect": 320, "wonder": 321, "smoothli": 321, "easiest": 321, "websit": [321, 352, 488], "untar": 321, "tree": [321, 351, 469, 471, 479, 499, 505, 507, 517, 518, 519, 532, 533, 570, 576, 602], "claim": [321, 551, 581, 582], "pvc": [321, 576, 582], "your_release_nam": 321, "grep": 321, "awk": 321, "cypherport": 321, "v6d_modern_load": [321, 323], "data_path": [321, 583], "store_data_path": [321, 323], "thing": [321, 423, 589], "key1": 321, "key2": 321, "token": [321, 333], "column_typ": 321, "infer": [321, 325, 348, 354, 355], "filed1": 321, "filed2": 321, "unexpect": 321, "troubl": 321, "correspondingli": [321, 342, 526, 529], "v6d_ldbc_loader": 321, "replicacount": [321, 582], "hdf": [321, 348, 396, 428, 431, 582, 592, 602], "pegasusworkernum": 321, "pegasustimeout": 321, "durat": [321, 329, 333], "pegasusbatchs": 321, "1024": [321, 323, 333, 580], "pegasusoutputcapac": 321, "frontendquerypersecondlimit": 321, "2147483647": [321, 582], "gremlinscriptlanguagenam": 321, "antlr_gremlin_travers": 321, "inher": 322, "manufactur": 322, "upcom": [322, 325], "sticki": 322, "shelv": 322, "hybrid": [322, 581, 582], "dedupl": 322, "higher": [322, 325, 355, 434, 444, 508, 582], "hope": [322, 335, 582], "trade": [322, 349, 582], "inevit": 322, "realist": [322, 561], "lengthi": 322, "account": [322, 353, 567, 600], "80": [322, 357, 548], "decoupl": [322, 349, 356], "upper": [322, 333, 335, 339, 353, 488, 581], "briefli": [322, 354], "algebra": [322, 558], "edgeexpans": 322, "pathexpans": 322, "legal": 322, "predic": [322, 335], "arithmet": [322, 333, 335], "aspect": [322, 335, 356], "firstli": [322, 331, 335, 348, 356], "down": [322, 325, 347, 486], "cbo": [322, 325], "glogu": 322, "shuffl": [322, 333, 346, 347, 423, 429, 433], "plu": [322, 333, 335, 472, 544], "unaccept": 322, "come": [322, 328, 331, 335, 338, 348, 350, 351, 354, 355, 357, 420, 535, 572], "end2end": 323, "sf": [323, 325, 335], "v6d_object_id": 323, "unsur": [323, 328], "vineyard_ipc_socket": [323, 583], "gie_test_hom": 323, "rpc": [323, 346, 359, 430, 576, 582], "1234": 323, "11234": 323, "pegasu": [323, 331, 349], "gaia_executor": 323, "log4r": [323, 582], "yml": [323, 580, 582], "usernam": [323, 582], "password": [323, 582], "auth": [323, 327, 434, 582], "djna": 323, "kill": [323, 576], "pkill": 323, "gcc": [324, 357, 599], "64": [324, 334, 342, 422, 423, 500, 580, 600], "chip": [324, 599], "straightforward": [324, 326, 350], "hereaft": [324, 335, 350], "q1": [324, 328, 335, 350], "q2": [324, 335, 350], "q3": [324, 335, 350], "someth": [324, 569], "453": 324, "pppp": 324, "startup": 324, "3000": 324, "entr": 324, "ee": 324, "syntact": [324, 331, 336, 353], "sugar": [324, 331, 336, 353], "excel": [325, 355], "novel": [325, 560], "lightweight": [325, 326], "serverless": 325, "year": [325, 328, 333, 335, 350, 352, 596], "academ": [325, 345, 350, 596], "prestigi": 325, "confer": [325, 341, 350, 421, 592], "barrier": [325, 346], "mainstream": [325, 342, 421, 422], "embedd": 325, "occupi": [325, 331], "mb": [325, 582], "person_follows_person": 325, "person_acted_in_movi": 325, "joindecompositionrul": 325, "bias": [325, 333], "favor": 325, "extendintersectrul": 325, "expandgetvfusionrul": 325, "dbm": [325, 356], "default_databas": 325, "apoc": 325, "cardin": 325, "evid": 325, "precis": [325, 348, 354, 561], "hinder": 325, "absenc": 325, "priorit": 325, "promptli": 325, "squar": [325, 335, 496, 515, 543, 544, 547, 562], "AND": [325, 329, 333, 350, 362], "worst": [325, 353], "wco": 325, "expandinto": 325, "filterpushdown": 325, "kean": 325, "gun": 325, "35mb": 325, "graphbuildersdk": 325, "systempath": 325, "basedir": 325, "studi": [325, 335, 345, 350, 356, 515, 517], "reconfigur": 325, "ldbc1": 325, "Be": 325, "clearquerycach": 325, "rapidli": [325, 349, 421], "tend": [325, 498], "narrow": [325, 488], "holist": [325, 351], "suboptim": 325, "isomorph": [325, 335, 354, 419, 423, 548, 570], "space": [325, 339, 354, 418, 419, 423, 434, 468, 516, 517, 518, 519, 520], "scanearlystoprul": 325, "scan": [325, 331, 581], "soon": [325, 351, 355, 356, 357, 420], "scanexpandfusionrul": 325, "wherev": 325, "fusion": 325, "feasibl": [325, 339, 354], "strictli": [325, 434, 488], "topkpushdownrul": 325, "topk": [325, 342, 421, 423], "sortprojecttransposerul": 325, "defer": 325, "disrupt": 325, "pushdown": 325, "graphplann": 326, "tightli": 326, "graphplannerwrapp": 326, "java_path": [326, 592], "jna_path": 326, "jna": 326, "graph_schema_yaml": 326, "graph_statistic_json": 326, "invoc": [326, 329], "compiler_config_path": 326, "cypher_query_str": 326, "compileplan": 326, "pgraph": 326, "tarbal": 326, "xvzf": 326, "test_graph_plann": 326, "modern_statist": 326, "gs_interactive_hiactor": 326, "succeed": 326, "gremlin_invalid_syntax": 326, "syntax": [326, 329, 331, 333, 342, 353, 361, 423, 569, 575], "cypher_invalid_syntax": 326, "tag_not_found": 326, "label_not_found": 326, "property_not_found": 326, "type_inference_fail": 326, "violat": [326, 468], "logical_plan_build_fail": 326, "physical_plan_build_fail": 326, "gremlin_invalid_result": 326, "cypher_invalid_result": 326, "engine_unavail": 326, "query_execution_timeout": 326, "exceed": 326, "predefin": 326, "meta_schema_not_readi": 326, "meta_statistics_not_readi": 326, "empty_result": 326, "libdefault": 326, "dt_unknown": 326, "f1": [326, 354, 431], "unknown": [326, 478, 581], "nest": [326, 333], "ordin": 326, "dskip": 326, "graphplannerservic": 326, "spring": 326, "configpath": 326, "schemayaml": 326, "statsjson": 326, "graphplan": 326, "physicalbyt": 326, "resultschemayaml": 326, "base64": [326, 433], "schemapath": 326, "statspath": 326, "jsonpayload": 326, "createparamet": 326, "httpclient": 326, "newbuild": 326, "httprequest": 326, "sethead": 326, "bodypublish": 326, "ofstr": 326, "standardcharset": 326, "utf_8": 326, "httprespons": 326, "bodyhandl": 326, "jsonnod": 326, "plannod": 326, "objectmapp": 326, "readtre": 326, "getphysicalplan": 326, "getresultschemayaml": 326, "immutablemap": 326, "fileutil": 326, "readfiletostr": 326, "valuetotre": 326, "physicalplan": 326, "graphalgebraphys": 326, "base64str": 326, "astext": 326, "getdecod": 326, "parsefrom": 326, "testgraphplann": 326, "graphdatabas": 327, "routingcontrol": 327, "print_top_10": 327, "execute_queri": 327, "routing_": 327, "simpler": [327, 334, 335, 569], "nowadai": 328, "shortcom": [328, 331, 335], "gpt": 328, "materi": 328, "mislead": 328, "hot": 328, "cold": 328, "workabl": 328, "openai": 328, "novic": 328, "dream": 328, "chamber": 328, "25": [328, 335, 341, 345, 350, 357, 419, 420, 422, 491, 493, 496, 515, 562, 596], "langchain": 328, "316": 328, "suchun": 328, "sv": 328, "nodes_set": 328, "stone_story_nodes_rel": 328, "vid_field": [328, 348, 431, 597], "edges_set": 328, "stone_story_edg": 328, "edges_sets_": 328, "src_field": [328, 348, 431, 597], "dst_field": [328, 348, 431, 597], "daughter_in_law_of_grandson_of": 328, "wife_of": 328, "api_kei": 328, "query_to_cyph": 328, "langchain_prompt": 328, "son": 328, "baoyu": 328, "jia": 328, "\u8d3e\u5b9d\u7389\u662f\u8c01\u7684\u513f\u5b50": 328, "cypher_sent": 328, "son_of": 328, "q": [328, 334, 421, 423, 429, 511, 515], "\u8d3e\u5b9d\u7389": 328, "lastli": 328, "\u8d3e\u653f": 328, "stori": 328, "compli": [329, 423], "unaddress": 329, "regard": [329, 335, 345, 581], "keyword": [329, 436, 437, 438, 505, 512, 516, 517, 518, 519, 520, 569, 572, 575, 576], "insensit": [329, 333], "capit": 329, "lowercas": 329, "letter": [329, 563], "slightli": [329, 424, 488, 575], "elabor": [329, 356], "uint64": [329, 410, 431, 576], "datetim": 329, "citizen": 329, "unsupport": [329, 331, 333], "conceiv": [329, 516], "inner_typ": 329, "mathemat": [329, 501, 503, 511, 513, 515, 524], "averag": [329, 333, 345, 350, 360, 434, 488], "summar": [329, 335, 339], "subtract": [329, 333], "divis": [329, 333], "modulo": [329, 333, 513], "exponenti": [329, 333, 335, 354, 516, 518, 519], "multipli": [329, 333, 556], "inequ": 329, "NOT": [329, 333, 581], "sensit": [329, 561], "WITH": [329, 333], "conjunct": 329, "disjunct": 329, "OR": [329, 331, 333, 362, 569], "xor": [329, 333], "negat": [329, 333], "bitopr": 329, "scalar": [329, 427, 434], "listliter": 329, "fold": [329, 581, 600], "mapliter": 329, "elementid": [329, 333], "startnod": 329, "endnod": 329, "1287230400000": 329, "shortestpath": 329, "AS": [329, 331, 566, 570], "BY": [329, 331], "unfold": [329, 335, 360], "unset": 329, "interconnect": [330, 352, 419], "tcp": [330, 346], "empow": [330, 336, 353], "llm": 330, "sentenc": [330, 333, 335], "websocket": [331, 600], "worth": [331, 345, 423, 431, 569], "mutat": 331, "lambda": [331, 335, 417, 423, 429, 434, 505, 516, 518, 519, 520, 601], "groovi": 331, "currenttimemilli": [331, 582, 600], "expr": [331, 333, 335, 600], "secondari": 331, "rocksdb": [331, 582], "therein": 331, "council": [331, 357], "birthdai": [331, 348, 602], "differenti": 331, "123456": [331, 339, 354, 582], "hasid": 331, "secondli": [331, 356], "path_expand": 331, "concret": [331, 360, 361, 431], "endv": [331, 335, 353, 600], "path_opt": [331, 333, 335, 353, 600], "pathexpand": 331, "27": [331, 333, 335, 357, 419, 420, 422, 550], "hasstep": 331, "groupcount": [331, 600], "age_cnt": 331, "age_sum": 331, "propertyidvalu": 331, "moreov": [331, 333, 349, 353, 355, 581], "propertyidvalue1": 331, "propertyidvalue2": 331, "inE": [331, 423, 600], "worker_num": 331, "convers": [331, 417, 418, 578], "deal": [331, 348, 352, 421], "advis": 331, "prevent": [331, 447], "monopol": 331, "conquer": 332, "retain": [333, 510, 583], "meant": [333, 335], "vertexid": 333, "inject": 333, "edgeid": 333, "propertykei": 333, "accessor": 333, "eq": [333, 335, 353, 360, 600], "neq": [333, 600], "gt": [333, 335, 600], "lt": [333, 335, 600], "gte": [333, 335, 350, 596, 600], "lte": [333, 350, 596, 600], "outsid": [333, 600], "textp": [333, 600], "startingwith": [333, 600], "endingwith": [333, 600], "rko": 333, "ark": 333, "notstartingwith": [333, 600], "notendingwith": [333, 600], "notcontain": [333, 600], "unequ": 333, "wheretravers": 333, "startkei": 333, "alter": [333, 569], "opposit": [333, 423, 497, 544], "nottravers": 333, "duplic": [333, 335, 496, 498, 500, 569, 570], "deduplabel": 333, "composit": [333, 335], "de": [333, 344], "impli": 333, "flat": 333, "br": 333, "selectkei": 333, "roll": [333, 335, 338], "accompani": 333, "aggregatefunc": 333, "emit": [333, 335, 417, 420, 423, 429, 601], "ascend": [333, 335], "asc": [333, 335], "toss": 333, "merg": [333, 423], "uniontravers": 333, "matchsent": 333, "binder": 333, "__": [333, 334, 335, 350, 423, 596, 600], "graphnam": 333, "unrol": 333, "linear": [333, 503, 505, 561, 581], "result_opt": [333, 335, 600], "all_v": [333, 335, 600], "lengthrang": 333, "keyvaluepair": 333, "trail": 333, "end_v": [333, 335, 600], "all_v_": 333, "vada": 333, "josh": 333, "29": [333, 335, 419, 420, 422], "lop": 333, "72057594037927939": 333, "rippl": 333, "72057594037927941": 333, "peter": 333, "ongo": 333, "liter": 333, "1l": 333, "0f": 333, "0d": 333, "2l": 333, "IN": [333, 351], "isnul": 333, "month": 333, "bitwis": 333, "startswith": 333, "ma": 333, "endswith": 333, "ko": 333, "substr": [333, 600], "preced": [333, 569, 582], "parenthes": 333, "unari": 333, "modulu": 333, "membership": [333, 569], "34": [333, 335, 357, 419, 420, 422, 562], "729": 333, "1225": 333, "841": 333, "alias": 333, "k1": 333, "k2": 333, "v2": [333, 335, 341, 353, 417, 547, 601], "simplepath": [333, 600], "imper": [333, 353], "reflect": [333, 581, 589], "sack": [333, 600], "guidanc": 334, "gremlinpython": [334, 582], "sy": [334, 429], "gremlin_python": [334, 582], "graph_travers": 334, "driver_remote_connect": 334, "driverremoteconnect": 334, "remoteconn": 334, "withremot": 334, "oom": 334, "vast": 334, "mitig": 334, "risk": [334, 349], "queue": [334, 362], "graph_url": [334, 432, 582, 600], "stopiter": 334, "resultiterationbatchs": 334, "addcontactpoint": 334, "resultset": 334, "hasnext": 334, "dlcdn": 334, "your_endpoint_address": 334, "your_endpoint_port": 334, "classnam": [334, 600], "ser": [334, 600], "gryomessageserializerv1d0": [334, 600], "serializeresulttostr": [334, 600], "realm": 335, "audit": 335, "toolsuit": 335, "primarili": [335, 353, 581], "simul": [335, 394, 429], "conclus": 335, "confid": 335, "intric": 335, "permit": [335, 569], "3k": 335, "gremlin_queri": 335, "190376": 335, "787074": 335, "sf1": 335, "432345564227583365": 335, "504403158265495622": 335, "576460752303435306": 335, "432345564227579434": 335, "hastyp": 335, "504403158265495612": 335, "144115188075855941": 335, "issubclassof": 335, "504403158265495553": 335, "confus": [335, 517, 518, 519], "belong": [335, 354, 360, 361, 362, 431, 559, 562, 569, 575, 582], "distinguish": [335, 349, 417, 418, 419, 581], "worri": 335, "havelabel": 335, "216172782113783808": 335, "216172782113784710": 335, "label1": 335, "label2": 335, "forum": 335, "72057594037936036": 335, "360287970189718653": 335, "360287970189718655": 335, "joseph": 335, "firstnam": [335, 348, 580, 597, 602], "yacin": 335, "01t00": 335, "curiou": 335, "38416": 335, "pyplot": 335, "plt": 335, "comment_cont": 335, "comment_length": 335, "histogram": 335, "hist": [335, 443], "50": [335, 357, 516, 518, 519], "607c8e": 335, "grid": [335, 562], "axi": [335, 359, 360, 361, 376, 400, 429, 575], "xlabel": 335, "ylabel": 335, "gender": [335, 348, 602], "person_gend": 335, "male": 335, "femal": 335, "male_count": 335, "female_count": 335, "216172782113784483": 335, "around": [335, 432], "432345564227569033": 335, "288230376151712472": 335, "144115188075856168": 335, "144115188075860911": 335, "72057594037934114": 335, "hasmoder": 335, "studyat": 335, "workat": 335, "islocatedin": 335, "432345564227582847": 335, "hasinterest": 335, "504403158265496227": 335, "864691128455136658": 335, "1008806316530991636": 335, "360287970189645858": 335, "en": [335, 352, 360, 531, 535, 536, 537, 538, 540, 541, 542, 548, 549, 550, 551, 553, 554, 555, 556], "e1": 335, "citi": [335, 339, 352, 354], "ispartof": 335, "countri": 335, "288230376151711797": 335, "216172782113784555": 335, "14": [335, 357, 419, 420, 422, 474, 534, 542, 554, 569], "exactli": [335, 339, 353, 360, 434, 479, 488, 502, 547, 575, 582], "432345564227569357": 335, "432345564227570524": 335, "288230376151712984": 335, "144115188075861043": 335, "replyof": [335, 580, 597], "54336": 335, "33411": 335, "360287970189700805": 335, "59465": 335, "33403": 335, "awai": 335, "ineffect": 335, "illeg": 335, "simple_path": 335, "hascreat": 335, "nation": 335, "china": 335, "np": [335, 420, 423, 429, 433, 584], "market": 335, "japan": 335, "browsers_us": 335, "browser_list": 335, "firefox": 335, "safari": 335, "browser_count": 335, "autopct": 335, "1f": 335, "univers": [335, 349, 434, 467, 468, 515, 525, 557, 561], "person1": 335, "person2": 335, "university1": 335, "university2": 335, "216172782113784481": 335, "216172782113784279": 335, "144115188075858884": 335, "216172782113784361": 335, "216172782113784291": 335, "144115188075858879": 335, "216172782113784642": 335, "216172782113784473": 335, "216172782113784328": 335, "144115188075858700": 335, "216172782113784700": 335, "216172782113784331": 335, "144115188075860619": 335, "216172782113784375": 335, "216172782113784333": 335, "144115188075858813": 335, "216172782113784593": 335, "216172782113784688": 335, "144115188075860870": 335, "216172782113784047": 335, "216172782113784692": 335, "144115188075862429": 335, "23": [335, 419, 420, 422], "216172782113784192": 335, "216172782113784107": 335, "216172782113784171": 335, "regular": [335, 508, 513, 514, 515, 537, 542, 545, 550, 553, 554, 555, 556], "butterfli": 335, "notion": 335, "matchanalyticsalgorithm": 335, "matchoptimizationalgorithm": 335, "216172782113784587": 335, "216172782113784363": 335, "144115188075860919": 335, "216172782113784532": 335, "216172782113784400": 335, "144115188075861858": 335, "216172782113784491": 335, "216172782113784401": 335, "144115188075858086": 335, "216172782113784598": 335, "216172782113784629": 335, "144115188075858881": 335, "216172782113783931": 335, "216172782113784657": 335, "144115188075858708": 335, "pa": 335, "pb": 335, "216172782113783809": 335, "216172782113784011": 335, "360287970189640007": 335, "360287970189640008": 335, "360287970189640009": 335, "2012": [335, 528], "216172782113783812": 335, "216172782113783882": 335, "36": [335, 357, 419, 420, 422, 474, 554, 562, 594], "360287970189640010": 335, "37": [335, 357, 419, 420, 422, 434, 562, 594], "216172782113784105": 335, "38": [335, 357, 419, 420, 422, 562, 594], "41": [335, 357, 419, 420, 422, 509, 562], "43": [335, 419, 420, 422, 434, 536, 562, 592], "216172782113783814": 335, "216172782113783962": 335, "360287970189640135": 335, "52": [335, 562], "216172782113784199": 335, "54": [335, 357, 509, 562], "216172782113784038": 335, "216172782113783816": 335, "216172782113784144": 335, "175": 335, "360287970189640462": 335, "72057594037927936": 335, "144115188075855872": 335, "288230376151711744": 335, "432345564227567616": 335, "504403158265495555": 335, "india": 335, "hasmemb": 335, "8248": 335, "8101": 335, "imposs": 335, "2822": 335, "tag1": 335, "tag2": 335, "37164": 335, "432": 335, "property1": 335, "property2": 335, "lastnam": [335, 348, 580, 597, 602], "donati": 335, "luigi": 335, "hall": 335, "costa": 335, "carlo": 335, "khan": 335, "meera": 335, "mahinda": 335, "eli": 335, "94": 335, "228": [335, 357], "emb": [335, 417, 601], "dom": 335, "pedro": 335, "ii": 335, "condariuc": 335, "bonomi": 335, "anyth": 335, "david": [335, 470, 481, 546], "silva": 335, "guliyev": 335, "tagclass": 335, "504403158265495552": 335, "504403158265495554": 335, "504403158265495556": 335, "504403158265495557": 335, "504403158265495558": 335, "504403158265495559": 335, "504403158265495560": 335, "504403158265495561": 335, "504403158265495562": 335, "504403158265495563": 335, "504403158265495564": 335, "504403158265495565": 335, "504403158265495566": 335, "504403158265495567": 335, "504403158265495568": 335, "504403158265495569": 335, "504403158265495570": 335, "504403158265495571": 335, "504403158265495572": 335, "504403158265495573": 335, "504403158265495574": 335, "504403158265495575": 335, "504403158265495576": 335, "504403158265495577": 335, "504403158265495578": 335, "504403158265495579": 335, "504403158265495580": 335, "504403158265495581": 335, "504403158265495582": 335, "504403158265495583": 335, "504403158265495584": 335, "504403158265495585": 335, "504403158265495586": 335, "504403158265495587": 335, "504403158265495588": 335, "504403158265495589": 335, "504403158265495590": 335, "504403158265495591": 335, "504403158265495592": 335, "504403158265495593": 335, "504403158265495594": 335, "504403158265495595": 335, "504403158265495596": 335, "504403158265495597": 335, "504403158265495598": 335, "504403158265495599": 335, "504403158265495600": 335, "504403158265495601": 335, "504403158265495602": 335, "504403158265495603": 335, "504403158265495604": 335, "504403158265495605": 335, "504403158265495606": 335, "504403158265495607": 335, "504403158265495608": 335, "504403158265495609": 335, "504403158265495610": 335, "504403158265495611": 335, "504403158265495613": 335, "504403158265495614": 335, "504403158265495615": 335, "504403158265495616": 335, "504403158265495617": 335, "504403158265495618": 335, "504403158265495619": 335, "504403158265495620": 335, "504403158265495621": 335, "q4": 335, "690": 335, "134313148716225": 335, "216172782113783811": 335, "216172782113783813": 335, "216172782113784707": 335, "216172782113784708": 335, "216172782113784709": 335, "216172782113783910": 335, "216172782113784104": 335, "216172782113784207": 335, "216172782113784318": 335, "216172782113784305": 335, "216172782113784597": 335, "216172782113784693": 335, "216172782113784018": 335, "216172782113784092": 335, "216172782113784108": 335, "216172782113784161": 335, "216172782113784162": 335, "73": [335, 357, 515], "216172782113783875": 335, "216172782113783932": 335, "216172782113784057": 335, "216172782113784068": 335, "216172782113784065": 335, "216172782113784235": 335, "216172782113784247": 335, "meaning": [335, 348, 361, 431], "449": 335, "454": [335, 357], "216172782113783810": 335, "descend": [335, 563], "216172782113784082": 335, "216172782113784169": 335, "216172782113784267": 335, "216172782113784368": 335, "216172782113784376": 335, "216172782113783938": 335, "216172782113784405": 335, "216172782113783980": 335, "216172782113783844": 335, "216172782113783901": 335, "216172782113783935": 335, "216172782113784439": 335, "216172782113784315": 335, "216172782113784374": 335, "216172782113784601": 335, "216172782113784431": 335, "216172782113783815": 335, "216172782113783817": 335, "216172782113783971": 335, "216172782113784154": 335, "216172782113784381": 335, "216172782113783933": 335, "earlier": [335, 520, 582], "216172782113783819": 335, "216172782113783826": 335, "216172782113783836": 335, "query2": 335, "09": [335, 357], "07": [335, 344, 357, 488, 496], "hastag": 335, "count1": 335, "count2": 335, "jet_li": 335, "zhang_yim": 335, "faye_wong": 335, "tsui_hark": 335, "bruce_le": 335, "johnny_depp": 335, "tom_cruis": 335, "jackie_chan": 335, "query3": 335, "moder": 335, "infinit": [335, 530], "seriou": 335, "song": 335, "containerof": 335, "message_count": 335, "824633725780": 335, "08t02": 335, "334": [335, 357], "album": 335, "hao": 335, "wang": [335, 501, 503], "19791209300479": 335, "755914248304": 335, "02t20": 335, "03": [335, 357, 590], "344": 335, "wall": 335, "lin": 335, "lei": 335, "24189255811275": 335, "824633725045": 335, "03t18": 335, "633": 335, "893353201782": 335, "28t23": 335, "53": [335, 357, 562], "251": 335, "1030792152809": 335, "03t09": 335, "47": [335, 346, 347, 357, 419, 420, 422], "414": 335, "chen": 335, "32985348833887": 335, "07t07": 335, "038": 335, "zhang": [335, 592], "yang": [335, 592], "15393162789707": 335, "query4": 335, "membercount": 335, "country_count": 335, "personcount": 335, "72057594037932503": 335, "72057594037932473": 335, "72057594037932489": 335, "72057594037932494": 335, "72057594037932501": 335, "72057594037934803": 335, "72057594037934804": 335, "72057594037935005": 335, "72057594037928132": 335, "72057594037935879": 335, "288230376151711799": 335, "country_top100_forums_dict": 335, "personcountforum": 335, "72057594037935702": 335, "72057594037930685": 335, "72057594037932114": 335, "72057594037934231": 335, "72057594037935703": 335, "72057594037935730": 335, "72057594037935734": 335, "72057594037932509": 335, "72057594037935707": 335, "72057594037935708": 335, "72057594037935711": 335, "72057594037935714": 335, "72057594037935719": 335, "72057594037935729": 335, "72057594037935731": 335, "72057594037935724": 335, "72057594037929560": 335, "72057594037931546": 335, "72057594037931545": 335, "72057594037932479": 335, "72057594037932485": 335, "72057594037932505": 335, "72057594037932511": 335, "72057594037935710": 335, "72057594037935722": 335, "72057594037929246": 335, "72057594037928266": 335, "72057594037935713": 335, "72057594037934308": 335, "72057594037934313": 335, "72057594037934302": 335, "72057594037930430": 335, "72057594037934303": 335, "72057594037932482": 335, "72057594037935147": 335, "72057594037935148": 335, "72057594037935157": 335, "72057594037927973": 335, "72057594037929386": 335, "72057594037934315": 335, "72057594037935720": 335, "72057594037935015": 335, "72057594037934300": 335, "72057594037930861": 335, "72057594037934319": 335, "72057594037931542": 335, "72057594037929583": 335, "72057594037933324": 335, "72057594037929182": 335, "72057594037929739": 335, "72057594037934829": 335, "72057594037935658": 335, "72057594037935660": 335, "72057594037935674": 335, "72057594037935682": 335, "72057594037935683": 335, "72057594037935672": 335, "72057594037927978": 335, "72057594037935163": 335, "72057594037935014": 335, "72057594037931544": 335, "72057594037934297": 335, "72057594037927979": 335, "72057594037932474": 335, "72057594037934384": 335, "72057594037932639": 335, "72057594037934380": 335, "72057594037935146": 335, "72057594037935152": 335, "72057594037928134": 335, "72057594037928674": 335, "72057594037929248": 335, "72057594037931240": 335, "72057594037931247": 335, "72057594037931256": 335, "72057594037930958": 335, "72057594037930963": 335, "72057594037931259": 335, "72057594037931260": 335, "72057594037931262": 335, "72057594037929365": 335, "72057594037929419": 335, "72057594037929421": 335, "72057594037929431": 335, "72057594037929434": 335, "72057594037929437": 335, "72057594037929446": 335, "72057594037929447": 335, "72057594037929449": 335, "72057594037929450": 335, "72057594037935166": 335, "72057594037929519": 335, "72057594037929451": 335, "72057594037929452": 335, "72057594037935046": 335, "72057594037932339": 335, "72057594037932481": 335, "72057594037934294": 335, "72057594037932389": 335, "72057594037932976": 335, "72057594037930870": 335, "72057594037931266": 335, "72057594037928092": 335, "72057594037928495": 335, "72057594037929510": 335, "72057594037929517": 335, "72057594037929961": 335, "72057594037929965": 335, "72057594037930242": 335, "72057594037930248": 335, "72057594037930250": 335, "72057594037930313": 335, "72057594037931547": 335, "72057594037935686": 335, "72057594037929052": 335, "72057594037929053": 335, "72057594037929055": 335, "72057594037929057": 335, "72057594037929060": 335, "72057594037934811": 335, "72057594037934813": 335, "72057594037934816": 335, "72057594037934821": 335, "72057594037934822": 335, "72057594037934823": 335, "72057594037934828": 335, "72057594037934835": 335, "72057594037934837": 335, "72057594037934975": 335, "72057594037934976": 335, "72057594037935032": 335, "72057594037935038": 335, "72057594037935045": 335, "72057594037935664": 335, "72057594037935673": 335, "72057594037935678": 335, "72057594037935685": 335, "72057594037931549": 335, "72057594037931550": 335, "72057594037931552": 335, "72057594037931554": 335, "72057594037931557": 335, "72057594037931560": 335, "72057594037931566": 335, "72057594037935671": 335, "72057594037935670": 335, "72057594037934977": 335, "72057594037931543": 335, "72057594037929518": 335, "72057594037935679": 335, "72057594037931575": 335, "72057594037932438": 335, "72057594037932878": 335, "72057594037932886": 335, "72057594037932888": 335, "72057594037927982": 335, "72057594037930526": 335, "72057594037930535": 335, "72057594037930546": 335, "72057594037930976": 335, "72057594037930536": 335, "72057594037931358": 335, "72057594037930366": 335, "72057594037931574": 335, "72057594037932435": 335, "72057594037935020": 335, "72057594037935864": 335, "72057594037933861": 335, "72057594037932440": 335, "72057594037927981": 335, "72057594037931349": 335, "72057594037931366": 335, "72057594037932885": 335, "72057594037927980": 335, "72057594037930529": 335, "72057594037930532": 335, "72057594037931304": 335, "72057594037932433": 335, "72057594037932441": 335, "72057594037934547": 335, "query11": 335, "live": 335, "startdat": 335, "enddat": 335, "216172782113784091": 335, "216172782113784250": 335, "216172782113784403": 335, "216172782113784537": 335, "216172782113784122": 335, "query14": 335, "country1": 335, "country2": 335, "subscor": 335, "award": [335, 592], "chile": 335, "p1": 335, "p2": 335, "case1": 335, "case2": 335, "case3": 335, "case4": 335, "216172782113784153": 335, "216172782113784100": 335, "216172782113783956": 335, "216172782113784673": 335, "216172782113784252": 335, "216172782113784263": 335, "216172782113784193": 335, "216172782113784242": 335, "216172782113784623": 335, "216172782113784498": 335, "216172782113784251": 335, "216172782113784538": 335, "216172782113784167": 335, "216172782113783864": 335, "216172782113784613": 335, "216172782113784116": 335, "faq": 336, "javasdk": [337, 586], "transit": [338, 538, 566], "magnitud": [338, 351], "superior": [338, 350, 352, 356], "rich": [338, 349, 352, 354, 419, 421], "neg": [338, 339, 417, 421, 423, 425, 429, 434, 453, 531], "gsl": [338, 339, 349, 419, 420, 421, 422, 426, 433], "gat": [338, 354, 417, 425, 601], "deepwalk": [338, 417, 601], "trans": [338, 417, 601], "pyg": [338, 339, 342, 343, 354, 355, 356], "flexibli": [338, 349, 354, 356], "pytorch": [338, 339, 346, 349, 354, 423, 425], "onlin": [338, 351, 354, 355, 578, 582], "fed": [338, 350, 354], "ek": 338, "aw": [338, 357, 593], "ack": 338, "concentr": [338, 356, 473], "industri": [339, 349, 354, 356, 357], "preprocess": [339, 429], "uniformli": [339, 506, 507, 508, 516, 517, 518, 519, 520, 564], "lookup": [339, 354, 429, 569], "topolog": [339, 419], "nn": [339, 341, 344, 345, 346, 347, 350, 354, 360, 417, 429, 596, 601], "ego": [339, 354, 425, 570, 601], "dimension": [339, 345, 350, 354, 418, 420, 421], "conv": [339, 342, 354], "edge_index": [339, 342, 346, 347], "carri": 339, "predict": [339, 345, 349, 350, 354], "asynchron": 339, "tensor": [339, 342, 359, 360, 361, 400, 417, 421, 425, 427, 573, 575], "plaintext": 339, "clearli": [339, 354], "dimens": [339, 341, 344, 345, 350, 354, 418, 516, 517, 518, 519, 561, 596], "batchgraph": 339, "mini": [339, 354], "loss": [339, 341, 344, 345, 346, 347, 350, 354, 429, 596, 601], "mind": 339, "classif": [339, 343, 350, 354, 358, 417, 418, 429], "trainer": [339, 341, 344, 345, 350, 417, 596, 601], "hk": 340, "rm": [340, 429], "4g": 340, "aarch64": 341, "processor": 341, "egographsag": [341, 344, 350, 596], "349": [341, 345, 350, 596], "venu": [341, 350], "www": [341, 344, 345, 350, 434, 488, 542, 551, 554, 596], "tf": [341, 342, 344, 345, 350, 417, 418, 423, 424, 429, 596, 601], "disable_v2_behavior": [341, 344, 345, 350, 596], "importerror": [341, 344, 345, 350, 596], "load_ogbn_mag": [341, 344, 345, 348, 350, 596, 602], "egosagesuperviseddataload": [341, 345, 350, 596], "localtrain": [341, 344, 345, 350, 596], "node_typ": [341, 344, 345, 350, 417, 419, 420, 423, 426, 429, 433, 596, 601], "class_num": [341, 345, 350, 417, 596, 601], "features_num": [341, 344, 345, 350, 417, 596, 601], "hops_num": [341, 345, 350, 417, 596, 601], "nbrs_num": [341, 344, 345, 350, 596], "epoch": [341, 342, 344, 345, 346, 347, 350, 417, 422, 580, 596, 601], "hidden_dim": [341, 344, 345, 350, 417, 429, 596, 601], "in_drop_r": [341, 345, 350, 596], "learning_r": [341, 344, 345, 350, 429, 596], "reset_default_tf_graph": [341, 345, 350, 596], "act_func": [341, 345, 350, 596], "relu": [341, 345, 350, 596], "dropout": [341, 344, 345, 350, 429, 596], "train_data": [341, 344, 345, 350, 596], "mask": [341, 345, 350, 433, 596], "train_embed": [341, 345, 350, 596], "src_ego": [341, 344, 345, 350, 596], "train_label": [341, 345, 350, 596], "reduce_mean": [341, 345, 350, 417, 429, 596, 601], "sparse_softmax_cross_entropy_with_logit": [341, 345, 350, 417, 429, 596, 601], "logit": [341, 345, 350, 429, 596], "adamoptim": [341, 344, 345, 350, 429, 596], "test_embed": [341, 345, 350, 596], "test_label": [341, 345, 350, 596], "test_indic": [341, 345, 350, 596], "argmax": [341, 345, 346, 347, 350, 596], "output_typ": [341, 345, 350, 404, 573, 596], "test_acc": [341, 345, 346, 347, 350, 596], "div": [341, 345, 350, 596], "reduce_sum": [341, 345, 350, 596], "float32": [341, 345, 346, 347, 350, 420, 429, 596], "obgn": [341, 345], "mag": [341, 345, 350, 596], "paper_featur": [341, 350, 596], "feat_": [341, 344, 345, 346, 347, 350, 596], "128": [341, 344, 345, 346, 347, 350, 429, 596], "lg": [341, 344, 345, 350, 412, 576, 590, 596], "cite": [341, 344, 345, 350, 596], "gen_label": [341, 344, 345, 350, 412, 576, 596], "val": [341, 344, 345, 350, 417, 433, 576, 596, 601], "85": [341, 344, 345, 350, 357, 360, 576, 596], "seed": [342, 417, 425, 429, 488, 491, 492, 493, 494, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 523, 524, 525, 526, 529, 561, 564, 566], "sampler": [342, 344, 422, 425, 427], "perceptu": 342, "unsupervis": [342, 344, 358, 417, 423, 425, 426, 576], "putback": 342, "outofrangeerror": [342, 422, 423, 429], "evolv": [342, 349, 582], "neighborsampl": [342, 421], "edge_weight": [342, 421, 423], "random_with_replac": 342, "pad": [342, 421], "expand_factor": [342, 421, 426], "sparsenod": [342, 420, 421, 423], "sparseedg": [342, 420, 421, 423], "layer1": [342, 421], "layer2": [342, 421], "neighbor_sampl": [342, 421], "bui": [342, 349, 420, 421, 422, 423, 426, 429], "i2i": [342, 421, 423], "layer_nod": [342, 421], "int_attr": [342, 420, 421, 422, 426, 429], "layer_edg": [342, 421], "float_attr": [342, 420, 421, 422, 426, 429], "egograph": [342, 354, 417, 425, 601], "negativesampl": [342, 426], "node_weight": [342, 423, 426], "edge_sampl": [342, 422, 426], "negative_sampl": [342, 417, 426, 601], "neg_nod": [342, 426], "heterogen": [342, 345, 350, 352, 354, 418, 419, 420, 421, 423], "randomli": [342, 423, 488, 494, 498, 500, 509, 511, 516, 519, 524, 566], "outv": [342, 417, 421, 423, 429, 600, 601], "overs": 342, "citat": [343, 345, 346, 347, 350, 358, 429, 596], "revisit": [343, 344, 358], "ho2": 343, "with_dataset": [344, 346, 416, 576, 602], "k8s_service_typ": [344, 346, 416, 576, 596], "loadbalanc": [344, 576, 596], "k8s_image_pull_polici": [344, 346, 416, 576], "cell": [344, 562], "metainfo": 344, "obgn_mag": 344, "ogbn_mag_smal": [344, 348, 596, 602], "chose": [344, 345], "i_featur": [344, 345], "argpars": [344, 346], "tfg": 344, "egosageunsuperviseddataload": 344, "parse_arg": [344, 346], "argumentpars": [344, 346], "egosag": 344, "add_argu": [344, 346], "output_dim": [344, 417, 601], "neg_num": 344, "0001": 344, "agg_typ": 344, "drop_out": 344, "neg_sampl": 344, "temperatur": 344, "dim": [344, 346, 347, 516, 517, 518, 519], "src_emb": [344, 417, 601], "dst_emb": 344, "dst_ego": 344, "neg_dst_emb": 344, "neg_dst_ego": 344, "unsupervised_softmax_cross_entropy_loss": 344, "ogbn": [345, 346, 347, 350, 596], "microsoft": [345, 350, 596], "institut": [345, 350, 596], "accomplish": [345, 350, 488], "word2vec": [345, 350, 596], "load_ogbn_arxiv": [346, 347], "num_server_nod": 346, "num_client_nod": 346, "ogbn_arxiv": [346, 347], "8gi": 346, "ifnotpres": [346, 576], "0a20240115": 346, "glt_graph": [346, 347], "graphlearn_torch": [346, 347], "node_featur": [346, 347], "node_label": [346, 347, 576], "edge_dir": [346, 347], "random_node_split": [346, 347], "num_val": [346, 347], "num_test": [346, 347], "num_client": [346, 347], "manifest_path": 346, "client_folder_path": 346, "kubeflow": [346, 428], "pytorchjob": 346, "torch": [346, 347], "pytorchreplicaspec": 346, "restartpolici": 346, "onfailur": 346, "imagepullpolici": 346, "node_rank": 346, "master_addr": [346, 347], "volumemount": 346, "emptydir": 346, "medium": 346, "sizelimit": 346, "num_worker_replica": 346, "my_pod_nam": 346, "group_mast": 346, "valuefrom": 346, "fieldref": 346, "fieldpath": 346, "distributeddataparallel": 346, "torch_geometr": [346, 347], "glt": [346, 347], "gl_torch_graph": 346, "gltorchgraph": 346, "no_grad": [346, 347], "test_load": [346, 347], "dataset_nam": [346, 347], "eval": [346, 347, 573], "y_true": [346, 347], "enumer": [346, 347, 359], "devic": [346, 347, 357], "del": [346, 347, 431, 569], "y_pred": [346, 347], "keepdim": [346, 347], "run_client_proc": 346, "num_serv": [346, 347], "client_rank": [346, 347], "server_rank_list": 346, "training_pg_master_port": 346, "init_cli": [346, 347], "master_port": [346, 347], "server_client_master_port": [346, 347], "num_rpc_thread": [346, 347], "client_group_nam": 346, "k8s_glt_client": 346, "is_dynam": [346, 347], "current_ctx": 346, "get_context": 346, "init_process_group": 346, "gloo": 346, "world_siz": 346, "init_method": 346, "train_load": [346, 347], "distneighborload": [346, 347], "num_neighbor": [346, 347], "input_nod": [346, 347], "collect_featur": [346, 347], "to_devic": [346, 347], "worker_opt": [346, 347], "remotedistsamplingworkeropt": [346, 347], "server_rank": 346, "worker_devic": [346, 347], "worker_concurr": [346, 347], "buffer_s": [346, 347], "256mb": 346, "prefetch_s": [346, 347], "workload_typ": [346, 347], "in_channel": [346, 347], "hidden_channel": [346, 347], "num_lay": [346, 347], "out_channel": [346, 347], "device_id": 346, "adam": [346, 347], "lr": [346, 347], "001": 346, "arxiv": [346, 347, 434, 477, 492, 493, 494, 508, 561], "zero_grad": [346, 347], "log_softmax": [346, 347], "nll_loss": [346, 347], "backward": [346, 347, 354, 423, 520, 576], "03d": [346, 347], "04f": 346, "4f": [346, 347], "shutdown_cli": [346, 347], "__name__": [346, 429], "__main__": [346, 429], "supervis": [346, 350, 358, 418, 421, 429, 576, 596], "sage": 346, "9997": 346, "train_loader_master_port": 346, "9998": 346, "test_loader_master_port": 346, "9999": 346, "9001": 346, "9002": 346, "9003": 346, "9004": 346, "k8s_launch": 346, "ogb": 347, "nodeproppr": 347, "unsqueez": 347, "acc": 347, "512": [347, 423], "shut": 347, "trivial": [348, 356, 485], "bucket": [348, 576, 592], "_e": [348, 431, 578, 602], "ldbc_sampl": [348, 582, 600, 602], "person_0_0": [348, 582, 597, 602], "didn": [348, 357], "person_knows_person_0_0": [348, 582, 597, 602], "comment_0_0": [348, 597, 602], "person_likes_comment_0_0": [348, 602], "unseen": [348, 354, 584], "person_likes_post_0_0": [348, 602], "post_0_0": [348, 602], "ndarrai": [348, 361, 376, 387, 420, 421, 423, 426, 431, 433, 569, 602], "comment_replyof_comment_0_0": [348, 597, 602], "col_0": [348, 602], "col_1": [348, 602], "coo": [348, 580, 602], "array_v": [348, 602], "col": [348, 602], "array_": [348, 602], "s3": [348, 431, 602], "hood": 348, "distributedli": [348, 419, 425, 427, 428, 429], "fsspec": [348, 602], "kwarg": [348, 360, 361, 368, 379, 391, 395, 396, 413, 416, 426, 431, 432, 433, 576], "ds1": [348, 602], "datafil": [348, 602], "ds2": [348, 602], "graphscope_bucket": [348, 602], "ds3": [348, 602], "9000": [348, 582, 602], "extra_conf": [348, 602], "conf1": [348, 602], "d34": [348, 602], "client_kwarg": [348, 602], "region_nam": [348, 602], "east": [348, 602], "ossf": [348, 602], "subclass": [348, 359, 569], "abstractfilesystem": [348, 602], "abstractbufferfil": 348, "_upload_chunk": [348, 602], "_initiate_upload": [348, 602], "_fetch_rang": [348, 602], "register_implement": [348, 602], "protocol_nam": [348, 602], "protocol_file_system": [348, 602], "direction": 348, "exce": [348, 527, 528], "super": [348, 360, 419, 423], "modular": [349, 561], "seller": 349, "buyer": [349, 353], "fraudul": 349, "sell": 349, "suspici": 349, "fraud": [349, 356], "feed": [349, 412, 417, 420, 423, 429, 433, 576, 601], "webui": 349, "necessit": 349, "diversifi": 349, "ingest": [349, 582], "rapid": 349, "analyst": 349, "resembl": [349, 561, 566, 568], "olap": 349, "gen": [349, 423], "dataflow": [349, 351], "arriv": 349, "financi": 349, "billion": [349, 352, 356], "preval": 349, "miniconda": 350, "scientif": 350, "field_of_studi": [350, 596], "subject": 350, "4307": [350, 596], "with_cyph": [350, 576], "n1": 350, "n2": 350, "proven": 350, "2014": [350, 434, 596], "2020": [350, 596], "ret1": [350, 596], "k_core": [350, 360, 434, 570, 592, 596], "ret2": [350, 596], "kcore": [350, 596], "downstream": [350, 423], "train_sag": 350, "130": [350, 596], "effortlessli": 350, "conduit": 350, "simultan": [350, 356, 578], "icde2023": 351, "sigmod2017": [351, 592, 598], "gra": 351, "ph": 351, "arallel": 351, "ngine": 351, "opensourc": 351, "raph": 351, "nalysi": 351, "elat": 351, "ransact": 351, "loos": [351, 356, 578], "mysql": [351, 578], "nutshel": [351, 578], "exploit": [351, 578], "etriev": 351, "terfac": 351, "portabl": [351, 581], "rust": [351, 581, 582], "handler": [351, 576], "chive": 351, "guardian": 351, "galaxi": 351, "steal": 351, "tackl": [351, 352], "imbal": 351, "nvlink": 351, "acut": 351, "asymmetr": 351, "innov": 351, "speedup": 351, "cncf": 351, "sandbox": 351, "amplifi": 351, "sophist": 351, "dissoci": 351, "ly": 351, "dag": [351, 360, 361, 379, 431, 569, 573, 576], "laptop": 351, "loop": [351, 434, 444, 457, 496, 498, 500, 502, 508, 516, 517, 518, 519, 520, 526, 529, 569, 570, 600], "correl": [351, 434], "subtask": 351, "earli": 351, "nsdi": [351, 598], "legaci": 351, "interchang": 351, "memoiz": 351, "vldb2021": 351, "artial": 351, "ncrement": 351, "transport": 352, "protein": [352, 510], "uncov": 352, "vari": [352, 418], "unless": [352, 421, 569], "discov": 352, "discoveri": [352, 354, 576, 582], "rough": 352, "accordingli": [352, 409], "snap": 352, "stanford": [352, 560], "cs224w": 352, "constitu": 352, "bellman": [352, 434], "ford": [352, 434], "wiki": [352, 360, 531, 535, 536, 537, 538, 540, 541, 542, 548, 549, 550, 551, 553, 554, 555, 556], "s_algorithm": 352, "towardsdatasci": 352, "9bd8951e7da": 352, "road": [352, 584], "logist": 352, "deliveri": 352, "media": 352, "nontrivi": [352, 541], "steep": 352, "sought": 352, "monei": [353, 356], "launder": [353, 356], "exact": [353, 498, 500, 596], "exclud": 353, "heurist": [353, 496], "purchas": 353, "bolder": 353, "border": 353, "sens": [353, 561, 576], "embrac": 353, "grasp": 353, "drug": 354, "likelihood": 354, "biologi": 354, "valuabl": 354, "bioinformat": 354, "chemic": 354, "driven": [354, 561, 581], "carefulli": 354, "rewind": 354, "stack": 354, "convolut": [354, 425], "weigh": 354, "choic": [354, 581, 582], "huge": [354, 584], "gradient": 354, "recal": 354, "irregular": 354, "unstructur": 354, "pool": 354, "hardwar": [354, 585], "undergo": 354, "perceiv": 354, "maxgraph": [355, 598], "2x": 355, "elast": [355, 582], "encrypt": 355, "geminigraph": [356, 357], "plato": [356, 357], "empir": 356, "enjoi": 356, "janusgraph": 356, "nebula": 356, "relaunch": [356, 582], "recoveri": 356, "coars": 356, "grain": 356, "invest": 356, "trace": [356, 360], "dgl": 356, "nebular": 356, "movement": [356, 423], "grade": 357, "r6": 357, "8xlarg": 357, "alibabacloud": 357, "ec": 357, "xl": 357, "a038f97": 357, "170e7d3": 357, "21009d6": 357, "v4": 357, "mpich": 357, "fair": 357, "huge_pag": 357, "jemalloc": 357, "o3": 357, "determinist": [357, 362, 576, 582], "cdlp": [357, 360, 592], "load_direct": 357, "load_undirected_from_direct": 357, "reformat": 357, "mark": [357, 434], "datagen": 357, "9_0": 357, "fb": 357, "62": 357, "9_1": 357, "78": [357, 488, 562], "9_2": 357, "zf": 357, "88": [357, 501, 503], "60": [357, 434, 562, 582], "61": 357, "176": [357, 525], "graph500": 357, "71": [357, 434, 506, 510, 516], "79": [357, 501, 503], "friendster": 357, "97": 357, "39": [357, 419, 420, 422, 434, 562, 592, 594], "86": 357, "57": 357, "126": [357, 502], "98": 357, "83": 357, "66": 357, "1695": 357, "2742": 357, "3600": 357, "425": 357, "55": [357, 468], "lcc": 357, "521": 357, "51": [357, 562], "296": 357, "1859": 357, "201": [357, 565], "842": 357, "68": 357, "competitor": 357, "pagerank_loc": 357, "65": 357, "72": 357, "84": 357, "63": [357, 505, 507], "gunrock": 357, "0c9a96": 357, "grout": 357, "5ce160": 357, "v7": 357, "v10": 357, "gn6v": 357, "c8g1": 357, "16xlarg": 357, "8x": 357, "16gb": 357, "nvidia": 357, "v100": 357, "gb": 357, "soc": [357, 489, 490], "livejournal1": 357, "89": 357, "9345": 357, "215": [357, 558], "560": 357, "3029": 357, "129": [357, 524], "389": 357, "155": 357, "0549": 357, "sinaweibo": 357, "168": 357, "1649": 357, "647": 357, "orkut": 357, "121": 357, "193": 357, "658": 357, "3201": 357, "7677": 357, "137": [357, 496], "2139": 357, "319": 357, "261": 357, "69": [357, 556, 562], "235": 357, "567": 357, "283": 357, "073": 357, "6619": 357, "45": [357, 419, 420, 422, 498], "150": 357, "87299": 357, "162": 357, "60403": 357, "9676": 357, "141": 357, "347": 357, "7772": 357, "0118": 357, "306": 357, "8618": 357, "9134": 357, "467": 357, "60801": 357, "8666": 357, "3501": 357, "870": 357, "6451": 357, "198": 357, "829": 357, "5036": 357, "229": 357, "024": 357, "483": 357, "178": 357, "5593": 357, "807": 357, "367": 357, "6946": 357, "2339": 357, "jupyt": [358, 576], "notebook": [358, 576], "jupyterlab": 358, "playground": [358, 603], "bipartit": [358, 417, 419, 475, 523, 524, 525, 557, 601], "grapeengin": 359, "vineyardserv": 359, "grapeinst": 359, "graphscopeserv": 359, "inlin": 359, "dag_fil": 359, "dagfil": 359, "rundagfil": 359, "subscrib": 359, "charg": 359, "commspec": [359, 578, 581, 583], "comm_spec": [359, 578, 581, 583], "vineyard_socket": 359, "bl": 359, "dispatchresult": 359, "onrec": 359, "commanddetail": 359, "gsobject": 359, "objectmanag": 359, "appentri": 359, "icontextwrapp": 359, "ifragmentwrapp": 359, "projector": 359, "propertygraphutil": 359, "objecttyp": 359, "putobject": 359, "obj": 359, "removeobject": 359, "getobject": [359, 583], "hasobject": 359, "analyticalserv": 359, "startserv": 359, "stopserv": 359, "engineconfig": 359, "tojsonstr": 359, "vineyard_rpc_endpoint": 359, "enable_java_sdk": 359, "setcommand": 359, "enum": 359, "aggregatepolici": 359, "kpickfirst": 359, "kpickfirstnonempti": 359, "krequireconsist": 359, "kconcat": 359, "kpickfirstnonemptygraphdef": 359, "kmergegraphdef": 359, "worker_id": 359, "error_cod": 359, "set_error": 359, "has_large_data": 359, "set_graph_def": 359, "graphdefpb": 359, "graph_def": 359, "set_data": 359, "large_data": 359, "inarch": 359, "arc": 359, "aggregate_polici": 359, "fragmentwrapp": 359, "addcolumn": 359, "vdata_t": 359, "edata_t": 359, "arrowvertexmap": 359, "internaltyp": 359, "arrowprojectedfragmentbas": 359, "bareregist": 359, "internal_oid_t": 359, "property_graph_typ": 359, "eid_typ": 359, "vertexrang": [359, 362], "inner_vertices_t": 359, "outer_vertices_t": 359, "vertices_t": 359, "sub_vertices_t": 359, "nbr_t": 359, "arrow_projected_fragment_impl": 359, "compact_nbr_t": 359, "compactnbr": 359, "nbrunit": 359, "compact_adj_list_t": 359, "compactadjlist": 359, "const_adj_list_t": 359, "const_compact_adj_list_t": 359, "property_vertex_map_t": 359, "arrowprojectedvertexmap": 359, "label_id_typ": 359, "prop_id_typ": 359, "property_graph_t": 359, "eid_array_t": 359, "data_t": 359, "inner_vertex_array_t": 359, "outer_vertex_array_t": 359, "objectmeta": 359, "preparetorunapp": 359, "prepareconf": 359, "fnum": [359, 362], "vertex_prop_id": 359, "edge_prop_id": 359, "mirrorvertic": 359, "getid": 359, "getinternalid": 359, "getfragid": 359, "typedarrai": 359, "value_typ": 359, "gid2vertex": 359, "vertex2gid": 359, "getinnerverticesnum": 359, "getouterverticesnum": 359, "getverticesnum": 359, "getedgenum": [359, 583], "getinedgenum": [359, 583], "getoutedgenum": [359, 583], "getoutgoingedgenum": 359, "getincomingedgenum": 359, "gettotalverticesnum": 359, "isinnervertex": 359, "getoutervertex": 359, "getinnervertexid": 359, "getinnervertexinternalid": 359, "getoutervertexid": 359, "getoutervertexinternalid": 359, "gid2oid": 359, "oid2gid": 359, "innervertexgid2vertex": 359, "outervertexgid2vertex": 359, "getoutervertexgid": 359, "getinnervertexgid": 359, "compact_": 359, "enable_if": 359, "getincominginnervertexadjlist": 359, "getoutgoinginnervertexadjlist": 359, "getincomingoutervertexadjlist": 359, "getoutgoingoutervertexadjlist": 359, "src_fid": 359, "dst_fid": 359, "getlocaloutdegre": 359, "getlocalindegre": 359, "destlist": 359, "iedest": 359, "iedestss": 359, "oedest": 359, "oedestss": 359, "ioedest": 359, "ioedestss": 359, "getvertexmap": 359, "get_out_edges_ptr": 359, "get_in_edges_ptr": 359, "get_oe_offsets_begin_ptr": 359, "get_oe_offsets_end_ptr": 359, "get_ie_offsets_begin_ptr": 359, "get_ie_offsets_end_ptr": 359, "get_edata_array_accessor": 359, "get_vdata_array_accessor": 359, "get_arrow_frag": 359, "vertex_map_id": 359, "local_vertex_map": [359, 583], "getoid": 359, "getgid": 359, "offset2lid": 359, "getoffsetfromlid": 359, "getlidfromgid": 359, "getfidfromgid": 359, "oid_t_": 359, "vid_t_": 359, "arrowfragmentload": 359, "efil": [359, 583], "vfile": [359, 583], "graph_info": 359, "leaf": [359, 361, 406, 434, 479, 563], "table_vec_t": 359, "loadvertexedget": 359, "loadvertext": 359, "loadedget": 359, "loadfrag": 359, "loadfragmentasfragmentgroup": 359, "addlabelstofrag": 359, "frag_id": [359, 578, 583], "adddatatoexistedvlabel": 359, "adddatatoexistedelabel": 359, "addlabelstofragmentasfragmentgroup": 359, "extendlabeldata": 359, "extend_typ": 359, "initpartition": 359, "doxygenclass": 359, "arrowfragmentappend": 359, "doxygen": 359, "runner": [359, 592], "_build": 359, "appbas": 359, "defaultmessagemanag": 359, "need_split_edg": 359, "konlyout": 359, "propertyappbas": 359, "propertymessagemanag": 359, "propertyautoappbas": 359, "propertyautomessagemanag": 359, "app_t": 359, "defaultwork": 359, "parallelenginespec": 359, "pe_spec": 359, "defaultparallelenginespec": 359, "getcontext": 359, "ostream": 359, "parallelpropertywork": 359, "parallelpropertymessagemanag": 359, "propertyautowork": 359, "pointer": 359, "appfram": 359, "creatework": 359, "deletework": 359, "lib_path": 359, "worker_handl": 359, "queryarg": 359, "query_arg": [359, 404, 573], "context_kei": 359, "frag_wrapp": 359, "functiontyp": 359, "argsnum": 359, "argsunpack": 359, "datatyp": 359, "argtypeat": 359, "defaultpropertywork": 359, "ctx_t": 359, "ctxwrapperbuild": 359, "contextwrapp": 359, "vertexpropertycontext": [359, 592], "contextbas": 359, "labeledvertexdatacontext": 359, "contextdatatyp": 359, "icolumn": 359, "get_column": 359, "get_typed_column": 359, "vertex_properti": [359, 360, 362], "properties_map": 359, "vertexdatacontextwrapp": 359, "ivertexdatacontextwrapp": 359, "fragment_wrapp": 359, "unique_ptr": 359, "tondarrai": 359, "todatafram": 359, "tovineyardtensor": 359, "tovineyarddatafram": 359, "toarrowarrai": 359, "tensorcontext": [359, 361], "set_shap": 359, "tensor_t": 359, "tensorcontextwrapp": 359, "itensorcontextwrapp": 359, "cmake_extra_opt": 360, "asset": 360, "labeled_vertex_data": 360, "dynamic_vertex_data": 360, "labeled_vertex_properti": 360, "cpp_pregel": 360, "cython_pi": 360, "cython_pregel": 360, "appdagnod": [360, 395, 401], "bytesio": [360, 368], "is_compat": 360, "graphdagnod": [360, 372, 386, 387, 403, 410, 412, 431, 432, 576], "invalidargumenterror": [360, 576], "scannererror": 360, "incorrect": 360, "signatur": [360, 423, 569], "full_jar_path": [360, 592], "java_app_class": [360, 592], "__call__": 360, "qualifi": [360, 592], "app_asset": [360, 372, 378], "app_nod": 360, "__del__": 360, "unload": [360, 383, 401, 403], "attribute_assortativity_coeffici": [360, 592], "assort": 360, "ref": [360, 581], "joint": [360, 526, 527, 528, 529, 570], "newman": [360, 434, 498, 500, 561], "026126": 360, "2003": [360, 434, 491, 498, 509, 517], "numeric_assortativity_coeffici": [360, 592], "analog": 360, "k_": [360, 470, 534], "rac": 360, "s_i": 360, "sum_": [360, 434, 502], "w_": [360, 434, 502], "ij": [360, 434], "k_j": 360, "valueerror": [360, 416, 431, 434, 508, 565, 576], "barrat": 360, "barth\u00e9lemi": 360, "pastor": 360, "satorra": 360, "vespignani": 360, "pna": 360, "3747": 360, "3752": 360, "2004": [360, 523], "average_shortest_path_length": [360, 434, 570, 592], "frac": [360, 434, 444, 502], "vertexdatacontextdagnod": [360, 361], "avg_clust": [360, 592], "degree_threshold": 360, "threshold": [360, 516, 517, 518, 519], "1e9": 360, "unweight": [360, 434], "foster": 360, "grassberg": 360, "paczuski": 360, "107": [360, 522], "10815": 360, "1e": [360, 429, 434, 488], "06": [360, 434], "html": [360, 434, 518, 521, 530, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 549, 551], "gv": 360, "hits_algorithm": 360, "vertexpropertycontextdagnod": [360, 361], "is_simple_path": [360, 592], "nonempti": 360, "biject": [360, 564], "smallest": [360, 521, 541, 551], "pairwis": 360, "k_shell": [360, 592], "katz_centrality_numpi": [360, 434], "auttenu": 360, "min_progress": 360, "progress_tri": 360, "progress": [360, 513], "met": 360, "blondel": 360, "et": [360, 566], "al": [360, 566], "stat": [360, 516, 518], "mech": 360, "10008": 360, "2008": [360, 488, 511], "sotera": 360, "lpa_u2i": [360, 592], "labeledvertexpropertycontextdagnod": [360, 361], "pagerank_nx": [360, 592], "max_it": [360, 434, 488], "tol": [360, 434, 488], "solver": 360, "voterank": [360, 592], "unsign": 360, "basecontextdagnod": [361, 431], "bound_app": [361, 378], "contextdagnod": 361, "to_vineyard_tensor": [361, 575, 592], "to_vineyard_datafram": [361, 575, 592], "lazi": [361, 431, 576], "sg": 361, "resultdagnod": [361, 396], "r4": [361, 584], "62586": 361, "alphabet": [361, 575], "tensorcontextdagnod": 361, "quer": 361, "labeledvertexdatacontextdagnod": 361, "column_nam": [361, 575], "labeld": 361, "context_nod": 361, "result_schema": 361, "dynamicvertexdatacontext": 361, "dag_nod": 361, "edge_label_id": 362, "edge_label_nam": 362, "incoming_edg": 362, "register_aggreg": 362, "pregelaggregatortyp": 362, "aggr_typ": 362, "get_aggregated_valu": 362, "get_total_vertices_num": 362, "vertex_property_num": 362, "vertex_label_id": 362, "edge_property_num": 362, "get_vertex_label_by_id": 362, "get_vertex_label_id_by_nam": 362, "get_edge_label_by_id": 362, "get_edge_label_id_by_nam": 362, "edge_properti": 362, "get_vertex_property_id_by_nam": 362, "vertex_property_nam": [362, 581], "get_vertex_property_by_id": 362, "vertex_property_id": 362, "get_edge_property_id_by_nam": 362, "edge_property_nam": 362, "get_edge_property_by_id": 362, "edge_property_id": 362, "kboolandaggreg": 362, "kbooloraggreg": 362, "kbooloverwriteaggreg": 362, "overwritten": 362, "kdoubleminaggreg": 362, "kdoublemaxaggreg": 362, "kdoublesumaggreg": 362, "kdoubleproductaggreg": 362, "kdoubleoverwriteaggreg": 362, "kint64minaggreg": 362, "kint64maxaggreg": 362, "kint64sumaggreg": 362, "kint64productaggreg": 362, "kint64overwriteaggreg": 362, "ktextappendaggreg": 362, "kalongoutgoingedgetooutervertex": 362, "kalongincomingedgetooutervertex": 362, "kalongedgetooutervertex": 362, "get_total_nodes_num": 362, "get_nodes_num": 362, "get_inner_nodes_num": 362, "get_outer_nodes_num": 362, "outer_nod": 362, "get_node_fid": 362, "is_inner_nod": 362, "is_outer_nod": 362, "get_nod": [362, 420], "get_outer_nod": 362, "get_node_id": 362, "get_incoming_edg": 362, "has_child": 362, "child": [362, 471, 563], "has_par": 362, "parent": [362, 364, 404, 409, 563], "get_indegre": 362, "get_outdegre": 362, "kmaxaggreg": 362, "ksumaggreg": 362, "kproductaggreg": 362, "koverwriteaggreg": 362, "subproject": 364, "scratch": 364, "never": [364, 569], "hopefulli": 364, "inspir": [364, 569], "dmaven": 364, "antrun": 364, "gae_java": 365, "graphscope_typ": 367, "graphscopetyp": 367, "myalgorithm": 367, "filenotfounderror": 368, "permissionerror": 368, "typeerror": [368, 404, 576], "arrowproperti": [369, 431], "subrang": 369, "loader_op": 370, "notimplementederror": 370, "run_app": [375, 376, 391, 399, 400], "copy_typ": 377, "session_id": [379, 383, 404, 431, 432, 569, 573], "graph_typ": [379, 569], "graphtyp": [379, 569, 578, 583], "view_typ": 380, "vertex_or_edge_label_list": 381, "graph_util": 381, "vertexlabel": 381, "op_typ": [383, 404, 573], "uiliti": 383, "interactive_queri": [388, 576], "gremlin_script": [388, 432], "request_opt": [388, 432], "interactivequerydagnod": 388, "modify_typ": [389, 390], "attr": [389, 390, 404, 423, 436, 437, 438, 569, 572], "type_pb2": [389, 390, 394], "nx_add_edg": 389, "nx_del_edg": 389, "nx_update_edg": 389, "nx_add_nod": 390, "nx_del_nod": 390, "nx_update_nod": 390, "fd": [391, 396, 592], "storage_opt": [391, 396], "write_opt": [391, 396], "adaptor": 391, "result_path": [391, 396], "vertex_collect": 392, "edge_collect": 392, "report_typ": 394, "node_num": [394, 596, 600], "has_nod": [394, 569], "has_edg": [394, 569], "node_data": 394, "neighbors_by_nod": 394, "succs_by_nod": 394, "preds_by_nod": 394, "neighbors_by_loc": 394, "succs_by_loc": 394, "preds_by_loc": 394, "deg_by_nod": 394, "in_deg_by_nod": 394, "out_deg_by_nod": 394, "deg_by_loc": 394, "in_deg_by_loc": 394, "out_deg_by_loc": 394, "nodes_by_loc": 394, "loc": 394, "multigraph": [394, 434, 436, 444, 448, 457, 462, 463, 489, 490, 498, 500, 513, 514, 515, 569, 572], "multidigraph": [394, 436, 448, 457, 462, 463, 500, 508, 509, 567, 569], "large_attr": [404, 573], "types_pb2": [404, 569], "operationtyp": 404, "opdef": [404, 408], "attrvalu": [404, 431, 600], "largeattrvalu": 404, "op_def_pb2": 408, "incoming_data": [410, 431, 576], "as_default": [410, 576], "alia": [415, 417, 423, 569, 576, 601], "k8s_gs_imag": [416, 576, 594], "k8s_etcd_imag": 416, "k8s_image_pull_secret": [416, 576], "k8s_coordinator_cpu": [416, 576], "k8s_coordinator_mem": [416, 576], "k8s_vineyard_cpu": [416, 576], "k8s_mars_worker_cpu": [416, 576], "k8s_mars_worker_mem": [416, 576], "k8s_mars_scheduler_cpu": [416, 576], "k8s_mars_scheduler_mem": [416, 576], "with_mar": [416, 576], "k8s_waiting_for_delet": [416, 576], "dataset_download_retri": 416, "k8s_deploy_mod": [416, 576], "kv": 416, "\u02bbegograph": 417, "\u02bbegotensor": 417, "sample_se": [417, 601], "positive_sampl": [417, 601], "receptive_fn": [417, 601], "egotensor": [417, 425, 601], "egoflow": [417, 425, 601], "cora": [417, 429, 601], "node_t": [417, 418, 429, 601], "edge_table_with_self_loop": [417, 601], "train_tabl": [417, 601], "val_tabl": [417, 601], "test_tabl": [417, 601], "dataset_fold": [417, 601], "attr_typ": [417, 418, 419, 429, 601], "1433": [417, 429, 601], "attr_delimit": [417, 418, 419, 601], "learningbasedmodel": [417, 601], "categorical_attrs_desc": [417, 601], "_sample_se": [417, 601], "_positive_sampl": [417, 601], "_receptive_fn": [417, 601], "ego_flow": [417, 601], "src_ego_spec": [417, 601], "pos_src_ego_tensor": [417, 601], "identityencod": [417, 601], "widendeepencod": [417, 601], "feature_encod": [417, 601], "gcnconv": [417, 601], "sparseegographencod": [417, 601], "_encod": [417, 601], "conv_lay": [417, 601], "_supervised_loss": [417, 601], "full_graph_mod": [417, 601], "localtftrain": [417, 601], "model_fn": [417, 429, 601], "load_graph": [417, 601], "server_id": [417, 601], "server_count": [417, 419, 429, 601], "tracker": [417, 429, 601], "conclud": 417, "bought": 418, "saturdai": 418, "morn": 418, "bigint": 418, "shanghai": 418, "localfilesystem": 418, "pai": [418, 423, 424], "tab": 418, "s2": [418, 534], "215340": 418, "933091": 418, "grei": 418, "362519": 418, "097545": 418, "chapter": [418, 419, 421, 515, 552], "dscript": 418, "dentryfil": 418, "dtabl": 418, "prj": 418, "flag": [418, 419], "define_str": 418, "node_sourc": 418, "edge_sourc": 418, "bucket_s": 418, "greatli": [418, 419, 581], "your_attr_typ": 418, "you_delimit": 418, "scr_id": 418, "feature1": 418, "10002": [418, 419, 420, 422], "feature2": 418, "10003": [418, 419, 420, 422], "feature3": 418, "124": 418, "\u02bbitem_node_decod": 418, "\u02bbuser_node_decod": 418, "\u02bbedge_decod": 418, "item_node_decod": 418, "user_node_decod": 418, "edge_decod": [418, 429], "graph_object": 418, "commod": 419, "swing": [419, 420], "30001": [419, 420, 422], "30002": [419, 420, 422], "30003": [419, 420, 422], "table_1": 419, "table_2": 419, "dest": 419, "10004": [419, 420], "20001": [419, 420, 422], "20003": [419, 420, 422], "20004": [419, 420, 422], "46": [419, 420, 422, 434, 556], "ui_decod": 419, "uv_decod": 419, "table_3": 419, "table_4": 419, "click_v": 419, "task_index": [419, 429], "task_count": 419, "atyp": 419, "job_nam": [419, 429], "worker_host": 419, "respond": 419, "necessarili": [419, 531], "serious": 419, "decreas": [419, 498, 500], "speak": 419, "client_count": [419, 429], "wait_for_clos": [419, 429], "matter": [419, 575], "get_topologi": 420, "dst_type": 420, "figure1": 420, "topo": 420, "print_al": 420, "string_attr": 420, "src_node": 420, "dst_node": 420, "dense_shap": 420, "__next__": 420, "table1": 420, "u_nod": 420, "table2": 420, "table3": 420, "click_edg": 420, "table4": 420, "conduc": 421, "recept": [421, 425], "ai": 421, "meta_path": 421, "layer_id": 421, "famili": [421, 434, 472, 530, 558], "random_without_replac": 421, "ueri": 421, "default_neighbor_id": 421, "set_default_neighbor_id": [421, 430], "xx": 421, "set_padding_mod": 421, "circular": [421, 423, 473], "nodesampl": 422, "node_sampl": 422, "by_ord": 422, "node_from": [422, 433], "edge_src": [422, 433], "edge_dst": [422, 433], "edgesampl": 422, "matur": 423, "dl": 423, "sheer": 423, "sink": 423, "generatortyp": [423, 433], "cursor": 423, "ingo": 423, "query\u5bf9\u8c61": 423, "outneg": [423, 426], "inneg": [423, 426, 429], "candid": [423, 426], "u2i": 423, "ouv": 423, "func": 423, "edeg": 423, "src_1hop": 423, "dst_1hop": 423, "neg_i": 423, "neg_i_1hop": 423, "params_list": 423, "arrang": 423, "anonym": [423, 561], "src_attr": 423, "neg_attr": 423, "encode_fn": [423, 429], "src_atr": 423, "outnegv": 423, "gen1": 423, "gen2": 423, "circumst": 423, "foewa": 423, "from_gener": [423, 429], "make_one_shot_iter": [423, 429], "get_next": [423, 429], "zhangjiak": 424, "cp27": 424, "cp27mu": 424, "linux_x86_64": 424, "autoconf": 424, "automak": 424, "libtool": 424, "your_wheel_nam": [424, 427], "test_cpp_ut": 424, "test_python_ut": 424, "fastgcn": [425, 601], "graphsaint": 425, "amd": 425, "object_typ": 426, "oprequest": 427, "oprespons": 427, "params_": 427, "tensors_": 427, "redirect": [427, 507], "rewrit": 427, "till": [427, 576], "happen": [427, 581, 584], "stitch": 427, "myoper": 427, "register_oper": 427, "opnam": 427, "randomsampl": 427, "xxxsampler": 427, "litestr": 428, "getfiles": 428, "getrecordcount": 428, "register_file_system": 428, "myfilesystem": 428, "registr": 428, "ppi": 429, "train_supervis": 429, "gen_test_data": 429, "getopt": 429, "argv": 429, "cur_path": 429, "dirnam": 429, "rf": 429, "\u4f60\u9700\u8981\u628agen_test_data": 429, "py\u653e\u5230shell\u811a\u672c\u540c\u4e00\u76ee\u5f55\u4e0b": 429, "fi": 429, "case_bas": 429, "genetic_algorithm": 429, "neural_network": 429, "probabilistic_method": 429, "reinforcement_learn": 429, "rule_learn": 429, "bag": 429, "1033": 429, "103482": 429, "103515": 429, "31336": 429, "1061127": 429, "05882353": 429, "1106406": 429, "n_featur": 429, "node_decod": 429, "n_class": 429, "140": [429, 492], "n_hop": 429, "n_epoch": 429, "tripl": 429, "graph_object_cn": 429, "sample_gen": 429, "input_fn": 429, "sample_input_fn": 429, "float64": 429, "tensorshap": 429, "layer_featur": 429, "aggregate_fn": 429, "self_vec": 429, "neigh_vec": 429, "raw_feat_layer_index": 429, "layer_index": 429, "variable_scop": 429, "_layer": 429, "auto_reus": 429, "neigh_weight": 429, "get_vari": 429, "self_weight": 429, "output_shap": 429, "get_shap": 429, "neigh_mean": 429, "from_neigh": 429, "matmul": 429, "from_self": 429, "add_n": 429, "leaky_relu": 429, "depth_to_encod": 429, "h_self_vec": 429, "h_neighbor_vec": 429, "features_column": 429, "feature_column": 429, "numeric_column": 429, "loss_fn": 429, "train_op": 429, "global_step": 429, "get_global_step": 429, "estimatorspec": 429, "modekei": 429, "set_xxx": 430, "set_yyi": 430, "other_model": 430, "nbr_id": 430, "set_default_int_attribut": 430, "set_default_float_attribut": 430, "set_default_string_attribut": 430, "set_inter_threadnum": 430, "intra": [430, 488, 491], "set_intra_threadnum": 430, "16mb": 430, "reset": 430, "enlarg": 430, "set_rpc_message_max_s": 430, "objectnam": 431, "degener": 431, "unspecifi": [431, 446], "consolidate_column": 431, "result_column": 431, "consolid": [431, 583, 590], "weight0": 431, "weight1": 431, "graph_nod": 431, "detach": 431, "varaibl": 431, "lexic": 431, "classmethod": 431, "graphar_store_in_loc": [431, 580], "save_to": [431, 580], "graphar_graph_nam": [431, 580], "graphar_file_typ": [431, 580], "parquet": [431, 580], "orc": [431, 580], "graphar_vertex_chunk_s": [431, 580], "graphar_edge_chunk_s": [431, 580], "graphschema": [431, 569], "schema_path": 431, "currrent": 431, "object_id": [431, 432, 433], "filetyp": 431, "ordinari": 431, "f0": 431, "graph_build": 431, "group_id": 431, "member_s": 431, "leader_student_id": 431, "student": 431, "member_student_id": 431, "group_for_teacher_stud": 431, "group_nam": 431, "establish_d": 431, "teacher_in_charge_id": 431, "teacher": 431, "lesson_num": 431, "avg_scor": 431, "student_id": 431, "salari": 431, "teacher_id": 431, "both_in_out": 431, "unambigu": 431, "interactivequeri": [432, 574, 576, 600], "frontend_gremlin_endpoint": 432, "frontend_cypher_endpoint": 432, "gremlin_url": 432, "lifetim": 432, "traversal_sourc": 432, "graphtraversalsourc": 432, "cypher_driv": 432, "cypher_url": 432, "gremlin_cli": [432, 582], "runtimeerror": [432, 576], "modern_graph_data_dir": 432, "tolist": [432, 582], "dtype": 433, "pywrap": 433, "nodefrom": 433, "get_handl": 433, "worker_count": 433, "nstart": 434, "poweriterationfailedconverg": 434, "langvil": 434, "meyer": 434, "survei": [434, 522], "cites": 434, "ist": 434, "psu": 434, "edu": 434, "713792": 434, "jon": 434, "kleinberg": 434, "authorit": 434, "journal": [434, 503, 511, 528, 559, 562, 566], "acm": [434, 509, 560, 592], "604": 434, "1999": [434, 489, 490], "doi": [434, 504, 511, 546], "1145": 434, "324133": 434, "324140": 434, "cornel": 434, "kleinber": 434, "pdf": [434, 516, 518, 519], "load_centr": 434, "in_degree_centr": [434, 570], "networkxnotimpl": 434, "out_degree_centr": [434, 570], "equat": 434, "ax": 434, "eigenvalu": [434, 514], "virtu": 434, "perron": 434, "frobeniu": 434, "theorem": [434, 513, 525], "0e": 434, "strength": 434, "2f": 434, "networkxpointlessconcept": [434, 564], "networkxerror": [434, 440, 447, 449, 453, 454, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 510, 513, 514, 515, 526, 529, 561, 569, 572], "eigenvector_centrality_numpi": 434, "discern": 434, "phillip": 434, "bonacich": 434, "american": 434, "sociologi": 434, "1170": 434, "1182": 434, "1986": [434, 558], "leonidzhukov": 434, "hse": 434, "socialnetwork": 434, "oxford": [434, 467, 468, 517, 561], "press": [434, 467, 468, 515, 557, 560, 561], "usa": [434, 521, 522, 568], "pp": [434, 498, 501, 502, 503, 516, 522, 523, 560, 566], "169": 434, "x_i": 434, "a_": 434, "x_j": 434, "lambda_": 434, "distant": 434, "penal": 434, "invers": [434, 513], "phi": 434, "sqrt": [434, 514], "adjacency_spectrum": 434, "720": 434, "leo": 434, "sociometr": 434, "psychometrika": 434, "1953": 434, "springer": [434, 523], "1007": [434, 468, 504], "bf02289026": 434, "has_path": [434, 570], "djikstra": 434, "floyd": 434, "warshal": 434, "bfs_edg": [434, 570], "depth_limit": 434, "core_numb": 434, "vladimir": 434, "batagelj": 434, "matjaz": 434, "zaversnik": 434, "ab": [434, 492, 493, 494, 508, 516, 520, 561, 563], "0310049": 434, "c_u": 434, "deg": [434, 488, 502, 569], "geometr": [434, 556, 570], "vw": 434, "hat": 434, "uv": [434, 502], "uw": 434, "tot": 434, "2deg": 434, "leftrightarrow": 434, "complete_graph": [434, 440, 569], "saram\u00e4ki": 434, "kivel\u00e4": 434, "onnela": 434, "kaski": 434, "kert\u00e9sz": 434, "027105": 434, "2007": [434, 516, 562], "jponnela": 434, "web_docu": 434, "a9": 434, "intens": 434, "coher": 434, "motif": 434, "065103": 434, "2005": [434, 510, 516], "sign": 434, "costantini": 434, "perugini": 434, "plo": 434, "e88669": 434, "fagiolo": 434, "76": 434, "026107": 434, "average_clust": [434, 570], "count_zero": 434, "c_v": 434, "nonzero": [434, 498, 515], "marcu": 434, "kaiser": 434, "0802": 434, "2512": 434, "g_to_add_to": [436, 437, 438], "nodes_for_cycl": 436, "add_path": [436, 438, 569], "add_star": [436, 437], "nodes_for_path": 437, "add_cycl": [437, 438], "nodes_for_star": 438, "star": [438, 475, 484], "cnbor": 440, "with_data": 441, "empty_graph": [441, 482], "width": 443, "2m": [444, 522], "err": 447, "frozen": [447, 452], "unfreez": 447, "frozen_graph": 447, "unfrozen_graph": 447, "is_frozen": 447, "neighbour": 449, "freez": [452, 570], "nodelist": [457, 496], "selfloop_edg": [457, 462, 498, 500], "number_of_selfloop": [457, 463], "selfloop": [462, 463, 496, 502], "nloop": 462, "nodes_with_selfloop": [462, 463], "datadict": [463, 569], "datavalu": 463, "attrnam": [463, 600], "edgeit": 463, "ekei": 463, "graph_atlas_g": 467, "linearli": [467, 483], "ronald": [467, 468, 558], "wilson": [467, 468], "1998": [467, 468], "111223": 468, "112222": 468, "automorph": [468, 541], "graph_atla": 468, "expens": 468, "book": 468, "lexicograph": 468, "nondecreas": 468, "001111": 468, "000112": 468, "1008": 468, "3333444": 468, "3333336": 468, "1012": 468, "1213": 468, "1244555": 468, "1244456": 468, "perfectli": 469, "ari": [469, 479], "height": 469, "children": [469, 479, 563], "barbel": [470, 481], "bell": 470, "p_": [470, 502, 516], "mere": [470, 481], "aldou": [470, 481], "jim": [470, 481], "binomi": 471, "leftmost": 471, "ci_n": 472, "x_1": 472, "x_2": 472, "x_m": 472, "mod": [472, 486, 515, 534], "subfamili": 472, "ladder": [473, 480], "cl_n": 473, "k_n": 474, "is_direct": [474, 569], "subset_s": 475, "multipartit": [475, 486], "tripartit": 475, "bc": 475, "complete_bipartite_graph": 475, "c_n": 476, "hierarch": 477, "dorogovtsev": 477, "goltsev": 477, "mend": 477, "mat": 477, "0112143": 477, "kw": [478, 576], "abc": 478, "rightmost": 479, "jame": 479, "andrew": 479, "storer": 479, "birkhaus": 479, "boston": 479, "2001": [479, 492, 500, 505, 507, 515, 524], "225": [479, 569], "lollipop": 481, "k_m": 481, "p_n": [481, 483], "etext": 481, "turan": 486, "disjoint": [486, 497, 535], "2r": 486, "tau1": 488, "tau2": 488, "mu": 488, "average_degre": 488, "min_degre": 488, "max_degre": 488, "min_commun": 488, "max_commun": 488, "lfr": 488, "mathrm": 488, "expon": 488, "reassign": [488, 526], "affili": [488, 596], "random_st": [488, 491, 492, 493, 494, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 523, 524, 525, 529, 561, 564, 566], "exceededmaxiter": 488, "250": 488, "frozenset": [488, 571], "rewir": [488, 490, 494, 526, 529], "wire": 488, "robust": 488, "somewhat": 488, "andrea": 488, "lancichinetti": 488, "santo": [488, 492, 493, 494], "fortunato": [488, 492, 493, 494], "filippo": 488, "radicchi": 488, "phy": [488, 500, 505, 506, 507, 510], "rev": [488, 500, 505, 506, 507, 510], "046110": 488, "santofortunato": 488, "caveman": [489, 490, 494], "unclear": [489, 490], "connected_caveman_graph": [489, 495], "watt": [489, 490, 500], "phenomenon": [489, 490], "amer": [489, 490], "493": [489, 490], "527": [489, 490], "caveman_graph": 490, "p_in": [491, 492, 493], "p_out": [491, 492, 493], "gaussian": [491, 517, 518, 519], "drawn": [491, 519], "varianc": 491, "probabilti": [491, 494], "random_partition_graph": [491, 496], "ulrik": 491, "brand": 491, "marco": 491, "gaertler": 491, "dorothea": 491, "wagner": 491, "11th": 491, "europ": 491, "symp": 491, "plant": [492, 493], "random_partition_model": 492, "condon": 492, "karp": 492, "algor": 492, "116": 492, "486": [492, 493, 494], "174": [492, 493, 494], "0906": [492, 493, 494], "0612": [492, 493, 494], "relax": 494, "februari": 494, "num_cliqu": 495, "clique_s": 495, "ring": 495, "stochast": [496, 570], "densiti": [496, 498, 516, 518], "symmetr": [496, 515, 538, 542, 548, 550, 561], "300": [496, 565], "prob": 496, "450": 496, "quotient_graph": 496, "relabel": 496, "245": 496, "348": 496, "405": 496, "051": 496, "022": 496, "planted_partition_graph": 496, "gaussian_random_partition_graph": 496, "gnp_random_graph": [496, 523, 524, 525], "holland": 496, "laskei": 496, "leinhardt": 496, "blockmodel": 496, "109": 496, "1983": 496, "windmil": 497, "contract": 497, "wd": 497, "deg_sequ": [498, 499, 500, 501, 503], "pseudograph": [498, 500], "nonneg": [498, 500], "is_graph": [498, 504], "graphic": [498, 500, 503, 504], "realiz": [498, 500, 503, 526, 527, 528, 529, 556, 581], "poisson": 498, "constant": [498, 600], "siam": [498, 503, 509], "167": 498, "random_sequ": 498, "random_powerlaw_tree_sequ": 498, "5000": [498, 582], "actual_degre": 498, "in_degree_sequ": 500, "out_degree_sequ": 500, "directed_random": 500, "configuration_model": [500, 501, 504], "finit": [500, 502, 515], "strogatz": 500, "026118": 500, "din": 500, "dout": 500, "in_deg_sequ": 501, "out_deg_sequ": 501, "kleitman": [501, 503], "valenc": [501, 503], "1973": [501, 503], "w_0": 502, "w_1": 502, "ldot": 502, "w_u": [502, 516, 519], "w_v": [502, 516, 519], "sum_k": 502, "w_k": 502, "z": [502, 515, 516, 520], "mathcal": 502, "ne": 502, "uu": 502, "fan": [502, 516, 592], "chung": [502, 516], "lu": [502, 592], "ann": 502, "combinator": [502, 562], "145": 502, "2002": 502, "joel": 502, "miller": 502, "aric": [502, 516], "hagberg": [502, 516], "waw": [502, 516], "alan": 502, "friez": 502, "paul": 502, "horn": 502, "pawe\u0142": 502, "pra\u0142at": 502, "lnc": 502, "6732": 502, "115": 502, "havel": 503, "hakimi": 503, "networkxexcept": 503, "resort": 503, "496": 503, "506": 503, "1962": [503, 521, 522, 568], "d_m": 504, "uniform": [504, 516, 525], "networkxunfeas": 504, "moshen": 504, "bayati": 504, "jeong": 504, "han": 504, "kim": 504, "amin": 504, "saberi": 504, "algorithmica": 504, "58": 504, "860": 504, "910": 504, "s00453": 504, "009": 504, "9340": 504, "gn": [505, 568], "a_k": 505, "krapivski": [505, 506, 507, 510], "redner": [505, 506, 507], "066123": [505, 507], "gnc": 506, "growth": [506, 566], "036118": 506, "2005k": 506, "gnr": 507, "probabilii": 507, "self_loop": 508, "preferenti": 508, "proport": 508, "peterson": [508, 551], "nichola": 508, "bori": 508, "pittel": 508, "preprint": 508, "1311": 508, "5961": 508, "2013": [508, 528], "gamma": 509, "delta_in": 509, "delta_out": 509, "bia": 509, "bollob\u00e1": 509, "borg": 509, "chay": 509, "riordan": 509, "fourteenth": 509, "annual": 509, "symposium": 509, "132": [509, 524], "139": 509, "diverg": [510, 570], "retent": 510, "disallow": 510, "ispolatov": 510, "yuryev": 510, "061911": 510, "knudsen": 511, "michael": 511, "carsten": 511, "wiuf": 511, "markov": 511, "chain": 511, "1155": 511, "190836": 511, "radiu": [512, 517, 518, 519], "chordal": 513, "chord": [513, 527], "mildli": 513, "lubotzki": 513, "invari": 513, "birkh\u00e4us": 513, "verlag": 513, "basel": 513, "1994": 513, "marguli": 514, "gabber": 514, "galil": 514, "palei": 515, "pz": 515, "f_q": 515, "odd": 515, "bolloba": 515, "cambridg": 515, "theta": [516, 519], "po": [516, 517, 518, 519, 520], "p_dist": [516, 518], "geograph": [516, 519], "rectangular": [516, 520], "ge": [516, 520], "prone": 516, "le": [516, 520, 560], "euclidean": [516, 517, 518, 519, 520], "taxicab": [516, 520], "expovari": [516, 519], "masuda": 516, "miwa": 516, "konno": 516, "036108": 516, "milan": 516, "bradonji\u0107": 516, "allon": 516, "percu": 516, "giant": 516, "antoni": 516, "bonato": 516, "209": 516, "216": 516, "cube": [517, 518, 519, 537, 554], "kdtree": [517, 518, 519], "minkowski": [517, 518, 519], "infin": [517, 518, 519], "erd\u0151": [517, 518, 519], "r\u00e9nyi": [517, 518, 519], "twenti": 517, "2d": [517, 518, 519, 569, 572], "deviat": [517, 518, 519], "gauss": [517, 518, 519], "penros": [517, 518], "mathew": [517, 518], "soft": 518, "exp": [518, 520], "annal": 518, "2016": 518, "986": 518, "1028": 518, "summat": 519, "nodethr": 519, "cole": 519, "maclean": 519, "blog": 519, "thesi": [519, 525], "waxman": 520, "x_min": 520, "y_min": 520, "x_max": 520, "y_max": 520, "Their": 520, "multipoint": 520, "ieee": [520, 528, 529, 561, 566], "1988": 520, "1617": 520, "1622": 520, "harari": [521, 522, 570], "h_": [521, 522], "ceil": 521, "kn": 521, "hnm_harary_graph": 521, "weisstein": 521, "eric": 521, "mathworld": [521, 530, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 549], "wolfram": [521, 530, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 549], "hararygraph": 521, "nat": [521, 522, 568], "acad": [521, 522, 568], "sci": [521, 522, 568], "1142": [521, 522, 568], "1146": [521, 522, 568], "floor": 522, "hkn_harary_graph": 522, "boesch": 522, "satyanarayana": 522, "suffel": 522, "synthesi": 522, "99": [522, 600], "2009": [522, 562], "uniform_random_intersection_graph": [523, 524], "nikoletsea": 523, "raptopoulo": 523, "spiraki": 523, "icalp": 523, "\u0131az": 523, "karhum": 523, "aki": 523, "lepist": 523, "sannella": 523, "vol": [523, 566], "3142": 523, "lectur": 523, "1029": 523, "1040": 523, "godehardt": 524, "jaworski": 524, "electron": [524, 562], "singer": 525, "cohen": 525, "1995": 525, "phd": 525, "john": [525, 542], "hopkin": 525, "scheinerman": 525, "evolut": 525, "2000": 525, "156": 525, "nkk": [526, 527], "degree_seq": 526, "n_edges_add": 526, "li": [526, 529], "unsatur": 526, "proof": 526, "tillman": [526, 527, 529], "markopoul": [526, 527, 528, 529, 561], "butt": [526, 527, 561], "gjoka": [526, 527, 528, 529], "2k": [526, 527], "kdd": [526, 527], "seconnd": 527, "joint_degre": [528, 529], "diagon": [528, 544], "joint_degree_graph": 528, "kurant": 528, "5k": 528, "infocom": [528, 529, 561], "stanton": 528, "pinar": 528, "prescrib": 528, "experiment": [528, 576], "n_th": 530, "m_1": 530, "singleton": [530, 569], "m_2": 530, "m_i": 530, "mycielskian": 530, "m_": 530, "mycielskigraph": 530, "p_2": 530, "chromat": [531, 562], "2n": 531, "bigcup": 531, "nonisomporph": 532, "adjanc": 532, "matric": [532, 561], "nonisomorph": 533, "shift_list": 534, "cubic": [534, 537, 538, 541, 542, 548, 550, 551, 556], "lcf": [534, 536, 538, 540, 542, 548, 550], "lederberg": 534, "coxet": 534, "frucht": [534, 541], "hamiltonian": [534, 536, 541, 542, 545, 550, 556], "symmetri": [534, 541], "dodecahedral_graph": 534, "desargues_graph": 534, "heawood_graph": 534, "pappus_graph": 534, "s1": 534, "sk": 534, "v_current": 534, "shiftlist": 534, "heawood": [534, 542], "lcfnotat": 534, "bull": 535, "planar": [535, 538, 539, 541], "pendant": 535, "leg": 535, "chv\u00e1tal": 536, "370": 536, "chv": 536, "c3": [536, 548, 549], "a1tal_graph": 536, "chvatalgraph": 536, "platon": [537, 540, 545, 549, 553, 555], "skeleton": [537, 540, 554, 555], "hypercub": 537, "desargu": 538, "desarguesgraph": 538, "kite": [539, 546], "diamondgraph": 539, "dodecahedr": 540, "dodecahedron": 540, "regular_dodecahedron": 540, "dodecahedralgraph": 540, "fruchtgraph": 541, "cage": 542, "perci": 542, "nonplanar": 542, "girth": 542, "heawoodgraph": 542, "win": [542, 551], "tue": [542, 551], "nl": [542, 551], "aeb": [542, 551], "housegraph": [543, 544], "pentatop": 544, "icosahedr": 545, "icosahedron": 545, "icosahedralgraph": 545, "krackhardt": 546, "andr": 546, "beverlei": 546, "carol": 546, "dian": 546, "fernando": 546, "garth": 546, "heather": 546, "ik": 546, "jane": 546, "polit": 546, "landscap": 546, "cognit": 546, "quarterli": 546, "342": [546, 569], "369": 546, "2307": 546, "2393394": 546, "jstor": 546, "june": 546, "1990": 546, "graph_descript": 547, "ltype": 547, "adjacencylist": 547, "from_dict_of_list": 547, "from_edgelist": 547, "xlist": 547, "c_4": 547, "w2": 547, "vk": 547, "wk": 547, "vj": 547, "wj": 547, "moebiu": 548, "kantor": 548, "m\u00f6biu": 548, "petersen": [548, 551], "b6biu": 548, "93kantor_graph": 548, "octahedr": 549, "octahedron": 549, "shake": 549, "hi": [549, 559, 568], "her": 549, "partner": 549, "handshak": 549, "cocktail": 549, "octahedralgraph": 549, "tur": 549, "a1n_graph": 549, "special_cas": 549, "pappu": 550, "juliu": 551, "counterexampl": [551, 556], "bridgeless": 551, "colour": 551, "drg": 551, "maze": 552, "sedgewick": 552, "3rd": 552, "tetrahedr": 553, "k4": 553, "w4": 553, "grpah": 553, "tetrahedron": [553, 555, 556], "archimedean": [554, 555], "octagon": 554, "triangular": 554, "truncated_cub": 554, "coolmath": 554, "polyhedra": 554, "hexagon": 555, "equilater": 555, "truncated_tetrahedron": 555, "tutt": 556, "polyhedr": 556, "tait": 556, "conjectur": 556, "polyhedron": 556, "davi": 557, "southern": 557, "women": 557, "gardner": 557, "1941": 557, "south": 557, "chicago": 557, "il": 557, "florentin": 558, "breiger": 558, "philippa": 558, "pattison": 558, "cumul": 558, "dualiti": 558, "septemb": 558, "zachari": 559, "karat": 559, "club": 559, "mr": [559, 562], "offic": 559, "wayn": 559, "fission": 559, "anthropolog": 559, "452": 559, "473": 559, "1977": 559, "coappear": 560, "miser": 560, "knuth": 560, "1993": 560, "graphbas": 560, "combinatori": 560, "york": 560, "spectral": [561, 570], "forg": 561, "sgf": 561, "eigenstructur": 561, "synthes": 561, "percentag": 561, "telecommun": 561, "bernoulli": 561, "baldesi": 561, "1801": 561, "01715": 561, "karate_club_graph": 561, "sud": 562, "81": 562, "810": 562, "herzberg": 562, "murti": 562, "polynomi": 562, "am": 562, "708": 562, "717": 562, "sander": 562, "torsten": 562, "7pp": 562, "2529816": 562, "encyclopedia": 562, "dec": 562, "nil": 563, "arboresc": 563, "downward": 563, "synthet": 563, "trie": 563, "recov": [563, 576], "pr\u00fcfer": 564, "from_prufer_sequ": 564, "forest_str": 564, "triad_nam": 565, "003": 565, "012": 565, "021d": 565, "021u": 565, "021c": 565, "111d": 565, "111u": 565, "030t": 565, "030c": 565, "120d": 565, "120u": 565, "120c": 565, "triadic_censu": 565, "elmokashfi": 566, "tier": 566, "mid": 566, "adv": 566, "bidirect": 566, "peer": 566, "commerci": 566, "agreement": 566, "kvalbein": 566, "dovroli": 566, "bgp": 566, "1250": 566, "1261": 566, "octob": 566, "reweight": 567, "mathematician": 568, "frank": 568, "incoming_graph_data": [569, 572], "default_label": [569, 572], "to_networkx_graph": 569, "110": 569, "protect": 569, "bracket": 569, "shortcut": 569, "nbrsdict": 569, "miscellan": 569, "__contains__": 569, "__getitem__": 569, "adj_dict": 569, "atlasview": 569, "__iter__": 569, "niter": 569, "__len__": 569, "nnode": 569, "u_of_edg": 569, "v_of_edg": 569, "ebunch_to_add": 569, "wn2898": 569, "node_for_ad": 569, "nodes_for_ad": 569, "hello": 569, "k3": 569, "attrdict": 569, "behav": 569, "idiom": 569, "foovalu": 569, "adj_it": 569, "nbrdict": 569, "adjlist_inner_dict_factori": 569, "neighbordict": 569, "adjlist_outer_dict_factori": 569, "adjlistdict": 569, "clear_edg": 569, "deepcopi": 569, "fresh": [569, 578], "__class__": 569, "degreeview": 569, "nd_view": 569, "edge_attr_dict_factori": 569, "neighborattrdict": 569, "edge_subgraph": 569, "edgeview": 569, "edgedataview": 569, "ddict": 569, "get_edge_data": 569, "edge_dict": 569, "safe": 569, "graph_attr_dict_factori": 569, "graph_cache_factori": 569, "keyerror": 569, "edge_ind": 569, "data_dictionari": 569, "is_multigraph": 569, "nbunch_it": 569, "exhaust": 569, "possibli": 569, "node_attr_dict_factori": 569, "nodeattrdict": 569, "node_dict_factori": 569, "nodedict": 569, "nodeview": 569, "nodedataview": 569, "nodedata": 569, "bar": 569, "nedg": 569, "Will": 569, "nodes_for_remov": 569, "set_edge_data": 569, "set_node_data": 569, "set_item": 569, "adjedgeattr": 569, "dd": 569, "nodeattr": 569, "netowrkx": 569, "to_undirected_class": 569, "taken": 569, "itertool": 569, "mg": 569, "nd_iter": 569, "outedgeview": 569, "in_edg": 569, "outedgedataview": 569, "has_predecessor": 569, "has_successor": 569, "indegreeview": 569, "inedgeview": 569, "outdegreeview": 569, "pred": 569, "succ": 569, "_convert_arrow_to_dynam": [570, 572], "atla": 570, "triad": 570, "mycielski": 570, "sudoku": 570, "utf": 571, "filenam": [571, 582], "rb": 571, "bz2": 571, "uncompress": 571, "whitespac": 571, "obsolet": 571, "write_edgelist": 571, "fh": 571, "textlin": 571, "parse_edgelist": 571, "read_adjlist": 571, "marker": 571, "v_0": 572, "v_1": 572, "add_label": 573, "talk": 575, "output_to_cli": [575, 592], "person_id": [575, 582], "deregist": 576, "256mi": 576, "4gi": 576, "5gi": 576, "__enter__": 576, "__exit__": 576, "exc_typ": 576, "exc_valu": 576, "exc_tb": 576, "unregist": 576, "preemptiv": 576, "burstabl": 576, "qo": 576, "preempt": 576, "k8s_vineyard_imag": 576, "fallback": 576, "512mi": 576, "etcd_addr": 576, "etcd01": 576, "etcd02": 576, "etcd03": 576, "4mi": 576, "k8s_coordinator_pod_node_selector": 576, "tinyurl": 576, "3nx6k7ph": 576, "k8s_engine_pod_node_selector": 576, "path1": 576, "path2": 576, "claimnam": 576, "dangling_timeout_second": 576, "heartbeat": 576, "dangl": 576, "config_fil": 576, "reject": 576, "resource_nam": 576, "sigint": 576, "sigterm": 576, "signal": 576, "get_vineyard_object_mapping_t": 576, "restor": [576, 582], "recreat": 576, "restore_from_pvc": 576, "kubeconfig": 576, "run_fetch": 576, "lock": 576, "store_to_pvc": 576, "backup": [576, 582], "maxwel": 578, "binlog": 578, "buildgartfrag": 578, "etcd_endpoint": 578, "gartfrag": 578, "etcd_client": 578, "make_shar": 578, "mpi_comm_world": 578, "schema_kei": 578, "gart_schema_p": 578, "to_str": 578, "edge_config_str": 578, "as_str": 578, "gart_blob_m": 578, "_p": 578, "config_str": 578, "edge_config": 578, "inner_vertices_it": 578, "elabel": [578, 583], "edge_it": 578, "hive": 580, "ordered_by_sourc": 580, "ordered_by_dest": 580, "textual": 580, "unix": [580, 595], "ldbc_graphar": 580, "4096": 580, "ldbc_subgraph_graphar": 580, "ldbc_subgraph": 580, "ldbc__graphar": 580, "test_graphar": 580, "broader": 581, "ffi": 581, "agnost": 581, "grin_": 581, "partitioned_graph": 581, "boundari": 581, "sync_properti": 581, "grin_partitioned_graph": 581, "grin_partit": 581, "grin_graph": 581, "grin_get_local_graph_from_partit": 581, "grin_edge_typ": 581, "etyp": 581, "grin_get_edge_type_by_nam": 581, "grin_vertex_type_list": 581, "src_vtype": 581, "grin_get_src_types_from_edge_typ": 581, "dst_vtype": 581, "grin_get_dst_types_from_edge_typ": 581, "src_vtypes_num": 581, "grin_get_vertex_type_list_s": 581, "dst_vtypes_num": 581, "grin_vertex_typ": 581, "grin_get_vertex_type_from_list": 581, "grin_vertex_properti": 581, "dst_vp": 581, "grin_get_vertex_property_by_nam": 581, "grin_null_vertex_properti": 581, "grin_vertex_property_t": 581, "dst_vpt": 581, "grin_get_vertex_property_table_by_typ": 581, "grin_datatyp": 581, "dst_vp_dt": 581, "grin_get_vertex_property_data_typ": 581, "grin_vertex_list": 581, "__src_vl": 581, "grin_get_vertex_list": 581, "_src_vl": 581, "grin_select_type_for_vertex_list": 581, "src_vl": 581, "grin_select_master_for_vertex_list": 581, "src_vl_num": 581, "grin_get_vertex_list_s": 581, "grin_vertex": 581, "grin_get_vertex_from_list": 581, "ifdef": 581, "grin_trait_select_edge_type_for_adjacent_list": 581, "grin_adjacent_list": 581, "_adj_list": 581, "grin_get_adjacent_list": 581, "grin_direct": 581, "adj_list": 581, "grin_select_edge_type_for_adjacent_list": 581, "adj_lsit": 581, "endif": 581, "al_sz": 581, "grin_get_adjacent_list_s": 581, "ifndef": 581, "grin_edg": 581, "grin_get_edge_from_adjacent_list": 581, "grin_get_edge_typ": 581, "grin_equal_edge_typ": 581, "grin_get_neighbor_from_adjacent_list": 581, "grin_get_value_from_vertex_property_t": 581, "grin_vertex_ref": 581, "uref": 581, "grin_get_vertex_ref_for_vertex": 581, "u_master_partit": 581, "grin_get_master_partition_from_vertex_ref": 581, "send_valu": 581, "fragment_group_id": [581, 583], "get_partitioned_graph_by_object_id": 581, "local_partit": 581, "grin_get_local_partition_list": 581, "pnum": 581, "grin_get_partition_list_s": 581, "grin_get_partition_from_list": 581, "disclaim": 581, "sacrif": 581, "boilerpl": 581, "ineffici": 581, "enorm": 581, "grin_assume_all_vertex_property_local_complet": 581, "grin_assume_master_vertex_property_local_complet": 581, "grin_assume_by_type_all_vertex_property_local_complet": 581, "grin_assume_by_type_master_vertex_property_local_complet": 581, "assumpt": 581, "wider": 581, "undefin": 581, "tell": 581, "granular": 581, "grin_frag": 581, "storagespecif": 581, "vertexhandl": 581, "goe": 581, "grin_edge_list": 581, "grin_partition_list": 581, "grin_enable_": 581, "_list_arrai": 581, "vertexlist": 581, "grin_enable_vertex_list_arrai": 581, "vl": 581, "idx": 581, "sz": 581, "caller": 581, "_list_iter": 581, "grin_enable_vertex_list_iter": 581, "grin_vertex_list_iter": 581, "grin_get_vertex_list_begin": 581, "grin_get_next_vertex_list_it": 581, "vli": 581, "grin_is_vertex_list_end": 581, "grin_get_vertex_from_it": 581, "grin_get_vertex_type_by_nam": 581, "vtype": 581, "grin_vertex_property_list": 581, "grin_get_vertex_properties_by_nam": 581, "vprop": 581, "vpl": 581, "separatedli": 581, "with_vertex_label": 581, "with_edge_label": 581, "grin_serialize_vertex_ref": 581, "grin_deserialize_to_vertex_ref": 581, "grin_get_vertex_from_vertex_ref": 581, "vref": 581, "borrow": 581, "vertexcut": 581, "edgecut": 581, "judgement": 581, "columnar": 582, "gear": 582, "compromis": 582, "strict": 582, "httpport": 582, "multitud": 582, "alic": 582, "ast": 582, "literal_ev": 582, "neo4j_sess": 582, "conn": 582, "data_load": 582, "load_tool": 582, "xzvf": 582, "bob": 582, "person_id_1": 582, "20210611151923": 582, "data_output": 582, "55555": 582, "propertiescolmap": 582, "srcpkcolmap": 582, "dstpkcolmap": 582, "columnidx": 582, "_success": 582, "xxxxx": 582, "sst": 582, "00000": 582, "00001": 582, "00002": 582, "load_data": 582, "unus": 582, "current_timestamp": 582, "replay_record": 582, "grootclient": 582, "grootclientbuild": 582, "replayrecord": 582, "provis": 582, "lapp": 582, "reinstal": [582, 589], "pv_name": 582, "logback": 582, "zk": 582, "storegcintervalm": 582, "try_catch_up_with_primari": 582, "otel": 582, "arrowfragmentgroup": 583, "spread": 583, "ipc": 583, "docket": 583, "string_oid": 583, "ipcclient": 583, "writeout": 583, "nb": 583, "fragmentloc": 583, "gettotalnodesnum": 583, "labeltyp": 583, "vlabel": 583, "vertex_data_t": 583, "edge_data_t": 583, "willing": 584, "implic": 584, "polymorph": 584, "instant": 584, "aka": 584, "pygrap": [584, 585], "from_numpi": 584, "bind_sssp1": 584, "bind_sssp2": 584, "vertex_bal": 585, "vcut": 585, "ecut": 585, "repo_hom": 589, "graph_identifi": 589, "syoov": 590, "79b44f7b58": 590, "ctmqb": 590, "10m": 590, "9m53": 590, "9m46": 590, "6dd67c65fc": 590, "gn4mb": 590, "15334625083466732": 590, "33d": 590, "\u7684\u56fe\u5206\u6790\u5f15\u64ce\u7ee7\u627f\u4e86": 592, "\u8be5\u7cfb\u7edf\u4e8e": 592, "\u4e0a\u9996\u6b21\u63d0\u51fa\u5e76\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956": 592, "\u4e0e\u4ee5\u5f80\u7684\u7cfb\u7edf\u7684\u4e0d\u540c": 592, "\u652f\u6301\u5c06\u4e32\u884c\u56fe\u7b97\u6cd5\u81ea\u52a8\u5e76\u884c\u5316": 592, "\u5728": [592, 593, 594, 595, 596, 599, 600, 601, 602], "\u4e2d": [592, 594, 595, 596, 602], "\u53ea\u9700\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u5373\u53ef\u8f7b\u677e\u5730\u5c06\u4e32\u884c\u7b97\u6cd5\u5373\u63d2\u5373\u7528": 592, "\u4f7f\u5176\u5e76\u884c\u5316\u7684\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u73af\u5883": 592, "\u5e76\u9ad8\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u56fe\u6570\u636e": 592, "\u9664\u4e86\u6613\u4e8e\u7f16\u7a0b\u5916": 592, "\u8fd8\u88ab\u8bbe\u8ba1\u4e3a\u9ad8\u6548\u4e14\u53ef\u62d3\u5c55\u7684\u7cfb\u7edf": 592, "\u53ef\u7075\u6d3b\u5e94\u5bf9\u73b0\u5b9e\u4e2d\u56fe\u5e94\u7528\u591a\u53d8\u7684\u89c4\u6a21": 592, "\u591a\u6837\u6027\u548c\u590d\u6742\u6027": 592, "\u56fe\u5206\u6790\u5f15\u64ce\u5185\u7f6e\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u56fe\u5206\u6790\u7b97\u6cd5": 592, "\u5305\u62ec\u8fde\u901a\u6027\u5206\u6790\u7b97\u6cd5": 592, "\u8def\u5f84\u5206\u6790\u7b97\u6cd5": 592, "\u793e\u533a\u68c0\u6d4b\u548c\u4e2d\u5fc3\u5ea6\u8ba1\u7b97\u7b49\u7c7b\u578b": 592, "\u5185\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u56fe\u4e0a\u8f7b\u677e\u8c03\u7528": 592, "\u521b\u5efa\u9ed8\u8ba4": 592, "\u5e76\u52a0\u8f7d\u5c5e\u6027\u56fe": 592, "\u5927\u591a\u6570\u5185\u7f6e\u7b97\u6cd5\u53ea\u652f\u6301\u5728\u7b80\u5355\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 592, "\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u901a\u8fc7\u9876\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u56fe": 592, "result_lpa": 592, "result_sssp": 592, "\u5185\u7f6e\u7b97\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u5982\u4e0b\u6240\u793a": 592, "\u5177\u4f53\u67d0\u4e2a\u7b97\u6cd5\u662f\u5426\u652f\u6301\u5c5e\u6027\u56fe\u4e5f\u5728\u5176\u6587\u6863\u8fdb\u884c\u4e86\u63cf\u8ff0": 592, "\u7b97\u6cd5\u7684\u652f\u6301\u5217\u8868\u4f1a\u968f\u7740\u4e0d\u65ad\u589e\u52a0\u6301\u7eed\u66f4\u65b0\u4e2d": 592, "\u5f53\u5b8c\u6210\u4e00\u6b21\u56fe\u8ba1\u7b97": 592, "\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u5305\u88c5\u6210": 592, "\u7c7b": [592, 602], "\u4fdd\u5b58\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u5185\u5b58\u4e2d": 592, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5c06\u7ed3\u679c\u4f20\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5904\u7406": 592, "\u6216\u662f\u5199\u5165\u4e91\u4e2d\u67d0\u4f4d\u7f6e\u6216\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf": 592, "\u652f\u6301\u7528\u6237\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u679c\u6570\u636e": 592, "\u8f6c\u5316\u4e3a\u76f8\u5e94\u6570\u636e\u7c7b\u578b": 592, "\u6216\u5199\u5165": 592, "\u6216\u672c\u5730\u76ee\u5f55\u4e2d": 592, "pod\u4e2d\u7684\u672c\u5730\u76ee\u5f55": 592, "\u6216\u5199\u5165\u672c\u5730\u7684": 592, "lpa_result": 592, "\u6570\u636e\u7ed3\u6784": 592, "\u6b64\u5916": [592, 596], "\u5982": [592, 595, 598, 600], "\u5feb\u901f\u4e0a\u624b": [592, 598], "\u4e2d\u6240\u793a": 592, "\u7528\u6237\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u52a0\u56de\u5230\u8be5\u56fe\u6570\u636e\u4e2d\u4f5c\u4e3a\u9876\u70b9": 592, "\u7684\u65b0\u5c5e\u6027": 592, "\u5217": 592, "\u5c06\u7ed3\u679c\u4f5c\u4e3a\u65b0\u5217\u6dfb\u52a0\u56de\u5c5e\u6027\u56fe": 592, "\u5217\u540d\u4e3a": 592, "\u5e76\u751f\u6210\u4e00\u5f20\u65b0\u56fe": 592, "new_graph": [592, 597], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u5668": 592, "\u6765\u5b9a\u4e49\u5c06\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e9b\u90e8\u5206\u5199\u56de\u56fe\u6570\u636e": 592, "\u9009\u62e9\u5668\u6307\u5b9a\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u4f1a\u88ab\u5904\u7406": 592, "\u7c7b\u4f3c\u7684": 592, "\u56fe\u6570\u636e\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u5904\u7406\u6570\u636e\u7684\u4e00\u90e8\u5206": 592, "\u4f8b\u5982\u9876\u70b9id": 592, "\u6211\u4eec\u4e3a\u9009\u62e9\u5668\u4fdd\u7559\u4e86\u4e09\u4e2a\u5173\u952e\u5b57": 592, "\u4ee3\u8868\u7ed3\u679c": 592, "\u5206\u522b\u4ee3\u8868\u9876\u70b9\u548c\u8fb9": 592, "\u4ee5\u4e0b\u662f\u7ed3\u679c\u5904\u7406\u4e2d\u9009\u62e9\u5668\u7684\u4e00\u4e9b\u793a\u4f8b": 592, "\u83b7\u53d6\u9876\u70b9\u4e0a\u7684\u7ed3\u679c": 592, "\u8f6c\u6362\u4e3a": [592, 601], "\u4f7f\u7528\u9876\u70b9\u7684": 592, "\u4f5c\u4e3a\u540d\u4e3a": 592, "\u7684\u5217": 592, "df_vd": 592, "\u4f7f\u7528\u7ed3\u679c\u5217\u4f5c\u4e3a\u540d\u4e3a": 592, "df_result": 592, "property0": 592, "label0": 592, "\u5bf9\u4e8e\u5c5e\u6027\u56fe\u7684\u7ed3\u679c": 592, "\u4f5c\u4e3av\u548ce\u7684\u6807\u7b7e\u9009\u62e9\u5668": 592, "\u5c06": [592, 601], "\u9876\u70b9\u7684": 592, "\u4f5c\u4e3a": [592, 593, 602], "\u4f7f\u7528\u5199\u5728\u5e26\u6709label0\u7684\u9876\u70b9\u4e0a\u7684property0\u4f5c\u4e3a": 592, "gs_data": 592, "\u53ef\u4ee5\u67e5\u770b": 592, "\u83b7\u53d6\u66f4\u591a\u7ec6\u8282": 592, "\u5982\u679c\u5185\u7f6e\u7b97\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42": 592, "\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 592, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": 592, "\u5728\u7eaf": 592, "\u6a21\u5f0f": [592, 600], "\u4e0b\u4f7f\u7528": 592, "\u7f16\u7a0b\u6a21\u578b\u7f16\u5199\u7b97\u6cd5": 592, "\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u7684\u7b97\u6cd5": 592, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u6b64\u7c7b": 592, "\u5982\u4ee3\u7801\u6240\u793a": 592, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4ee5": 592, "\u88c5\u9970\u7684\u7c7b": 592, "\u5e76\u63d0\u4f9b\u4e09\u4e2a\u4e32\u884c": 592, "\u56fe\u7b97\u6cd5\u51fd\u6570": 592, "\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u7b97\u6cd5\u521d\u59cb\u72b6\u6001": 592, "\u51fd\u6570\u5b9a\u4e49\u7b97\u6cd5\u7684\u5c40\u90e8\u8ba1\u7b97": 592, "\u51fd\u6570\u5b9a\u4e49\u5bf9\u5206\u533a\u6570\u636e\u7684\u589e\u91cf\u8ba1\u7b97": 592, "\u4e0e": 592, "\u76f8\u5173\u7684\u5b8c\u6574": 592, "\u53ef\u4ee5\u53c2\u8003": 592, "\u4ee5\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5": 592, "\u4e3a\u4f8b": [592, 596], "\u7528\u6237\u5728": 592, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684": 592, "\u7b97\u6cd5\u53ef\u5982\u4e0b\u6240\u793a": 592, "\u521d\u59cb\u5316\u6bcf\u4e2a\u9876\u70b9\u7684\u8ddd\u79bb": 592, "\u4ececontext\u4e2d\u83b7\u53d6\u6e90\u9876\u70b9": 592, "\u5728\u6e90\u9876\u70b9\u6240\u5728\u5206\u533a\u4e2d": 592, "\u8fd0\u884cdijkstra\u7b97\u6cd5\u4f5c\u4e3a\u90e8\u5206\u8ba1\u7b97": 592, "\u4f7f\u7528\u8fb9\u4e0a\u7b2c\u4e09\u5217\u6570\u636e\u4f5c\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb": 592, "\u589e\u91cf\u8ba1\u7b97": 592, "\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb": 592, "\u7528\u6237\u4ec5\u9700\u8981\u8bbe\u8ba1\u548c\u5b9e\u73b0\u5355\u5206\u533a\u7684\u4e32\u884c\u7b97\u6cd5": 592, "\u800c\u4e0d\u9700\u8981\u8003\u8651\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u7684\u5206\u533a\u901a\u4fe1\u548c\u6d88\u606f\u4f20\u9012": 592, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [592, 602], "\u7ecf\u5178\u7684": 592, "\u7b97\u6cd5\u53ca\u5176\u589e\u91cf\u7248\u672c\u5c31\u53ef\u4ee5\u7528\u4e8e\u5728\u96c6\u7fa4\u4e0a\u7684\u5927\u89c4\u6a21\u56fe\u6570\u636e\u8ba1\u7b97": 592, "\u9664\u4e86\u57fa\u4e8e\u5b50\u56fe\u7684": 592, "\u6a21\u578b\u4e4b\u5916": 592, "\u4e5f\u652f\u6301\u4ee5\u9876\u70b9\u4e3a\u4e2d\u5fc3\u7684": 592, "\u7f16\u7a0b\u6a21\u578b": 592, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u7b97\u6cd5\u7c7b\u6765\u5728": 592, "\u6a21\u578b\u4e2d\u5f00\u53d1\u7b97\u6cd5": 592, "\u6a21\u578b\u4e0d\u540c": 592, "\u7b97\u6cd5\u7c7b\u7684\u88c5\u9970\u5668\u4e3a": 592, "\u8be5\u7c7b\u65b9\u6cd5\u662f": 592, "\u5b9a\u4e49\u5728\u9876\u70b9\u4e0a\u7684": 592, "\u800c\u4e0d\u540c\u4e8e": 592, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u5728\u56fe\u5206\u533a\u4e0a": 592, "\u8fd8\u662f\u4ee5": 592, "\u6a21\u578b\u4e0b\u7684\u7b97\u6cd5\u5982\u4e0b\u6240\u793a": 592, "\u88c5\u9970\u5668": 592, "\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u548c\u6d88\u606f\u6570\u636e\u7684\u7c7b\u578b": 592, "\u652f\u6301\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u901a\u8fc7": 592, "\u4e0a\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u5b9a\u4e49\u5728": 592, "\u4e2d\u7684": [592, 593, 595], "\u51fd\u6570": [592, 600], "\u4e0b\u5217\u4ee3\u7801": 592, "\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5982\u4e0b\u7684": 592, "\u4ee3\u7801\u4ee5\u9ad8\u6548\u5730\u6267\u884c": 592, "\u7528\u6237\u9700\u8981\u5728\u5b9a\u4e49\u7b97\u6cd5\u540e\u8c03\u7528\u7b97\u6cd5": 592, "\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 592, "\u5728\u56fe\u4e0a\u8fd0\u884c\u81ea\u5df1\u7684\u7b97\u6cd5": 592, "\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c": 592, "\u8fd9\u91cc": [592, 593, 602], "\u662f\u4e0e": 592, "\u76f8\u5bf9\u5e94\u7684": 592, "\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u4e4b\u540e": 592, "\u60a8\u53ef\u4ee5\u901a\u8fc7": 592, "\u65b9\u6cd5\u5c06\u7b97\u6cd5\u4fdd\u5b58\u6210": 592, "\u5305\u4ee5\u5907\u5c06\u6765\u4f7f\u7528": 592, "\u5728\u6b64\u4e4b\u540e": 592, "\u60a8\u53ef\u4ee5\u4ece": 592, "\u5305\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 592, "\u4ecegar\u5305\u4e2d\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 592, "\u652f\u6301\u7528\u6237\u7f16\u5199java\u7684pi": 592, "\u5e76\u4e14\u8fd0\u884c\u5728\u56fe\u5206\u6790\u5f15\u64ce\u4e0a": 592, "\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u5982\u679c\u5728graphscop": 592, "\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u4e00\u4e2ajava\u7684\u56fe\u7b97\u6cd5": 592, "\u7136\u540e\u6211\u4eec\u5c06\u5c55\u793a\u5982\u679c\u5b9e\u73b0\u5e76\u8fd0\u884c\u81ea\u5b9a\u4e49\u7684java\u56fe\u7b97\u6cd5": 592, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ecf\u5178\u56fe\u5206\u6790\u7b97\u6cd5\u7684\u793a\u4f8b\u5b9e\u73b0": 592, "\u901a\u8fc7\u4e0b\u9762\u5c55\u793a\u7684\u4f8b\u5b50": 592, "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8bd5\u7740\u8fd0\u884c\u4ed6\u4eec": 592, "\u9996\u5148\u4f60\u9700\u8981\u4ece\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u793a\u4f8bapp\u7684\u5408\u96c6": 592, "\u65e0\u9700\u4efb\u4f55\u66f4\u6539\u4f60\u5c31\u53ef\u4ee5\u5728": 592, "graphscope\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\u7b97\u6cd5": 592, "\u7136\u540e\u4f60\u9700\u8981\u6253\u5f00graphscope\u7684python": 592, "\u5c1d\u8bd5\u8f7d\u56fe\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684bfs\u7684\u7b97\u6cd5": 592, "dist_0": 592, "\u4e3a\u4e86\u7f16\u5199java\u5b9e\u73b0\u7684\u56fe\u7b97\u6cd5": 592, "\u7528\u6237\u9700\u8981\u501f\u52a9\u4e8e": 592, "\u8bf7\u53c2\u8003": [592, 600], "\u6765\u5c06": 592, "\u5b89\u88c5\u5230\u4f60\u7684\u672c\u5730\u73af\u5883\u4e0a": 592, "\u5b89\u88c5\u5b8c\u6210\u540e": 592, "\u4f60\u9700\u8981\u5c06": 592, "\u7684\u4f9d\u8d56\u6dfb\u52a0\u5230\u4f60\u7684maven\u9879\u76ee\u4f9d\u8d56\u4e2d": 592, "\u7528\u6237\u5e94\u5f53\u6ce8\u610f\u5728": 592, "\u7684\u4f9d\u8d56\u914d\u7f6e\u4e0a\u5e94\u5f53\u6dfb\u52a0": 592, "\u6765\u786e\u4fdd": 592, "\u6240\u6709\u5fc5\u8981\u7684\u4f9d\u8d56\u90fd\u88ab\u5305\u62ec\u5230": 592, "\u7528\u6237\u5728\u5f00\u53d1\u81ea\u5df1\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d": 592, "\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9jar\u5305": 592, "\u4e3a\u4e86\u89e3\u51b3\u4f9d\u8d56jar\u5305\u7684\u7248\u672c\u95ee\u9898": 592, "\u7528\u6237\u9700\u8981\u4f7f\u7528\u786e\u4fdd\u81ea\u5df1\u751f\u6210\u7684jar\u5305\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684jar\u5305": 592, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528maven\u63d2\u4ef6": 592, "\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5\u65f6": 592, "\u7528\u6237\u9700\u8981\u6309\u7167": 592, "\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7b97\u6cd5": 592, "\u5e76\u4e14\u9700\u8981\u6839\u636e\u9700\u8981\u7684app\u7c7b\u578b\u6765\u5b9e\u73b0": 592, "\u4e2d\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3": 592, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u5c5e\u6027\u56fe\u4e0a": 592, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u63a5\u53e3": 592, "defaultpropertyappbas": 592, "\u6216": [592, 593, 594, 595, 598, 600], "parallelpropertyappbas": 592, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u7b80\u5355\u56fe\u4e0a": 592, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u501f\u53e3": 592, "defaultappbas": 592, "\u540c\u65f6\u7528\u6237\u9700\u8981\u5b9e\u73b0app\u76f8\u5e94\u7684": 592, "\u6765\u4fdd\u5b58\u8de8superstep\u7684\u6570\u636e": 592, "\u5176\u5e94\u8be5\u662f": 592, "defaultpropertycontextbas": 592, "parallelpropertycontextbas": 592, "defaultcontextbas": 592, "\u6216\u8005": [592, 594, 601, 602], "\u7684\u7684\u5b50\u7c7b": 592, "\u901a\u8fc7\u7ee7\u627f": 592, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5230\u4e0d\u540c\u7c7b\u578b\u7684context\u6240\u62e5\u6709\u7684\u7279\u6027": 592, "\u901a\u8fc7\u8fd9\u4e24\u79cdcontext\u63d0\u4f9b\u7684\u501f\u53e3\u6240\u5b58\u50a8\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e4b\u540e\u53ef\u4ee5\u88ab\u7528\u6237\u8bbf\u95ee": 592, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728python": 592, "client\u4e2dquery\u8fd4\u56de\u7684context": 592, "\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e": 592, "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684app\u7684\u5b9e\u73b0": 592, "\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5bf9\u4e00\u4e2a\u7b80\u5355\u56fe\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e86\u904d\u5386": 592, "\u8be5app\u5bf9\u5e94\u7684context\u7684\u5b9e\u73b0": 592, "\u5728\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e": 592, "\u7528\u6237\u53ef\u80fd\u4f1a\u60f3\u5728\u63d0\u4ea4\u5230graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u8fd0\u884c\u524d": 592, "\u5148\u5728\u672c\u5730\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 592, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u6ee1\u8db3\u7528\u6237\u7684": 592, "\u8fd9\u4e2a\u9700\u6c42": 592, "\u4e3a\u4e86\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 592, "\u7528\u6237\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4": 592, "graphscope_repo": 592, "app_class_nam": 592, "path_to_your_jar": 592, "param_str": 592, "params_str": 592, "\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684java": 592, "app\u7684\u7c7b\u7684\u5168\u540d": 592, "\u6307\u5411\u5305\u542b\u7528\u6237\u60f3\u8981\u8fd0\u884c\u7684\u7b97\u6cd5\u7684jar\u5305": 592, "\u53ef\u4ee5\u901a\u8fc7": 592, "\u6765\u5236\u5b9acontext\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570": 592, "\u4f8b\u5982\u5bf9\u4e8ebfs\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528": 592, "\u6765\u6807\u8bb0\u521d\u59cb\u8282\u70b9\u662f6": 592, "\u5e76\u884c\u7ebf\u7a0b\u6570\u4e3a1": 592, "\u53ef\u4ee5": 592, "\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u8fd0\u884ctravers": 592, "jar_path": 592, "\u5728\u672c\u5730\u9a8c\u8bc1\u81ea\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u4e4b\u540e": 592, "\u4f60\u53ef\u4ee5\u901a\u8fc7graphscope\u7684python": 592, "client\u6765\u63d0\u4ea4\u8fd0\u884cjar\u5305": 592, "\u4e00\u4e2ajar\u5305\u4e2d\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684app\u5b9e\u73b0": 592, "\u7528\u6237\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\u76f8\u540c\u7684jar\u5305\u4f46\u662f\u8fd0\u884c\u4e0d\u540c": 592, "\u7684app": 592, "\u8bf7\u8010\u5fc3\u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210": 592, "\u5f53\u8ba1\u7b97\u5b8c\u6210\u540e": 592, "\u4f60\u53ef\u4ee5\u901a\u8fc7": [592, 593, 595], "\u5bf9\u8c61\u6765\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c": 592, "\u76f8\u5173\u8bba\u6587": 592, "wenfei": 592, "jingbo": 592, "xu": 592, "wenyuan": 592, "yu": 592, "jingren": 592, "zhou": 592, "xiaojian": 592, "luo": 592, "qiang": 592, "yin": 592, "cao": 592, "ruiqi": 592, "tod": [592, 598], "yinghui": 592, "wu": 592, "jiaxin": 592, "jiang": 592, "43rd": 592, "zeyu": 592, "zheng": 592, "bohan": 592, "chao": 592, "tian": 592, "\u4ee5": [593, 596, 597, 599, 602], "\u955c\u50cf\u7684\u65b9\u5f0f\u5206\u53d1\u5f15\u64ce\u7b49\u7ec4\u4ef6": 593, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [593, 595], "\u5982\u679c\u8fd0\u884c": 593, "\u7684\u96c6\u7fa4\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u8be5\u955c\u50cf": 593, "\u5219\u4f1a\u62c9\u53d6\u5bf9\u5e94\u7248\u672c\u7684\u6700\u65b0\u955c\u50cf": 593, "\u56e0\u6b64": [593, 594, 596], "\u8bf7\u786e\u4fdd\u60a8\u7684\u96c6\u7fa4\u53ef\u4ee5\u8bbf\u95ee\u516c\u5171\u955c\u50cf\u4ed3\u5e93": 593, "\u4f1a\u8bdd": [593, 596], "\u5ba2\u6237\u7aef": [593, 594, 598], "\u5b83\u5c01\u88c5": 593, "\u7ba1\u7406\u7740": 593, "\u5f15\u64ce\u7684\u5404\u79cd\u7ec4\u4ef6": 593, "\u5e76": 593, "\u8fde\u63a5": 593, "\u64cd\u4f5c\u7528\u6237\u5728": 593, "\u96c6\u7fa4\u4e0a\u7684": 593, "\u5f15\u64ce": 593, "\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a": 593, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\u4f1a\u8bdd\u6765\u62c9\u8d77\u4e00\u4e2a": 593, "\u5b9e\u4f8b": 593, "\u7528\u6237\u6709\u65f6\u9700\u8981\u4f7f\u7528\u5728\u672c\u673a\u78c1\u76d8\u4e0a\u7684\u6570\u636e": 593, "\u6211\u4eec\u63d0\u4f9b\u4e86\u9009\u9879\u4f9b\u7528\u6237\u5c06\u672c\u673a\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e0a": 593, "\u5047\u5b9a\u6211\u4eec\u8981\u5c06\u672c\u673a\u7684": 593, "\u7684\u8def\u5f84\u6302\u8f7d\u5230": 593, "\u8def\u5f84": [593, 602], "\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u4e00\u4e2a\u5b57\u5178": 593, "\u7136\u540e": [593, 601], "\u5c06\u5176\u901a\u8fc7": 593, "\u7684\u53c2\u6570\u4f20\u7ed9\u4f1a\u8bdd\u7684\u6784\u9020\u51fd\u6570": 593, "\u6ce8\u610f\u8fd9\u91cc\u7684\u672c\u673a\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e": 593, "\u8282\u70b9\u7684\u6982\u5ff5": 593, "\u5982\u679c\u4f60\u662f\u901a\u8fc7": 593, "\u521b\u5efa\u7684\u96c6\u7fa4": 593, "\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230": 593, "\u7684\u865a\u62df\u4e3b\u673a\u7684\u76f8\u5e94\u8def\u5f84\u4e0a": 593, "\u6216\u8005\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u5f84\u63d0\u524d\u6302\u8f7d\u5230\u865a\u62df\u4e3b\u673a\u4e0a\u53bb": 593, "\u67e5\u770b\u66f4\u591a\u7ec6\u8282": 593, "\u4e0a\u7684\u4e00\u4e2a": 593, "\u5b9e\u4f8b\u5305\u542b": 593, "\u4e00\u4e2a\u8fd0\u884c": 593, "\u7684": [593, 594, 595, 598, 603], "\u8d1f\u8d23\u5143\u4fe1\u606f\u7684\u540c\u6b65": 593, "\u8d1f\u8d23\u5bf9": 593, "\u5f15\u64ce\u5bb9\u5668\u7684\u7ba1\u7406": 593, "\u4ee5\u53ca\u4e00\u7ec4\u8fd0\u884c": 593, "\u5f15\u64ce\u5bb9\u5668\u7684": 593, "replicaset": 593, "\u5bf9\u8c61": 593, "\u540e\u7aef\u670d\u52a1\u7684\u5165\u53e3": 593, "\u901a\u8fc7": [593, 596], "\u63a5\u6536\u6765\u81ea": 593, "\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u548c\u547d\u4ee4": 593, "\u5e76\u7ba1\u7406\u7740\u56fe\u5206\u6790\u5f15\u64ce": 593, "\u56fe\u67e5\u8be2\u5f15\u64ce": 593, "\u56fe\u5b66\u4e60\u5f15\u64ce": [593, 598], "\u7684\u751f\u547d\u5468\u671f": 593, "\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u914d\u7f6e\u5f15\u64ce\u955c\u50cf\u5730\u5740\u7b49\u53c2\u6570": 593, "\u8bf7\u5728": 593, "\u4e2d\u53c2\u9605\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f": 593, "\u83b7\u53d6\u5e76\u6dfb\u52a0\u4ed3\u5e93\u4fe1\u606f": 593, "\u5b89\u88c5": [593, 598], "release_nam": 593, "\u68c0\u6d4bgraphscope\u670d\u52a1\u53ef\u7528\u6027": 593, "\u53c2\u8003": 593, "\u8be5\u94fe\u63a5": 593, "\u4ee5\u901a\u8fc7python\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9884\u542f\u52a8\u7684graphscope\u670d\u52a1": 593, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728aws\u6216\u963f\u91cc\u4e91\u4e0a\u521b\u5efa": 593, "\u96c6\u7fa4\u7684\u4ea4\u4e92\u5f0f\u811a\u672c": 593, "\u8fd9\u4e00\u811a\u672c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5df2\u6709\u7684\u96c6\u7fa4\u6216\u521b\u5efa\u65b0\u7684": 593, "\u96c6\u7fa4": [593, 595, 599], "\u7136\u540e\u8f93\u51fa\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6": 593, "\u7528\u6cd5\u5982\u4e0b": 593, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7": 593, "launch_clust": 593, "\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 593, "boto3": 593, "your_access_key_id": 593, "your_access_key_secret": 593, "region": 593, "your_region_nam": 593, "kube_config_path": 593, "alibabacloud_cs20151215": 593, "alibabacloud_ecs20140526": 593, "alibabacloud_vpc20160428": 593, "your_region_id": 593, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728\u672c\u5730\u5b89\u88c5graphscope\u76f8\u5173\u4f9d\u8d56\u7684\u811a\u672c": 593, "\u8be5\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u5728": 593, "\u5e73\u53f0\u4e0a": 593, "\u4e3b\u8981\u7684\u7528\u6cd5\u5982\u4e0b": 593, "\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 593, "\u5f00\u53d1\u76f8\u5173\u4f9d\u8d56": 593, "\u672c\u5730\u90e8\u7f72": 593, "graphscope_env": [593, 594], "\u7684\u80cc\u540e\u6709\u4e00\u7fa4\u6d3b\u8dc3\u7684\u5de5\u7a0b\u4eba\u5458\u548c\u7814\u7a76\u4eba\u5458\u56e2\u961f\u6765\u63a8\u8fdb\u65e5\u5e38\u7684\u5f00\u53d1\u548c\u7ef4\u62a4": 594, "\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684": 594, "\u4e3a\u6539\u5584\u8be5\u9879\u76ee\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e": 594, "\u9075\u5faa": 594, "\u7684\u5f00\u6e90\u534f\u8bae": 594, "\u9700\u8981\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u548c\u4f9d\u8d56": 594, "\u4e3a\u4e86\u8ba9\u5f00\u53d1\u8005\u66f4\u5bb9\u6613\u4e0a\u624b": 594, "\u6211\u4eec\u63d0\u4f9b\u4e86\u5b89\u88c5\u4e86\u6240\u9700\u4f9d\u8d56\u7684": 594, "\u955c\u50cf": 594, "\u5f00\u53d1\u8005\u9700\u8981\u901a\u8fc7": 594, "\u7684\u547d\u4ee4\u4ece\u6211\u4eec\u7684\u5f00\u6e90\u4ee3\u7801\u5e93": 594, "\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u7684\u4ee3\u7801": 594, "\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u5f00\u53d1\u6216\u4ee3\u7801\u7684\u66f4\u6539": 594, "\u7136\u540e\u5728\u4ee3\u7801\u7684\u6839\u76ee\u5f55": 594, "\u6267\u884c": 594, "10240m": 594, "minitest": 594, "unittest": 594, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6784\u5efa\u547d\u4ee4\u5f00\u53d1\u5e76\u6d4b\u8bd5\u5176\u4e2d\u67d0\u4e00\u4e2a\u6a21\u5757": 594, "\u6bd4\u5982": [594, 602], "\u56fe\u5206\u6790\u5f15\u64ce": [594, 598], "\u6a21\u5757": 594, "\u7136\u540e\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6784\u5efa": 594, "\u8be5\u547d\u4ee4\u4f1a\u5f00\u59cb": 594, "\u7684\u6784\u5efa\u8fc7\u7a0b": 594, "\u8be5\u8fc7\u7a0b\u5c06\u5728": 594, "\u7684\u5bb9\u5668\u4e2d\u6784\u5efa\u5f53\u524d\u6e90\u4ee3\u7801": 594, "\u5e76\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230": 594, "\u8fd0\u884c\u65f6\u57fa\u7840\u955c\u50cf": 594, "\u751f\u6210\u7684\u955c\u50cf\u5c06\u88ab\u6807\u8bb0": 594, "\u4e3a": [594, 595, 596], "shortsha": 594, "\u5ba2\u6237\u7aef\u4e0d\u5305\u542b\u5728\u8be5\u955c\u50cf\u4e2d": 594, "\u6784\u5efa\u4e5f\u4e0e\u5f15\u64ce\u6709\u6240\u4e0d\u540c": 594, "\u5982\u679c\u5f00\u53d1\u8005\u6b63\u5728\u5f00\u53d1": 594, "\u5ba2\u6237\u7aef\u5e76\u4e14\u672a\u4fee\u6539\u5f15\u64ce\u76f8\u5173\u7684\u6587\u4ef6": 594, "\u90a3\u4e48": 594, "\u955c\u50cf\u662f\u4e0d\u9700\u8981\u91cd\u5efa\u7684": 594, "\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5728\u672c\u5730\u91cd\u65b0\u5b89\u88c5": 594, "\u5ba2\u6237\u7aef\u5373\u53ef": 594, "\u6d4b\u8bd5\u65b0\u6784\u5efa\u7684\u955c\u50cf": 594, "\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd": 594, "\u6307\u5b9a\u7528\u65b0\u7f16\u8bd1\u7684\u955c\u50cf": 594, "\u4e0b\u7684": 594, "\u5206\u53d1\u5305\u662f\u57fa\u4e8e": 594, "\u73af\u5883\u4e0b\u6784\u5efa\u7684": 594, "\u4e0b\u5206\u522b\u6784\u5efa": 594, "\u7531\u4e8e": 594, "\u4e0b\u7684\u6784\u5efa\u8fc7\u7a0b\u662f\u5728\u672c\u5730": 594, "\u975edocker": 594, "\u4e2d\u8fdb\u884c": 594, "\u56e0\u6b64\u9700\u8981\u672c\u5730\u4e8b\u5148\u5b89\u88c5": 594, "\u7684\u4f9d\u8d56": 594, "\u57fa\u4e8e\u5f53\u524d": 594, "\u73af\u5883\u4e0b\u7684": 594, "\u7248\u672c\u6784\u5efa": 594, "\u9700\u8981\u6ce8\u610f\u7684\u662f": [594, 596], "\u5982\u679c\u4f60\u9700\u8981\u8be5\u5206\u53d1\u5305\u80fd\u652f\u6301\u4e0d\u540c\u7684": 594, "\u7248\u672c": [594, 599], "\u4f60\u53ef\u80fd\u9700\u8981\u901a\u8fc7": 594, "conda": 594, "pyenv": 594, "\u5b89\u88c5\u591a\u4e2a": 594, "\u7684\u7248\u672c": 594, "\u98ce\u683c": 594, "\u5982\u679c\u4f60\u7684\u4ee3\u7801\u6ca1\u6709\u901a\u8fc7ci\u7684\u98ce\u683c\u68c0\u67e5": 594, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 594, "\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801": 594, "\u6211\u4eec\u6536\u96c6\u4e86\u7528\u6237\u4f7f\u7528": 595, "\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898": 595, "\u5982\u679c\u5728\u4e0b\u9762\u7684\u5217\u8868\u4e2d\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u60a8\u9047\u5230\u7684\u95ee\u9898\u7684\u7b54\u6848": 595, "\u53ef\u901a\u8fc7\u63d0\u4ea4": 595, "\u6216\u8005\u5728": 595, "\u4e0e\u6211\u4eec\u8054\u7cfb": 595, "\u8fd0\u884c": 595, "\u7cfb\u7edf\u9700\u8981\u7684\u6700\u5c0f\u8d44\u6e90\u662f\u591a\u5c11": 595, "\u5728\u901a\u8fc7": 595, "\u5ba2\u6237\u7aef\u4f7f\u7528": 595, "\u8fc7\u7a0b\u4e2d": 595, "\u9700\u8981\u7684\u6700\u4f4e": 595, "\u7248\u672c\u662f3": 595, "\u6700\u4f4epip\u7248\u672c\u662f": 595, "\u7cfb\u7edf\u652f\u6301\u4ee5\u5355\u673a\u6216\u5206\u5e03\u5f0f\u7684\u65b9\u5f0f\u90e8\u7f72": 595, "\u5355\u673a\u60c5\u51b5\u4e0b": 595, "\u8d44\u6e90\u9700\u6c42": 595, "\u6838": 595, "\u5185\u5b58": 595, "\u5728\u652f\u6301\u4ee5\u4e0b\u73af\u5883\u4e2d\u8fd0\u884c": 595, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72": 595, "\u9700\u8981\u7528\u6237\u62e5\u6709\u4e00\u4e2a": 595, "\u7684\u73af\u5883\u4e0a\u6d4b\u8bd5\u901a\u8fc7": 595, "\u662f\u5426\u5f3a\u4f9d\u8d56": 595, "\u652f\u6301\u5728\u5355\u673a\u6a21\u5f0f\u5b89\u88c5\u8fd0\u884c": 595, "\u7684\u9884\u7f16\u8bd1\u5305\u4ee5": 595, "\u7684\u5f62\u5f0f\u5206\u53d1": 595, "\u53ef\u4ee5\u7528": 595, "\u5feb\u901f\u5b89\u88c5": 595, "\u5982\u4f55\u5982\u67e5\u770b": 595, "\u7684\u8fd0\u884c\u65f6\u4fe1\u606f": 595, "\u8fd0\u884c\u4e0d\u6253\u5370\u65e5\u5fd7\u4fe1\u606f": 595, "\u53c2\u6570\u5f00\u542f\u65e5\u5fd7\u8f93\u51fa": 595, "\u5982\u679c\u60a8\u7684graphscope\u8fd0\u884c\u5728k8s\u96c6\u7fa4\u4e0a": 595, "\u53ef\u4ee5\u4f7f\u7528": [595, 601], "\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001": 595, "\u540c\u65f6\u5982\u679c\u4f60\u53ef\u4ee5\u8bbf\u95ee": 595, "\u7684\u78c1\u76d8": 595, "\u4e5f\u53ef\u5728": 595, "\u76ee\u5f55\u4e0b\u67e5\u770b\u8fd0\u884c\u65f6\u65e5\u5fd7": 595, "\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528": 595, "\u547d\u4ee4\u65f6": 595, "\u53d1\u73b0\u4e86\u4e00\u4e9b\u591a\u4f59\u7684": 595, "\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u5931\u8d25\u7684": 595, "\u53ea\u80fd\u901a\u8fc7\u624b\u52a8\u6267\u884c\u547d\u4ee4\u5982": 595, "\u8fdb\u884c\u5220\u9664": 595, "\u901a\u5e38\u60c5\u51b5\u4e0b": 595, "\u8be5\u95ee\u9898\u51fa\u73b0\u5728\u4f7f\u7528": 595, "\u90e8\u7f72": [595, 598], "\u65f6": [595, 596], "\u4f9d\u8d56\u4e00\u4e9b\u6743\u9650\u6765\u5220\u9664\u8fd0\u884c\u65f6\u7684\u8d44\u6e90": 595, "\u5982\u679c\u7528\u6237\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e": 595, "\u7b49\u6743\u9650": 595, "\u53ef\u80fd\u4e0d\u80fd\u6b63\u786e\u56de\u6536\u5206\u914d\u7684\u8d44\u6e90": 595, "\u8be6\u7ec6\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b": 595, "\u662f\u56fe\u6570\u636e\u5e93\u5417": 595, "\u5e76\u4e0d\u662f\u4e00\u4e2a\u56fe\u6570\u636e\u5e93": 595, "\u4f46\u5176\u5305\u542b\u4e00\u4e2a\u6301\u4e45\u56fe\u5b58\u50a8\u7684\u7ec4\u4ef6": 595, "\u53ef\u4ee5\u88ab\u7528\u4f5c\u6570\u636e\u5e93": 595, "\u4e0a\u7684\u517c\u5bb9\u6027\u5982\u4f55": 595, "\u76ee\u524d": [595, 602], "graphscope\u652f\u6301gremlin\u8bed\u8a00\u4e2d\u7684\u5927\u90e8\u5206\u67e5\u8be2\u7b97\u5b50": 595, "\u53ef\u901a\u8fc7": 595, "\u8be5\u6587\u6863": 595, "\u67e5\u770b\u8be6\u7ec6\u7684\u652f\u6301\u4fe1\u606f": 595, "\u770b\u8d77\u6765\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u4e86": 595, "\u5982\u679c": 595, "\u770b\u8d77\u6765\u50cf\u5361\u4f4f": 595, "\u53ef\u80fd\u7684\u539f\u56e0\u6709": 595, "\u5728\u4f1a\u8bdd\u7684\u62c9\u8d77\u9636\u6bb5": 595, "\u5982\u679c\u5f53\u524d\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u8fc7\u6162": 595, "\u6216\u5f53\u524d\u96c6\u7fa4\u8d44\u6e90\u65e0\u6cd5\u6ee1\u8db3\u8bf7\u6c42\u7684\u8d44\u6e90\u65f6": 595, "\u4f1a\u9020\u6210\u5361\u4f4f\u7684\u73b0\u8c61": 595, "\u8f7d\u56fe\u9636\u6bb5": 595, "\u53ef\u80fd\u4f1a\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927\u9020\u6210\u77ed\u6682\u7684\u5361\u4f4f\u73b0\u8c61": 595, "\u5728\u6267\u884c\u56fe\u7b97\u6cd5\u5206\u6790\u9636\u6bb5": 595, "\u6216\u8005\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 595, "\u7f16\u8bd1\u6784\u5efa\u5e94\u7528\u7684\u5e93\u65f6\u4f1a\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4": 595, "\u4e3a\u4ec0\u4e48\u8f7d\u56fe\u65f6\u62a5\u627e\u4e0d\u5230\u6587\u4ef6\u7684\u9519\u8bef": 595, "\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u96c6\u7fa4\u65b9\u5f0f\u90e8\u7f72\u8fd0\u884c": 595, "\u6570\u636e\u6587\u4ef6\u5fc5\u987b\u8981\u5bf9": 595, "\u53ef\u89c1": 595, "\u4f60\u4e5f\u8bb8\u9700\u8981\u6302\u8f7d\u78c1\u76d8\u6216\u8005\u4f7f\u7528\u4e91\u5b58\u50a8\u63d0\u4f9b\u5546\u7684\u670d\u52a1": 595, "\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u662f\u4f7f\u7528": 595, "\u90e8\u7f72\u7684": 595, "\u4f60\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e": 595, "\u6765\u628a\u672c\u673a\u76ee\u5f55\u6302\u8f7d\u5230": 595, "\u865a\u62df\u7684": 595, "\u6709\u4ec0\u4e48\u533a\u522b": 595, "\u5982\u4f55\u8bbe\u7f6e": 595, "\u5bb9\u5668\u5206\u914d\u7684\u5185\u5b58": 595, "\u5b83\u5b58\u50a8\u7531": 595, "\u7ba1\u7406\u7684\u539f\u59cb\u6570\u636e\u7684": 595, "\u7684\u5143\u4fe1\u606f": 595, "\u4f8b\u5982\u5f62\u72b6": 595, "\u540d\u79f0\u7b49": 595, "\u7531\u4e8e\u5143\u6570\u636e\u6bd4\u6570\u636e\u96c6\u5c0f\u5f97\u591a": 595, "\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u914d\u7f6e\u5c31\u8db3\u591f\u4e86": 595, "\u5b83\u76f8\u5f53\u4e8e": 595, "\u5b58\u50a8\u6570\u636e\u96c6\u7684\u5185\u5b58": 595, "\u6211\u4eec\u53d1\u73b0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6570\u636e\u96c6\u5728\u78c1\u76d8\u4e0a\u7684\u5927\u5c0f\u7684": 595, "\u500d\u901a\u5e38\u662f\u4e00\u4e2a\u5408\u7406\u7684\u503c": 595, "\u5bb9\u5668\u7684\u5185\u5b58\u5927\u5c0f": 595, "\u4e00\u822c\u5c06\u5176\u8bbe\u7f6e\u4e3a": 595, "\u7684\u540c\u6837\u5927\u5c0f": 595, "\u5bfc\u81f4\u5728": 595, "\u73af\u5883\u4e0b\u5b89\u88c5": 595, "\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b": 595, "\u7f16\u8bd1": 595, "\u5931\u8d25": 595, "\u6765\u5c1d\u8bd5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684": 595, "\u8be6\u60c5\u53ef\u53c2\u8003": 595, "\u4f60\u53ef\u4ee5\u6839\u636e": 595, "\u6b64\u6559\u7a0b": 595, "\u6765\u6e90\u7801\u7f16\u8bd1": 595, "\u6216\u5c1d\u8bd5\u901a\u8fc7": 595, "\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 595, "\u4e0a\u5206\u914d": 595, "\u65f6\u9047\u5230\u4e86": 595, "\u95ee\u9898": 595, "\u5982\u4f55\u89e3\u51b3": 595, "\u901a\u5e38\u5f53\u4f7f\u7528": 595, "\u7684\u65b9\u5f0f\u5b89\u88c5": 595, "\u4f1a\u62a5": 595, "\u9519\u8bef": [595, 597], "\u6211\u4eec\u901a\u8fc7": 595, "\u6765\u67e5\u770b\u65e5\u5fd7": 595, "\u6b64\u65f6\u65e5\u5fd7\u663e\u793a": 595, "\u901a\u5e38\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f": 595, "\u5feb\u901f\u7684\u65b9\u5f0f\u662f\u5728\u6240\u6709\u76f8\u5173\u7684": 595, "\u76ee\u5f55\u4e0a\u4f7f\u7528": 595, "\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528": 595, "\u4f18\u96c5\u7684\u65b9\u6cd5\u662f\u9996\u5148\u521b\u5efa": 595, "\u7528\u6237\u548c\u7528\u6237\u7ec4": 595, "\u7136\u540e\u5c06": 595, "\u4e0a\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u76f8\u5173nfs\u76ee\u5f55": 595, "\u4e3a\u4ec0\u4e48\u5728": 595, "\u96c6\u7fa4\u4e0a\u62c9\u8d77": 595, "\u5b9e\u4f8b\u65f6": 595, "\u4ea7\u751f\u8d85\u65f6\u5f02\u5e38": 595, "\u5927\u591a\u6570\u60c5\u51b5\u4e0b": 595, "\u8d85\u65f6\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5728": 595, "\u96c6\u7fa4\u62c9\u8d77": 595, "\u5b9e\u4f8b\u65f6\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u955c\u50cf": 595, "\u8fd9\u4e00\u6b65\u901a\u5e38\u9700\u8981\u51e0\u5206\u949f\u7684\u65f6\u95f4": 595, "\u9002\u5f53\u7684\u589e\u52a0\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4\u6765\u89e3\u51b3\u8be5\u95ee\u9898": 595, "\u542f\u52a8graphscope\u65f6\u7531\u4e8e\u8fde\u63a5v6d": 595, "etcd\u7b49\u7ec4\u4ef6\u5931\u8d25\u800c\u5bfc\u81f4graphscope\u542f\u52a8\u5931\u8d25": 595, "\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4f60\u6240\u4f7f\u7528\u7684\u673a\u5668": 595, "\u6216\u5bb9\u5668": 595, "\u6240\u5728\u7684\u4f01\u4e1a\u7f51\u7edc\u5185\u8981\u6c42\u76f8\u5e94\u7684\u4ee3\u7406\u8bbe\u7f6e\u65b9\u53ef\u6b63\u5e38\u4f7f\u7528\u7f51\u7edc": 595, "\u8fd9\u4e9b\u4ee3\u7406\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u5740\u89e3\u6790\u4ee5\u53ca\u7aef\u53e3\u5360\u7528": 595, "\u4e3a\u907f\u514d\u7c7b\u4f3c\u60c5\u51b5": 595, "\u53ef\u5728\u73af\u5883\u53d8\u91cf": 595, "\u4e2d\u52a0\u5165graphscope\u76f8\u5173\u7684\u5730\u5740": 595, "\u4ee5\u53ca": [595, 602], "\u8bf7\u6ce8\u610f": 595, "no_proxy\u7684\u524d\u540e\u7f00\u89c4\u5219": 595, "stackexchang": 595, "23452": 595, "\u5176\u4ed6\u95ee\u9898": 595, "\u60a8\u53ef\u4ee5\u63d0\u4ea4": 595, "\u63d0\u51fa\u4f60\u7684\u95ee\u9898": 595, "\u540c\u65f6": [595, 600], "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528": 595, "\u505a\u4e3a\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 596, "\u53ef\u4ee5\u5904\u7406\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2": 596, "\u56fe\u5206\u6790\u548c\u56fe\u5b66\u4e60\u4efb\u52a1": 596, "\u5e76\u4e14\u5177\u6709\u6613\u4e8e\u4f7f\u7528": 596, "\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u7b49\u7279\u70b9": 596, "\u672c\u7ae0\u8282\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e": 596, "\u4f7f\u7528": [596, 598, 601, 602, 603], "\u5e76\u5e2e\u52a9\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u9ad8\u6548\u7684\u5206\u6790\u5927\u56fe": 596, "\u6570\u636e\u96c6": 596, "\u662f\u7531\u5fae\u8f6f\u5b66\u672f\u5173\u7cfb\u56fe": 596, "\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u5f02\u6784\u56fe\u7f51\u7edc": 596, "\u8be5\u56fe\u4e2d\u5305\u542b4\u79cd\u7c7b\u578b\u7684\u5b9e\u4f53": 596, "\u5373\u8bba\u6587": 596, "\u4f5c\u8005": 596, "\u673a\u6784\u548c\u7814\u7a76\u9886\u57df": 596, "\u4ee5\u53ca\u8fde\u63a5\u4e24\u4e2a\u5b9e\u4f53\u7684\u56db\u79cd\u7c7b\u578b\u7684\u6709\u5411\u5173\u7cfb\u8fb9": 596, "\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u662f": 596, "\u7ed9\u51fa\u5f02\u6784\u7684": 596, "\u6570\u636e": 596, "\u5728\u8be5\u56fe\u4e0a\u9884\u6d4b\u6bcf\u7bc7\u8bba\u6587\u7684\u7c7b\u522b": 596, "\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 596, "\u8be5\u4efb\u52a1\u53ef\u4ee5\u5f52\u7c7b\u5728\u5404\u4e2a\u9886\u57df": 596, "\u5404\u4e2a\u65b9\u5411\u6216\u7814\u7a76\u5c0f\u7ec4\u7684\u8bba\u6587": 596, "\u901a\u8fc7\u5bf9\u8bba\u6587\u5c5e\u6027\u548c\u5f15\u7528\u56fe\u4e0a\u7684\u7ed3\u6784\u4fe1\u606f\u5bf9\u8bba\u6587\u8fdb\u884c\u5206\u7c7b": 596, "\u5728\u8be5\u6570\u636e\u4e2d": 596, "\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u5305\u542b\u4e86\u4e00\u4e2a\u4ece\u8bba\u6587\u6807\u9898": 596, "\u6458\u8981\u62bd\u53d6\u7684": 596, "\u7ef4": 596, "\u5411\u91cf\u4f5c\u4e3a\u8868\u5f81": 596, "\u8be5\u8868\u5f81\u662f\u7ecf\u8fc7": 596, "\u9884\u8bad\u7ec3\u63d0\u524d\u83b7\u53d6\u7684": 596, "\u800c\u7ed3\u6784\u4fe1\u606f\u662f\u5728\u4ee5\u4e0b\u8fc7\u7a0b\u4e2d\u5373\u65f6\u8ba1\u7b97\u7684": 596, "\u4e0a\u56fe\u8868\u793a\u4e86\u7528\u6237\u901a\u8fc7": 596, "\u5ba2\u6237\u7aef\u8c03\u7528": 596, "\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u7a0b": 596, "\u6b65\u9aa4": 596, "\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd": 596, "\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4": 596, "\u5b9a\u4e49\u548c\u8f7d\u5165\u56fe": 596, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u56fe": 596, "\u6267\u884c\u56fe\u7b97\u6cd5\u505a\u56fe\u5206\u6790": 596, "\u6267\u884c\u57fa\u4e8e\u56fe\u6570\u636e\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1": 596, "\u7684\u7b2c\u4e00\u6b65": 596, "\u6211\u4eec\u9700\u8981\u5728": 596, "\u4e2d\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 596, "\u5bf9\u4e8e": [596, 599], "\u521b\u5efa\u4f1a\u8bdd\u9700\u8981\u4f7f\u7528": 596, "\u670d\u52a1\u7c7b\u578b": 596, "\u9ed8\u8ba4\u662f": 596, "\u53e6\u5916": [596, 602], "\u6ce8\u610f": [596, 599], "\u662f": 596, "\u4e3b\u673a\u4e0a\u7684\u8def\u5f84": 596, "\u5f53\u5728": 596, "\u4e0a\u4f7f\u7528": 596, "\u9700\u8981\u9996\u5148\u5c06\u6b64\u8def\u5f84\u52a0\u5165\u5230": 596, "\u7684\u5171\u4eab\u76ee\u5f55\u4e2d": 596, "\u901a\u5e38\u4e3a": 596, "\u66f4\u8be6\u7ec6\u7684\u6307\u5f15\u8bf7\u53c2\u770b": 596, "\u7684\u5efa\u7acb\u8fc7\u7a0b\u4e2d": 596, "\u9996\u9009\u4f1a\u5728\u80cc\u540e\u5c1d\u8bd5\u62c9\u8d77\u4e00\u4e2a": 596, "\u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u7684\u5165\u53e3": 596, "\u8be5": 596, "\u8d1f\u8d23\u7ba1\u7406\u8be5\u6b21\u4f1a\u8bdd\u7684": 596, "\u6240\u6709\u8d44\u6e90": 596, "\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u67e5\u8be2": 596, "\u56fe\u5b66\u4e60\u5f15\u64ce\u7684\u751f\u547d\u5468\u671f": 596, "\u540e\u7eed\u62c9\u8d77\u7684\u5176\u4ed6\u6bcf\u4e2a": 596, "\u90fd\u6709\u4e00\u4e2a": 596, "\u5b9e\u4f8b\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u5c42": 596, "\u5206\u5e03\u5f0f\u7684\u7ba1\u7406\u56fe\u6570\u636e": 596, "\u8f7d\u56fe": [596, 597, 598], "\u4ee5\u5c5e\u6027\u56fe": 596, "\u5efa\u6a21\u56fe\u6570\u636e": [596, 602], "\u5c5e\u6027\u56fe\u4e2d": 596, "\u70b9\u548c\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 596, "\u4e0d\u540c\u7684\u6807\u7b7e\u6709\u4e0d\u540c\u7684\u5c5e\u6027": 596, "\u4e0b\u56fe\u5c55\u793a\u4e86\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 596, "\u8be5\u56fe\u5177\u6709\u56db\u79cd\u9876\u70b9": 596, "\u5206\u522b\u6807\u8bb0\u4e3a": 596, "\u8bba\u6587": 596, "\u673a\u6784": 596, "\u7814\u7a76\u9886\u57df": 596, "\u6709\u56db\u79cd\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9": 596, "\u6bcf\u79cd\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 596, "\u5e76\u4e14\u8fb9\u7684\u4e24\u7aef\u9876\u70b9\u7684\u6807\u7b7e\u4e5f\u662f\u786e\u5b9a\u7684": 596, "\u5f15\u7528": 596, "\u8fd9\u79cd\u6807\u7b7e\u7684\u8fb9\u8fde\u63a5\u4e24\u4e2a": 596, "\u9876\u70b9": 596, "\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u6807\u8bb0\u4e3a": 596, "\u64b0\u5199": 596, "\u7684\u8fb9": [596, 602], "\u5b83\u8981\u6c42\u8be5\u8d77\u59cb\u70b9\u7684\u6807\u8bb0\u4e3a": 596, "\u7ec8\u6b62\u70b9\u7684\u6807\u8bb0\u4e3a": 596, "\u6240\u6709\u7684\u9876\u70b9": 596, "\u548c\u8fb9\u90fd\u53ef\u4ee5\u5177\u6709\u5c5e\u6027": 596, "\u9876\u70b9\u5177\u6709\u8bf8\u5982\u53d1\u5e03\u5e74\u4efd": 596, "\u4e3b\u9898\u6807\u7b7e\u7b49\u5c5e\u6027": 596, "\u8981\u5c06\u6b64\u56fe\u52a0\u8f7d\u5230": 596, "\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0e": 596, "\u6570\u636e\u6587\u4ef6": 596, "\u7ed3\u5408\u4f7f\u7528": 596, "\u8bf7\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u672c\u5730\u7684\u6302\u8f7d\u76ee\u5f55": 596, "\u5728\u672c\u4f8b\u4e2d\u4e3a": 596, "author_affiliated_with_institut": 596, "paper_has_topic_field_of_studi": 596, "hastop": 596, "paper_cites_pap": 596, "author_writes_pap": 596, "\u4e5f\u53ef\u901a\u8fc7\u6211\u4eec\u63d0\u4f9b\u7684\u5185\u7f6e\u6570\u636e\u96c6\u51fd\u6570\u5e2e\u52a9\u5b8c\u6210\u8f7d\u56fe\u6d41\u7a0b": 596, "\u8fd9\u91cc\u7684": 596, "\u5df2\u7ecf\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b58\u50a8\u5728": 596, "\u4e2d\u7684\u56fe": 596, "\u56fe\u6570\u636e\u5206\u5e03\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u80cc\u540e\u62c9\u8d77\u7684": 596, "\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b": 596, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u5141\u8bb8\u7528\u6237\u4ee5": 596, "\u63a2\u7d22\u6027": 596, "\u65b9\u5f0f\u6765\u63a2\u7d22": 596, "\u67e5\u770b\u548c\u663e\u793a\u56fe\u6570\u636e": 596, "\u4ee5\u65b9\u4fbf\u7684\u5b9a\u4f4d\u548c\u6d1e\u5bdf\u7279\u5b9a\u7684\u6df1\u5165\u4fe1\u606f": 596, "\u91c7\u7528\u79f0\u4e3a": 596, "\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u56fe\u904d\u5386": 596, "\u5e76\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u9ad8\u6548\u6267\u884c": 596, "\u5728\u6b64\u793a\u4f8b\u4e2d": 596, "\u6211\u4eec\u4f7f\u7528\u56fe\u904d\u5386\u6765\u67e5\u770b\u4e24\u4f4d\u7ed9\u5b9a\u4f5c\u8005\u5171\u540c\u64b0\u5199\u7684\u8bba\u6587\u6570\u91cf": 596, "\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2": 596, "\u6211\u4eec\u5047\u8bbe\u4f5c\u8005\u53ef\u4ee5\u5206\u522b\u7531id": 596, "\u552f\u4e00\u6807\u8bc6": 596, "\u56fe\u5206\u6790\u662f\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u7c7b\u56fe\u8ba1\u7b97": 596, "\u4e8b\u5b9e\u8bc1\u660e": 596, "\u8bb8\u591a\u7b97\u6cd5": 596, "\u4f8b\u5982\u793e\u533a\u68c0\u6d4b": 596, "\u8def\u5f84\u548c\u8fde\u63a5\u6027": 596, "\u96c6\u4e2d\u6027": 596, "\u5728\u5404\u79cd\u4e1a\u52a1\u4e2d\u90fd\u975e\u5e38\u6709\u6548": 596, "\u5185\u5efa\u4e86\u4e00\u7ec4\u9884\u7f6e\u5e38\u7528\u7b97\u6cd5": 596, "\u65b9\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5206\u6790\u56fe\u6570\u636e": 596, "\u4e0b\u9762\u6211\u4eec\u9996\u5148\u901a\u8fc7\u5728\u7279\u5b9a\u5468\u671f\u5185\u4ece\u5168\u56fe\u4e2d\u63d0\u53d6\u8bba\u6587": 596, "\u80cc\u540e\u57fa\u4e8e": 596, "\u6765\u5bfc\u51fa\u4e00\u4e2a\u5b50\u56fe": 596, "\u7136\u540e\u8fd0\u884c": 596, "\u5206\u89e3\u548c\u4e09\u89d2\u5f62\u8ba1\u6570\u4ee5\u751f\u6210\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u7684\u7ed3\u6784\u7279\u5f81": 596, "\u7531\u4e8e\u8bb8\u591a\u7b97\u6cd5\u53ef\u80fd\u4ec5\u9002\u7528\u4e8e\u540c\u6784\u56fe": 596, "\u53ea\u6709\u4e00\u7c7b\u70b9\u548c\u4e00\u7c7b\u8fb9\u800c\u4e0d\u533a\u5206\u6807\u7b7e": 596, "\u8981\u5728\u5c5e\u6027\u56fe\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5": 596, "\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6784\u56fe\u4e2d": 596, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5728": 596, "\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 596, "\u5f53\u524d": 596, "\u652f\u6301\u7528\u6237\u4ee5": 596, "\u6a21\u578b\u548c": 596, "\u6a21\u578b\u81ea\u5b9a\u4e49\u56fe\u7b97\u6cd5": 596, "\u7ed3\u5408\u4e86\u56fe\u7ed3\u6784\u548c\u673a\u5668\u5b66\u4e60\u7684\u4f18\u52bf": 596, "\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u7ed3\u6784\u4fe1\u606f\u548c\u5c5e\u6027\u4fe1\u606f\u538b\u7f29\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4f4e\u7ef4\u5d4c\u5165\u5411\u91cf": 596, "\u8fd9\u4e9b\u5d4c\u5165\u548c\u8868\u5f81\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f93\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d": 596, "\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d": 596, "\u6211\u4eec\u8bad\u7ec3\u4e86": 596, "\u6a21\u578b": 596, "\u5c06\u8282\u70b9": 596, "\u5206\u7c7b\u4e3a349\u4e2a\u7c7b\u522b": 596, "\u6bcf\u4e2a\u7c7b\u522b\u4ee3\u8868\u4e00\u4e2a\u51fa\u5904": 596, "\u4f8b\u5982\u9884\u5370\u672c\u548c\u4f1a\u8bae": 596, "\u4e3a\u6b64": 596, "\u63a5\u7740\u4e0a\u4e00\u6b65": 596, "\u9996\u5148\u9700\u8981\u542f\u52a8\u5b66\u4e60\u5f15\u64ce\u5e76\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5f81\u7684\u6570\u636e\u56fe": 596, "\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u5e76\u6267\u884c": 596, "train_gcn": 596, "\u6700\u540e": [596, 597, 600], "\u5f53\u6211\u4eec\u5b8c\u6210\u6240\u6709\u7684\u8ba1\u7b97\u8fc7\u7a0b\u540e": 596, "\u5173\u95ed\u5f53\u524d\u7684\u4f1a\u8bdd": 596, "\u8be5\u6b65\u9aa4\u4f1a\u544a\u77e5\u80cc\u540e\u7684": 596, "\u548c\u5f15\u64ce": 596, "\u91ca\u653e\u5f53\u524d\u6240\u6709\u7684\u8d44\u6e90": 596, "\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u65b0\u589e": 597, "\u6295\u5f71\u7684\u65b9\u6cd5": 597, "\u4ee5\u53ca\u5982\u4f55\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u56fe\u8f6c\u6362\u4e3a\u53ef\u4ee5\u9002\u914d\u666e\u901a\u7b97\u6cd5\u5e94\u7528\u7684\u65b9\u6cd5": 597, "\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u56de\u5230\u56fe\u4e2d\u53bb": 597, "\u5177\u4f53\u800c\u8a00": 597, "\u56fe": 597, "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u589e\u52a0\u6807\u7b7e\u7684\u51fd\u6570": 597, "\u548c\u4e00\u4e2a\u6295\u5f71\u7684\u51fd\u6570": 597, "\u6211\u4eec\u5df2\u7ecf\u5728": 597, "\u4e00\u8282\u89c1\u5230\u8fc7": 597, "\u8fd9\u4e24\u4e2a\u51fd\u6570": 597, "\u5f53\u65f6\u6211\u4eec\u7528\u5b83\u6765\u6784\u5efa\u4e00\u5f20\u56fe": 597, "\u8fdb\u4e00\u6b65\u7684": 597, "\u5f53\u56fe\u6784\u5efa\u597d\u5e76\u8f7d\u5165\u4e86": 597, "\u4e2d\u4e4b\u540e": 597, "\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7528\u5176\u589e\u52a0\u66f4\u591a\u7684\u6807\u7b7e": 597, "\u5f53\u7136\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4f1a\u5728\u539f\u56fe\u4e0a\u4fee\u6539": 597, "\u800c\u662f\u4f1a\u8fd4\u56de\u57fa\u4e8e\u539f\u56fe\u4e4b\u4e0a": 597, "\u589e\u52a0\u4e86\u65b0\u7684\u6807\u7b7e\u7684\u65b0\u56fe": 597, "\u5c5e\u6027\u56fe\u4e3a\u4f8b": 597, "\u6211\u4eec\u73b0\u5728\u8f7d\u5165\u5176\u4e2d\u4e00\u90e8\u5206\u6807\u7b7e": 597, "\u4f5c\u4e3a\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\u7684\u8d77\u59cb\u56fe": 597, "pathlib": 597, "\u5230\u8fd9\u91cc": 597, "\u6211\u4eec\u5df2\u7ecf\u8f7d\u5165\u4e86\u4e00\u5f20\u56fe": 597, "\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u518d\u6dfb\u52a0\u51e0\u4e2a\u6807\u7b7e": 597, "graph1": 597, "graph2": 597, "\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21": 597, "\u90fd\u4f1a\u4ea7\u751f\u4e00\u5f20\u65b0\u7684\u56fe": 597, "\u5728\u5e95\u5c42": 597, "\u4ed6\u4eec\u5171\u6709\u7684\u90e8\u5206\u4f1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58": 597, "\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5c06\u539f\u56fe\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd": 597, "\u5728\u67d0\u4e9b\u573a\u666f\u4e0b": 597, "\u6211\u4eec\u9700\u8981\u5c06\u4ece\u4e00\u5f20\u590d\u6742\u7684\u56fe\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u56fe": 597, "\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u501f\u52a9": 597, "\u6765\u5b8c\u6210": 597, "\u5305\u542b\u4e24\u4e2a\u53c2\u6570": 597, "\u5176\u503c\u4e3a\u4e00\u4e2a\u5b57\u5178": 597, "\u5b57\u5178\u7684\u952e\u662f\u6807\u7b7e\u540d": 597, "\u503c\u662f\u8981\u53d6\u7684\u5c5e\u6027\u7684\u5217\u8868": 597, "\u503c\u53ef\u4ee5\u4e3a": 597, "\u4ee3\u8868\u9009\u62e9\u6240\u6709\u7684\u5c5e\u6027": 597, "\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u5c5e\u6027\u56fe": 597, "\u5e76\u4e14\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65": 597, "\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50": 597, "\u5305\u542b\u4e00\u4e2a\u70b9\u6807\u7b7e": 597, "\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 597, "\u4ee5\u53ca\u6240\u9009\u62e9\u7684\u5c5e\u6027": 597, "sub_graph2": 597, "\u73b0\u5728\u70b9\u4e0a\u6ca1\u6709\u5c5e\u6027": 597, "\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5c5e\u6027": 597, "\u5f53\u6267\u884c\u4e00\u4e2a\u4ec5\u53ef\u4ee5\u8dd1\u5728\u7b80\u5355\u56fe\u4e0a\u7684\u7b97\u6cd5\u65f6": 597, "\u5176\u4f1a\u9ed8\u8ba4\u5c06\u5176\u53c2\u6570\u4e2d\u7684\u5c5e\u6027\u56fe\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 597, "\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362": 597, "\u5373\u591a\u4e8e\u4e00\u4e2a\u70b9\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 597, "\u6216\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 597, "\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519": 597, "\u8f6c\u6362\u4e0d\u5408\u6cd5": 597, "\u591a\u4e8e\u4e00\u4e2a\u70b9": 597, "\u8fb9\u6807\u7b7e": 597, "\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 597, "\u4e0a\u4e00\u6b65\u7b97\u6cd5\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u88ab\u52a0\u5165\u4e00\u5f20\u56fe\u4e2d": 597, "\u4f5c\u4e3a\u70b9\u7684\u4e00\u4e2a\u5c5e\u6027": 597, "\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u5165\u8fd0\u7b97\u7ed3\u679c\u5230\u76f4\u63a5\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 597, "\u8fd8\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u67e5\u8be2\u7ed3\u679c\u52a0\u5230\u88ab": 597, "\u800c\u5f97\u5230\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 597, "\u53ea\u8981\u88ab\u52a0\u5165\u5c5e\u6027\u7684\u70b9\u6807\u7b7e\u76f8\u540c": 597, "\u662f\u963f\u91cc\u5df4\u5df4\u8fbe\u6469\u9662\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u53d1\u5e76\u5f00\u6e90\u7684\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u5e73\u53f0": 598, "\u4f9d\u6258\u4e8e\u963f\u91cc\u6d77\u91cf\u6570\u636e\u548c\u4e30\u5bcc\u573a\u666f": 598, "\u4e0e\u8fbe\u6469\u9662\u7684\u9ad8\u6c34\u5e73\u7814\u7a76": 598, "\u81f4\u529b\u4e8e\u9488\u5bf9\u5b9e\u9645\u751f\u4ea7\u573a\u666f\u4e2d\u56fe\u8ba1\u7b97\u7684\u6311\u6218": 598, "\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848": 598, "\u63d0\u4f9b\u4e86": 598, "\u80fd\u5341\u5206\u65b9\u4fbf\u7684\u5bf9\u63a5\u4e0a\u4e0b\u6e38\u5de5\u4f5c\u6d41": 598, "\u5177\u6709\u4e00\u7ad9\u5f0f": 598, "\u5f00\u53d1\u4fbf\u6377": 598, "\u6027\u80fd\u6781\u81f4\u7b49\u7279\u70b9": 598, "\u5b83\u6574\u5408\u4e86\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u591a\u4e2a\u91cd\u8981\u7684\u521b\u65b0\u6027\u6280\u672f": 598, "\u5305\u62ec": [598, 601], "\u652f\u6301\u4e86\u56fe\u5206\u6790": 598, "\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u5b66\u4e60": 598, "\u5176\u4e2d\u6838\u5fc3\u4f18\u52bf\u5305\u62ec\u5728\u4e1a\u754c\u9996\u6b21\u652f\u6301\u4e86": 598, "\u5206\u5e03\u5f0f\u7f16\u8bd1\u4f18\u5316": 598, "\u652f\u6301\u4e86\u7b97\u6cd5\u7684\u81ea\u52a8\u5e76\u884c\u5316": 598, "\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u573a\u666f\u4e0b\u7684\u6781\u81f4\u6027\u80fd\u7b49": 598, "\u5728\u963f\u91cc\u5df4\u5df4\u5185\u5916\u90e8\u5e94\u7528\u4e2d": 598, "\u5df2\u7ecf\u8bc1\u660e\u5728\u591a\u4e2a\u5173\u952e\u4e92\u8054\u7f51\u9886\u57df": 598, "\u5982\u98ce\u63a7": 598, "\u7535\u5546\u63a8\u8350": 598, "\u5e7f\u544a": 598, "\u7f51\u7edc\u5b89\u5168": [598, 601], "\u77e5\u8bc6\u56fe\u8c31\u7b49": 598, "\u5b9e\u73b0\u4e86\u91cd\u8981\u7684\u4e1a\u52a1\u65b0\u4ef7\u503c": 598, "\u6574\u5408\u4e86\u8fbe\u6469\u9662\u7684\u591a\u9879\u5b66\u672f\u7814\u7a76\u6210\u679c": 598, "\u5176\u4e2d\u7684\u6838\u5fc3\u6280\u672f\u66fe\u83b7\u5f97\u6570\u636e\u5e93\u9886\u57df\u9876\u7ea7\u5b66\u672f\u4f1a\u8bae": 598, "\u6700\u4f73\u8bba\u6587\u5956": 598, "vldb2017": 598, "\u6700\u4f73\u6f14\u793a\u5956": 598, "vldb2020": 598, "\u6700\u4f73\u8bba\u6587\u5956\u4e9a\u519b": 598, "\u4e16\u754c\u4eba\u5de5\u667a\u80fd\u521b\u65b0\u5927\u8d5bsail\u5956\u7b49": 598, "\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce\u7684\u8bba\u6587\u5df2\u88ab": 598, "2021\u5f55\u7528": 598, "\u8fd8\u6709\u5176\u5b83\u56f4\u7ed5": 598, "\u7684\u5341\u591a\u9879\u7814\u7a76\u6210\u679c\u53d1\u8868\u5728\u9886\u57df\u9876\u7ea7\u7684\u5b66\u672f\u4f1a\u8bae\u6216\u671f\u520a\u4e0a": 598, "kdd\u7b49": 598, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 598, "\u57fa\u4e8e": [598, 603], "\u793a\u4f8b": 598, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 598, "\u521b\u5efa\u4f1a\u8bdd": 598, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 598, "\u56fe\u5206\u6790": 598, "\u56fe\u795e\u7ecf\u7f51\u7edc": 598, "\u5173\u95ed\u4f1a\u8bdd": 598, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 598, "\u5728aw": 598, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 598, "\u672c\u5730\u90e8\u7f72graphscop": 598, "\u5165\u95e8\u6559\u7a0b": 598, "\u8bba\u6587\u5f15\u7528\u5173\u7cfb\u7f51\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [598, 603], "\u4f7f\u7528\u517c\u5bb9": [598, 603], "\u8fdb\u884c\u56fe\u64cd\u4f5c": [598, 603], "\u7528": [598, 600, 603], "\u50cf": [598, 603], "\u4e00\u6837\u8fdb\u884c\u56fe\u5206\u6790": [598, 603], "\u8f7d\u5165\u56fe\u6570\u636e": [598, 603], "\u5185\u7f6e\u7684\u56fe\u5206\u6790\u7b97\u6cd5": [598, 603], "\u7f16\u5199\u81ea\u5b9a\u4e49\u56fe\u5206\u6790\u7b97\u6cd5": [598, 603], "\u4f7f\u7528\u67e5\u8be2\u8bed\u8a00": [598, 603], "\u8fdb\u884c\u4ea4\u4e92\u5f0f\u67e5\u8be2": [598, 603], "\u8fdb\u884c\u65e0\u76d1\u7763\u56fe\u5b66\u4e60": [598, 603], "bipartitegraphsag": [598, 603], "\u7684\u4e8c\u90e8\u56fe\u65e0\u76d1\u7763\u5b66\u4e60": [598, 603], "\u8fdb\u884c\u6709\u76d1\u7763\u56fe\u5b66\u4e60": [598, 603], "\u73af\u5883\u518d\u63a2\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [598, 603], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 598, "\u624b\u52a8\u914d\u7f6e\u56fe": 598, "\u9ad8\u7ea7\u7528\u6cd5": 598, "\u4ece": [598, 600], "\u4e2d\u8f7d\u56fe": 598, "\u7684\u53d8\u79cd": 598, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 598, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 598, "\u6295\u5f71": 598, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 598, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 598, "\u5185\u7f6e\u7b97\u6cd5": 598, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 598, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 598, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 598, "\u4e2d\u7684\u51fd\u6570": 598, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 598, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 598, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 598, "\u5229\u7528python": 598, "\u8fde\u63a5graphscop": 598, "\u5229\u7528java": 598, "\u5f00\u53d1\u63a7\u5236\u53f0": 598, "gremlin\u7f16\u7a0b\u5165\u95e8": 598, "gremlin\u517c\u5bb9\u6027": 598, "\u5bf9\u6bd4tinkerpop": 598, "\u56fe\u5b66\u4e60\u6a21\u578b": 598, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 598, "\u5e38\u89c1\u95ee\u9898": 598, "\u5f00\u53d1\u8005\u6307\u5357": 598, "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 598, "\u6784\u5efa": 598, "\u4ee3\u7801\u98ce\u683c": 598, "\u76ee\u524d\u652f\u6301\u7684\u5e73\u53f0\u5982\u4e0b": 599, "monterei": 599, "\u7a0b\u5e8f\u5305": 599, "\u7684\u5f62\u5f0f\u53d1\u5e03": 599, "\u53ef\u76f4\u63a5\u901a\u8fc7": 599, "\u9700\u8981\u6ee1\u8db3": 599, "\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u672c\u6587\u6863\u7684\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\u4e00\u4e2a\u672c\u5730": 599, "\u5e76\u52a0\u8f7d\u9884\u7f16\u8bd1\u597d\u7684\u955c\u50cf": 599, "\u73af\u5883\u4e0b\u8fd0\u884c": 599, "\u9996\u5148\u9700\u8981\u9884\u5148\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56": 599, "\u7684\u7528\u6237": 599, "\u53ef\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u6765\u5b89\u88c5\u4e0a\u8ff0\u4f9d\u8d56": 599, "\u5e76\u5728": 599, "\u4e2d\u5f00\u542f": 599, "\u529f\u80fd": 599, "\u53d1\u884c\u7248\u7528\u6237": 599, "\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528": 599, "\u90e8\u7f72\u4e00\u4e2a\u672c\u5730\u7684": 599, "\u7684\u5b89\u88c5\u548c\u90e8\u7f72\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\u7684": 599, "\u60a8\u4e5f\u53ef\u4ee5\u5728": 599, "\u4e0a\u5b89\u88c5": 599, "wsl2": 599, "\u6765\u6a21\u62df": 599, "\u73af\u5883": [599, 603], "\u63a5\u4e0b\u6765": [599, 600, 601], "\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7": 599, "graphscope\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce": 600, "\u7b80\u79f0gie": 600, "\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf": 600, "\u5b83\u4e3a\u4e0d\u540c\u7ecf\u9a8c\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u7528\u7684\u4ea4\u4e92\u5f0f\u73af\u5883": 600, "\u652f\u6301\u6d77\u91cf\u590d\u6742\u56fe\u6570\u636e\u4e0a\u7684": 600, "\u5b9e\u65f6\u5206\u6790\u4e0e\u4ea4\u4e92\u63a2\u7d22": 600, "\u8be5\u5f15\u64ce\u652f\u6301": 600, "\u8bed\u8a00\u8868\u8fbe\u7684\u4ea4\u4e92\u56fe\u67e5\u8be2": 600, "\u5e76\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u548c\u7528\u6237\u900f\u660e\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u6267\u884c": 600, "\u662f\u57fa\u4e8egremlin\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u56fe\u5e94\u7528\u7684\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\u548c\u4e8b\u5b9e\u6807\u51c6": 600, "gie\u901a\u8fc7tinkerpop\u63d0\u4f9b\u7684": 600, "\u63a5\u53e3": [600, 601], "\u5b9e\u73b0\u4e86\u4e0etinkerpop\u751f\u6001\u65e0\u7f1d\u96c6\u6210": 600, "\u4ece\u800c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u8bf8\u5982": 600, "\u7684\u5f00\u53d1\u5de5\u5177\u6216\u901a\u8fc7java\u548cpython\u7b49\u591a\u79cd\u8bed\u8a00\u63a5\u53e3\u7f16\u5199\u5e94\u7528\u903b\u8f91": 600, "\u5982\u4e0b\u6240\u793a": 600, "\u7528\u6237\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7python\u8fde\u4e0a\u4e00\u4e2a\u8f7d\u5165graphscope\u7cfb\u7edf\u7684\u56fe\u5e76\u53d1\u8d77gremlin\u67e5\u8be2": 600, "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ea4\u4e92\u4f1a\u8bdd": 600, "\u8f7d\u5165ldbc\u793a\u4f8b\u56fe\u6570\u636e": 600, "\u968f\u540e\u8fd4\u56de\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 600, "\u4e0b\u9762\u4e24\u53e5gremlin\u793a\u4f8b\u67e5\u8be2\u5206\u522b\u8ba1\u7b97\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570": 600, "\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684": 600, "\u5bf9\u8c61\u4e8b\u5b9e\u4e0a\u662fpython\u7c7b": 600, "\u7684\u4e00\u4e2a\u5b9e\u4f8b": 600, "\u800c\u8fd9\u4e00\u7c7b\u5c01\u88c5\u4e86\u7528python\u5b9e\u73b0\u7684\u5b8c\u6574gremlin\u5ba2\u6237\u7aef\u7c7b\u5e93": 600, "\u6bcf\u4e00\u4e2a\u8f7d\u5165graphscope\u7684\u56fe\u90fd\u5305\u542b\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 600, "\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u83b7\u5f97\u5177\u4f53\u7684\u8bbf\u95ee\u5730\u5740": 600, "\u4e0a\u9762\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u5982\u4e0b": 600, "\u683c\u5f0f": 600, "\u7684\u8f93\u51fa": 600, "\u6709\u4e86\u8fd9\u4e00url\u4fe1\u606f": 600, "\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528gremlin": 600, "python\u8bbf\u95ee\u56fe\u6570\u636e": 600, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 600, "\u5b98\u65b9\u6587\u6863": 600, "tinkerpop\u540c\u65f6\u652f\u6301java\u8bed\u8a00\u6309\u7c7b\u4f3c\u65b9\u5f0f\u8bbf\u95ee": 600, "\u8be6\u89c1gremlin": 600, "java\u7684": 600, "\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0egraphscope\u5b58\u50a8\u7684\u56fe\u6570\u636e\u8fdb\u884c\u4ea4\u4e92\u7684\u63a7\u5236\u53f0": 600, "\u4e5f\u53eb\u505arepl\u73af\u5883": 600, "\u4e0b\u9762\u63cf\u8ff0\u5982\u4f55\u5229\u7528\u4e0a\u6587\u83b7\u5f97\u7684url": 600, "\u5b89\u88c5\u548c\u914d\u7f6egremlin": 600, "console\u4ee5\u8fde\u63a5graphscope\u7684\u6b65\u9aa4": 600, "\u5b89\u88c5gremlin": 600, "console\u4f9d\u8d56\u7684java\u8fd0\u884c\u65f6\u73af\u5883": 600, "\u7248\u672c\u9700\u8981\u6ee1\u8db3": 600, "\u4e0b\u8f7d\u9002\u5f53\u7248\u672c\u7684gremlin": 600, "\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684\u6587\u4ef6": 600, "\u8fdb\u5165\u89e3\u538b\u7f29\u7684\u76ee\u5f55": 600, "\u5b50\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 600, "\u7684\u6587\u672c\u6587\u4ef6\u4ee5\u914d\u7f6eurl": 600, "\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u793a": 600, "\u5176\u4e2d\u7684": 600, "\u9700\u8981\u5206\u522b\u66ff\u6362\u4e3a\u4ecegraphscope\u4f1a\u8bdd\u5f97\u5230\u7684url\u4e2d\u5bf9\u5e94\u7684\u4e3b\u673a\u540d": 600, "\u6216ip": 600, "\u548c\u7aef\u53e3": 600, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u542f\u52a8gremlin": 600, "\u63d0\u793a\u7b26\u4e0b": 600, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u8fde\u63a5\u5230\u5bf9\u5e94\u7684graphscope\u4f1a\u8bdd": 600, "\u7b2c\u4e8c\u6761\u547d\u4ee4\u5207\u6362\u5230\u8fdc\u7a0b\u6a21\u5f0f": 600, "\u4ece\u800c\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u6240\u6709gremlin\u67e5\u8be2\u90fd\u88ab\u81ea\u52a8\u4f20\u8f93\u5230": 600, "\u8fdc\u7a0b": 600, "graphscope\u6267\u884c": 600, "\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684gremlin\u67e5\u8be2\u4e86": 600, "\u5f53\u4f60\u5b8c\u6210\u4ea4\u4e92": 600, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u53ef\u4ee5\u9000\u51fagremlin": 600, "gie\u4ee5\u5fe0\u5b9e\u4fdd\u7559gremlin\u7f16\u7a0b\u6a21\u578b\u4e3a\u8bbe\u8ba1\u76ee\u6807": 600, "\u4ece\u800c\u8ba9\u5df2\u6709\u7684\u5e94\u7528\u53ea\u9700\u6700\u5c0f\u5316\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u89c4\u6a21\u8ba1\u7b97\u96c6\u7fa4": 600, "\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2agremlin\u7684\u603b\u4f53\u4ecb\u7ecd": 600, "\u7279\u522b\u662f\u5176\u4e2d\u5305\u542b\u7684\u56fe\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u7b49\u5173\u952e\u6982\u5ff5": 600, "\u66f4\u8be6\u7ec6\u548c\u5b8c\u6574\u7684\u4ecb\u7ecd": 600, "gremlin\u5141\u8bb8\u7528\u6237\u5728\u5c5e\u6027\u56fe\u6a21\u578b\u4e0a\u5b9a\u4e49\u7279\u8bbe": 600, "hoc": 600, "\u904d\u5386\u67e5\u8be2": 600, "\u4e00\u4e2a\u5c5e\u6027\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe": 600, "\u5176\u4e2d\u7684\u9876\u70b9\u548c\u8fb9\u53ef\u4ee5\u62e5\u6709\u4e00\u7ec4\u5c5e\u6027": 600, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61": 600, "\u70b9\u6216\u8fb9": 600, "\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6": 600, "\u548c\u4e00\u4e2a\u7c7b\u522b\u540d\u79f0": 600, "\u6307\u5b9a\u5176\u7c7b\u578b\u6216\u89d2\u8272": 600, "\u6bcf\u4e2a\u5c5e\u6027\u662f\u4e00\u4e2a\u5305\u542b\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u7684": 600, "\u952e": 600, "\u503c": 600, "\u5bf9": 600, "\u5176\u6240\u5c5e\u5bf9\u8c61\u7684": 600, "\u52a0\u4e0a\u5c5e\u6027\u540d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5c5e\u6027\u503c": 600, "\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5c5e\u6027\u56fe\u6a21\u578b\u793a\u4f8b": 600, "\u5b83\u5305\u542b": 600, "\u7528\u6237": 600, "\u5546\u54c1": 600, "\u5730\u5740": 600, "\u4e09\u7c7b\u70b9": 600, "\u5b83\u4eec\u901a\u8fc7": 600, "\u8d2d\u4e70": 600, "\u9012\u9001": 600, "belongs_to": 600, "\u5c5e\u4e8e": 600, "home_of": 600, "\u5bb6\u5ead\u5730\u5740": 600, "\u56db\u7c7b\u8fb9\u76f8\u4e92\u5173\u8054": 600, "\u56fe\u4e2d\u865a\u7ebf\u5c55\u793a\u7684\u4e00\u6761": 600, "\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684": 600, "\u8def\u5f841": 600, "\u4ee3\u8868\u4e86\u4e00\u4e2a\u7528\u6237": 600, "\u4e70\u5bb6": 600, "tom": 600, "\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5356\u5bb6": 600, "jack": 600, "\u63d0\u4f9b\u7684\u6807\u4ef7": 600, "\u7684\u5546\u54c1": 600, "gift": 600, "\u4e00\u4e2agremlin\u67e5\u8be2\u6216\u56fe\u904d\u5386\u7684\u6267\u884c": 600, "\u53ef\u4ee5\u7528\u4e00\u7ec4": 600, "\u904d\u5386\u5668": 600, "\u6807\u8bc6": 600, "\u5b83\u4eec\u4f9d\u636egremlin\u67e5\u8be2\u63d0\u4f9b\u7684\u7528\u6237\u6307\u4ee4\u5728\u8f93\u5165\u56fe\u4e2d\u6e38\u8d70": 600, "\u6700\u7ec8\u6240\u6709\u505c\u6b62\u7684\u904d\u5386\u5668\u96c6\u5408": 600, "\u5305\u542b\u5b83\u4eec\u7684\u4f4d\u7f6e": 600, "\u4ee3\u8868\u4e86\u67e5\u8be2\u7684\u7ed3\u679c": 600, "\u4e00\u4e2a\u904d\u5386\u5668\u662fgremlin\u5f15\u64ce\u5904\u7406\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143": 600, "\u6bcf\u4e2a\u904d\u5386\u5668\u90fd\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u56fe\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e": 600, "\u53ef\u4ee5\u662f\u88ab\u8bbf\u95ee\u7684\u70b9": 600, "\u8fb9\u6216\u5c5e\u6027": 600, "\u53ef\u9009\u7684\u5b83\u4e5f\u53ef\u4ee5\u5305\u542b\u8d70\u8fc7\u7684\u5b8c\u6574\u8def\u5f84\u5386\u53f2\u751a\u81f3\u5e94\u7528\u72b6\u6001": 600, "gremlin\u8bed\u8a00\u4e30\u5bcc\u7075\u6d3b\u7684\u8868\u8fbe\u80fd\u529b\u4e3b\u8981\u6765\u81ea\u4e8e\u5b83\u5bf9": 600, "\u5d4c\u5957\u904d\u5386": 600, "\u7684\u652f\u6301": 600, "\u5b83\u5141\u8bb8\u4e00\u4e2a": 600, "\u5b50": 600, "\u67e5\u8be2\u6216\u904d\u5386\u88ab\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d": 600, "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u88ab\u5305\u88f9\u64cd\u4f5c\u7528\u4e8e\u5904\u7406\u5176\u6bcf\u4e00\u4e2a\u8f93\u5165": 600, "\u51fd\u6570\u7684\u58f0\u660e\u548c\u4f5c\u7528\u90fd\u7531\u5305\u88f9\u64cd\u4f5c\u7684\u8bed\u4e49\u51b3\u5b9a": 600, "\u8fc7\u6ee4": 600, "\u64cd\u4f5c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u67e5\u8be2": 600, "\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u8c13\u8bcd": 600, "\u800c": 600, "\u6620\u5c04": 600, "\u6392\u5e8f": 600, "\u64cd\u4f5c\u5404\u81ea\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u67e5\u8be2\u8bb2\u6bcf\u4e00\u4e2a\u8f93\u5165\u5355\u72ec\u6620\u5c04\u5230\u4ece\u5b83\u5f00\u59cb\u7684\u5b50\u904d\u5386\u5f97\u5230\u7684\u7ed3\u679c": 600, "\u6216\u4f9d\u636e\u7ed3\u679c\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e": 600, "\u5d4c\u5957\u904d\u5386\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u8868\u8fbe\u5faa\u73af": 600, "\u5728gremlin\u4e2d\u901a\u8fc7": 600, "\u5faa\u73af": 600, "\u64cd\u4f5c\u548c\u968f\u540e\u7684": 600, "\u7ec8\u6b62\u6761\u4ef6": 600, "\u8868\u8fbe": 600, "\u64cd\u4f5c\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u904d\u5386\u4f5c\u4e3a\u5faa\u73af\u4f53": 600, "\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u4f1a\u91cd\u590d\u9001\u5165\u8fd9\u4e00\u5b50\u67e5\u8be2": 600, "\u76f4\u5230\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3": 600, "\u6761\u4ef6\u7ec8\u6b62": 600, "\u64cd\u4f5c\u7c7b\u4f3c": 600, "\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a\u6761\u4ef6\u8c13\u8bcd": 600, "\u5b83\u88ab\u72ec\u7acb\u5e94\u7528\u4e8e\u5faa\u73af\u4f53\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u904d\u5386\u5668": 600, "\u6ee1\u8db3\u6761\u4ef6\u7684\u904d\u5386\u5668\u5c31\u4f1a\u79bb\u5f00\u5faa\u73af": 600, "\u53e6\u4e00\u4e2a\u5e38\u7528\u7684": 600, "\u8fed\u4ee3\u8f6e\u6b21\u7ec8\u6b62": 600, "\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6574\u578b\u5e38\u91cf": 600, "\u8868\u8fbe\u56fa\u5b9a\u8fed\u4ee3\u8f6e\u6b21\u540e\u7ec8\u6b62\u5faa\u73af": 600, "\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684gremlin\u793a\u4f8b": 600, "\u5b83\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u8d26\u6237": 600, "\u70b9\u5f00\u59cb\u627e\u5230\u957f\u5ea6\u4e3a": 600, "\u7684\u6709\u5411\u73af\u8def": 600, "\u9996\u5148": [600, 602], "\u8f93\u5165\u56fe\u64cd\u4f5c": 600, "\u5305\u542b\u4e00\u4e2a": 600, "\u8868\u8fbe\u7684\u7b80\u5355\u8fc7\u6ee4": 600, "\u8fd4\u56de\u56fe\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684": 600, "\u70b9": 600, "\u5373\u552f\u4e00\u6807\u8bc6\u4e3a": 600, "\u7684\u70b9": 600, "\u7d27\u968f\u5176\u540e\u7684": 600, "\u64cd\u4f5c\u662f\u4e00\u4e2a": 600, "\u4fee\u9970\u7b26": 600, "\u5b83\u4e0d\u6539\u53d8\u8f93\u5165\u904d\u5386\u5668\u96c6\u5408": 600, "\u4f46\u5bf9\u5176\u4e2d\u6bcf\u4e00\u4e2a\u904d\u5386\u5668\u7684\u5f53\u524d\u4f4d\u7f6e": 600, "\u6253\u4e0a\u4e00\u4e2a\u6709\u540d\u6807\u7b7e": 600, "\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684": 600, "\u4ece\u800c\u4eca\u540e\u53ef\u4ee5\u5f15\u7528": 600, "\u67e5\u8be2\u6cbf\u7740": 600, "\u7c7b\u578b\u7684\u51fa\u8fb9\u5faa\u73af\u6e38\u8d70": 600, "\u6b21": 600, "\u8f93\u51fahops\u5728": 600, "\u8303\u56f4\u5185\u7684\u90bb\u70b9": 600, "\u4e14\u6bcf\u4e00\u6b21\u90fd\u8fc7\u6ee4\u6216\u8df3\u8fc7\u8def\u5f84\u4e2d\u7684\u91cd\u590d\u70b9": 600, "\u901a\u8fc7\u5728": 600, "\u5185\u914d\u7f6e": 600, "\u9009\u9879\u5b9e\u73b0": 600, "\u64cd\u4f5c\u68c0\u67e5\u6b64\u65f6\u904d\u5386\u8def\u5f84\u7684\u4e0b\u4e00\u8df3\u662f\u5426\u53ef\u4ee5\u56de\u5230\u8d77\u70b9": 600, "\u6307\u4ee3": 600, "\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a": 600, "\u7684\u73af": 600, "\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u73af": 600, "\u67e5\u8be2\u8fd8\u901a\u8fc7": 600, "\u64cd\u4f5c\u5c55\u793a\u6bcf\u4e2a\u904d\u5386\u5668\u7684\u5b8c\u6210\u8def\u5f84\u4fe1\u606f": 600, "\u64cd\u4f5c\u7c7b\u4f3csql\u4e2d\u7684top": 600, "\u5b83\u8868\u8fbe\u4e86\u67e5\u8be2\u7ed3\u679c\u4ec5\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u8def\u5f84": 600, "\u5982\u679c\u6709\u7684\u8bdd": 600, "gie\u652f\u6301apach": 600, "tinkerpop\u5b9a\u4e49\u7684\u5c5e\u6027\u56fe\u6a21\u578b\u548cgremlin\u904d\u5386\u67e5\u8be2": 600, "\u4e14\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0etinkerpop": 600, "3\u548c3": 600, "4\u7248\u672c\u517c\u5bb9\u7684": 600, "\u670d\u52a1\u63a5\u53e3": 600, "\u9664\u6b64\u4e4b\u5916": 600, "\u6211\u4eec\u6269\u5c55\u4e86\u4e00\u4e9b\u8bed\u6cd5\u7cd6\u6765\u8fdb\u4e00\u6b65\u5f15\u5165\u4e00\u4e9b\u7b80\u6d01\u660e\u4e86\u7684expression\u8868\u793a": 600, "\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u5f53\u524d\u5b9e\u73b0\u548capach": 600, "tinkerpop\u89c4\u8303\u7684\u4e3b\u8981\u5dee\u4e00\u70b9": 600, "\u5176\u4e2d\u4e00\u4e9b\u5dee\u5f02\u4f1a\u6709\u673a\u4f1a\u6d88\u9664": 600, "\u53e6\u4e00\u4e9b\u662f\u76ee\u524dgraphscope\u5b9a\u4f4d\u7684\u573a\u666f\u5dee\u5f02\u9020\u6210\u7684\u4e0d\u540c\u8bbe\u8ba1\u9009\u62e9": 600, "\u76ee\u524d\u7684": 600, "\u6280\u672f\u9884\u89c8\u7248\u5229\u7528\u4e86": 600, "\u9879\u76ee\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5b58\u50a8\u4f5c\u4e3a\u8f93\u5165\u56fe": 600, "\u5b83\u652f\u6301\u4e00\u6b21\u8f7d\u5165": 600, "\u4e0d\u53ef\u4fee\u6539": 600, "\u7684\u56fe\u6a21\u578b\u6570\u636e": 600, "\u548c\u56fe\u5206\u7247\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4": 600, "\u5f53\u524d\u8bbe\u8ba1\u6709\u4e0b\u9762\u7684\u4e00\u4e9b\u9650\u5236": 600, "\u7ea6\u675f": 600, "\u6bcf\u4e2a\u56fe\u7684\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e8b\u5148\u5b9a\u4e49\u7684schema": 600, "\u5305\u62ec\u70b9": 600, "\u8fb9\u7684\u7c7b\u578b\u540d\u79f0": 600, "\u548c\u5c5e\u6027\u540d\u53ca\u503c\u7c7b\u578b": 600, "\u4e3b\u952e\u7ea6\u675f": 600, "\u6bcf\u4e2a\u9876\u70b9\u7c7b\u578b\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u4e3b\u952e": 600, "\u540c\u65f6\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u5bf9\u8c61": 600, "\u81ea\u52a8\u5206\u914d\u4ea7\u751f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u552f\u4e00\u6807\u8bc6": 600, "\u5bf9\u4e8e\u70b9\u6765\u8bf4": 600, "id\u7f16\u7801\u4e86\u7c7b\u578b": 600, "\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u952e\u4fe1\u606f": 600, "\u6bcf\u4e2a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027": 600, "\u53ef\u4ee5\u5305\u542b\u4e0b\u5217\u7c7b\u578b\u7684\u5c5e\u6027\u503c": 600, "\u56e0\u4e3a\u7cfb\u7edf\u7684\u5168\u5206\u5e03\u5f0f\u53ef\u6269\u5c55\u67b6\u6784": 600, "\u5f53\u524d\u5b9a\u4f4d\u7684\u573a\u666f\u548c\u5b9e\u73b0\u4e0d\u652f\u6301\u4e0b\u5217\u529f\u80fd": 600, "\u56fe\u4fee\u6539\u64cd\u4f5c": 600, "lambda\u548cgroovy\u8868\u8fbe\u5f0f\u6216\u81ea\u5b9a\u4e49\u51fd\u6570": 600, "\u7b49\u8868\u8fbe\u5f0f\u6216java\u8c03\u7528\u7b49\u7b49": 600, "\u5b9a\u5236gremlin\u56fe\u904d\u5386\u7b56\u7565": 600, "\u5373\u67e5\u8be2\u4f18\u5316\u7531graphscope\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210": 600, "\u4e8b\u52a1": 600, "\u4e8c\u7ea7\u7d22\u5f15\u76ee\u524d\u5c1a\u672a\u652f\u6301": 600, "\u7528\u6237\u5b9a\u4e49\u7684\u4e3b\u952e\u4f1a\u88ab\u81ea\u52a8\u7d22\u5f15": 600, "\u5f53\u524dgraphscope\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 600, "\u548c\u793a\u4f8b\u7528\u6cd5": 600, "\u8f93\u5165\u56fe": 600, "labelname1": 600, "labelname2": 600, "\u901a\u8fc7expression\u5b9e\u73b0\u8fc7\u6ee4": 600, "\u8bed\u6cd5\u7cd6": 600, "\u4ee3\u8868head\u8282\u70b9\u7684age\u5c5e\u6027": 600, "\u4ee3\u8868": 600, "\u8282\u70b9\u7684age\u5c5e\u6027": 600, "head\u8282\u70b9\u7684a\u5c5e\u6027\u662f\u6574\u6570\u6570\u7ec4\u7c7b\u578b": 600, "\u901a\u8fc7expression\u5b9e\u73b0\u4f4d\u8fd0\u7b97": 600, "head\u8282\u70b9\u7684number\u5c5e\u6027\u662f\u6574\u578b": 600, "\u901a\u8fc7expression\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97": 600, "head\u8282\u70b9\u7684number\u548cage\u5c5e\u6027\u90fd\u662f\u6574\u578b": 600, "\u901a\u8fc7expression\u5b9e\u73b0\u6307\u6570\u8fd0\u7b97": 600, "dedup": 600, "aaa": 600, "otherv": 600, "flatmap": 600, "\u591a\u91cd\u6620\u5c04": 600, "bothv": 600, "\u627e\u5230\u6240\u6709\u4ece": 600, "\u5f00\u59cb\u901a\u8fc7": 600, "\u8fb9\u7c7b\u578b\u5411\u5916\u6269\u5c55": 600, "\u8df3\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84": 600, "\u70b9\u4e0d\u91cd\u590d": 600, "\u5e76\u4e14\u53ea\u4fdd\u5b58path\u7684\u6700\u672b\u7aef\u70b9": 600, "\u8df3\u7684\u6240\u6709\u4efb\u610f\u8def\u5f84": 600, "\u70b9\u53ef\u91cd\u590d": 600, "valuemap": 600, "\u8f93\u51fa\u6240\u6709\u5c5e\u6027": 600, "\u805a\u5408": 600, "groupbi": 600, "groupby\u591a\u4e2akei": 600, "\u5e76\u4e14\u4e3a\u6bcf\u4e2akey\u8bbe\u7f6e\u522b\u540d": 600, "groupby\u591a\u4e2avalu": 600, "\u5e76\u4e14\u4e3a\u6bcf\u4e2avalue\u8bbe\u7f6e\u522b\u540d": 600, "\u5373\u53d6\u524dk\u4e2a\u7ed3\u679c": 600, "graphscope\u6682\u65f6\u4e0d\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 600, "\u4f1a\u9010\u6b65\u652f\u6301": 600, "\u53ef\u4ee5\u901a\u8fc7path": 600, "expansion\u8bed\u6cd5\u7cd6\u5b9e\u73b0": 600, "\u57fa\u4e8e\u96c6\u5408\u7684local\u8ba1\u7b97": 600, "\u67e5\u8be2\u8ba1\u5212\u89e3\u91ca": 600, "\u67e5\u8be2\u6267\u884c\u6027\u80fd\u5206\u6790": 600, "\u81ea\u5b9a\u4e49\u72b6\u6001\u8ba1\u7b97": 600, "\u8ba1\u7b97\u5b50\u56fe": 600, "\u76ee\u524d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 600, "\u652f\u6301\u62bd\u53d6\u5b50\u56fe\u5199\u5165vineyard\u5b58\u50a8": 600, "cap": 600, "\u8bbf\u95ee\u81ea\u5b9a\u4e49\u72b6\u6001": 600, "\u4f8b\u5982pagerank\u548cshortestpath": 600, "\u8fd9\u90e8\u5206\u529f\u80fdgraphscope\u901a\u8fc7\u56fe\u5206\u6790\u5f15\u64ce\u548cnetworkx\u517c\u5bb9\u63a5\u53e3\u63d0\u4f9b": 600, "graphscope\u4e2d\u7684\u56fe\u5b66\u4e60\u5f15\u64ce": 601, "\u662f\u9762\u5411\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u53d1\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u6846\u67b6": 601, "\u5b83\u4ece\u5b9e\u9645\u95ee\u9898\u51fa\u53d1": 601, "\u63d0\u70bc\u548c\u62bd\u8c61\u4e86\u4e00\u5957\u9002\u5408\u4e8e\u5f53\u4e0b\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u7f16\u7a0b\u8303\u5f0f": 601, "\u5e76\u5df2\u7ecf\u6210\u529f\u5e94\u7528\u5728\u963f\u91cc\u5df4\u5df4": 601, "\u5185\u90e8\u7684\u8bf8\u5982\u641c\u7d22\u63a8\u8350": 601, "\u77e5\u8bc6\u56fe\u8c31\u7b49\u4f17\u591a\u573a\u666f": 601, "gl\u6ce8\u91cd\u53ef\u79fb\u690d\u548c\u53ef\u6269\u5c55": 601, "\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u4e3a\u53cb\u597d": 601, "\u4e3a\u4e86\u5e94\u5bf9gnn\u5728\u5de5\u4e1a\u573a\u666f\u4e2d\u7684\u591a\u6837\u6027\u548c\u5feb\u901f\u53d1\u5c55\u7684\u9700\u6c42": 601, "\u57fa\u4e8egl": 601, "\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cdgnn\u7b97\u6cd5": 601, "\u6216\u8005\u9762\u5411\u5b9e\u9645\u573a\u666f\u5b9a\u5236\u5316\u4e00\u79cd\u56fe\u7b97\u5b50": 601, "\u4f8b\u5982\u56fe\u91c7\u6837": 601, "\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5165\u95e8\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528": 601, "\u6765\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684cnn\u6a21\u578b": 601, "\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5b9e\u73b0\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f": 601, "\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ee5\u5168\u56fe\u4e3a\u8ba1\u7b97\u5bf9\u8c61": 601, "\u539f\u59cb\u7684gcn": 601, "gat\u7b49\u7b97\u6cd5\u90fd\u662f\u8fd9\u79cd\u5b9e\u73b0\u601d\u8def": 601, "\u4e00\u822c\u4f1a\u76f4\u63a5\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u8ba1\u7b97": 601, "\u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5927\u89c4\u6a21\u56fe\u4e0a\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58": 601, "\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u8bad\u7ec3\u751a\u81f3\u65e0\u6cd5\u8bad\u7ec3": 601, "\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u5c06\u5168\u56fe\u5206\u6210\u82e5\u5e72\u5b50\u56fe": 601, "\u7528\u6df1\u5ea6\u5b66\u4e60\u91cc\u5e38\u7528\u7684\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3": 601, "\u6bcf\u6b21\u8bad\u7ec3\u4e00\u4e2a\u5b50\u56fe": 601, "\u4ee3\u8868\u65b9\u6cd5\u662fgraphsag": 601, "graphsaint\u7b49": 601, "\u4e3b\u8981\u9762\u5411\u8d85\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u53d1": 601, "\u5b83\u7531\u5e95\u5c42\u7684\u4e00\u4e2a\u56fe\u5f15\u64ce\u548c\u4e0a\u5c42\u7684": 601, "\u7b97\u6cd5\u6a21\u578b\u6784\u6210": 601, "\u56fe\u5f15\u64ce\u5206\u5e03\u5f0f\u5b58\u50a8\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4fe1\u606f\u5e76\u63d0\u4f9b\u9ad8\u6548\u7684\u56fe\u91c7\u6837\u67e5\u8be2": 601, "\u7b97\u6cd5\u6a21\u578b\u901a\u8fc7\u8c03\u7528\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u63a5\u53e3\u83b7\u53d6\u5b50\u56fe\u5e76\u8fdb\u884c\u8ba1\u7b97": 601, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u7edf\u4e00\u7f16\u7a0b\u6846\u67b6": 601, "\u652f\u6301\u5e38\u89c1\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1": 601, "\u77e5\u8bc6\u56fe\u8c31\u6a21\u578b": 601, "\u56fe\u5d4c\u5165\u7b97\u6cd5\u7b49": 601, "\u5e76\u4e14\u548c\u4e3b\u6d41\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u517c\u5bb9": 601, "\u5305\u62ectensorflow": 601, "\u548cpytorch": 601, "\u76ee\u524d\u6211\u4eec\u5b9e\u73b0\u4e86\u57fa\u4e8etensorflow\u7684\u6a21\u578b": 601, "\u57fa\u4e8epytorch\u7684\u6a21\u578b\u6b63\u5728\u5f00\u53d1\u4e2d": 601, "\u91c7\u7528\u91c7\u6837\u5b50\u56fe\u518d\u8ba1\u7b97\u7684\u65b9\u5f0f\u6784\u5efa\u548c\u8bad\u7ec3\u6a21\u578b": 601, "\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b": 601, "\u662f\u56fe\u5b66\u4e60\u7b97\u6cd5\u7f16\u7a0b\u7684\u57fa\u672c\u6570\u636e\u5bf9\u8c61": 601, "\u5b83\u7531\u4e00\u4e2abatch\u7684\u79cd\u5b50\u70b9\u6216\u8005\u8fb9": 601, "\u79f0\u4e3a": 601, "\u4ee5\u53ca\u4ed6\u4eec\u7684": 601, "\u611f\u53d7\u91ce": 601, "\u591a\u8df3\u90bb\u5c45": 601, "\u7ec4\u6210": 601, "\u7531\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u5230\u7684\u6570\u636e\u7ec4\u6210": 601, "\u6211\u4eec\u5b9e\u73b0": 601, "\u4e86\u5e38\u89c1\u7684\u90bb\u5c45\u91c7\u6837": 601, "\u56fe\u904d\u5386\u548c\u8d1f\u91c7\u6837\u65b9\u6cd5": 601, "\u91c7\u6837\u7684\u6570\u636e\u7ec4\u7ec7\u6210numpy\u683c\u5f0f\u7684": 601, "\u540e\u6839\u636e\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u8f6c\u6362\u6210\u5bf9\u5e94\u7684tensor\u683c\u5f0f": 601, "\u7136\u540e\u7528": 601, "\u7ba1\u7406": 601, "\u5230": 601, "\u7684\u8f6c\u6362": 601, "\u63d0\u4f9b\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e": 601, "\u6240\u6709\u7684\u56fe\u5b66\u4e60\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4f7f\u7528\u7f16\u7801\u5668\u5c06": 601, "\u7f16\u7801\u6210\u6700\u7ec8\u7684\u70b9": 601, "\u8fb9\u6216\u8005\u5b50\u56fe\u7684": 601, "\u5411\u91cf": 601, "\u9996\u5148\u5229\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7684\u70b9\u548c\u8fb9\u4e0a\u7684\u7279\u5f81": 601, "\u7136\u540e\u5c06\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u540e\u7684": 601, "\u539f\u59cb\u5411\u91cf\u7528\u4e0d\u540c\u7684\u56fe\u7f16\u7801\u5668\u8fdb\u884c\u7f16\u7801": 601, "\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa": 601, "\u5bf9\u4e8e\u5927\u591a\u6570gnn\u6a21\u578b": 601, "\u56fe\u7f16\u7801\u5668": 601, "\u63d0\u4f9b\u4e86\u5982\u4f55\u805a\u5408\u90bb\u5c45\u4fe1\u606f\u5230\u81ea\u8eab\u8282\u70b9\u6216\u8005\u8fb9\u7684\u62bd\u8c61": 601, "\u7528\u4e0d\u540c\u7684\u56fe\u5377\u79ef\u5c42\u5b9e\u73b0": 601, "\u57fa\u4e8e\u4e0a\u9762\u4ecb\u7ecd\u7684\u6570\u636e\u6a21\u578b\u548c\u7f16\u7801\u5668": 601, "\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u5b9e\u73b0\u4e0d\u540c\u7684\u56fe\u5b66\u4e60\u7b97\u6cd5": 601, "\u5728\u63a5\u4e0b\u6765\u4e00\u7ae0\u91cc": 601, "\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u53d1\u4e00\u4e2agnn\u6a21\u578b": 601, "\u8fd9\u7bc7\u6587\u6863\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u7528": 601, "\u63d0\u4f9b\u7684\u57fa\u672capi\u914d\u5408\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce": 601, "\u5982tensorflow": 601, "\u6765\u6784\u5efa\u56fe\u5b66\u4e60\u7b97\u6cd5": 601, "\u6211\u4eec\u4ee5\u56fe\u795e\u7ecf\u7f51\u7edc\u91cc\u6700\u6d41\u884c\u7684gcn\u6a21\u578b\u505a\u4e3a\u793a\u4f8b\u6765\u8bf4\u660e": 601, "\u901a\u5e38\u6765\u8bf4": 601, "\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u9700\u8981\u4e0b\u9762\u56db\u4e2a\u6b65\u9aa4": 601, "\u6307\u5b9a\u91c7\u6837\u6a21\u5f0f": 601, "\u7528\u56fe\u91c7\u6837": 601, "\u67e5\u8be2\u65b9\u6cd5\u91c7\u6837\u5b50\u56fe\u5e76\u7ec4\u7ec7\u6210": 601, "\u6211\u4eec\u62bd\u8c61\u4e864\u4e2a\u57fa\u672c\u7684\u51fd\u6570": 601, "\u7528\u6765\u904d\u5386\u56fe\u6570\u636e\u4ea7\u751f": 601, "\u4ee5\u8fd9\u4e9b": 601, "\u4e3a\u8f93\u5165\u4ea7\u751f": 601, "\u8bad\u7ec3\u7684\u6b63\u6837\u672c": 601, "\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60": 601, "\u4ea7\u751f\u8d1f\u6837\u672c": 601, "gnns\u9700\u8981\u805a\u5408\u90bb\u5c45\u4fe1\u606f": 601, "\u6211\u4eec\u62bd\u8c61\u4e86": 601, "\u6765\u91c7\u6837\u90bb\u5c45": 601, "\u6700\u540e\u5c06": 601, "\u4ea7\u751f\u7684": 601, "\u4ee5\u53ca\u91c7\u6837\u51fa\u7684\u90bb\u5c45\u7ec4\u6210": 601, "\u6784\u5efa\u56fe\u6570\u636e\u6d41": 601, "\u7b97\u6cd5\u6a21\u578b\u57fa\u4e8e\u7c7b\u4f3ctensorflow\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u6784\u5efa": 601, "\u6240\u4ee5\u91c7\u6837\u51fa\u7684": 601, "\u9700\u8981\u5148\u8f6c\u6362\u6210tensor\u683c\u5f0f": 601, "\u624d\u80fd\u4f7f\u7528": 601, "\u6765\u5c01\u88c5\u8fd9\u4e00\u8f6c\u6362\u8fc7\u7a0b": 601, "\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3": 601, "\u5b9a\u4e49\u7f16\u7801\u5668": 601, "\u7f16\u7801\u5668\u548c\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801": 601, "\u5f97\u5230": 601, "\u540e": 601, "\u6211\u4eec\u9996\u5148\u5c06\u539f\u59cb\u7684\u70b9": 601, "\u8fb9\u7279\u5f81\u7528\u4e00\u4e9b\u5e38\u89c1\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u6210\u539f\u59cb\u5411\u91cf": 601, "\u505a\u4e3agnns\u6a21\u578b\u7684\u7279\u5f81\u8f93\u5165": 601, "\u7136\u540e\u7528\u56fe\u7f16\u7801\u5668\u5904\u7406": 601, "\u5c06\u90bb\u5c45\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u6c47\u805a\u5e76": 601, "\u548c\u81ea\u8eab\u7279\u5f81\u8fdb\u884c\u7ec4\u5408": 601, "\u5f97\u5230\u6700\u540e\u7684\u70b9\u6216\u8005\u8fb9\u7684\u5411\u91cf": 601, "\u7f16\u5199\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 601, "\u9009\u62e9\u9002\u5f53\u7684\u635f\u5931\u51fd\u6570": 601, "\u5e76\u7f16\u5199\u8bad\u7ec3\u8fc7\u7a0b": 601, "\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668": 601, "\u5e76\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u8fdb\u884c\u4e86\u5c01\u88c5": 601, "\u540c\u65f6\u652f\u6301\u5355\u673a\u548c\u5206\u5e03\u5f0f\u8bad\u7ec3": 601, "\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570": 601, "\u4f18\u5316\u5668\u548c\u8bad\u7ec3\u8fc7\u7a0b": 601, "\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4e0a\u9762\u4ecb\u7ecd\u76844\u4e2a\u6b65\u9aa4\u6765\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2agcn\u6a21\u578b": 601, "\u6211\u4eec\u4f7f\u7528cora\u6570\u636e\u96c6\u4ee5\u70b9\u5206\u7c7b\u4efb\u52a1\u505a\u4e3a\u793a\u4f8b": 601, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u811a\u672c": 601, "\u6765": 601, "\u5c06\u539f\u59cbcora\u8f6c\u6362\u6210": 601, "\u9700\u8981\u7684\u683c\u5f0f": 601, "\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u811a\u672c\u540e\u4f60\u53ef\u4ee5\u5f97\u5230\u4e0b\u97625\u4e2a\u6587\u4ef6": 601, "\u5206\u522b\u662f\u70b9\u8868": 601, "\u8fb9\u8868\u4ee5\u53ca\u7528\u6765\u533a\u5206\u8bad\u7ec3": 601, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u7684\u70b9\u8868": 601, "\u7136\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u6784\u5efa\u56fe": 601, "\u540e\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5c06\u56fe\u52a0\u8f7d\u8fdb\u5185\u5b58": 601, "gcn\u6a21\u578b\u7ee7\u627f\u81ea\u57fa\u672c\u7684\u5b66\u4e60\u6a21\u578b\u7c7b": 601, "\u53ea\u9700\u8981\u91cd\u5199\u57fa\u7c7b\u7684\u91c7\u6837": 601, "\u6a21\u578b\u6784\u5efa\u7b49\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210gcn\u7684\u6784\u5efa": 601, "\u524d\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u91c7\u6837\u79cd\u5b50\u8282\u70b9\u548c\u6b63\u6837\u672c": 601, "\u91c7\u6837\u90bb\u5c45\u5e76\u7ec4\u7ec7": 601, "\u56de\u4e00\u8df3\u90bb\u5c45": 601, "\u56e0\u6b64\u4e0a\u9762\u4ee3\u7801\u662f\u91c7\u6837\u4e8c\u8df3\u90bb\u5c45": 601, "\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5": 601, "\u5bf9\u4e8e\u539f\u59cbgcn\u6765\u8bf4\u56e0\u4e3a\u8981\u83b7\u5f97\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45": 601, "\u56e0\u6b64\u9009\u62e9": 601, "\u91c7\u6837\u5b8c\u540e\u5c06\u7ed3\u679c\u7ec4\u7ec7": 601, "\u6210": 601, "\u8fd4\u56de": 601, "\u51fd\u6570\u91cc\u6211\u4eec\u4f7f\u7528\u5c01\u88c5\u7684": 601, "\u6765\u628a": 601, "\u8f6c\u6362\u6210\u5bf9\u5e94\u7684": 601, "\u5305\u542b\u4e00\u4e2a\u6570\u636e\u6d41\u8fed\u4ee3\u5668\u548c\u82e5\u5e72": 601, "\u4f60\u53ef\u4ee5\u4ece": 601, "\u83b7\u53d6\u548c\u524d\u9762": 601, "\u5bf9\u5e94\u7684": 601, "\u9996\u5148\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7279\u5f81": 601, "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528": 601, "\u5373\u8fd4\u56de\u81ea\u8eab\u5373\u53ef": 601, "\u56e0\u4e3a": 601, "cora\u7684\u7279\u5f81\u5df2\u7ecf\u662f\u5904\u7406\u8fc7\u7684\u5411\u91cf\u683c\u5f0f\u4e86": 601, "\u5bf9\u4e8e\u65e2\u6709\u79bb\u6563\u7279\u5f81\u7531\u4e8e\u8fde\u7eed\u7279\u5f81\u7684\u60c5\u51b5": 601, "\u66f4\u591aencoder\u8bf7\u53c2\u8003": 601, "\u5c42\u6784\u5efa\u56fe\u7f16\u7801\u5668": 601, "gcn\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u5168\u90e8\u90bb\u5c45": 601, "\u90bb\u5c45\u4ee5\u7a00\u758f\u683c\u5f0f\u7ec4\u7ec7": 601, "\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528": 601, "\u90bb\u5c45\u5bf9\u9f50\u7684\u6a21\u578b\u53ef\u4ee5\u53c2\u8003graphsage\u7684\u5b9e\u73b0": 601, "\u5bf9\u4e8ecora\u70b9\u5206\u7c7b\u6a21\u578b": 601, "\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684tensorflow\u91cc\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570\u5373\u53ef": 601, "\u7136\u540e\u5728": 601, "\u51fd\u6570\u91cc\u5c06\u7f16\u7801\u5668\u548c\u635f\u5931\u51fd\u6570\u7ec4\u7ec7\u8d77\u6765": 601, "\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u8fed\u4ee3\u5668\u548c\u635f\u5931\u51fd\u6570": 601, "\u63a5\u7740\u4f7f\u7528\u5c01\u88c5\u7684\u5355\u673a\u8bad\u7ec3\u8fc7\u7a0b": 601, "\u6765\u8fdb\u884c\u8bad\u7ec3": 601, "\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2agcn\u6a21\u578b\u7684\u7f16\u5199": 601, "\u5b8c\u6574\u4ee3\u7801\u8bf7\u53c2\u8003": 601, "\u76ee\u5f55": 601, "\u6211\u4eec\u5b9e\u73b0\u4e86gcn": 601, "gat\u7b49\u6a21\u578b": 601, "\u4f60\u53ef\u4ee5\u53c2\u8003\u76f8\u4f3c\u7684\u6a21\u578b\u4ee3\u7801\u505a\u4e3a\u5f00\u59cb": 601, "\u5c5e\u6027\u56fe": 602, "\u56fe\u4e0a\u7684\u70b9": 602, "\u8fb9\u90fd\u5e26\u6709\u6807\u7b7e": 602, "\u6bcf\u4e2a\u6807\u7b7e\u90fd\u53ef\u80fd\u5e26\u6709\u8bb8\u591a\u5c5e\u6027": 602, "\u5185\u7f6e\u4e86\u4e00\u7ec4\u6d41\u884c\u7684\u6570\u636e\u96c6": 602, "\u4ee5\u53ca\u8f7d\u5165\u4ed6\u4eec\u7684\u5de5\u5177\u51fd\u6570": 602, "\u5e2e\u52a9\u7528\u6237\u66f4\u5bb9\u6613\u7684\u4e0a\u624b": 602, "\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 602, "\u5728\u5355\u673a\u6a21\u5f0f\u4e0b": 602, "\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 602, "\u5e76\u4e14\u4f1a\u4fdd\u7559\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528": 602, "\u96c6\u7fa4\u6a21\u5f0f\u4e0b": 602, "\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 602, "\u7684\u672c\u5730\u5b58\u50a8\u6bd4\u8f83\u590d\u6742": 602, "\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6302\u8f7d\u4e86": 602, "\u7684\u6570\u636e\u96c6\u6876\u7684\u4e00\u4e2a\u5bb9\u5668": 602, "\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u91cc": 602, "\u6211\u4eec\u5c06\u8f7d\u5165\u548c\u4e0a\u9762\u540c\u6837\u7684\u4e00\u5f20\u56fe": 602, "\u53ea\u4e0d\u8fc7\u8fd9\u6b21": 602, "\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d": 602, "\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 602, "\u7136\u540e\u5c06\u6570\u636e\u96c6\u6876\u6302\u8f7d\u5230": 602, "\u6b64\u8def\u5f84\u76f8\u5bf9\u4e8e": 602, "\u7684\u672c\u5730\u8def\u5f84": 602, "\u7136\u540e\u6211\u4eec\u5c06\u4f1a\u8bdd\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165": 602, "\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570": 602, "\u662f\u6211\u4eec\u901a\u8fc7": 602, "\u7684\u53c2\u6570\u6307\u5b9a\u7684\u6302\u8f7d\u8def\u5f84": 602, "\u662f\u8fd9\u4e2a\u6570\u636e\u96c6\u6240\u5728\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57": 602, "\u4f60\u53ef\u4ee5\u5728": 602, "\u627e\u5230\u6240\u6709\u76ee\u524d\u652f\u6301\u7684\u6570\u636e\u96c6": 602, "\u6587\u4ef6\u4e2d\u5305\u62ec\u8be6\u7ec6\u7684\u4ecb\u7ecd\u548c\u7528\u6cd5": 602, "\u7136\u800c": 602, "\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u96c6": 602, "\u5e76\u505a\u4e00\u4e9b\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c": 602, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 602, "\u5e76\u4ee5\u5c06\u5c5e\u6027\u56fe\u8f7d\u5165": 602, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 602, "\u7136\u540e\u5728\u6b64\u4f1a\u8bdd\u5185\u521b\u5efa\u56fe": 602, "\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u914d\u7f6e": 602, "\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u589e\u91cf\u7684\u6784\u5efa\u4e00\u4e2a\u5c5e\u6027\u56fe": 602, "\u6211\u4eec\u5c06\u4f7f\u7528": 602, "\u91cc\u7684\u6587\u4ef6\u505a\u5b8c\u6b64\u7bc7\u6559\u7a0b\u7684\u793a\u4f8b": 602, "\u627e\u5230\u6e90\u6570\u636e": 602, "\u4f60\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528": 602, "\u6765\u67e5\u770b\u56fe\u7684\u6a21\u578b": 602, "\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u5185\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6807\u7b7e": 602, "\u76f8\u5173\u7684\u53c2\u6570\u542b\u4e49\u5982\u4e0b": 602, "\u4ee3\u8868\u6570\u636e\u6e90": 602, "\u6307\u793a": 602, "\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u6e90\u6570\u636e": 602, "\u53ef\u4ee5\u4e3a\u6587\u4ef6\u8def\u5f84": 602, "\u6570\u7ec4\u7b49": 602, "\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50": 602, "\u8fd9\u5c06\u4f1a\u4ece\u6587\u4ef6": 602, "\u8f7d\u5165\u6570\u636e": 602, "\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 602, "\u4f46\u662f\u6709\u4e0d\u540c\u7684\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e": 602, "\u70b9\u6807\u7b7e\u7684\u540d\u5b57": 602, "\u9ed8\u8ba4\u4e3a": 602, "\u4e00\u5f20\u56fe\u4e2d\u4e0d\u80fd\u542b\u6709\u540c\u540d\u7684\u6807\u7b7e": 602, "\u6240\u4ee5\u82e5\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6807\u7b7e": 602, "\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u6807\u7b7e\u540d\u5b57": 602, "\u603b\u662f\u7ed9\u6807\u7b7e\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u5b57\u4e5f\u6709\u597d\u5904": 602, "\u53ef\u4ee5\u4e3a\u4efb\u4f55\u6807\u8bc6\u7b26": 602, "\u4e3e\u4e2a\u4f8b\u5b50": 602, "\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b65\u7ed3\u679c\u9664\u4e86\u6807\u7b7e\u540d\u5b8c\u5168\u4e00\u81f4": 602, "\u4e00\u7ec4\u5c5e\u6027\u540d\u5b57": 602, "\u53ef\u9009\u9879": 602, "\u5c5e\u6027\u540d\u5e94\u5f53\u4e0e\u6570\u636e\u4e2d\u7684\u9996\u884c\u8868\u5934\u4e2d\u7684\u540d\u5b57\u76f8\u4e00\u81f4": 602, "\u5982\u679c\u7701\u7565\u6216\u4e3a": 602, "\u9664id\u5217\u4e4b\u5916\u7684\u6240\u6709\u5217\u90fd\u5c06\u4f1a\u4f5c\u4e3a\u5c5e\u6027\u8f7d\u5165": 602, "\u5982\u679c\u4e3a\u7a7a\u5217\u8868": 602, "\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8f7d\u5165\u4efb\u4f55\u5c5e\u6027": 602, "\u5176\u4ed6\u60c5\u51b5\u4e0b": 602, "\u53ea\u4f1a\u8f7d\u5165\u6307\u5b9a\u4e86\u7684\u5217\u4f5c\u4e3a\u5c5e\u6027": 602, "\u6bd4\u5982\u8bf4": 602, "\u5217\u7684\u5217\u540d": 602, "\u6b64\u5217\u5c06\u5728\u8f7d\u5165\u8fb9\u65f6\u88ab\u7528\u505a\u8d77\u59cb\u70b9": 602, "\u6216\u76ee\u6807\u70b9": 602, "\u5176\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32": 602, "\u6b64\u65f6\u6307\u4ee3\u5217\u540d": 602, "\u6216\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u6b63\u6574\u6570": 602, "\u4ee3\u8868\u7b2c\u51e0\u5217": 602, "\u4ece0\u5f00\u59cb": 602, "\u9ed8\u8ba4\u4e3a\u7b2c0\u5217": 602, "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u6807\u7b7e": 602, "\u4e0e\u6784\u5efa\u70b9\u6807\u7b7e\u4e00\u8282\u4e2d\u7684": 602, "\u7c7b\u4f3c": 602, "\u4e3a\u6307\u793a\u53bb\u54ea\u91cc\u8bfb\u6570\u636e\u7684\u8def\u5f84": 602, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 602, "\u8fd9\u5c06\u4f1a\u8f7d\u5165\u4e00\u4e2a\u6807\u7b7e\u540d\u4e3a": 602, "\u6e90\u8282\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u8282\u70b9\u6807\u7b7e\u90fd\u4e3a": 602, "\u7b2c\u4e00\u5217\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9id": 602, "\u7b2c\u4e8c\u5217\u4f5c\u4e3a\u7ec8\u70b9\u7684\u70b9id": 602, "\u5176\u4ed6\u5217\u90fd\u4f5c\u4e3a\u5c5e\u6027": 602, "\u8fb9\u7684\u6807\u7b7e\u540d": 602, "\u63a8\u8350\u603b\u662f\u4f7f\u7528\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u7b7e\u540d": 602, "\u4e00\u5217\u5c5e\u6027": 602, "\u610f\u4e49\u4e0e\u884c\u4e3a\u90fd\u548c\u70b9\u4e2d\u7684\u4e00\u81f4": 602, "\u8d77\u70b9\u7684\u6807\u7b7e\u540d\u4e0e\u7ec8\u70b9\u7684\u6807\u7b7e\u540d": 602, "\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86": 602, "\u5728\u90a3\u91cc\u5c06\u5176\u8d4b\u503c\u4e3a": 602, "\u8fd9\u4e24\u8005\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u503c": 602, "\u4e3e\u4f8b\u6765\u8bf4": 602, "\u8d77\u70b9\u7684": 602, "\u5217\u540d\u4e0e\u7ec8\u70b9\u7684": 602, "\u5217\u540d": 602, "\u9ed8\u8ba4\u5206\u522b\u4e3a": 602, "\u610f\u4e49\u548c\u8868\u73b0\u4e0e\u70b9\u4e2d\u7684": 602, "\u4e0d\u540c\u7684\u662f\u9700\u8981\u4e24\u5217": 602, "\u4e00\u5217\u4e3a\u8d77\u70b9": 602, "\u4e00\u5217\u4e3a\u7ec8\u70b9": 602, "\u4ee5\u4e0b\u662f\u4e2a\u4f8b\u5b50": 602, "\u8fd9\u662f\u4e00\u4e9b\u7528\u6765\u5904\u7406\u7279\u522b\u7b80\u5355\u6216\u7279\u522b\u590d\u6742\u7684\u9ad8\u7ea7\u4e00\u4e9b\u7684\u7528\u6cd5": 602, "\u5982\u679c\u56fe\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\u6807\u7b7e": 602, "\u90a3\u4e48\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u70b9\u6807\u7b7e": 602, "\u5c06\u4f1a\u63a8\u65ad\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e\u4e3a\u8fd9\u4e00\u4e2a\u70b9\u6807\u7b7e": 602, "\u5982\u679c\u7528\u6237\u7684": 602, "\u53d6\u503c\u4e3a\u56fe\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\u6807\u7b7e": 602, "\u4f1a\u4ece\u8fb9\u7684\u7aef\u70b9\u4e2d\u805a\u5408\u51fa\u70b9\u8868": 602, "\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b": 602, "\u4e00\u79cd\u8fb9\u7684\u6807\u7b7e\u53ef\u80fd\u8fde\u63a5\u4e86\u4e24\u79cd\u53ca\u4ee5\u4e0a\u7684\u70b9": 602, "\u5728\u4e0b\u9762\u7684\u5c5e\u6027\u56fe\u4e2d": 602, "\u6709\u4e00\u4e2a\u540d\u4e3a": 602, "\u7684\u8fb9\u6807\u7b7e": 602, "\u8fde\u63a5\u4e86\u4e24\u79cd\u70b9\u6807\u7b7e": 602, "\u53ef\u4ee5\u6dfb\u52a0\u4e24\u6b21\u540d\u4e3a": 602, "\u53ef\u4ee5\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u63a8\u65ad\u70b9\u7684\u7c7b\u578b": 602, "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5de5\u4f5c\u7684\u5f88\u597d": 602, "\u7528\u6237\u6709\u65f6\u9700\u8981\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u80fd\u529b": 602, "\u4e3a\u4e86\u6ee1\u8db3\u6b64\u79cd\u9700\u6c42": 602, "\u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u4e4b\u540e\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7c7b\u578b\u7684\u53c2\u6570": 602, "\u50cf\u8fd9\u6837": 602, "\u8fd9\u5c06\u4f1a\u5c06\u5c5e\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b": 602, "\u6ce8\u610f\u5c5e\u6027\u540d\u5b57\u548c\u7c7b\u578b\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5143\u7ec4\u4e2d": 602, "\u5728\u8fd9\u91cc": 602, "\u7684\u7c7b\u578b\u5c06\u4f1a\u662f": 602, "\u800c\u9ed8\u8ba4\u4e0d\u6307\u5b9a\u7684\u8bdd\u4e3a": 602, "\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u662f\u6307\u5b9a": 602, "\u7b49\u7c7b\u578b": 602, "\u6709\u4e09\u4e2a\u914d\u7f6e\u5143\u4fe1\u606f\u7684\u53c2\u6570": 602, "\u5206\u522b\u4e3a": 602, "\u53ef\u4ee5\u4e3a": 602, "\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6": 602, "\u548c\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58": 602, "\u5f53id\u4e0d\u80fd\u7528": 602, "\u8868\u793a\u65f6": 602, "\u624d\u5e94\u8be5\u4f7f\u7528": 602, "\u5982\u679c\u786e\u5b9a\u56fe\u70b9id\u8303\u56f4\u4e0d\u4f1a\u8d85\u8fc7": 602, "\u5efa\u8bae\u4f7f\u7528": 602, "\u6765\u964d\u4f4e\u5185\u5b58\u5f00\u9500": 602, "\u6307\u793a\u8f7d\u5165\u65e0\u5411\u56fe\u8fd8\u662f\u6709\u5411\u56fe": 602, "\u6307\u793a\u662f\u5426\u4e3a\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684id": 602, "\u6307\u793a\u662f\u5426\u662f\u5426\u5c06\u70b9\u539f\u59cbid\u4fdd\u7559\u4e3a\u5c5e\u6027": 602, "\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u56fe\u7684\u5b9a\u4e49": 602, "\u8fd9\u91cc\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u8f7d\u5165": 602, "\u5c5e\u6027\u56fe\u7684": 602, "\u4f8b\u5b50": 602, "\u4e0a\u6587\u63d0\u5230\u7684\u6570\u636e\u6e90\u662f\u4e00\u4e2a": 602, "\u7684\u7c7b": 602, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6570\u636e\u672c\u8eab": 602, "\u652f\u6301\u4ece": 602, "\u8fd9\u53ef\u4ee5\u4f7f\u7528\u6237\u4ec5\u901a\u8fc7": 602, "\u63a7\u5236\u53f0\u4fbf\u53ef\u4ee5\u521b\u5efa\u56fe": 602, "\u9664\u4e86": 602, "\u5916": 602, "\u5176\u4ed6\u5c5e\u6027": 602, "id\u5217": 602, "\u6807\u7b7e\u8bbe\u7f6e\u7b49\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u7684\u4fdd\u6301\u4e00\u81f4": 602, "\u6ce8\u610f\u6bcf\u4e2a\u6570\u7ec4\u90fd\u4ee3\u8868\u4e00\u5217": 602, "\u6211\u4eec\u5c06\u5176\u4ee5": 602, "\u77e9\u9635\u7684\u65b9\u5f0f\u4f20\u5165": 602, "\u5f53": 602, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u65f6": 602, "\u5b83\u53ef\u80fd\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32": 602, "\u6587\u4ef6\u8def\u5f84\u5e94\u9075\u5faa": 602, "\u6807\u51c6": 602, "\u5f53\u6536\u5230\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u8f7d\u56fe\u8bf7\u6c42\u65f6": 602, "\u5c06\u4f1a\u89e3\u6790": 602, "\u8c03\u7528\u76f8\u5e94\u7684\u8f7d\u56fe\u6a21\u5757": 602, "\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90": 602, "\u672c\u5730": 602, "\u6570\u636e\u7531": 602, "\u8d1f\u8d23\u8f7d\u5165": 602, "\u89e3\u6790\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u4ee5\u53ca\u53c2\u6570": 602, "\u4efb\u4f55\u989d\u5916\u7684\u5177\u4f53\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728loader\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u4f20\u5165": 602, "\u8fd9\u4e9b\u53c2\u6570\u4f1a\u76f4\u63a5\u88ab\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u5b58\u50a8\u7c7b\u4e2d": 602, "\u4e4b\u4e8e": 602, "\u6216\u8005\u662f": 602, "\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u81ea\u5df1\u7684driver\u6765\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u6e90": 602, "\u6bd4\u5982\u53c2\u7167": 602, "driver\u7684\u5b9e\u73b0\u65b9\u5f0f": 602, "\u7528\u6237\u9700\u8981\u7ee7\u627f": 602, "\u7c7b\u7528\u6765\u505ascheme\u5bf9\u5e94\u7684resolv": 602, "abstractbufferedfil": 602, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 602, "\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684read": 602, "write\u529f\u80fd": 602, "\u6700\u540e\u901a\u8fc7": 602, "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7684resolv": 602, "\u6211\u4eec\u4e3agraphscope\u7684\u7528\u6237\u51c6\u5907\u4e86\u4e00\u7cfb\u5217\u8be6\u5c3d\u7684\u5165\u95e8\u6559\u7a0b": 603, "\u4ece\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u4e2d\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230\u5982\u4f55\u542f\u52a8\u4e00\u4e2agraphscope\u4f1a\u8bdd": 603, "\u5982\u4f55\u8f7d\u56fe": 603, "\u4ee5\u53ca\u5982\u4f55\u5206\u522b": 603, "\u4f7f\u7528graphscope\u4e2d\u7684ga": 603, "gle\u5f15\u64ce\u6765\u5b8c\u6210\u56fe\u5206\u6790\u4efb\u52a1": 603, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3": 603, "\u6211\u4eec\u7528jupyt": 603, "notebook\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u6559\u7a0b": 603, "\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2ajupyt": 603, "notebook\u670d\u52a1\u4e2d\u5c1d\u8bd5\u6267\u884c": 603, "\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5df2\u7ecf\u51c6\u5907\u597d\u7684jupyt": 603, "lab": 603, "\u4ee5\u4fbf\u4e8e\u7528\u6237\u66f4\u5feb\u5730\u4e0a\u624bgraphscop": 603, "\u5165\u95e8\u6559\u7a0b\u5305\u62ec\u5982\u4e0b\u8fd9\u4e9b\u5185\u5bb9": 603}, "objects": {"": [[359, 0, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase"], [359, 1, 1, "_CPPv4N2gs7AppBase7AppBaseEv", "gs::AppBase::AppBase"], [359, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::CONTEXT_T"], [359, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::FRAG_T"], [359, 1, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval"], [359, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::context"], [359, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::graph"], [359, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::messages"], [359, 1, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval"], [359, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::context"], [359, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::graph"], [359, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::messages"], [359, 4, 1, "_CPPv4N2gs7AppBase13load_strategyE", "gs::AppBase::load_strategy"], [359, 5, 1, "_CPPv4N2gs7AppBase17message_manager_tE", "gs::AppBase::message_manager_t"], [359, 4, 1, "_CPPv4N2gs7AppBase16message_strategyE", "gs::AppBase::message_strategy"], [359, 4, 1, "_CPPv4N2gs7AppBase16need_split_edgesE", "gs::AppBase::need_split_edges"], [359, 1, 1, "_CPPv4N2gs7AppBaseD0Ev", "gs::AppBase::~AppBase"], [359, 0, 1, "_CPPv4N2gs8AppEntryE", "gs::AppEntry"], [359, 1, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry"], [359, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::id"], [359, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::lib_path"], [359, 1, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker"], [359, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::comm_spec"], [359, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::fragment"], [359, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::spec"], [359, 1, 1, "_CPPv4N2gs8AppEntry4InitEv", "gs::AppEntry::Init"], [359, 1, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query"], [359, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::context_key"], [359, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::frag_wrapper"], [359, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::query_args"], [359, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::worker_handler"], [359, 0, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt"], [359, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::FunctionType"], [359, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::index"], [359, 0, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum"], [359, 2, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum::FunctionType"], [359, 0, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker"], [359, 2, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker::T"], [359, 0, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel::frag_id"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedELabel::label_id"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel::frag_id"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t", "gs::ArrowFragmentLoader::AddDataToExistedVLabel::label_id"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment::frag_id"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup::frag_id"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::compact_edges"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::directed"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::efiles"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::generate_eid"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::graph_info"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::retain_oid"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::use_perfect_hash"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::vfiles"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData::extend_type"], [359, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi", "gs::ArrowFragmentLoader::ExtendLabelData::frag_id"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv", "gs::ArrowFragmentLoader::LoadEdgeTables"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv", "gs::ArrowFragmentLoader::LoadFragment"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv", "gs::ArrowFragmentLoader::LoadFragmentAsFragmentGroup"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv", "gs::ArrowFragmentLoader::LoadVertexEdgeTables"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv", "gs::ArrowFragmentLoader::LoadVertexTables"], [359, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::OID_T"], [359, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VERTEX_MAP_T"], [359, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VID_T"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv", "gs::ArrowFragmentLoader::initPartitioner"], [359, 1, 1, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev", "gs::ArrowFragmentLoader::~ArrowFragmentLoader"], [359, 0, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment"], [359, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::COMPACT"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct"], [359, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct::meta"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv", "gs::ArrowProjectedFragment::Create"], [359, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::EDATA_T"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv", "gs::ArrowProjectedFragment::GetEdgeNum"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv", "gs::ArrowProjectedFragment::GetInEdgeNum"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::src_fid"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv", "gs::ArrowProjectedFragment::GetIncomingEdgeNum"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::COMPACT_"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::v"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::COMPACT_"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::oid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv", "gs::ArrowProjectedFragment::GetInnerVerticesNum"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv", "gs::ArrowProjectedFragment::GetOutEdgeNum"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::oid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv", "gs::ArrowProjectedFragment::GetOuterVerticesNum"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::dst_fid"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv", "gs::ArrowProjectedFragment::GetOutgoingEdgeNum"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::COMPACT_"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::v"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::COMPACT_"], [359, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv", "gs::ArrowProjectedFragment::GetTotalVerticesNum"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::oid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::v"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv", "gs::ArrowProjectedFragment::GetVerticesNum"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid::gid"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::gid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment11IEDestsSizeEv", "gs::ArrowProjectedFragment::IEDestsSize"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12IOEDestsSizeEv", "gs::ArrowProjectedFragment::IOEDestsSize"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::gid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv", "gs::ArrowProjectedFragment::InnerVertices"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices::fid"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment11OEDestsSizeEv", "gs::ArrowProjectedFragment::OEDestsSize"], [359, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::OID_T"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::gid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::gid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv", "gs::ArrowProjectedFragment::OuterVertices"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices::fid"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp"], [359, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::comm_spec"], [359, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::conf"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project"], [359, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_label"], [359, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_prop"], [359, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::fragment"], [359, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_label"], [359, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_prop"], [359, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VDATA_T"], [359, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VERTEX_MAP_T"], [359, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VID_T"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid"], [359, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid::v"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv", "gs::ArrowProjectedFragment::Vertices"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE", "gs::ArrowProjectedFragment::adj_list_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE", "gs::ArrowProjectedFragment::compact_adj_list_t"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv", "gs::ArrowProjectedFragment::compact_edges"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE", "gs::ArrowProjectedFragment::compact_nbr_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE", "gs::ArrowProjectedFragment::const_adj_list_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE", "gs::ArrowProjectedFragment::const_compact_adj_list_t"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv", "gs::ArrowProjectedFragment::directed"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE", "gs::ArrowProjectedFragment::edata_t"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv", "gs::ArrowProjectedFragment::edge_label"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv", "gs::ArrowProjectedFragment::edge_prop_id"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE", "gs::ArrowProjectedFragment::eid_array_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE", "gs::ArrowProjectedFragment::eid_t"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv", "gs::ArrowProjectedFragment::fid"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv", "gs::ArrowProjectedFragment::fnum"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv", "gs::ArrowProjectedFragment::get_arrow_fragment"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv", "gs::ArrowProjectedFragment::get_edata_array_accessor"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_begin_ptr"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_end_ptr"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr::COMPACT_"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_begin_ptr"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_end_ptr"], [359, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr"], [359, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr::COMPACT_"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv", "gs::ArrowProjectedFragment::get_vdata_array_accessor"], [359, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t"], [359, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t::DATA_T"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE", "gs::ArrowProjectedFragment::inner_vertices_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE", "gs::ArrowProjectedFragment::internal_oid_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE", "gs::ArrowProjectedFragment::label_id_t"], [359, 4, 1, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE", "gs::ArrowProjectedFragment::load_strategy"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv", "gs::ArrowProjectedFragment::local_vertex_map"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE", "gs::ArrowProjectedFragment::nbr_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE", "gs::ArrowProjectedFragment::nbr_unit_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE", "gs::ArrowProjectedFragment::oid_t"], [359, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t"], [359, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t::DATA_T"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE", "gs::ArrowProjectedFragment::outer_vertices_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE", "gs::ArrowProjectedFragment::prop_id_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE", "gs::ArrowProjectedFragment::property_graph_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE", "gs::ArrowProjectedFragment::property_vertex_map_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE", "gs::ArrowProjectedFragment::sub_vertices_t"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16use_perfect_hashEv", "gs::ArrowProjectedFragment::use_perfect_hash"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE", "gs::ArrowProjectedFragment::vdata_t"], [359, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t"], [359, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t::DATA_T"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv", "gs::ArrowProjectedFragment::vertex_label"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv", "gs::ArrowProjectedFragment::vertex_map_id"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE", "gs::ArrowProjectedFragment::vertex_map_t"], [359, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv", "gs::ArrowProjectedFragment::vertex_prop_id"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE", "gs::ArrowProjectedFragment::vertex_range_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE", "gs::ArrowProjectedFragment::vertex_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE", "gs::ArrowProjectedFragment::vertices_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE", "gs::ArrowProjectedFragment::vid_array_t"], [359, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE", "gs::ArrowProjectedFragment::vid_t"], [359, 1, 1, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev", "gs::ArrowProjectedFragment::~ArrowProjectedFragment"], [359, 0, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap"], [359, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct"], [359, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct::meta"], [359, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv", "gs::ArrowProjectedVertexMap::Create"], [359, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid::gid"], [359, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [359, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::fid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [359, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize::fid"], [359, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid::gid"], [359, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid"], [359, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid::lid"], [359, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::gid"], [359, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::oid"], [359, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv", "gs::ArrowProjectedVertexMap::GetTotalVerticesNum"], [359, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::OID_T"], [359, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid"], [359, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid::offset"], [359, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project"], [359, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::v_label"], [359, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::vm"], [359, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VERTEX_MAP_T"], [359, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VID_T"], [359, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap16use_perfect_hashEv", "gs::ArrowProjectedVertexMap::use_perfect_hash"], [359, 0, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder"], [359, 2, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder::CTX_T"], [359, 0, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker"], [359, 2, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker::APP_T"], [359, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker"], [359, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::app"], [359, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::graph"], [359, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv", "gs::DefaultPropertyWorker::Finalize"], [359, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv", "gs::DefaultPropertyWorker::GetContext"], [359, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init"], [359, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::comm_spec"], [359, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::pe_spec"], [359, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output"], [359, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output::os"], [359, 1, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query"], [359, 2, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::Args"], [359, 3, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::args"], [359, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker9context_tE", "gs::DefaultPropertyWorker::context_t"], [359, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE", "gs::DefaultPropertyWorker::fragment_t"], [359, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE", "gs::DefaultPropertyWorker::message_manager_t"], [359, 1, 1, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev", "gs::DefaultPropertyWorker::~DefaultPropertyWorker"], [359, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [359, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [359, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [359, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [359, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [359, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [359, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [359, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [359, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [359, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [359, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [359, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [359, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [359, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [359, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [359, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [359, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [359, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [359, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [359, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [359, 0, 1, "_CPPv4N2gs14DispatchResultE", "gs::DispatchResult"], [359, 6, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicyE", "gs::DispatchResult::AggregatePolicy"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::AggregatePolicy::kConcat"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::AggregatePolicy::kMergeGraphDef"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::AggregatePolicy::kPickFirst"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmpty"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmptyGraphDef"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::AggregatePolicy::kRequireConsistent"], [359, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult"], [359, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEv", "gs::DispatchResult::DispatchResult"], [359, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::error_code"], [359, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::worker_id"], [359, 1, 1, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv", "gs::DispatchResult::aggregate_policy"], [359, 1, 1, "_CPPv4NK2gs14DispatchResult4dataEv", "gs::DispatchResult::data"], [359, 1, 1, "_CPPv4NK2gs14DispatchResult10error_codeEv", "gs::DispatchResult::error_code"], [359, 1, 1, "_CPPv4N2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [359, 1, 1, "_CPPv4NK2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [359, 1, 1, "_CPPv4NK2gs14DispatchResult14has_large_dataEv", "gs::DispatchResult::has_large_data"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::kConcat"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::kMergeGraphDef"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::kPickFirst"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::kPickFirstNonEmpty"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::kPickFirstNonEmptyGraphDef"], [359, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::kRequireConsistent"], [359, 1, 1, "_CPPv4N2gs14DispatchResult7messageEv", "gs::DispatchResult::message"], [359, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data"], [359, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data"], [359, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::arc"], [359, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::data"], [359, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [359, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [359, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [359, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [359, 1, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error"], [359, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::error_code"], [359, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::message"], [359, 1, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def"], [359, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::graph_def"], [359, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::policy"], [359, 1, 1, "_CPPv4NK2gs14DispatchResult9worker_idEv", "gs::DispatchResult::worker_id"], [359, 0, 1, "_CPPv4N2gs10DispatcherE", "gs::Dispatcher"], [359, 1, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch"], [359, 3, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch::cmd"], [359, 1, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher"], [359, 3, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher::comm_spec"], [359, 1, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand"], [359, 3, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand::cmd"], [359, 1, 1, "_CPPv4N2gs10Dispatcher5StartEv", "gs::Dispatcher::Start"], [359, 1, 1, "_CPPv4N2gs10Dispatcher4StopEv", "gs::Dispatcher::Stop"], [359, 1, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe"], [359, 3, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe::subscriber"], [359, 0, 1, "_CPPv4N2gs12EngineConfigE", "gs::EngineConfig"], [359, 1, 1, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv", "gs::EngineConfig::ToJsonString"], [359, 4, 1, "_CPPv4N2gs12EngineConfig15enable_java_sdkE", "gs::EngineConfig::enable_java_sdk"], [359, 4, 1, "_CPPv4N2gs12EngineConfig8networkxE", "gs::EngineConfig::networkx"], [359, 4, 1, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE", "gs::EngineConfig::vineyard_rpc_endpoint"], [359, 4, 1, "_CPPv4N2gs12EngineConfig15vineyard_socketE", "gs::EngineConfig::vineyard_socket"], [359, 0, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper"], [359, 2, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper::FRAG_T"], [359, 0, 1, "_CPPv4N2gs8GSObjectE", "gs::GSObject"], [359, 1, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject"], [359, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::id"], [359, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::type"], [359, 1, 1, "_CPPv4NK2gs8GSObject8ToStringEv", "gs::GSObject::ToString"], [359, 1, 1, "_CPPv4NK2gs8GSObject2idEv", "gs::GSObject::id"], [359, 1, 1, "_CPPv4NK2gs8GSObject4typeEv", "gs::GSObject::type"], [359, 1, 1, "_CPPv4N2gs8GSObjectD0Ev", "gs::GSObject::~GSObject"], [359, 0, 1, "_CPPv4N2gs11GrapeEngineE", "gs::GrapeEngine"], [359, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine"], [359, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine"], [359, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine::dag_file"], [359, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::host"], [359, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::port"], [359, 1, 1, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv", "gs::GrapeEngine::RunDAGFile"], [359, 1, 1, "_CPPv4N2gs11GrapeEngine5StartEv", "gs::GrapeEngine::Start"], [359, 1, 1, "_CPPv4N2gs11GrapeEngine4StopEv", "gs::GrapeEngine::Stop"], [359, 0, 1, "_CPPv4N2gs13GrapeInstanceE", "gs::GrapeInstance"], [359, 1, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance"], [359, 3, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance::comm_spec"], [359, 1, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init"], [359, 3, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init::vineyard_socket"], [359, 1, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive"], [359, 3, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive::cmd"], [359, 0, 1, "_CPPv4N2gs13ObjectManagerE", "gs::ObjectManager"], [359, 1, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject"], [359, 1, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject"], [359, 2, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::T"], [359, 3, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [359, 3, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [359, 1, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject"], [359, 3, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject::id"], [359, 1, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject"], [359, 3, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject::obj"], [359, 1, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject"], [359, 3, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject::id"], [359, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [359, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [359, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [359, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [359, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [359, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [359, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [359, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [359, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [359, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [359, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [359, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [359, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [359, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [359, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [359, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [359, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [359, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [359, 0, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase"], [359, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::CONTEXT_T"], [359, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::FRAG_T"], [359, 1, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval"], [359, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::context"], [359, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::graph"], [359, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::messages"], [359, 1, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval"], [359, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::context"], [359, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::graph"], [359, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::messages"], [359, 1, 1, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv", "gs::PropertyAppBase::PropertyAppBase"], [359, 4, 1, "_CPPv4N2gs15PropertyAppBase13load_strategyE", "gs::PropertyAppBase::load_strategy"], [359, 5, 1, "_CPPv4N2gs15PropertyAppBase17message_manager_tE", "gs::PropertyAppBase::message_manager_t"], [359, 4, 1, "_CPPv4N2gs15PropertyAppBase16message_strategyE", "gs::PropertyAppBase::message_strategy"], [359, 4, 1, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE", "gs::PropertyAppBase::need_split_edges"], [359, 1, 1, "_CPPv4N2gs15PropertyAppBaseD0Ev", "gs::PropertyAppBase::~PropertyAppBase"], [359, 0, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase"], [359, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::CONTEXT_T"], [359, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::FRAG_T"], [359, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval"], [359, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::context"], [359, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::graph"], [359, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval"], [359, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::context"], [359, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::graph"], [359, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv", "gs::PropertyAutoAppBase::PropertyAutoAppBase"], [359, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE", "gs::PropertyAutoAppBase::load_strategy"], [359, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE", "gs::PropertyAutoAppBase::message_strategy"], [359, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE", "gs::PropertyAutoAppBase::need_split_edges"], [359, 1, 1, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev", "gs::PropertyAutoAppBase::~PropertyAutoAppBase"], [359, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [359, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [359, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [359, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [359, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [359, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [359, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [359, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [359, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [359, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [359, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [359, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [359, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [359, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [359, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [359, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [359, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [359, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [359, 0, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext"], [359, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::DATA_T"], [359, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::FRAG_T"], [359, 1, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext"], [359, 3, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext::fragment"], [359, 1, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign"], [359, 1, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign"], [359, 3, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign::data"], [359, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::data"], [359, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::shape"], [359, 5, 1, "_CPPv4N2gs13TensorContext6data_tE", "gs::TensorContext::data_t"], [359, 1, 1, "_CPPv4N2gs13TensorContext8fragmentEv", "gs::TensorContext::fragment"], [359, 1, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape"], [359, 3, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape::shape"], [359, 1, 1, "_CPPv4NK2gs13TensorContext5shapeEv", "gs::TensorContext::shape"], [359, 1, 1, "_CPPv4N2gs13TensorContext6tensorEv", "gs::TensorContext::tensor"], [359, 0, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper"], [359, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::DATA_T"], [359, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::FRAG_T"], [359, 1, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::ctx"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::frag_wrapper"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::id"], [359, 1, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::comm_spec"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::selectors"], [359, 1, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe::comm_spec"], [359, 1, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::axis"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::comm_spec"], [359, 1, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::client"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::comm_spec"], [359, 1, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::axis"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::client"], [359, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::comm_spec"], [359, 1, 1, "_CPPv4N2gs20TensorContextWrapper12context_typeEv", "gs::TensorContextWrapper::context_type"], [359, 1, 1, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv", "gs::TensorContextWrapper::fragment_wrapper"], [359, 0, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper"], [359, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::DATA_T"], [359, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::FRAG_T"], [359, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::comm_spec"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::selectors"], [359, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::comm_spec"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::range"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::selectors"], [359, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::comm_spec"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::range"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::selector"], [359, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::client"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::comm_spec"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::range"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::selectors"], [359, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::client"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::comm_spec"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::range"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::selector"], [359, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::ctx"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::frag_wrapper"], [359, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::id"], [359, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv", "gs::VertexDataContextWrapper::context_type"], [359, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv", "gs::VertexDataContextWrapper::fragment_wrapper"], [359, 0, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext"], [359, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext::FRAG_T"], [359, 1, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext"], [359, 3, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext::fragment"], [359, 1, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column"], [359, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::name"], [359, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::type"], [359, 1, 1, "_CPPv4N2gs21VertexPropertyContext8fragmentEv", "gs::VertexPropertyContext::fragment"], [359, 5, 1, "_CPPv4N2gs21VertexPropertyContext10fragment_tE", "gs::VertexPropertyContext::fragment_t"], [359, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column"], [359, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column"], [359, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column::index"], [359, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column::name"], [359, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column"], [359, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column"], [359, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [359, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [359, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::index"], [359, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::name"], [359, 5, 1, "_CPPv4N2gs21VertexPropertyContext5oid_tE", "gs::VertexPropertyContext::oid_t"], [359, 5, 1, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE", "gs::VertexPropertyContext::prop_id_t"], [359, 1, 1, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv", "gs::VertexPropertyContext::properties_map"], [359, 1, 1, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv", "gs::VertexPropertyContext::vertex_properties"], [359, 5, 1, "_CPPv4N2gs21VertexPropertyContext8vertex_tE", "gs::VertexPropertyContext::vertex_t"], [359, 0, 1, "_CPPv4N2gs3rpc16AnalyticalServerE", "gs::rpc::AnalyticalServer"], [359, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer"], [359, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::dispatcher"], [359, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::host"], [359, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::port"], [359, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv", "gs::rpc::AnalyticalServer::StartServer"], [359, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv", "gs::rpc::AnalyticalServer::StopServer"], [0, 8, 1, "", "all_pairs_shortest_path_length"], [0, 8, 1, "", "attribute_assortativity"], [0, 8, 1, "", "average_degree_connectivity"], [0, 8, 1, "", "betweenness_centrality"], [0, 8, 1, "", "bfs"], [0, 8, 1, "id0", "cdlp"], [0, 8, 1, "", "closeness_centrality"], [0, 8, 1, "id1", "clustering"], [0, 8, 1, "", "degree_assortativity_coefficient"], [0, 8, 1, "", "degree_centrality"], [0, 8, 1, "", "dfs"], [0, 8, 1, "", "eigenvector_centrality"], [0, 8, 1, "", "hits"], [0, 8, 1, "", "katz_centrality"], [0, 8, 1, "", "kkore"], [0, 8, 1, "", "kshell"], [0, 8, 1, "id2", "lcc"], [0, 8, 1, "", "lpa"], [0, 8, 1, "id3", "pagerank"], [0, 8, 1, "", "sampling_path"], [0, 8, 1, "", "sssp"], [0, 8, 1, "id4", "voterank"], [0, 8, 1, "id5", "wcc"]], "graphscope": [[576, 9, 1, "", "Session"], [366, 12, 1, "", "Vertex"], [360, 8, 1, "", "attribute_assortativity_coefficient"], [360, 8, 1, "", "average_degree_connectivity"], [360, 8, 1, "", "average_shortest_path_length"], [360, 8, 1, "", "avg_clustering"], [360, 8, 1, "", "bfs"], [360, 8, 1, "", "cdlp"], [360, 8, 1, "", "clustering"], [367, 8, 1, "", "declare"], [360, 8, 1, "", "degree_assortativity_coefficient"], [360, 8, 1, "", "degree_centrality"], [360, 8, 1, "", "eigenvector_centrality"], [410, 8, 1, "", "g"], [411, 8, 1, "", "get_default_session"], [412, 8, 1, "", "graphlearn"], [413, 8, 1, "", "gremlin"], [414, 8, 1, "", "has_default_session"], [360, 8, 1, "", "hits"], [360, 8, 1, "", "is_simple_path"], [360, 8, 1, "", "k_core"], [360, 8, 1, "", "k_shell"], [360, 8, 1, "", "katz_centrality"], [360, 8, 1, "", "louvain"], [360, 8, 1, "", "lpa"], [360, 8, 1, "", "lpa_u2i"], [360, 8, 1, "", "numeric_assortativity_coefficient"], [360, 8, 1, "", "pagerank"], [360, 8, 1, "", "pagerank_nx"], [415, 14, 1, "", "session"], [416, 8, 1, "", "set_option"], [360, 8, 1, "", "sssp"], [360, 8, 1, "", "triangles"], [360, 8, 1, "", "voterank"], [360, 8, 1, "", "wcc"]], "graphscope.Session": [[576, 10, 1, "", "__enter__"], [576, 10, 1, "", "__exit__"], [576, 10, 1, "", "__init__"], [576, 10, 1, "", "add_lib"], [576, 10, 1, "", "as_default"], [576, 10, 1, "", "close"], [576, 10, 1, "", "connected"], [576, 11, 1, "", "engine_config"], [576, 10, 1, "", "g"], [576, 10, 1, "", "get_config"], [576, 10, 1, "", "get_vineyard_object_mapping_table"], [576, 10, 1, "", "graphlearn"], [576, 11, 1, "", "info"], [576, 10, 1, "", "interactive"], [576, 10, 1, "", "load_from"], [576, 10, 1, "", "restore_from_pvc"], [576, 10, 1, "", "run_fetches"], [576, 10, 1, "", "store_to_pvc"]], "graphscope.analytical.app": [[360, 9, 1, "", "JavaApp"]], "graphscope.analytical.app.JavaApp": [[360, 10, 1, "", "__call__"], [360, 10, 1, "", "__init__"], [360, 10, 1, "", "is_compatible"], [360, 10, 1, "", "signature"]], "graphscope.framework.app": [[360, 9, 1, "", "App"], [360, 9, 1, "", "AppAssets"], [360, 9, 1, "", "AppDAGNode"], [368, 8, 1, "", "load_app"]], "graphscope.framework.app.App": [[360, 10, 1, "", "__del__"], [360, 10, 1, "", "__init__"], [360, 11, 1, "", "key"], [360, 11, 1, "", "signature"]], "graphscope.framework.app.AppAssets": [[360, 10, 1, "", "__init__"], [360, 11, 1, "", "algo"], [360, 11, 1, "", "context_type"], [360, 11, 1, "", "gar"], [360, 10, 1, "", "is_compatible"], [360, 11, 1, "", "signature"], [360, 11, 1, "", "type"]], "graphscope.framework.context": [[361, 9, 1, "", "BaseContextDAGNode"], [361, 9, 1, "", "Context"], [361, 9, 1, "", "DynamicVertexDataContext"], [361, 9, 1, "", "LabeledVertexDataContextDAGNode"], [361, 9, 1, "", "LabeledVertexPropertyContextDAGNode"], [361, 9, 1, "", "ResultDAGNode"], [361, 9, 1, "", "TensorContextDAGNode"], [361, 9, 1, "", "VertexDataContextDAGNode"], [361, 9, 1, "", "VertexPropertyContextDAGNode"]], "graphscope.framework.context.BaseContextDAGNode": [[361, 10, 1, "", "to_dataframe"], [361, 10, 1, "", "to_numpy"], [361, 10, 1, "", "to_vineyard_dataframe"], [361, 10, 1, "", "to_vineyard_tensor"]], "graphscope.framework": [[573, 13, 0, "-", "dag_utils"]], "graphscope.framework.dag_utils": [[369, 8, 1, "", "add_column"], [370, 8, 1, "", "add_labels_to_graph"], [371, 8, 1, "", "arrow_to_dynamic"], [372, 8, 1, "", "bind_app"], [373, 8, 1, "", "clear_edges"], [374, 8, 1, "", "clear_graph"], [375, 8, 1, "", "context_to_dataframe"], [376, 8, 1, "", "context_to_numpy"], [377, 8, 1, "", "copy_graph"], [378, 8, 1, "", "create_app"], [379, 8, 1, "", "create_graph"], [380, 8, 1, "", "create_graph_view"], [381, 8, 1, "", "create_loader"], [382, 8, 1, "", "create_subgraph"], [383, 8, 1, "", "create_unload_op"], [384, 8, 1, "", "dynamic_to_arrow"], [385, 8, 1, "", "get_context_data"], [386, 8, 1, "", "graph_to_dataframe"], [387, 8, 1, "", "graph_to_numpy"], [388, 8, 1, "", "gremlin_to_subgraph"], [389, 8, 1, "", "modify_edges"], [390, 8, 1, "", "modify_vertices"], [391, 8, 1, "", "output"], [392, 8, 1, "", "project_arrow_property_graph"], [393, 8, 1, "", "project_to_simple"], [394, 8, 1, "", "report_graph"], [395, 8, 1, "", "run_app"], [396, 8, 1, "", "to_data_sink"], [397, 8, 1, "", "to_directed"], [398, 8, 1, "", "to_undirected"], [399, 8, 1, "", "to_vineyard_dataframe"], [400, 8, 1, "", "to_vineyard_tensor"], [401, 8, 1, "", "unload_app"], [402, 8, 1, "", "unload_context"], [403, 8, 1, "", "unload_graph"]], "graphscope.framework.graph": [[431, 9, 1, "", "Graph"], [431, 9, 1, "", "GraphDAGNode"]], "graphscope.framework.graph.Graph": [[431, 10, 1, "", "__init__"], [431, 10, 1, "", "add_column"], [431, 10, 1, "", "add_edges"], [431, 10, 1, "", "add_vertices"], [431, 10, 1, "", "consolidate_columns"], [431, 10, 1, "", "detach"], [431, 11, 1, "", "key"], [431, 10, 1, "", "load_from"], [431, 10, 1, "", "loaded"], [431, 10, 1, "", "project"], [431, 10, 1, "", "save_to"], [431, 11, 1, "", "schema"], [431, 11, 1, "", "schema_path"], [431, 11, 1, "", "session_id"], [431, 10, 1, "", "to_dataframe"], [431, 10, 1, "", "to_directed"], [431, 10, 1, "", "to_numpy"], [431, 10, 1, "", "to_undirected"], [431, 11, 1, "", "vineyard_id"]], "graphscope.framework.graph.GraphDAGNode": [[431, 10, 1, "", "__init__"], [431, 10, 1, "", "add_column"], [431, 10, 1, "", "add_edges"], [431, 10, 1, "", "add_vertices"], [431, 10, 1, "", "consolidate_columns"], [431, 10, 1, "", "project"]], "graphscope.framework.graph_builder": [[431, 8, 1, "", "load_from"]], "graphscope.framework.loader": [[431, 9, 1, "", "Loader"]], "graphscope.framework.loader.Loader": [[431, 10, 1, "", "__init__"]], "graphscope.framework.operation": [[573, 9, 1, "", "Operation"]], "graphscope.framework.operation.Operation": [[404, 10, 1, "", "__init__"], [405, 10, 1, "", "as_op_def"], [406, 10, 1, "", "eval"], [407, 11, 1, "", "evaluated"], [408, 11, 1, "", "key"], [409, 11, 1, "", "signature"]], "graphscope.interactive.query": [[432, 9, 1, "", "InteractiveQuery"]], "graphscope.interactive.query.InteractiveQuery": [[432, 10, 1, "", "__init__"], [432, 10, 1, "", "close"], [432, 11, 1, "", "cypher_driver"], [432, 11, 1, "", "cypher_url"], [432, 10, 1, "", "execute"], [432, 11, 1, "", "graph_url"], [432, 11, 1, "", "gremlin_client"], [432, 11, 1, "", "gremlin_url"], [432, 11, 1, "", "object_id"], [432, 11, 1, "", "session"], [432, 11, 1, "", "session_id"], [432, 10, 1, "", "subgraph"], [432, 10, 1, "", "submit"], [432, 10, 1, "", "traversal_source"]], "graphscope.learning.graph": [[433, 9, 1, "", "Graph"]], "graphscope.learning.graph.Graph": [[433, 10, 1, "", "E"], [433, 10, 1, "", "V"], [433, 10, 1, "", "__init__"], [433, 10, 1, "", "get_handle"]], "graphscope.nx": [[569, 9, 1, "", "DiGraph"], [569, 9, 1, "", "Graph"], [571, 8, 1, "", "read_adjlist"], [571, 8, 1, "", "read_edgelist"]], "graphscope.nx.DiGraph": [[569, 10, 1, "", "__contains__"], [569, 10, 1, "", "__getitem__"], [569, 10, 1, "", "__init__"], [569, 10, 1, "", "__iter__"], [569, 10, 1, "", "__len__"], [569, 10, 1, "", "add_edge"], [569, 10, 1, "", "add_edges_from"], [569, 10, 1, "", "add_node"], [569, 10, 1, "", "add_nodes_from"], [569, 10, 1, "", "add_weighted_edges_from"], [569, 11, 1, "", "adj"], [569, 10, 1, "", "adjacency"], [569, 14, 1, "", "adjlist_inner_dict_factory"], [569, 14, 1, "", "adjlist_outer_dict_factory"], [569, 10, 1, "", "clear"], [569, 10, 1, "", "clear_edges"], [569, 10, 1, "", "copy"], [569, 11, 1, "", "degree"], [569, 14, 1, "", "edge_attr_dict_factory"], [569, 10, 1, "", "edge_subgraph"], [569, 11, 1, "", "edges"], [569, 10, 1, "", "get_edge_data"], [569, 14, 1, "", "graph_attr_dict_factory"], [569, 14, 1, "", "graph_cache_factory"], [569, 11, 1, "", "graph_type"], [569, 10, 1, "", "has_edge"], [569, 10, 1, "", "has_node"], [569, 10, 1, "", "has_predecessor"], [569, 10, 1, "", "has_successor"], [569, 11, 1, "", "in_degree"], [569, 11, 1, "", "in_edges"], [569, 10, 1, "", "is_directed"], [569, 10, 1, "", "is_multigraph"], [569, 11, 1, "", "key"], [569, 11, 1, "", "name"], [569, 10, 1, "", "nbunch_iter"], [569, 10, 1, "", "neighbors"], [569, 14, 1, "", "node_attr_dict_factory"], [569, 14, 1, "", "node_dict_factory"], [569, 11, 1, "", "nodes"], [569, 10, 1, "", "number_of_edges"], [569, 10, 1, "", "number_of_nodes"], [569, 11, 1, "", "op"], [569, 10, 1, "", "order"], [569, 11, 1, "", "out_degree"], [569, 11, 1, "", "out_edges"], [569, 11, 1, "", "pred"], [569, 10, 1, "", "predecessors"], [569, 10, 1, "", "remove_edge"], [569, 10, 1, "", "remove_edges_from"], [569, 10, 1, "", "remove_node"], [569, 10, 1, "", "remove_nodes_from"], [569, 10, 1, "", "reverse"], [569, 11, 1, "", "schema"], [569, 11, 1, "", "session"], [569, 11, 1, "", "session_id"], [569, 10, 1, "", "set_edge_data"], [569, 10, 1, "", "set_node_data"], [569, 11, 1, "", "signature"], [569, 10, 1, "", "size"], [569, 10, 1, "", "subgraph"], [569, 11, 1, "", "succ"], [569, 10, 1, "", "successors"], [569, 10, 1, "", "to_directed"], [569, 10, 1, "", "to_undirected"], [569, 10, 1, "", "to_undirected_class"], [569, 10, 1, "", "update"]], "graphscope.nx.Graph": [[569, 10, 1, "", "__contains__"], [569, 10, 1, "", "__getitem__"], [572, 8, 1, "", "__init__"], [569, 10, 1, "", "__iter__"], [569, 10, 1, "", "__len__"], [572, 8, 1, "", "_convert_arrow_to_dynamic"], [569, 10, 1, "", "add_edge"], [569, 10, 1, "", "add_edges_from"], [569, 10, 1, "", "add_node"], [569, 10, 1, "", "add_nodes_from"], [569, 10, 1, "", "add_weighted_edges_from"], [569, 11, 1, "", "adj"], [569, 10, 1, "", "adjacency"], [569, 14, 1, "", "adjlist_inner_dict_factory"], [569, 14, 1, "", "adjlist_outer_dict_factory"], [569, 10, 1, "", "clear"], [569, 10, 1, "", "clear_edges"], [569, 10, 1, "", "copy"], [569, 11, 1, "", "degree"], [569, 14, 1, "", "edge_attr_dict_factory"], [569, 10, 1, "", "edge_subgraph"], [569, 11, 1, "", "edges"], [569, 10, 1, "", "get_edge_data"], [569, 14, 1, "", "graph_attr_dict_factory"], [569, 14, 1, "", "graph_cache_factory"], [569, 11, 1, "", "graph_type"], [569, 10, 1, "", "has_edge"], [569, 10, 1, "", "has_node"], [569, 10, 1, "", "is_directed"], [569, 10, 1, "", "is_multigraph"], [569, 11, 1, "", "key"], [569, 11, 1, "", "name"], [569, 10, 1, "", "nbunch_iter"], [569, 10, 1, "", "neighbors"], [569, 14, 1, "", "node_attr_dict_factory"], [569, 14, 1, "", "node_dict_factory"], [569, 11, 1, "", "nodes"], [569, 10, 1, "", "number_of_edges"], [569, 10, 1, "", "number_of_nodes"], [569, 11, 1, "", "op"], [569, 10, 1, "", "order"], [569, 10, 1, "", "remove_edge"], [569, 10, 1, "", "remove_edges_from"], [569, 10, 1, "", "remove_node"], [569, 10, 1, "", "remove_nodes_from"], [569, 11, 1, "", "schema"], [569, 11, 1, "", "session"], [569, 11, 1, "", "session_id"], [569, 10, 1, "", "set_edge_data"], [569, 10, 1, "", "set_node_data"], [569, 11, 1, "", "signature"], [569, 10, 1, "", "size"], [569, 10, 1, "", "subgraph"], [569, 10, 1, "", "to_directed"], [569, 10, 1, "", "to_undirected"], [569, 10, 1, "", "to_undirected_class"], [569, 10, 1, "", "update"]], "graphscope.nx.builtin": [[434, 8, 1, "", "average_clustering"], [434, 8, 1, "", "average_shortest_path_length"], [434, 8, 1, "", "bfs_edges"], [434, 8, 1, "", "clustering"], [434, 8, 1, "", "degree_centrality"], [434, 8, 1, "", "eigenvector_centrality"], [434, 8, 1, "", "has_path"], [434, 8, 1, "", "hits"], [434, 8, 1, "", "in_degree_centrality"], [434, 8, 1, "", "k_core"], [434, 8, 1, "", "katz_centrality"], [434, 8, 1, "", "out_degree_centrality"], [434, 8, 1, "", "triangles"]], "graphscope.nx.classes": [[435, 13, 0, "-", "function"]], "graphscope.nx.classes.function": [[436, 8, 1, "", "add_cycle"], [437, 8, 1, "", "add_path"], [438, 8, 1, "", "add_star"], [439, 8, 1, "", "all_neighbors"], [440, 8, 1, "", "common_neighbors"], [441, 8, 1, "", "create_empty_copy"], [442, 8, 1, "", "degree"], [443, 8, 1, "", "degree_histogram"], [444, 8, 1, "", "density"], [445, 8, 1, "", "edge_subgraph"], [446, 8, 1, "", "edges"], [447, 8, 1, "", "freeze"], [448, 8, 1, "", "induced_subgraph"], [449, 8, 1, "", "info"], [450, 8, 1, "", "is_directed"], [451, 8, 1, "", "is_empty"], [452, 8, 1, "", "is_frozen"], [453, 8, 1, "", "is_negatively_weighted"], [454, 8, 1, "", "is_weighted"], [455, 8, 1, "", "neighbors"], [456, 8, 1, "", "nodes"], [457, 8, 1, "", "nodes_with_selfloops"], [458, 8, 1, "", "non_edges"], [459, 8, 1, "", "non_neighbors"], [460, 8, 1, "", "number_of_edges"], [461, 8, 1, "", "number_of_nodes"], [462, 8, 1, "", "number_of_selfloops"], [463, 8, 1, "", "selfloop_edges"], [464, 8, 1, "", "subgraph"], [465, 8, 1, "", "to_directed"], [466, 8, 1, "", "to_undirected"]], "graphscope.nx.generators": [[568, 13, 0, "-", "atlas"], [568, 13, 0, "-", "classic"], [568, 13, 0, "-", "community"], [568, 13, 0, "-", "degree_seq"], [568, 13, 0, "-", "directed"], [568, 13, 0, "-", "duplication"], [568, 13, 0, "-", "ego"], [568, 13, 0, "-", "expanders"], [568, 13, 0, "-", "geometric"], [568, 13, 0, "-", "harary_graph"], [568, 13, 0, "-", "intersection"], [568, 13, 0, "-", "joint_degree_seq"], [568, 13, 0, "-", "mycielski"], [568, 13, 0, "-", "nonisomorphic_trees"], [568, 13, 0, "-", "small"], [568, 13, 0, "-", "social"], [568, 13, 0, "-", "spectral_graph_forge"], [568, 13, 0, "-", "sudoku"], [568, 13, 0, "-", "trees"], [568, 13, 0, "-", "triads"]], "graphscope.nx.generators.atlas": [[467, 8, 1, "", "graph_atlas"], [468, 8, 1, "", "graph_atlas_g"]], "graphscope.nx.generators.classic": [[469, 8, 1, "", "balanced_tree"], [470, 8, 1, "", "barbell_graph"], [471, 8, 1, "", "binomial_tree"], [472, 8, 1, "", "circulant_graph"], [473, 8, 1, "", "circular_ladder_graph"], [474, 8, 1, "", "complete_graph"], [475, 8, 1, "", "complete_multipartite_graph"], [476, 8, 1, "", "cycle_graph"], [477, 8, 1, "", "dorogovtsev_goltsev_mendes_graph"], [478, 8, 1, "", "empty_graph"], [479, 8, 1, "", "full_rary_tree"], [480, 8, 1, "", "ladder_graph"], [481, 8, 1, "", "lollipop_graph"], [482, 8, 1, "", "null_graph"], [483, 8, 1, "", "path_graph"], [484, 8, 1, "", "star_graph"], [485, 8, 1, "", "trivial_graph"], [486, 8, 1, "", "turan_graph"], [487, 8, 1, "", "wheel_graph"]], "graphscope.nx.generators.community": [[488, 8, 1, "", "LFR_benchmark_graph"], [489, 8, 1, "", "caveman_graph"], [490, 8, 1, "", "connected_caveman_graph"], [491, 8, 1, "", "gaussian_random_partition_graph"], [492, 8, 1, "", "planted_partition_graph"], [493, 8, 1, "", "random_partition_graph"], [494, 8, 1, "", "relaxed_caveman_graph"], [495, 8, 1, "", "ring_of_cliques"], [496, 8, 1, "", "stochastic_block_model"], [497, 8, 1, "", "windmill_graph"]], "graphscope.nx.generators.degree_seq": [[498, 8, 1, "", "configuration_model"], [499, 8, 1, "", "degree_sequence_tree"], [500, 8, 1, "", "directed_configuration_model"], [501, 8, 1, "", "directed_havel_hakimi_graph"], [502, 8, 1, "", "expected_degree_graph"], [503, 8, 1, "", "havel_hakimi_graph"], [504, 8, 1, "", "random_degree_sequence_graph"]], "graphscope.nx.generators.directed": [[505, 8, 1, "", "gn_graph"], [506, 8, 1, "", "gnc_graph"], [507, 8, 1, "", "gnr_graph"], [508, 8, 1, "", "random_k_out_graph"], [509, 8, 1, "", "scale_free_graph"]], "graphscope.nx.generators.duplication": [[510, 8, 1, "", "duplication_divergence_graph"], [511, 8, 1, "", "partial_duplication_graph"]], "graphscope.nx.generators.ego": [[512, 8, 1, "", "ego_graph"]], "graphscope.nx.generators.expanders": [[513, 8, 1, "", "chordal_cycle_graph"], [514, 8, 1, "", "margulis_gabber_galil_graph"], [515, 8, 1, "", "paley_graph"]], "graphscope.nx.generators.geometric": [[516, 8, 1, "", "geographical_threshold_graph"], [517, 8, 1, "", "random_geometric_graph"], [518, 8, 1, "", "soft_random_geometric_graph"], [519, 8, 1, "", "thresholded_random_geometric_graph"], [520, 8, 1, "", "waxman_graph"]], "graphscope.nx.generators.harary_graph": [[521, 8, 1, "", "hkn_harary_graph"], [522, 8, 1, "", "hnm_harary_graph"]], "graphscope.nx.generators.intersection": [[523, 8, 1, "", "general_random_intersection_graph"], [524, 8, 1, "", "k_random_intersection_graph"], [525, 8, 1, "", "uniform_random_intersection_graph"]], "graphscope.nx.generators.joint_degree_seq": [[526, 8, 1, "", "directed_joint_degree_graph"], [527, 8, 1, "", "is_valid_directed_joint_degree"], [528, 8, 1, "", "is_valid_joint_degree"], [529, 8, 1, "", "joint_degree_graph"]], "graphscope.nx.generators.mycielski": [[530, 8, 1, "", "mycielski_graph"], [531, 8, 1, "", "mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees": [[532, 8, 1, "", "nonisomorphic_trees"], [533, 8, 1, "", "number_of_nonisomorphic_trees"]], "graphscope.nx.generators.small": [[534, 8, 1, "", "LCF_graph"], [535, 8, 1, "", "bull_graph"], [536, 8, 1, "", "chvatal_graph"], [537, 8, 1, "", "cubical_graph"], [538, 8, 1, "", "desargues_graph"], [539, 8, 1, "", "diamond_graph"], [540, 8, 1, "", "dodecahedral_graph"], [541, 8, 1, "", "frucht_graph"], [542, 8, 1, "", "heawood_graph"], [543, 8, 1, "", "house_graph"], [544, 8, 1, "", "house_x_graph"], [545, 8, 1, "", "icosahedral_graph"], [546, 8, 1, "", "krackhardt_kite_graph"], [547, 8, 1, "", "make_small_graph"], [548, 8, 1, "", "moebius_kantor_graph"], [549, 8, 1, "", "octahedral_graph"], [550, 8, 1, "", "pappus_graph"], [551, 8, 1, "", "petersen_graph"], [552, 8, 1, "", "sedgewick_maze_graph"], [553, 8, 1, "", "tetrahedral_graph"], [554, 8, 1, "", "truncated_cube_graph"], [555, 8, 1, "", "truncated_tetrahedron_graph"], [556, 8, 1, "", "tutte_graph"]], "graphscope.nx.generators.social": [[557, 8, 1, "", "davis_southern_women_graph"], [558, 8, 1, "", "florentine_families_graph"], [559, 8, 1, "", "karate_club_graph"], [560, 8, 1, "", "les_miserables_graph"]], "graphscope.nx.generators.spectral_graph_forge": [[561, 8, 1, "", "spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[562, 8, 1, "", "sudoku_graph"]], "graphscope.nx.generators.trees": [[563, 8, 1, "", "prefix_tree"], [564, 8, 1, "", "random_tree"]], "graphscope.nx.generators.triads": [[565, 8, 1, "", "triad_graph"]], "gs_interactive.client": [[298, 13, 0, "-", "driver"], [302, 13, 0, "-", "result"], [303, 13, 0, "module-0", "session"], [304, 13, 0, "-", "status"], [299, 13, 0, "module-0", "utils"]], "gs_interactive.client.driver": [[298, 9, 1, "", "Driver"]], "gs_interactive.client.driver.Driver": [[298, 10, 1, "", "__init__"], [298, 10, 1, "", "close"], [298, 10, 1, "", "getDefaultSession"], [298, 10, 1, "", "getNeo4jEndpoint"], [298, 10, 1, "", "getNeo4jSession"], [298, 10, 1, "", "read_endpoints_from_env"], [298, 10, 1, "", "session"]], "gs_interactive.client.result": [[302, 9, 1, "", "Result"]], "gs_interactive.client.result.Result": [[302, 10, 1, "", "__init__"], [302, 10, 1, "", "error"], [302, 10, 1, "", "from_exception"], [302, 10, 1, "", "from_response"], [302, 10, 1, "", "get_status"], [302, 10, 1, "", "get_status_message"], [302, 10, 1, "", "get_value"], [302, 10, 1, "", "is_error"], [302, 10, 1, "", "is_ok"], [302, 10, 1, "", "ok"]], "gs_interactive.client.session": [[303, 9, 1, "", "DefaultSession"], [303, 9, 1, "", "Session"]], "gs_interactive.client.session.DefaultSession": [[303, 10, 1, "", "__init__"], [303, 10, 1, "", "add_edge"], [303, 10, 1, "", "add_vertex"], [303, 10, 1, "", "bulk_loading"], [303, 10, 1, "", "call_procedure"], [303, 10, 1, "", "call_procedure_current"], [303, 10, 1, "", "call_procedure_current_raw"], [303, 10, 1, "", "call_procedure_raw"], [303, 10, 1, "", "cancel_job"], [303, 10, 1, "", "create_edge_type"], [303, 10, 1, "", "create_graph"], [303, 10, 1, "", "create_procedure"], [303, 10, 1, "", "create_vertex_type"], [303, 10, 1, "", "delete_edge"], [303, 10, 1, "", "delete_edge_type"], [303, 10, 1, "", "delete_graph"], [303, 10, 1, "", "delete_procedure"], [303, 10, 1, "", "delete_vertex"], [303, 10, 1, "", "delete_vertex_type"], [303, 10, 1, "", "ensure_param_str"], [303, 10, 1, "", "get_edge"], [303, 10, 1, "", "get_graph_meta"], [303, 10, 1, "", "get_graph_schema"], [303, 10, 1, "", "get_graph_statistics"], [303, 10, 1, "", "get_job"], [303, 10, 1, "", "get_procedure"], [303, 10, 1, "", "get_service_status"], [303, 10, 1, "", "get_snapshot_status"], [303, 10, 1, "", "get_vertex"], [303, 10, 1, "", "list_graphs"], [303, 10, 1, "", "list_jobs"], [303, 10, 1, "", "list_procedures"], [303, 10, 1, "", "restart_service"], [303, 10, 1, "", "start_service"], [303, 10, 1, "", "stop_service"], [303, 10, 1, "", "try_upload_files"], [303, 10, 1, "", "update_edge"], [303, 10, 1, "", "update_edge_type"], [303, 10, 1, "", "update_procedure"], [303, 10, 1, "", "update_vertex"], [303, 10, 1, "", "update_vertex_type"], [303, 10, 1, "", "upload_and_replace_input_inplace"], [303, 10, 1, "", "upload_file"]], "gs_interactive.client.status": [[304, 9, 1, "", "Status"]], "gs_interactive.client.status.Status": [[304, 10, 1, "", "__init__"], [304, 10, 1, "", "from_exception"], [304, 10, 1, "", "from_response"], [304, 10, 1, "", "get_code"], [304, 11, 1, "", "get_message"], [304, 10, 1, "", "is_error"], [304, 10, 1, "", "is_ok"], [304, 10, 1, "", "ok"], [304, 10, 1, "", "server_internal_error"]], "gs_interactive.client.utils": [[299, 9, 1, "", "Decoder"], [299, 9, 1, "", "Encoder"]], "gs_interactive.client.utils.Decoder": [[299, 10, 1, "", "__init__"], [299, 10, 1, "", "get_byte"], [299, 10, 1, "", "get_bytes"], [299, 10, 1, "", "get_double"], [299, 10, 1, "", "get_int"], [299, 10, 1, "", "get_long"], [299, 10, 1, "", "get_string"], [299, 10, 1, "", "is_empty"]], "gs_interactive.client.utils.Encoder": [[299, 10, 1, "", "__init__"], [299, 10, 1, "", "get_bytes"], [299, 10, 1, "", "put_byte"], [299, 10, 1, "", "put_bytes"], [299, 10, 1, "", "put_double"], [299, 10, 1, "", "put_int"], [299, 10, 1, "", "put_long"], [299, 10, 1, "", "put_string"]], "networkx.generators": [[568, 13, 0, "-", "internet_as_graphs"], [568, 13, 0, "-", "stochastic"]], "networkx.generators.internet_as_graphs": [[566, 8, 1, "", "random_internet_as_graph"]], "networkx.generators.stochastic": [[567, 8, 1, "", "stochastic_graph"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:function", "9": "py:class", "10": "py:method", "11": "py:property", "12": "py:data", "13": "py:module", "14": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "function", "Python function"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "property", "Python property"], "12": ["py", "data", "Python data"], "13": ["py", "module", "Python module"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 6, 132, 338, 348, 429, 584], "algorithm": [0, 1, 2, 6, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 34, 338, 417, 434, 584, 586], "all": [0, 31, 32, 36, 41], "pair": 0, "shortest": 0, "path": [0, 325, 331, 333, 335], "length": 0, "attribut": [0, 20, 418, 435], "assort": 0, "averag": 0, "degre": [0, 442, 568], "connect": [0, 29, 30, 126, 132, 212, 300, 307, 327, 334, 582, 589], "between": [0, 331, 578], "central": [0, 17], "breadth": 0, "first": [0, 321], "search": 0, "cdlp": 0, "close": [0, 126, 307, 589], "cluster": [0, 27, 30, 33, 41, 321, 344, 346], "coeffici": 0, "depth": 0, "eigenvector": 0, "hyperlink": 0, "induc": [0, 20], "topic": 0, "katz": 0, "k": 0, "core": [0, 325], "shell": [0, 307, 327], "label": [0, 333, 335, 348, 418, 581, 602], "propag": 0, "lcc": 0, "pagerank": [0, 311], "sampl": [0, 128, 130, 333, 342, 354, 417, 421, 423, 426, 429], "singl": [0, 317], "sourc": [0, 17, 31, 32, 129, 130, 132, 333, 364, 418, 424, 427, 428], "voterank": 0, "wcc": 0, "custom": [1, 23, 27, 128, 129, 132, 324], "aggreg": [1, 331, 333, 335, 339], "local": [1, 7, 32, 36, 38, 41, 45, 134, 323, 324, 325, 333, 340, 341, 345, 347, 581, 582], "vertex": [1, 10, 24, 130, 335, 348, 366, 575, 581, 602], "map": [1, 130, 313, 578], "support": [1, 11, 23, 130, 329, 333, 338], "deploy": [2, 27, 38, 132, 319, 321, 325], "gae": [2, 351, 586, 590], "prerequisit": [2, 16, 27, 29, 30, 32, 33, 309, 321, 582], "onli": [2, 37], "python": [2, 15, 18, 31, 35, 36, 46, 125, 300, 301, 306, 327, 334, 338, 358, 574, 582, 586, 594], "sdk": [2, 16, 34, 46, 125, 212, 300, 301, 306, 311, 326, 334, 362, 582], "helm": [2, 29, 132], "execut": [2, 34, 328, 349], "graph": [2, 9, 11, 13, 19, 20, 30, 33, 34, 45, 129, 130, 131, 134, 212, 300, 306, 310, 316, 317, 319, 325, 326, 328, 331, 335, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 417, 419, 420, 421, 422, 423, 425, 429, 431, 433, 435, 568, 569, 571, 572, 578, 580, 581, 582, 583, 584, 590], "analyt": [2, 3, 4, 7, 10, 13, 24, 31, 34, 316, 319, 338, 349, 350, 352, 357, 359, 360, 590], "uninstal": [2, 29, 582], "design": [3, 9, 34, 322, 325, 338, 339, 349, 427, 581], "engin": [3, 4, 7, 9, 10, 12, 24, 31, 34, 36, 128, 134, 306, 319, 324, 338, 340, 341, 345, 346, 347, 349, 357, 359, 581, 590], "dev": [4, 32, 36, 41, 45, 134, 323, 340], "test": [4, 36, 37, 41, 45, 46, 134, 300, 323, 340, 346, 347, 424], "setup": [4, 32, 325], "understand": [4, 45, 134], "codebas": [4, 45, 134], "make": [4, 20], "modif": 4, "build": [4, 17, 32, 36, 41, 45, 134, 320, 323, 326, 340, 364, 417, 424, 582, 602], "faq": [5, 331], "program": [6, 12, 14, 34, 306, 317, 427], "model": [6, 12, 14, 15, 16, 17, 24, 34, 46, 131, 310, 339, 344, 345, 346, 347, 351, 354, 417, 425, 429, 581], "flash": [6, 15, 351], "motiv": [6, 9, 322, 325, 349, 581], "The": [6, 19, 30, 310, 322, 580], "overview": [6, 9, 12, 310, 319, 320, 326, 425, 582], "api": [6, 9, 12, 19, 20, 46, 127, 212, 301, 305, 326, 328, 359, 362, 363, 418, 429, 570, 574, 598], "strong": 6, "express": [6, 333, 335], "implement": [6, 15, 17, 37, 427, 581], "architectur": [6, 12, 322, 578], "optim": [6, 13, 325, 331, 347], "get": [7, 17, 37, 46, 126, 212, 300, 306, 307, 315, 324, 325, 326, 333, 341, 350, 424, 579], "start": [7, 46, 126, 129, 134, 212, 300, 306, 307, 315, 323, 324, 325, 326, 335, 341, 350, 429, 579], "instal": [7, 27, 29, 30, 31, 32, 36, 37, 45, 46, 134, 212, 300, 307, 309, 319, 324, 325, 340, 341, 424, 582, 589], "run": [7, 15, 16, 17, 18, 21, 22, 23, 37, 41, 45, 307, 317, 320, 324, 326, 333, 341, 346, 424], "graphscop": [7, 10, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 36, 41, 47, 67, 75, 94, 95, 106, 110, 121, 306, 312, 317, 319, 324, 341, 349, 352, 354, 355, 356, 359, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 578, 580, 590, 594, 598, 599], "what": [7, 14, 324, 331, 341, 352, 354, 355, 589], "": [7, 324, 331, 341, 359, 589], "next": [7, 324, 341, 355, 589], "guid": [8, 35, 36, 44, 133, 300, 332, 343, 582, 586, 587], "exampl": [8, 17, 22, 23, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 154, 173, 174, 180, 183, 189, 205, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 326, 332, 333, 343, 586, 587], "ingress": [9, 351], "increment": [9, 12], "messag": [9, 339], "driven": 9, "differenti": 9, "flexibl": [9, 34], "memoiz": 9, "distribut": [9, 317, 419, 427], "runtim": [9, 34, 427], "kei": [10, 310, 328, 331, 338, 408], "concept": [10, 581], "loadstrategi": 10, "onlyout": 10, "onlyin": 10, "bothinout": 10, "partitionstrategi": 10, "edg": [10, 20, 130, 335, 348, 435, 446, 571, 581, 602], "cut": [10, 581], "vertic": [10, 335, 348, 602], "outervertex": 10, "innervertex": 10, "innervertexwithoutgoingedg": 10, "innervertexwithincomingedg": 10, "messagemanag": 10, "messagestrategi": 10, "alongoutgoingedgetooutervertex": 10, "alongincomingedgetooutervertex": 10, "alongedgetooutervertex": 10, "synconoutervertexastarget": 10, "synconoutervertexassourc": 10, "synconoutervertex": 10, "networkx": [11, 19, 20, 566, 567, 570], "compat": [11, 331], "convert": 11, "nx": [11, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565], "oper": [11, 20, 28, 329, 335, 404, 405, 406, 407, 408, 409, 427, 573], "storag": [12, 33, 34, 319, 349, 578, 581], "layer": [12, 349], "grape": [12, 17, 351, 364], "ffi": 12, "comput": [12, 317, 319, 349, 581], "applic": [12, 15, 22, 23, 335, 349, 584], "perform": [13, 19, 34, 331, 338, 357], "tune": 13, "memori": [13, 348, 583], "footprint": 13, "properti": [13, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 310, 329, 331, 333, 335, 348, 580, 581, 602], "data": [13, 45, 129, 130, 131, 212, 300, 301, 317, 321, 325, 329, 331, 348, 418, 425, 428, 429, 580, 582], "structur": [13, 212, 301, 329, 364, 435], "usag": [13, 46, 300, 320, 331, 348], "estim": [13, 577], "pie": [14, 16, 17, 18, 351, 362, 592], "i": [14, 333, 352, 354, 355], "workflow": [14, 338, 578], "tutori": [15, 16, 17, 18, 19, 20, 21, 22, 23, 325, 335, 337, 344, 345, 346, 347, 358], "develop": [15, 16, 17, 18, 22, 23, 36, 44, 45, 133, 134, 319, 417, 429, 582, 586], "your": [15, 16, 17, 18, 22, 37, 132, 321, 345, 347, 348, 417, 427, 586], "c": [15, 16, 35, 306, 586], "defin": [15, 16, 306, 311, 345, 346, 347, 427, 578], "A": [15, 129, 310, 319, 320, 325], "function": [15, 18, 346, 347, 360, 362, 417, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 576], "integr": [15, 37, 317, 325, 428], "client": [15, 27, 30, 36, 346, 419, 589], "step": [16, 129, 325, 326, 333, 335, 354], "1": [16, 129, 313, 326, 328, 418, 419, 421, 429, 582], "context": [16, 359, 361, 575], "class": [16, 298, 299, 302, 303, 304, 427, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "2": [16, 129, 313, 326, 328, 418, 419, 429, 582], "3": [16, 129, 313, 326, 328, 418, 419, 429, 582], "packag": [16, 31, 32, 326, 346, 424], "4": [16, 129, 313, 326, 328, 418, 429], "gar": 16, "file": [16, 27, 31, 130, 428, 580], "github": [16, 17, 25, 37], "templat": [16, 17], "java": [17, 35, 39, 212, 306, 326, 334, 337, 365, 586], "jar": 17, "own": [17, 18, 22, 132, 321, 348, 417, 427], "prepar": [17, 27, 30, 41, 45, 126, 307, 429], "jdk": [17, 364], "from": [17, 19, 20, 31, 32, 33, 130, 132, 319, 328, 335, 348, 364, 424, 578, 582], "maven": [17, 212], "repositori": [17, 320], "submit": [17, 22, 23, 37, 40, 212, 300, 307, 582], "javasdk": 17, "write": [18, 346, 582], "pregel": [18, 24, 362, 592], "us": [18, 20, 27, 32, 129, 132, 321, 328, 331, 338, 355, 424, 427, 429, 575, 578, 583], "math": [18, 592], "h": [18, 592], "how": [19, 37, 39, 40, 41, 318, 331, 340, 417, 427, 429, 590], "doe": 19, "analysi": [19, 349], "displai": 19, "speed": 19, "up": [19, 27, 30, 33], "over": 19, "creat": [20, 33, 37, 45, 129, 212, 300, 306, 311, 344, 347, 582], "an": [20, 328, 427], "empti": 20, "ad": [20, 348], "node": [20, 339, 344, 345, 346, 347, 435, 456], "examin": 20, "element": 20, "remov": [20, 321], "constructor": 20, "access": [20, 309, 326], "neighbor": [20, 347, 455], "deepcopi": 20, "subgraph": [20, 331, 333, 339, 342, 354, 464], "edge_subgraph": [20, 445], "copi": [20, 31], "direct": [20, 505, 506, 507, 508, 509, 568], "analyz": [20, 325], "object": [20, 360, 361, 419, 431, 573, 576], "transform": [20, 572], "builtin": [21, 311, 360, 434, 573], "giraph": 22, "try": [22, 129, 429], "some": [22, 335], "app": [22, 23, 359, 360, 368], "graphx": 23, "deploi": [23, 26, 27, 28, 29, 30, 128, 132, 309, 321, 582], "along": 23, "spark": 23, "includ": 23, "depend": [23, 31, 32, 134, 424], "toward": 23, "centric": [24, 339], "ga": 24, "simul": 24, "contact": 25, "u": 25, "slack": [25, 37], "discuss": [25, 37], "cloud": [26, 338, 418], "k8": [27, 344, 346, 590], "kubernet": [27, 30, 33, 38, 41, 344, 594, 599], "launch": [27, 45, 345, 346, 347], "default": 27, "paramet": [27, 47, 67, 75, 94, 95, 99, 106, 110, 121, 154, 173, 174, 178, 180, 183, 189, 205, 240, 259, 260, 265, 267, 269, 275, 291, 311, 346, 348], "frequent": [27, 314], "imag": [27, 32, 41, 424, 582], "uri": 27, "specifi": [27, 348], "number": 27, "worker": [27, 359], "provid": 27, "kubeconfig": 27, "other": [27, 129, 212, 321, 348, 428, 582], "than": 27, "mount": 27, "volum": 27, "inspect": 27, "clean": [27, 30, 33], "coordin": [28, 36, 43, 45, 46, 125, 126, 127], "configur": [28, 29, 128, 130, 320, 321, 324, 325, 346, 430, 582], "releas": [29, 37], "offlin": [29, 31, 582], "exist": 30, "vineyard": [30, 323, 351, 583], "lifecycl": 30, "load": [30, 129, 130, 328, 335, 344, 345, 346, 347, 348, 578, 580, 582, 583], "dataset": [30, 328, 348], "anoth": 30, "session": [30, 303, 344, 415, 576], "environ": [31, 32, 36, 41, 45, 134, 323, 328, 340], "wheel": [31, 424, 594], "download": [31, 307, 328], "destin": 31, "extract": [31, 326, 335], "them": [31, 348], "locat": [31, 326], "basic": [31, 335, 418], "gcc": 31, "g": [31, 410], "third": 31, "parti": 31, "stabl": 32, "version": 32, "preview": 32, "linux": [32, 594], "maco": [32, 594], "persist": [33, 582], "pv": 33, "pvc": 33, "store": [33, 212, 300, 306, 308, 311, 323, 582], "restor": 33, "framework": [34, 325, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "multi": [34, 575], "languag": [34, 310, 423], "high": [34, 338, 349, 582], "librari": [34, 338, 424], "code": [35, 37, 42, 132, 134, 427, 588], "style": [35, 37, 570, 581], "rust": 35, "script": [35, 45, 346, 589], "linter": 35, "checker": 35, "contain": [36, 45, 134, 340], "dep": [36, 45, 134, 340], "target": [36, 41, 348], "compon": 36, "individu": 36, "gsctl": [36, 45, 126, 128, 306, 589], "contribut": 37, "conduct": 37, "commun": [37, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 568], "report": [37, 318], "bug": [37, 318], "request": [37, 40, 47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291], "featur": [37, 310, 325, 338, 580, 582], "improv": 37, "document": [37, 46, 212, 301], "chang": [37, 589], "pre": 37, "commit": [37, 582], "minor": 37, "fix": 37, "fork": 37, "branch": [37, 333], "suit": 37, "format": [37, 418, 580, 582], "right": 37, "keep": 37, "pull": [37, 40], "updat": [37, 589], "merg": 37, "pr": 37, "maintain": 37, "ship": 37, "review": 37, "continu": 37, "debug": 38, "find": [38, 590], "log": [38, 578, 582, 590], "command": [38, 589], "techniqu": [38, 348], "instrument": 39, "automat": 39, "error": [42, 78, 134, 588], "interact": [45, 126, 128, 132, 134, 305, 306, 307, 309, 311, 312, 316, 319, 324, 350, 353, 357, 432, 582, 590], "manual": [45, 134, 323, 348], "via": [45, 126, 311, 327, 334], "new": [45, 129, 212, 300, 427, 582], "import": [45, 129, 130, 212, 300, 325, 346, 582], "refer": [46, 212, 301, 319, 359, 363, 365, 574, 581], "requir": [46, 212, 300], "pip": [46, 300, 424], "setuptool": [46, 300], "endpoint": [46, 328], "For": [46, 301, 330, 336, 581], "author": [46, 47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 212, 240, 259, 260, 267, 269, 275, 291, 301], "flex": [47, 67, 75, 94, 95, 106, 110, 121, 125, 319, 363], "rest": [47, 67, 75, 94, 95, 106, 110, 121, 127, 305, 326], "alertapi": 47, "create_alert_receiv": 47, "return": [47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291, 311], "type": [47, 67, 75, 94, 95, 106, 110, 121, 131, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291, 329, 348, 356, 362, 418, 569, 580], "http": [47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291], "header": [47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291], "respons": [47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291], "detail": [47, 67, 75, 94, 95, 106, 110, 121, 154, 173, 174, 180, 183, 189, 205, 240, 259, 260, 267, 269, 275, 291, 325, 581], "delete_alert_message_in_batch": 47, "delete_alert_receiver_by_id": 47, "delete_alert_rule_by_id": 47, "list_alert_messag": 47, "list_alert_receiv": 47, "list_alert_rul": 47, "update_alert_message_in_batch": 47, "update_alert_receiver_by_id": 47, "update_alert_rule_by_id": 47, "baseedgetyp": [48, 136, 222], "baseedgetypevertextypepairrelationsinn": [49, 137, 223], "baseedgetypevertextypepairrelationsinnerxcsrparam": [50, 138, 224], "basepropertymeta": [51, 139, 225], "basevertextyp": [52, 140, 226], "basevertextypexcsrparam": [53, 141, 227], "columnmap": [54, 142, 228], "columnmappingcolumn": 55, "createalertreceiverrequest": 56, "createalertrulerequest": 57, "createdataloadingjobrespons": 58, "createedgetyp": [59, 143, 229, 259], "creategraphrequest": [60, 144, 230], "creategraphrespons": [61, 145, 231], "creategraphschemarequest": [62, 146, 232], "createpropertymeta": [63, 149, 235], "createstoredprocrequest": 64, "createstoredprocrespons": 65, "createvertextyp": [66, 150, 236, 259], "datasourceapi": 67, "bind_datasource_in_batch": 67, "get_datasource_by_id": 67, "unbind_edge_datasourc": 67, "unbind_vertex_datasourc": 67, "dataloadingjobconfig": 68, "dataloadingjobconfigedgesinn": 69, "dataloadingjobconfigloadingconfig": 70, "dataloadingjobconfigloadingconfigformat": 71, "dataloadingjobconfigverticesinn": 72, "dataloadingmrjobconfig": 73, "datetyp": [74, 151, 237], "deploymentapi": 75, "get_deployment_info": 75, "get_deployment_pod_log": 75, "get_deployment_resource_usag": 75, "get_deployment_statu": 75, "get_storage_usag": 75, "edgemap": [76, 156, 242], "edgemappingtypetriplet": [77, 160, 246], "fixedchar": [79, 163, 249], "fixedcharchar": [80, 164, 250], "gsdatatyp": [81, 165, 251], "getalertmessagerespons": 82, "getalertreceiverrespons": 83, "getalertrulerespons": 84, "getedgetyp": [85, 166, 252], "getgraphrespons": [86, 167, 253], "getgraphschemarespons": [87, 168, 254], "getpodlogrespons": 88, "getpropertymeta": [89, 171, 257], "getresourceusagerespons": 90, "getstorageusagerespons": 91, "getstoredprocrespons": 92, "getvertextyp": [93, 172, 258], "graphapi": 94, "create_edge_typ": 94, "create_graph": [94, 379], "create_vertex_typ": 94, "delete_edge_type_by_nam": 94, "delete_graph_by_id": 94, "delete_vertex_type_by_nam": 94, "get_graph_by_id": 94, "get_schema_by_id": 94, "import_schema_by_id": 94, "list_graph": 94, "jobapi": 95, "delete_job_by_id": 95, "get_dataloading_job_config": 95, "get_job_by_id": 95, "list_job": 95, "submit_dataloading_job": 95, "jobstatu": [96, 176, 262], "longtext": [97, 177, 263], "nodestatu": 98, "podstatu": 100, "primitivetyp": [101, 179, 266], "resourceusag": 102, "runningdeploymentinfo": 103, "runningdeploymentstatu": 104, "schemamap": [105, 184, 270], "serviceapi": 106, "get_service_status_by_id": 106, "list_service_statu": 106, "restart_servic": 106, "start_servic": 106, "stop_servic": 106, "servicestatu": [107, 190, 276], "servicestatussdkendpoint": 108, "startservicerequest": [109, 192, 278], "storedprocedureapi": 110, "create_stored_procedur": 110, "delete_stored_procedure_by_id": 110, "get_stored_procedure_by_id": 110, "list_stored_procedur": 110, "update_stored_procedure_by_id": 110, "storedproceduremeta": [111, 194, 280], "stringtyp": [112, 195, 281], "stringtypestr": [113, 196, 282], "temporaltyp": [114, 197, 283], "temporaltypetempor": [115, 198, 284], "timestamptyp": [116, 199, 285], "typedvalu": [117, 200, 286], "updatealertmessagestatusrequest": 118, "updatestoredprocrequest": 119, "uploadfilerespons": [120, 202, 288], "utilsapi": 121, "upload_fil": 121, "varchar": [122, 203, 289], "varcharvarchar": [123, 204, 290], "vertexmap": [124, 208, 294], "servic": [126, 128, 129, 134, 212, 300, 301, 307, 309, 321, 323, 325, 326, 582], "check": [126, 307], "statu": [126, 304, 307], "destroi": [126, 307, 582], "instanc": [126, 307, 324, 582], "item": 128, "port": [128, 132], "shard": 128, "avail": [128, 582], "todo": 128, "bind": [129, 584], "job": 129, "more": 129, "complic": 129, "movi": 129, "option": [129, 134], "movie_graph": 129, "yaml": [129, 306], "job_config": 129, "column": 130, "csv": 130, "odp": 130, "tabl": [130, 313, 319, 418], "modern": 130, "breakdown": 130, "entiti": 131, "primit": 131, "string": 131, "tempor": 131, "arrai": [131, 581], "docker": [132, 134, 325, 340, 424, 594], "pack": 132, "push": 132, "registri": 132, "queri": [134, 212, 300, 306, 307, 310, 311, 316, 322, 325, 328, 331, 335, 349, 350, 420, 432, 582], "compil": [134, 308, 424, 427], "cmake": 134, "enabl": 134, "adminservic": 134, "transact": 134, "apiresponsewithcod": [135, 221], "enum": [137, 138, 147, 165, 167, 170, 176, 179, 185, 186, 190, 194], "relationenum": 137, "edgestoragestrategyenum": 138, "createprocedurerequest": [147, 233], "typeenum": [147, 170, 194], "createprocedurerespons": [148, 234], "deleteedgerequest": [152, 238], "deletevertexrequest": [153, 239], "edgeapi": [154, 240], "addedg": 154, "getedg": 154, "updateedg": 154, "edgedata": [155, 241], "edgemappingdestinationvertexmappingsinn": [157, 243], "edgemappingsourcevertexmappingsinn": [158, 244], "edgemappingsourcevertexmappingsinnercolumn": [159, 245], "edgerequest": [161, 247], "edgestatist": [162, 248], "primitivetypeenum": [165, 179], "storetypeenum": 167, "getgraphstatisticsrespons": [169, 255], "getprocedurerespons": [170, 256], "graphmanagementapi": [173, 259], "listgraph": [173, 259], "creategraph": [173, 259], "bulkload": [173, 259], "deletegraph": [173, 259], "getgraphmeta": [173, 259], "getgraphstatist": [173, 259], "getgraphschema": [173, 259], "jobmanagementapi": 174, "canceljob": [174, 260], "getjobbyid": [174, 260], "listjob": [174, 260], "jobrespons": [175, 261], "statusenum": 176, "proceduremanagementapi": 180, "createprocedur": [180, 267], "deleteprocedur": [180, 267], "getprocedur": [180, 267], "listprocedur": [180, 267], "updateprocedur": [180, 267], "queryrequest": [182, 268], "queryserviceapi": [183, 269], "callprocedur": [183, 269], "callprocedureoncurrentgraph": [183, 269], "schemamappingloadingconfig": [185, 271], "importoptionenum": 185, "schemamappingloadingconfigdatasourc": [186, 272], "schemeenum": 186, "schemamappingloadingconfigformat": [187, 273], "schemamappingloadingconfigxcsrparam": [188, 274], "servicemanagementapi": 189, "getservicestatu": [189, 275], "restartservic": [189, 275], "startservic": [189, 275], "stopservic": [189, 275], "deploymodeenum": 190, "snapshotstatu": [191, 277], "stopservicerequest": [193, 279], "updateprocedurerequest": [201, 287], "vertexapi": [205, 291], "addvertex": 205, "getvertex": 205, "updatevertex": 205, "vertexdata": [206, 292], "vertexedgerequest": [207, 293], "vertexrequest": [209, 295], "vertexstatist": [210, 296], "vertextypepairstatist": [211, 297], "user": [212, 337, 358, 418, 582, 586, 587], "procedur": [212, 300, 306, 308, 311], "cypher": [212, 300, 307, 308, 310, 327, 329, 338, 353, 582], "delet": [212, 300, 311, 582], "util": [212, 301, 319, 589], "add_edg": 240, "get_edg": 240, "update_edg": 240, "delete_edg": 240, "updatevertextyp": 259, "deletevertextyp": 259, "updateedgetyp": 259, "deleteedgetyp": 259, "getsnapshotstatu": 259, "gs_interact": [260, 267, 269, 275], "adminservicejobmanagementapi": 260, "modelproperti": 264, "adminserviceproceduremanagementapi": 267, "adminserviceservicemanagementapi": 275, "add_vertex": 291, "get_vertex": 291, "update_vertex": 291, "delete_vertex": 291, "driver": [298, 327], "encod": [299, 306, 417, 425], "decod": [299, 306], "result": [302, 320, 357, 575], "interfac": [303, 306, 326, 338, 427, 428, 581], "defaultsess": 303, "regist": [306, 427, 428], "call": [306, 311], "databas": [306, 356], "input": 306, "output": [306, 391], "simpl": 307, "glossari": [308, 351], "solid": 310, "foundat": 310, "limit": [310, 333, 335, 355, 582], "view": [311, 582], "neo4j": [311, 325, 330, 353], "nativ": [311, 325, 338], "tool": [311, 320, 325], "count_vertic": 311, "k_hop_neighbor": 311, "shortest_path_among_thre": 311, "introduct": [313, 325, 333, 421], "arrowfrag": 313, "0": [313, 328], "\u672f\u8bed": 313, "\u8f7d\u56fe": [313, 602], "\u521d\u59cb\u5316partition": 313, "\u6784\u5efa\u539f\u59cbarrow": 313, "shuffl": 313, "vtabl": 313, "\u6784\u5efavertex": 313, "basicarrowvertexmapbuild": 313, "5": [313, 328, 418], "\u6784\u5efafragment\u51c6\u5907": 313, "\u5904\u7406edg": 313, "basicevfragmentload": 313, "fragmentbuilder\u6570\u636e\u521d\u59cb\u5316": 313, "basicarrowfragmentbuild": 313, "6": 313, "fragment\u6784\u5efa": 313, "\u8bbf\u95eefragment": 313, "\u8bbf\u95ee\u9876\u70b9": 313, "\u8bbf\u95ee\u5185\u90e8\u70b9": 313, "\u8303\u56f4\u5916\u90e8\u70b9": 313, "\u8bbf\u95ee\u5168\u90e8\u70b9": 313, "\u8bbf\u95ee\u9876\u70b9\u6570\u636e": 313, "\u8bbf\u95ee\u8fb9": 313, "\u8bbf\u95ee\u51fa\u8fb9": 313, "\u8bbf\u95ee\u5165\u8fb9": 313, "\u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": 313, "ask": 314, "question": [314, 328], "gle": [315, 339, 587, 590], "workload": [316, 320, 352, 353, 354, 356, 578], "learn": [316, 319, 339, 340, 341, 345, 347, 349, 350, 354, 356, 417, 425, 433, 590], "scientist": 317, "challeng": [317, 352, 354], "handl": [317, 356], "solut": 317, "machin": [317, 345, 347], "pydata": 317, "ecosystem": [317, 330, 336], "One": [319, 350, 575], "stop": [319, 350], "larg": [319, 348, 352, 354], "scale": [319, 585], "system": [319, 320, 356, 428, 430], "alibaba": [319, 418], "troubleshoot": [319, 582], "indic": 319, "gener": [320, 328, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568], "benchmark": [320, 325, 357], "content": 320, "collect": 320, "compar": [320, 356], "standalon": 321, "gie": [321, 322, 323, 324, 327, 328, 330, 331, 334, 336, 351, 590], "process": [322, 345, 346, 350, 356, 417, 582], "gopt": 325, "introduc": [325, 355], "why": [325, 355], "quick": [325, 350, 429], "ambigu": [325, 348], "pattern": [325, 335, 353], "match": [325, 333, 335, 353], "hybrid": [325, 585], "relat": [325, 335, 348, 578], "st": 325, "rule": 325, "planner": 326, "jni": 326, "project": [326, 333, 335, 364], "binari": 326, "curl": 326, "llm": 328, "assist": 328, "set": [328, 331, 346], "sentenc": 328, "construct": [329, 429], "claus": 329, "tinkerpop": [330, 331, 336, 353, 600], "gremlin": [331, 333, 334, 335, 338, 353, 413, 582, 600], "constraint": 331, "differ": [331, 575], "inner": 331, "id": [331, 333, 335, 581], "expand": [331, 333, 513, 514, 515, 568], "filter": [331, 333, 335], "like": 331, "sql": 331, "group": [331, 333, 335], "multipl": [331, 335, 348], "valu": [331, 333, 335], "appropri": 331, "index": 331, "suggest": 331, "about": [331, 364], "parallel": 331, "standard": [333, 580], "v": 333, "e": 333, "out": [333, 335, 429], "inE": [333, 335], "both": [333, 335], "outv": [333, 335], "inv": [333, 335], "otherv": [333, 335], "bothv": [333, 335], "hasid": [333, 335], "haslabel": 333, "ha": 333, "hasnot": 333, "where": [333, 335], "travers": [333, 335, 338, 342, 353, 422], "predic": 333, "dedup": [333, 335], "constant": [333, 335], "valuemap": [333, 335], "elementmap": 333, "select": [333, 335], "count": 333, "fold": [333, 335], "sum": [333, 335], "min": [333, 335], "max": [333, 335], "mean": [333, 335], "groupcount": [333, 335], "h3": 333, "order": [333, 335, 581], "statist": 333, "coin": 333, "union": 333, "ident": 333, "unfold": 333, "syntact": [333, 335], "sugar": [333, 335], "pathexpand": 333, "endv": 333, "To": 333, "Will": 333, "Not": 333, "repeat": 333, "sideeffect": 333, "consol": [334, 600], "ldbc": 335, "retriev": [335, 581], "appli": [335, 354], "real": 335, "expans": 335, "mani": 335, "point": 335, "after": 335, "syntax": 335, "complex": 335, "bi2": 335, "bi3": 335, "bi4": 335, "left": 335, "part": 335, "bi11": 335, "bi14": 335, "apach": [336, 600], "eas": 338, "extens": 338, "gnn": [338, 344, 354, 429, 596], "train": [338, 344, 345, 346, 347, 354, 417], "infer": 338, "across": 338, "orchestr": 338, "paradigm": [339, 354], "egograph": 339, "base": 339, "pass": 339, "pipelin": 339, "neighborhood": 342, "neg": [342, 426], "gsl": [342, 423], "classif": [344, 345, 346, 347], "neural": [344, 354], "network": [344, 354, 568], "egographsag": 345, "pyg": [346, 347], "server": [346, 419, 589], "pod": 346, "loader": [346, 348, 431, 602], "main": 346, "evalu": [347, 407], "loaderfor": 347, "valid": 347, "graphsag": 347, "advanc": 348, "deduc": 348, "when": 348, "put": [348, 418], "togeth": [348, 418], "panda": [348, 602], "numpi": [348, 602], "variant": 348, "tip": 348, "reduc": 348, "consumpt": 348, "unifi": [349, 581], "platform": 349, "disaggreg": 349, "divers": 349, "bi": 349, "qp": 349, "task": 350, "gart": [351, 578], "grin": [351, 581], "graphar": [351, 580], "groot": [351, 582, 590], "gum": 351, "maxgraph": 351, "deprec": 351, "v6d": 351, "gaia": 351, "pegasu": 351, "can": [352, 354], "do": [352, 354], "typic": 354, "ar": 355, "case": 355, "posit": 356, "variou": 356, "gpu": 357, "reproduc": 357, "fragment": 359, "appasset": 360, "javaapp": 360, "cython": 362, "javadoc": 365, "declar": 367, "load_app": 368, "dag_util": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "add_column": 369, "add_labels_to_graph": 370, "arrow_to_dynam": 371, "bind_app": 372, "clear_edg": 373, "clear_graph": 374, "context_to_datafram": 375, "context_to_numpi": 376, "copy_graph": 377, "create_app": 378, "create_graph_view": 380, "create_load": 381, "create_subgraph": 382, "create_unload_op": 383, "dynamic_to_arrow": 384, "get_context_data": 385, "graph_to_datafram": 386, "graph_to_numpi": 387, "gremlin_to_subgraph": 388, "modify_edg": 389, "modify_vertic": 390, "project_arrow_property_graph": 392, "project_to_simpl": 393, "report_graph": 394, "run_app": 395, "to_data_sink": 396, "to_direct": [397, 465], "to_undirect": [398, 466], "to_vineyard_datafram": 399, "to_vineyard_tensor": 400, "unload_app": 401, "unload_context": 402, "unload_graph": 403, "__init__": 404, "as_op_def": 405, "eval": 406, "signatur": 409, "get_default_sess": 411, "graphlearn": 412, "has_default_sess": 414, "set_opt": 416, "loss": 417, "weight": 418, "maxcomput": 418, "describ": 419, "topologi": 419, "stand": 419, "alon": 419, "mode": [419, 589], "tensorflow": 424, "git": 424, "clone": 427, "bytestreamaccessfil": 428, "structuredaccessfil": 428, "writablefil": 428, "scheme": 428, "gl": 429, "self": 435, "loop": 435, "freez": [435, 447], "add_cycl": 436, "add_path": 437, "add_star": 438, "all_neighbor": 439, "common_neighbor": 440, "create_empty_copi": 441, "degree_histogram": 443, "densiti": 444, "induced_subgraph": 448, "info": 449, "is_direct": 450, "is_empti": 451, "is_frozen": 452, "is_negatively_weight": 453, "is_weight": 454, "nodes_with_selfloop": 457, "non_edg": 458, "non_neighbor": 459, "number_of_edg": 460, "number_of_nod": 461, "number_of_selfloop": 462, "selfloop_edg": 463, "atla": [467, 468, 568], "graph_atla": 467, "graph_atlas_g": 468, "classic": [469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 568], "balanced_tre": 469, "barbell_graph": 470, "binomial_tre": 471, "circulant_graph": 472, "circular_ladder_graph": 473, "complete_graph": 474, "complete_multipartite_graph": 475, "cycle_graph": 476, "dorogovtsev_goltsev_mendes_graph": 477, "empty_graph": 478, "full_rary_tre": 479, "ladder_graph": 480, "lollipop_graph": 481, "null_graph": 482, "path_graph": 483, "star_graph": 484, "trivial_graph": 485, "turan_graph": 486, "wheel_graph": 487, "lfr_benchmark_graph": 488, "caveman_graph": 489, "connected_caveman_graph": 490, "gaussian_random_partition_graph": 491, "planted_partition_graph": 492, "random_partition_graph": 493, "relaxed_caveman_graph": 494, "ring_of_cliqu": 495, "stochastic_block_model": 496, "windmill_graph": 497, "degree_seq": [498, 499, 500, 501, 502, 503, 504], "configuration_model": 498, "degree_sequence_tre": 499, "directed_configuration_model": 500, "directed_havel_hakimi_graph": 501, "expected_degree_graph": 502, "havel_hakimi_graph": 503, "random_degree_sequence_graph": 504, "gn_graph": 505, "gnc_graph": 506, "gnr_graph": 507, "random_k_out_graph": 508, "scale_free_graph": 509, "duplic": [510, 511, 568], "duplication_divergence_graph": 510, "partial_duplication_graph": 511, "ego": [512, 568], "ego_graph": 512, "chordal_cycle_graph": 513, "margulis_gabber_galil_graph": 514, "paley_graph": 515, "geometr": [516, 517, 518, 519, 520, 568], "geographical_threshold_graph": 516, "random_geometric_graph": 517, "soft_random_geometric_graph": 518, "thresholded_random_geometric_graph": 519, "waxman_graph": 520, "harary_graph": [521, 522], "hkn_harary_graph": 521, "hnm_harary_graph": 522, "intersect": [523, 524, 525, 568], "general_random_intersection_graph": 523, "k_random_intersection_graph": 524, "uniform_random_intersection_graph": 525, "joint_degree_seq": [526, 527, 528, 529], "directed_joint_degree_graph": 526, "is_valid_directed_joint_degre": 527, "is_valid_joint_degre": 528, "joint_degree_graph": 529, "mycielski": [530, 531, 568], "mycielski_graph": 530, "mycielskian": 531, "nonisomorphic_tre": [532, 533], "number_of_nonisomorphic_tre": 533, "small": [534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 568], "lcf_graph": 534, "bull_graph": 535, "chvatal_graph": 536, "cubical_graph": 537, "desargues_graph": 538, "diamond_graph": 539, "dodecahedral_graph": 540, "frucht_graph": 541, "heawood_graph": 542, "house_graph": 543, "house_x_graph": 544, "icosahedral_graph": 545, "krackhardt_kite_graph": 546, "make_small_graph": 547, "moebius_kantor_graph": 548, "octahedral_graph": 549, "pappus_graph": 550, "petersen_graph": 551, "sedgewick_maze_graph": 552, "tetrahedral_graph": 553, "truncated_cube_graph": 554, "truncated_tetrahedron_graph": 555, "tutte_graph": 556, "social": [557, 558, 559, 560, 568], "davis_southern_women_graph": 557, "florentine_families_graph": 558, "karate_club_graph": 559, "les_miserables_graph": 560, "spectral_graph_forg": 561, "sudoku": [562, 568], "sudoku_graph": 562, "tree": [563, 564, 568], "prefix_tre": 563, "random_tre": 564, "triad": [565, 568], "triad_graph": 565, "internet_as_graph": 566, "random_internet_as_graph": 566, "stochast": [567, 568], "stochastic_graph": 567, "diverg": 568, "sequenc": 568, "AS": 568, "spectral": 568, "non": 568, "isomorph": 568, "joint": 568, "harari": 568, "digraph": 569, "read": 571, "list": [571, 581], "adjac": 571, "selector": 575, "tensorcontext": 575, "vertexdatacontext": 575, "labeledvertexdatacontext": 575, "vertexpropertycontext": 575, "labeledvertexpropertycontext": 575, "method": 575, "dimension": 575, "rang": 575, "resourc": 577, "bridg": 578, "gap": 578, "oltp": 578, "inform": 580, "save": 580, "predefin": 581, "macro": 581, "partit": [581, 582, 585], "strategi": 581, "guidelin": 581, "handler": 581, "iter": 581, "master": 581, "mirror": 581, "complet": 581, "natur": 581, "trait": 581, "known": 582, "artifacthub": 582, "directori": 582, "common": 582, "modifi": 582, "schema": 582, "restart": 582, "secondari": 582, "trace": 582, "In": 583, "immut": 583, "repartit": 585, "fennel": 585, "xtrapulp": 585, "line": 589, "scope": 589, "monitor": 591, "\u56fe\u5206\u6790\u5f15\u64ce": 592, "\u5185\u7f6e\u7b97\u6cd5": 592, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 592, "\u4f7f\u7528": 592, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 592, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 592, "\u4e2d\u7684\u51fd\u6570": 592, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 592, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 592, "\u8fd0\u884c\u793a\u4f8b\u7684java\u7b97\u6cd5": 592, "\u4f7f\u7528java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": 592, "\u90e8\u7f72": 593, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 593, "\u5728aw": 593, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 593, "\u672c\u5730\u90e8\u7f72graphscop": 593, "\u5f00\u53d1\u8005\u6307\u5357": 594, "\u57fa\u4e8e": [594, 599], "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 594, "\u6784\u5efa": 594, "\u4ee3\u7801\u98ce\u683c": 594, "\u5e38\u89c1\u95ee\u9898": 595, "\u5feb\u901f\u4e0a\u624b": 596, "\u793a\u4f8b": 596, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 596, "\u521b\u5efa\u4f1a\u8bdd": 596, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 596, "\u56fe\u5206\u6790": 596, "\u56fe\u795e\u7ecf\u7f51\u7edc": 596, "\u5173\u95ed\u4f1a\u8bdd": 596, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 597, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 597, "\u6295\u5f71": 597, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 597, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 597, "\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 598, "\u76ee\u5f55": [598, 603], "\u53c2\u8003": 598, "\u7d22\u5f15": 598, "\u5b89\u88c5": 599, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 599, "\u5ba2\u6237\u7aef": 599, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 600, "\u5229\u7528python": 600, "\u8fde\u63a5graphscop": 600, "\u5229\u7528java": 600, "\u5f00\u53d1\u63a7\u5236\u53f0": 600, "gremlin\u7f16\u7a0b\u5165\u95e8": 600, "101": 600, "\u56fe\u6570\u636e\u6a21\u578b": 600, "\u67e5\u8be2\u8bed\u8a00": 600, "\u4e00\u4e2a\u4f8b\u5b50": 600, "gremlin\u517c\u5bb9\u6027": 600, "\u5bf9\u6bd4tinkerpop": 600, "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": 600, "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": 600, "\u652f\u6301\u7684gremlin\u64cd\u4f5c": 600, "\u5df2\u77e5\u9650\u5236": 600, "\u56fe\u5b66\u4e60\u5f15\u64ce": 601, "\u56fe\u5b66\u4e60\u6a21\u578b": 601, "\u6570\u636e\u6a21\u578b": 601, "\u7f16\u7801\u5668": 601, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 601, "\u91c7\u6837": 601, "\u56fe\u6570\u636e\u6d41": 601, "\u6a21\u578b": 601, "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 601, "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 602, "\u624b\u52a8\u914d\u7f6e\u56fe": 602, "vid_field": 602, "src_label": 602, "dst_label": 602, "src_field": 602, "dst_field": 602, "\u9ad8\u7ea7\u7528\u6cd5": 602, "\u6ca1\u6709\u6b67\u4e49\u65f6": 602, "\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": 602, "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": 602, "\u591a\u79cd\u8fb9\u5173\u7cfb": 602, "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": 602, "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": 602, "\u5b8c\u6574\u7684\u793a\u4f8b": 602, "\u4ece": 602, "\u6216": 602, "\u4e2d\u8f7d\u56fe": 602, "\u7684\u53d8\u79cd": 602, "\u5165\u95e8\u6559\u7a0b": 603}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Built-in Algorithms": [[0, "built-in-algorithms"], [6, "built-in-algorithms"]], "All Pairs Shortest Path Length": [[0, "all-pairs-shortest-path-length"]], "Attribute Assortativity": [[0, "attribute-assortativity"]], "Average Degree Connectivity": [[0, "average-degree-connectivity"]], "Betweenness Centrality": [[0, "betweenness-centrality"]], "Breadth-First Search": [[0, "breadth-first-search"]], "CDLP": [[0, "cdlp"]], "Closeness Centrality": [[0, "closeness-centrality"]], "Clustering": [[0, "clustering"]], "Degree Assortativity Coefficient": [[0, "degree-assortativity-coefficient"]], "Degree Centrality": [[0, "degree-centrality"]], "Depth-First Search": [[0, "depth-first-search"]], "Eigenvector Centrality": [[0, "eigenvector-centrality"]], "Hyperlink-Induced Topic Search": [[0, "hyperlink-induced-topic-search"]], "Katz Centrality": [[0, "katz-centrality"]], "K-Core": [[0, "k-core"]], "K-Shell": [[0, "k-shell"]], "Label Propagation Algorithm": [[0, "label-propagation-algorithm"]], "LCC": [[0, "lcc"]], "PageRank": [[0, "pagerank"]], "Sampling Path": [[0, "sampling-path"]], "Single-Source Shortest Paths": [[0, "single-source-shortest-paths"]], "VoteRank": [[0, "voterank"]], "WCC": [[0, "wcc"]], "Customized Algorithms": [[1, "customized-algorithms"]], "Aggregators": [[1, "aggregators"]], "Local Vertex Map support": [[1, "local-vertex-map-support"]], "Deployment for GAE": [[2, "deployment-for-gae"]], "Prerequisites": [[2, "prerequisites"], [27, "prerequisites"], [29, "prerequisites"], [30, "prerequisites"], [32, "prerequisites"], [33, "prerequisites"], [309, "prerequisites"], [321, "prerequisites"], [582, "prerequisites"]], "Deployment GAE only": [[2, "deployment-gae-only"]], "Deployment with Python SDK": [[2, "deployment-with-python-sdk"]], "Deployment with Helm": [[2, "deployment-with-helm"]], "Execute graph analytical algorithms": [[2, "execute-graph-analytical-algorithms"]], "Uninstall deployment": [[2, "uninstall-deployment"]], "Design of Analytical Engine": [[3, "design-of-analytical-engine"], [3, null], [34, "design-of-analytical-engine"]], "Dev and Test": [[4, "dev-and-test"], [45, "dev-and-test"], [134, "dev-and-test"], [323, "dev-and-test"], [340, "dev-and-test"]], "Setup": [[4, "setup"]], "Understanding the Codebase": [[4, "understanding-the-codebase"], [45, "understanding-the-codebase"], [134, "understanding-the-codebase"]], "Making Modifications": [[4, "making-modifications"]], "Building Analytical Engine": [[4, "building-analytical-engine"]], "Testing": [[4, "testing"], [134, "testing"]], "FAQs": [[5, "faqs"]], "Programming Model: FLASH": [[6, "programming-model-flash"]], "Motivation": [[6, "motivation"], [9, "motivation"], [325, "motivation"], [349, "motivation"]], "The FLASH Programming Model": [[6, "the-flash-programming-model"]], "Overview": [[6, "overview"], [9, "overview"], [310, "overview"], [319, null], [425, "overview"], [582, "overview"]], "FLASH API": [[6, "flash-api"]], "Strong Expressiveness": [[6, "strong-expressiveness"]], "Implementation": [[6, "implementation"]], "Architecture": [[6, "architecture"], [12, "architecture"]], "Optimizations": [[6, "optimizations"]], "Getting Started": [[7, "getting-started"], [46, "getting-started"], [126, "getting-started"], [212, "getting-started"], [300, "getting-started"], [307, "getting-started"], [324, "getting-started"], [325, "getting-started"], [326, "getting-started"], [326, "id1"], [341, "getting-started"], [350, "getting-started"], [579, "getting-started"]], "Installation": [[7, "installation"], [29, "installation"], [212, "installation"], [309, "installation"], [324, "installation"], [325, "installation"], [341, "installation"], [582, "installation"], [582, "id1"]], "Running GraphScope Analytical Engine on Local": [[7, "running-graphscope-analytical-engine-on-local"]], "What\u2019s the Next": [[7, "whats-the-next"], [324, "whats-the-next"], [341, "whats-the-next"], [589, "whats-the-next"]], "Guide and Examples": [[8, "guide-and-examples"], [332, "guide-and-examples"], [343, "guide-and-examples"]], "Ingress: Incrementalize Graph Algorithms": [[9, "ingress-incrementalize-graph-algorithms"]], "Design of Ingress": [[9, "design-of-ingress"]], "Message-driven Differentiation": [[9, "message-driven-differentiation"]], "Flexible Memoization": [[9, "flexible-memoization"]], "Ingress API": [[9, "ingress-api"]], "Distributed Runtime Engine": [[9, "distributed-runtime-engine"]], "Key Concepts": [[10, "key-concepts"]], "LoadStrategy": [[10, "loadstrategy"]], "OnlyOut": [[10, "onlyout"]], "OnlyIn": [[10, "onlyin"]], "BothInOut": [[10, "bothinout"]], "PartitionStrategy": [[10, "partitionstrategy"]], "Edge Cut": [[10, "edge-cut"]], "Vertex Cut": [[10, "vertex-cut"]], "Vertices on GraphScope analytical engine": [[10, "vertices-on-graphscope-analytical-engine"]], "OuterVertex": [[10, "outervertex"]], "InnerVertex": [[10, "innervertex"]], "InnerVertexWithOutgoingEdge": [[10, "innervertexwithoutgoingedge"]], "InnerVertexWithIncomingEdge": [[10, "innervertexwithincomingedge"]], "MessageManager and MessageStrategy": [[10, "messagemanager-and-messagestrategy"]], "AlongOutgoingEdgeToOuterVertex": [[10, "alongoutgoingedgetooutervertex"]], "AlongIncomingEdgeToOuterVertex": [[10, "alongincomingedgetooutervertex"]], "AlongEdgeToOuterVertex": [[10, "alongedgetooutervertex"]], "SyncOnOuterVertexAsTarget": [[10, "synconoutervertexastarget"]], "SyncOnOuterVertexAsSource": [[10, "synconoutervertexassource"]], "SyncOnOuterVertex": [[10, "synconoutervertex"]], "NetworkX Compatibility": [[11, "networkx-compatibility"]], "Convert a Graph to a nx.Graph": [[11, "convert-a-graph-to-a-nx-graph"]], "Supported Graph Operations": [[11, "supported-graph-operations"]], "Supported Algorithms": [[11, "supported-algorithms"]], "Overview and Architecture": [[12, "overview-and-architecture"]], "Storage Layer": [[12, "storage-layer"]], "Engine Layer": [[12, "engine-layer"]], "GRAPE Engine": [[12, "grape-engine"]], "Programming Model APIs": [[12, "programming-model-apis"]], "FFIs": [[12, "ffis"]], "Incremental Computation Engine": [[12, "incremental-computation-engine"]], "Application Layer": [[12, "application-layer"]], "Performance Tuning": [[13, "performance-tuning"]], "Memory Footprint of Property Graphs": [[13, "memory-footprint-of-property-graphs"]], "Property graph data structure": [[13, "property-graph-data-structure"]], "Memory usage estimation": [[13, "memory-usage-estimation"]], "Optimizing Memory Usage": [[13, "optimizing-memory-usage"]], "Optimizing Performance of Graph Analytics": [[13, "optimizing-performance-of-graph-analytics"]], "Programming Model: PIE": [[14, "programming-model-pie"]], "What is the PIE Model?": [[14, "what-is-the-pie-model"]], "Workflow of PIE": [[14, "workflow-of-pie"]], "Tutorial: Develop Your Algorithms in C++ with FLASH Model": [[15, "tutorial-develop-your-algorithms-in-c-with-flash-model"]], "Developing Algorithms with FLASH Model": [[15, "developing-algorithms-with-flash-model"]], "Defining A FLASH Application": [[15, "defining-a-flash-application"]], "Implementing the Run Function": [[15, "implementing-the-run-function"]], "Integrating with the Python Client of GraphScope": [[15, "integrating-with-the-python-client-of-graphscope"]], "Running the FLASH Algorithms": [[15, "running-the-flash-algorithms"]], "Tutorial: Develop your Algorithm in C++ with PIE Model": [[16, "tutorial-develop-your-algorithm-in-c-with-pie-model"]], "Prerequisites:": [[16, "prerequisites"]], "Step 1: Define the context class": [[16, "step-1-define-the-context-class"]], "Step 2: Define the Algorithm class": [[16, "step-2-define-the-algorithm-class"]], "Step 3: Package the Algorithm": [[16, "step-3-package-the-algorithm"]], "Step 4: Run the .gar file on GraphScope": [[16, "step-4-run-the-gar-file-on-graphscope"]], "GraphScope C++ SDK with GitHub Template": [[16, "graphscope-c-sdk-with-github-template"]], "Tutorial: Develop your Algorithm in Java with PIE Model": [[17, "tutorial-develop-your-algorithm-in-java-with-pie-model"]], "Run example algorithms with example jar": [[17, "run-example-algorithms-with-example-jar"]], "Implement your own algorithms in Java.": [[17, "implement-your-own-algorithms-in-java"]], "Prepare GRAPE-jdk": [[17, "prepare-grape-jdk"]], "Get from Maven Central Repository": [[17, "get-from-maven-central-repository"]], "Build from source": [[17, "build-from-source"], [424, "build-from-source"]], "Implement your algorithm": [[17, "implement-your-algorithm"]], "Submit to GraphScope": [[17, "submit-to-graphscope"]], "GraphScope JavaSDK with GitHub Template": [[17, "graphscope-javasdk-with-github-template"]], "Tutorial: Develop algorithms in Python": [[18, "tutorial-develop-algorithms-in-python"]], "Writing Your Own Algorithms in PIE": [[18, "writing-your-own-algorithms-in-pie"]], "Writing Algorithms in Pregel": [[18, "writing-algorithms-in-pregel"]], "Using math.h Functions in Algorithms": [[18, "using-math-h-functions-in-algorithms"]], "Run Your Own Algorithms": [[18, "run-your-own-algorithms"]], "Tutorial: Graph Algorithms with NetworkX APIs": [[19, "tutorial-graph-algorithms-with-networkx-apis"]], "How does Networkx Perform Graph Analysis?": [[19, "how-does-networkx-perform-graph-analysis"]], "How to Perform Graph Analysis with NetworkX APIs from GraphScope": [[19, "how-to-perform-graph-analysis-with-networkx-apis-from-graphscope"]], "Graph Analysis": [[19, "graph-analysis"]], "Graph Display": [[19, "graph-display"]], "The Performance Speed-up of GraphScope over NetworkX": [[19, "the-performance-speed-up-of-graphscope-over-networkx"]], "Tutorial: Graph Operations with NetworkX APIs": [[20, "tutorial-graph-operations-with-networkx-apis"]], "Creating an Empty Graph": [[20, "creating-an-empty-graph"]], "Adding Nodes": [[20, "adding-nodes"]], "Adding Edges": [[20, "adding-edges"], [348, "adding-edges"]], "Examining Elements of a Graph": [[20, "examining-elements-of-a-graph"]], "Removing Elements from a Graph": [[20, "removing-elements-from-a-graph"]], "Using Graph Constructors": [[20, "using-graph-constructors"]], "Accessing Edges and Neighbors": [[20, "accessing-edges-and-neighbors"]], "Adding Attributes to Graphs, Nodes and Edges": [[20, "adding-attributes-to-graphs-nodes-and-edges"]], "Graph Attributes": [[20, "graph-attributes"]], "Node Attributes": [[20, "node-attributes"]], "Edge Attributes": [[20, "edge-attributes"]], "Induce deepcopy subgraph and edge_subgraph": [[20, "induce-deepcopy-subgraph-and-edge-subgraph"]], "Making Copies": [[20, "making-copies"]], "Directed Graphs": [[20, "directed-graphs"]], "Analyzing Graphs": [[20, "analyzing-graphs"]], "Create graph from GraphScope Graph Object": [[20, "create-graph-from-graphscope-graph-object"]], "Transform to GraphScope Graph Object": [[20, "transform-to-graphscope-graph-object"]], "Tutorial: Running Builtin Algorithms": [[21, "tutorial-running-builtin-algorithms"]], "Tutorial: Run Giraph Applications on GraphScope": [[22, "tutorial-run-giraph-applications-on-graphscope"]], "Try some example giraph apps": [[22, "try-some-example-giraph-apps"]], "Run your own Giraph apps.": [[22, "run-your-own-giraph-apps"]], "Develop Giraph algorithm": [[22, "develop-giraph-algorithm"]], "Submit to GraphScope.": [[22, "submit-to-graphscope"]], "Tutorial: Run GraphX Applications on GraphScope": [[23, "tutorial-run-graphx-applications-on-graphscope"]], "Deploy GraphScope along with Spark": [[23, "deploy-graphscope-along-with-spark"]], "Run example GraphX apps": [[23, "run-example-graphx-apps"]], "Submit to Spark": [[23, "submit-to-spark"]], "Run customized GraphX apps": [[23, "run-customized-graphx-apps"]], "Include dependency": [[23, "include-dependency"]], "Develop customized GraphX algorithm towards GraphScope.": [[23, "develop-customized-graphx-algorithm-towards-graphscope"]], "Run customized GraphX algorithms on Spark with GraphScope support": [[23, "run-customized-graphx-algorithms-on-spark-with-graphscope-support"]], "Vertex-Centric Model": [[24, "vertex-centric-model"]], "Pregel Model": [[24, "pregel-model"]], "GAS Model": [[24, "gas-model"]], "Simulation of Pregel Model in Analytical Engine": [[24, "simulation-of-pregel-model-in-analytical-engine"]], "Contact Us": [[25, "contact-us"]], "Slack": [[25, "slack"], [37, "slack"]], "Discussion on GitHub": [[25, "discussion-on-github"]], "Deploy GraphScope on Clouds": [[26, "deploy-graphscope-on-clouds"]], "Deploy on K8s Cluster": [[27, "deploy-on-k8s-cluster"]], "Install GraphScope Client": [[27, "install-graphscope-client"], [30, "install-graphscope-client"]], "Prepare a Kubernetes cluster": [[27, "prepare-a-kubernetes-cluster"], [30, "prepare-a-kubernetes-cluster"], [41, "prepare-a-kubernetes-cluster"]], "Deploying GraphScope": [[27, "deploying-graphscope"]], "Launch with default parameters": [[27, "launch-with-default-parameters"]], "Frequently used parameters": [[27, "frequently-used-parameters"]], "Customize image URI": [[27, "customize-image-uri"]], "Specify the number of workers": [[27, "specify-the-number-of-workers"]], "Provide a kubeconfig file other than default": [[27, "provide-a-kubeconfig-file-other-than-default"]], "Mount volumes": [[27, "mount-volumes"]], "Inspect the deployment": [[27, "inspect-the-deployment"]], "Cleaning Up": [[27, "cleaning-up"]], "Deploy GraphScope Operator": [[28, "deploy-graphscope-operator"]], "Coordinator configuration": [[28, "coordinator-configuration"]], "Deploy GraphScope with helm": [[29, "deploy-graphscope-with-helm"]], "Connect to GraphScope": [[29, "connect-to-graphscope"]], "Uninstall the release": [[29, "uninstall-the-release"]], "Configuration": [[29, "configuration"], [128, "configuration"], [325, "configuration"]], "Offline Installation": [[29, "offline-installation"]], "Deploy with Existing Vineyard Cluster": [[30, "deploy-with-existing-vineyard-cluster"]], "Deploy a Vineyard Cluster": [[30, "deploy-a-vineyard-cluster"]], "The lifecycle of a vineyard cluster": [[30, "the-lifecycle-of-a-vineyard-cluster"]], "Load the dataset to the Kubernetes cluster": [[30, "load-the-dataset-to-the-kubernetes-cluster"]], "Load a graph to the existing vineyard cluster": [[30, "load-a-graph-to-the-existing-vineyard-cluster"]], "Connect to the existing vineyard cluster with another GraphScope session": [[30, "connect-to-the-existing-vineyard-cluster-with-another-graphscope-session"]], "Cleaning up": [[30, "cleaning-up"]], "Install GraphScope in offline environment": [[31, "install-graphscope-in-offline-environment"]], "Install from wheels": [[31, "install-from-wheels"]], "Install from source": [[31, "install-from-source"], [32, "install-from-source"]], "Download dependencies and GraphScope": [[31, "download-dependencies-and-graphscope"]], "Copy all files to the destination environment and extract them to a location": [[31, "copy-all-files-to-the-destination-environment-and-extract-them-to-a-location"]], "Install basic packages and gcc-g++,\u00a0python": [[31, "install-basic-packages-and-gcc-g-python"]], "Install third-party dependencies and GraphScope Analytical Engine": [[31, "install-third-party-dependencies-and-graphscope-analytical-engine"]], "Install GraphScope on Local": [[32, "install-graphscope-on-local"]], "Install from packages": [[32, "install-from-packages"]], "Install stable version of GraphScope": [[32, "install-stable-version-of-graphscope"]], "Install preview version of GraphScope": [[32, "install-preview-version-of-graphscope"]], "Setup build environment for Linux and macOS": [[32, "setup-build-environment-for-linux-and-macos"]], "Use dev image with all dependencies installed": [[32, "use-dev-image-with-all-dependencies-installed"]], "Build and install": [[32, "build-and-install"]], "Persistent storage of graphs on the Kubernetes cluster": [[33, "persistent-storage-of-graphs-on-the-kubernetes-cluster"]], "Create a pv and pvc": [[33, "create-a-pv-and-pvc"]], "Store graphs to the pvc": [[33, "store-graphs-to-the-pvc"]], "Restore graphs from the pvc": [[33, "restore-graphs-from-the-pvc"]], "Clean up": [[33, "clean-up"]], "Graph Storage": [[34, "graph-storage"]], "Execution Framework": [[34, "execution-framework"]], "Flexible programming models": [[34, "flexible-programming-models"]], "Multi-language SDKs": [[34, "multi-language-sdks"]], "High-performance runtime": [[34, "high-performance-runtime"]], "Algorithm Library": [[34, "algorithm-library"]], "Code Style Guide": [[35, "code-style-guide"]], "C++ Style": [[35, "c-style"]], "Python Style": [[35, "python-style"]], "Rust Style": [[35, "rust-style"]], "Java Style": [[35, "java-style"]], "Script Style": [[35, "script-style"]], "Style Linter and Checker": [[35, "style-linter-and-checker"]], "Development Guide": [[36, "development-guide"]], "Dev Environment": [[36, "dev-environment"], [41, "dev-environment"], [45, "dev-environment"], [134, "dev-environment"], [323, "dev-environment"], [340, "dev-environment"]], "Develop with dev containers.": [[36, "develop-with-dev-containers"]], "Install deps on local": [[36, "install-deps-on-local"], [45, "install-deps-on-local"], [340, "install-deps-on-local"]], "Build All Targets for GraphScope": [[36, "build-all-targets-for-graphscope"], [41, "build-all-targets-for-graphscope"]], "Build Components Individually": [[36, "build-components-individually"]], "Build and Test Engines": [[36, "build-and-test-engines"]], "Build Coordinator": [[36, "build-coordinator"]], "Build Python Client": [[36, "build-python-client"]], "Build gsctl": [[36, "build-gsctl"], [45, "build-gsctl"]], "How to Contribute": [[37, "how-to-contribute"]], "Code of Conduct": [[37, "code-of-conduct"]], "Community": [[37, "community"], [568, "module-graphscope.nx.generators.community"]], "GitHub Discussion": [[37, "github-discussion"]], "Reporting Bugs": [[37, "reporting-bugs"]], "Requesting Features": [[37, "requesting-features"]], "Improving Documentation": [[37, "improving-documentation"]], "Contributing Code and Documentation Changes": [[37, "contributing-code-and-documentation-changes"]], "Install pre-commit": [[37, "install-pre-commit"]], "Minor Fixes": [[37, "minor-fixes"]], "Fork and Create a Branch": [[37, "fork-and-create-a-branch"]], "Get the Test Suite Running": [[37, "get-the-test-suite-running"]], "Implement Your Fix or Feature": [[37, "implement-your-fix-or-feature"]], "Get the Code Format and Style Right": [[37, "get-the-code-format-and-style-right"]], "Submitting Your Changes": [[37, "submitting-your-changes"]], "Discussing and Keeping Your Pull Request Updated": [[37, "discussing-and-keeping-your-pull-request-updated"]], "Merging a PR (maintainers only)": [[37, "merging-a-pr-maintainers-only"]], "Shipping a Release (maintainers only)": [[37, "shipping-a-release-maintainers-only"]], "How to Review Pull Requests": [[37, "how-to-review-pull-requests"]], "Continuous integration testing": [[37, "continuous-integration-testing"]], "Debugging on local deployment": [[38, "debugging-on-local-deployment"]], "Find the logs": [[38, "find-the-logs"], [38, "id1"]], "Debugging on Kubernetes deployment": [[38, "debugging-on-kubernetes-deployment"]], "Commands for Debugging": [[38, "commands-for-debugging"]], "Debugging Techniques": [[38, "debugging-techniques"]], "How to instrument": [[39, "how-to-instrument"]], "Java": [[39, "java"]], "Automatic instrument": [[39, "automatic-instrument"]], "How to Submit Pull-requests": [[40, "how-to-submit-pull-requests"]], "How to Test": [[41, "how-to-test"], [340, "how-to-test"]], "Test GraphScope on local": [[41, "test-graphscope-on-local"]], "Run tests": [[41, "run-tests"], [41, "id1"]], "Test GraphScope on Kubernetes cluster": [[41, "test-graphscope-on-kubernetes-cluster"]], "Build images": [[41, "build-images"]], "Error Codes": [[42, "error-codes"], [588, "error-codes"]], "Coordinator": [[43, "coordinator"]], "Development guide": [[44, "development-guide"], [133, "development-guide"]], "Develop with dev containers": [[45, "develop-with-dev-containers"]], "Testing with Interactive": [[45, "testing-with-interactive"]], "Preparation": [[45, "preparation"], [126, "preparation"], [307, "preparation"]], "Launching Coordinator": [[45, "launching-coordinator"]], "Run Test Script": [[45, "run-test-script"]], "Running tests manually via gsctl": [[45, "running-tests-manually-via-gsctl"]], "Create a New Graph": [[45, "create-a-new-graph"]], "Import Graph Data": [[45, "import-graph-data"]], "Coordinator Python SDK Reference": [[46, "coordinator-python-sdk-reference"]], "Requirements.": [[46, "requirements"], [300, "requirements"]], "Installation & Usage": [[46, "installation-usage"], [300, "installation-usage"]], "pip install": [[46, "pip-install"], [300, "pip-install"]], "Setuptools": [[46, "setuptools"], [300, "setuptools"]], "Tests": [[46, "tests"], [300, "tests"]], "Documentation for API Endpoints": [[46, "documentation-for-api-endpoints"]], "Documentation For Models": [[46, "documentation-for-models"]], "Documentation For Authorization": [[46, "documentation-for-authorization"], [301, "documentation-for-authorization"]], "Author": [[46, "author"]], "graphscope.flex.rest.AlertApi": [[47, "graphscope-flex-rest-alertapi"]], "create_alert_receiver": [[47, "create-alert-receiver"]], "Example": [[47, "example"], [47, "id1"], [47, "id7"], [47, "id13"], [47, "id19"], [47, "id25"], [47, "id31"], [47, "id37"], [47, "id43"], [47, "id49"], [48, "example"], [49, "example"], [50, "example"], [51, "example"], [52, "example"], [53, "example"], [54, "example"], [55, "example"], [56, "example"], [57, "example"], [58, "example"], [59, "example"], [60, "example"], [61, "example"], [62, "example"], [63, "example"], [64, "example"], [65, "example"], [66, "example"], [67, "example"], [67, "id1"], [67, "id7"], [67, "id13"], [68, "example"], [69, "example"], [70, "example"], [71, "example"], [72, "example"], [73, "example"], [74, "example"], [75, "example"], [75, "id1"], [75, "id7"], [75, "id13"], [75, "id19"], [76, "example"], [77, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [82, "example"], [83, "example"], [84, "example"], [85, "example"], [86, "example"], [87, "example"], [88, "example"], [89, "example"], [90, "example"], [91, "example"], [92, "example"], [93, "example"], [94, "example"], [94, "id1"], [94, "id7"], [94, "id13"], [94, "id19"], [94, "id25"], [94, "id31"], [94, "id37"], [94, "id43"], [94, "id49"], [95, "example"], [95, "id1"], [95, "id7"], [95, "id13"], [95, "id19"], [96, "example"], [97, "example"], [98, "example"], [99, "example"], [100, "example"], [101, "example"], [102, "example"], [103, "example"], [104, "example"], [105, "example"], [106, "example"], [106, "id1"], [106, "id7"], [106, "id13"], [106, "id19"], [107, "example"], [108, "example"], [109, "example"], [110, "example"], [110, "id1"], [110, "id7"], [110, "id13"], [110, "id19"], [111, "example"], [112, "example"], [113, "example"], [114, "example"], [115, "example"], [116, "example"], [117, "example"], [118, "example"], [119, "example"], [120, "example"], [121, "example"], [122, "example"], [123, "example"], [124, "example"], [154, "example"], [154, "id1"], [154, "id7"], [173, "example"], [173, "id1"], [173, "id7"], [173, "id13"], [173, "id19"], [173, "id25"], [173, "id31"], [174, "example"], [174, "id1"], [174, "id7"], [180, "example"], [180, "id1"], [180, "id7"], [180, "id13"], [180, "id19"], [183, "example"], [183, "id1"], [189, "example"], [189, "id1"], [189, "id7"], [189, "id13"], [205, "example"], [205, "id1"], [205, "id7"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [229, "example"], [230, "example"], [231, "example"], [232, "example"], [233, "example"], [234, "example"], [235, "example"], [236, "example"], [237, "example"], [238, "example"], [239, "example"], [240, "example"], [240, "id1"], [240, "id7"], [240, "id13"], [241, "example"], [242, "example"], [243, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [250, "example"], [251, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [256, "example"], [257, "example"], [258, "example"], [259, "example"], [259, "id1"], [259, "id7"], [259, "id13"], [259, "id19"], [259, "id25"], [259, "id31"], [259, "id37"], [259, "id43"], [259, "id49"], [259, "id55"], [259, "id61"], [259, "id67"], [259, "id73"], [260, "example"], [260, "id1"], [260, "id7"], [261, "example"], [262, "example"], [263, "example"], [264, "example"], [265, "example"], [266, "example"], [267, "example"], [267, "id1"], [267, "id7"], [267, "id13"], [267, "id19"], [268, "example"], [269, "example"], [269, "id1"], [270, "example"], [271, "example"], [272, "example"], [273, "example"], [274, "example"], [275, "example"], [275, "id1"], [275, "id7"], [275, "id13"], [276, "example"], [277, "example"], [278, "example"], [279, "example"], [280, "example"], [281, "example"], [282, "example"], [283, "example"], [284, "example"], [285, "example"], [286, "example"], [287, "example"], [288, "example"], [289, "example"], [290, "example"], [291, "example"], [291, "id1"], [291, "id7"], [291, "id13"], [292, "example"], [293, "example"], [294, "example"], [295, "example"], [296, "example"], [297, "example"]], "Parameters": [[47, "parameters"], [47, "id2"], [47, "id8"], [47, "id14"], [47, "id20"], [47, "id26"], [47, "id32"], [47, "id38"], [47, "id44"], [47, "id50"], [67, "parameters"], [67, "id2"], [67, "id8"], [67, "id14"], [75, "parameters"], [75, "id2"], [75, "id8"], [75, "id14"], [75, "id20"], [94, "parameters"], [94, "id2"], [94, "id8"], [94, "id14"], [94, "id20"], [94, "id26"], [94, "id32"], [94, "id38"], [94, "id44"], [94, "id50"], [95, "parameters"], [95, "id2"], [95, "id8"], [95, "id14"], [95, "id20"], [106, "parameters"], [106, "id2"], [106, "id8"], [106, "id14"], [106, "id20"], [110, "parameters"], [110, "id2"], [110, "id8"], [110, "id14"], [110, "id20"], [121, "parameters"], [154, "parameters"], [154, "id2"], [154, "id8"], [173, "parameters"], [173, "id2"], [173, "id8"], [173, "id14"], [173, "id20"], [173, "id26"], [173, "id32"], [174, "parameters"], [174, "id2"], [174, "id8"], [180, "parameters"], [180, "id2"], [180, "id8"], [180, "id14"], [180, "id20"], [183, "parameters"], [183, "id2"], [189, "parameters"], [189, "id2"], [189, "id8"], [189, "id14"], [205, "parameters"], [205, "id2"], [205, "id8"], [240, "parameters"], [240, "id2"], [240, "id8"], [240, "id14"], [259, "parameters"], [259, "id2"], [259, "id8"], [259, "id14"], [259, "id20"], [259, "id26"], [259, "id32"], [259, "id38"], [259, "id44"], [259, "id50"], [259, "id56"], [259, "id62"], [259, "id68"], [259, "id74"], [260, "parameters"], [260, "id2"], [260, "id8"], [267, "parameters"], [267, "id2"], [267, "id8"], [267, "id14"], [267, "id20"], [269, "parameters"], [269, "id2"], [275, "parameters"], [275, "id2"], [275, "id8"], [275, "id14"], [291, "parameters"], [291, "id2"], [291, "id8"], [291, "id14"], [311, "parameters"], [311, "id1"], [311, "id3"]], "Return type": [[47, "return-type"], [47, "id3"], [47, "id9"], [47, "id15"], [47, "id21"], [47, "id27"], [47, "id33"], [47, "id39"], [47, "id45"], [47, "id51"], [67, "return-type"], [67, "id3"], [67, "id9"], [67, "id15"], [75, "return-type"], [75, "id3"], [75, "id9"], [75, "id15"], [75, "id21"], [94, "return-type"], [94, "id3"], [94, "id9"], [94, "id15"], [94, "id21"], [94, "id27"], [94, "id33"], [94, "id39"], [94, "id45"], [94, "id51"], [95, "return-type"], [95, "id3"], [95, "id9"], [95, "id15"], [95, "id21"], [106, "return-type"], [106, "id3"], [106, "id9"], [106, "id15"], [106, "id21"], [110, "return-type"], [110, "id3"], [110, "id9"], [110, "id15"], [110, "id21"], [121, "return-type"], [154, "return-type"], [154, "id3"], [154, "id9"], [173, "return-type"], [173, "id3"], [173, "id9"], [173, "id15"], [173, "id21"], [173, "id27"], [173, "id33"], [174, "return-type"], [174, "id3"], [174, "id9"], [180, "return-type"], [180, "id3"], [180, "id9"], [180, "id15"], [180, "id21"], [183, "return-type"], [183, "id3"], [189, "return-type"], [189, "id3"], [189, "id9"], [189, "id15"], [205, "return-type"], [205, "id3"], [205, "id9"], [240, "return-type"], [240, "id3"], [240, "id9"], [240, "id15"], [259, "return-type"], [259, "id3"], [259, "id9"], [259, "id15"], [259, "id21"], [259, "id27"], [259, "id33"], [259, "id39"], [259, "id45"], [259, "id51"], [259, "id57"], [259, "id63"], [259, "id69"], [259, "id75"], [260, "return-type"], [260, "id3"], [260, "id9"], [267, "return-type"], [267, "id3"], [267, "id9"], [267, "id15"], [267, "id21"], [269, "return-type"], [269, "id3"], [275, "return-type"], [275, "id3"], [275, "id9"], [275, "id15"], [291, "return-type"], [291, "id3"], [291, "id9"], [291, "id15"]], "Authorization": [[47, "authorization"], [47, "id4"], [47, "id10"], [47, "id16"], [47, "id22"], [47, "id28"], [47, "id34"], [47, "id40"], [47, "id46"], [47, "id52"], [67, "authorization"], [67, "id4"], [67, "id10"], [67, "id16"], [75, "authorization"], [75, "id4"], [75, "id10"], [75, "id16"], [75, "id22"], [94, "authorization"], [94, "id4"], [94, "id10"], [94, "id16"], [94, "id22"], [94, "id28"], [94, "id34"], [94, "id40"], [94, "id46"], [94, "id52"], [95, "authorization"], [95, "id4"], [95, "id10"], [95, "id16"], [95, "id22"], [106, "authorization"], [106, "id4"], [106, "id10"], [106, "id16"], [106, "id22"], [110, "authorization"], [110, "id4"], [110, "id10"], [110, "id16"], [110, "id22"], [121, "authorization"], [154, "authorization"], [154, "id4"], [154, "id10"], [173, "authorization"], [173, "id4"], [173, "id10"], [173, "id16"], [173, "id22"], [173, "id28"], [173, "id34"], [174, "authorization"], [174, "id4"], [174, "id10"], [180, "authorization"], [180, "id4"], [180, "id10"], [180, "id16"], [180, "id22"], [183, "authorization"], [183, "id4"], [189, "authorization"], [189, "id4"], [189, "id10"], [189, "id16"], [205, "authorization"], [205, "id4"], [205, "id10"], [240, "authorization"], [240, "id4"], [240, "id10"], [240, "id16"], [259, "authorization"], [259, "id4"], [259, "id10"], [259, "id16"], [259, "id22"], [259, "id28"], [259, "id34"], [259, "id40"], [259, "id46"], [259, "id52"], [259, "id58"], [259, "id64"], [259, "id70"], [259, "id76"], [260, "authorization"], [260, "id4"], [260, "id10"], [267, "authorization"], [267, "id4"], [267, "id10"], [267, "id16"], [267, "id22"], [269, "authorization"], [269, "id4"], [275, "authorization"], [275, "id4"], [275, "id10"], [275, "id16"], [291, "authorization"], [291, "id4"], [291, "id10"], [291, "id16"]], "HTTP request headers": [[47, "http-request-headers"], [47, "id5"], [47, "id11"], [47, "id17"], [47, "id23"], [47, "id29"], [47, "id35"], [47, "id41"], [47, "id47"], [47, "id53"], [67, "http-request-headers"], [67, "id5"], [67, "id11"], [67, "id17"], [75, "http-request-headers"], [75, "id5"], [75, "id11"], [75, "id17"], [75, "id23"], [94, "http-request-headers"], [94, "id5"], [94, "id11"], [94, "id17"], [94, "id23"], [94, "id29"], [94, "id35"], [94, "id41"], [94, "id47"], [94, "id53"], [95, "http-request-headers"], [95, "id5"], [95, "id11"], [95, "id17"], [95, "id23"], [106, "http-request-headers"], [106, "id5"], [106, "id11"], [106, "id17"], [106, "id23"], [110, "http-request-headers"], [110, "id5"], [110, "id11"], [110, "id17"], [110, "id23"], [121, "http-request-headers"], [154, "http-request-headers"], [154, "id5"], [154, "id11"], [173, "http-request-headers"], [173, "id5"], [173, "id11"], [173, "id17"], [173, "id23"], [173, "id29"], [173, "id35"], [174, "http-request-headers"], [174, "id5"], [174, "id11"], [180, "http-request-headers"], [180, "id5"], [180, "id11"], [180, "id17"], [180, "id23"], [183, "http-request-headers"], [183, "id5"], [189, "http-request-headers"], [189, "id5"], [189, "id11"], [189, "id17"], [205, "http-request-headers"], [205, "id5"], [205, "id11"], [240, "http-request-headers"], [240, "id5"], [240, "id11"], [240, "id17"], [259, "http-request-headers"], [259, "id5"], [259, "id11"], [259, "id17"], [259, "id23"], [259, "id29"], [259, "id35"], [259, "id41"], [259, "id47"], [259, "id53"], [259, "id59"], [259, "id65"], [259, "id71"], [259, "id77"], [260, "http-request-headers"], [260, "id5"], [260, "id11"], [267, "http-request-headers"], [267, "id5"], [267, "id11"], [267, "id17"], [267, "id23"], [269, "http-request-headers"], [269, "id5"], [275, "http-request-headers"], [275, "id5"], [275, "id11"], [275, "id17"], [291, "http-request-headers"], [291, "id5"], [291, "id11"], [291, "id17"]], "HTTP response details": [[47, "http-response-details"], [47, "id6"], [47, "id12"], [47, "id18"], [47, "id24"], [47, "id30"], [47, "id36"], [47, "id42"], [47, "id48"], [47, "id54"], [67, "http-response-details"], [67, "id6"], [67, "id12"], [67, "id18"], [75, "http-response-details"], [75, "id6"], [75, "id12"], [75, "id18"], [75, "id24"], [94, "http-response-details"], [94, "id6"], [94, "id12"], [94, "id18"], [94, "id24"], [94, "id30"], [94, "id36"], [94, "id42"], [94, "id48"], [94, "id54"], [95, "http-response-details"], [95, "id6"], [95, "id12"], [95, "id18"], [95, "id24"], [106, "http-response-details"], [106, "id6"], [106, "id12"], [106, "id18"], [106, "id24"], [110, "http-response-details"], [110, "id6"], [110, "id12"], [110, "id18"], [110, "id24"], [121, "http-response-details"], [154, "http-response-details"], [154, "id6"], [154, "id12"], [173, "http-response-details"], [173, "id6"], [173, "id12"], [173, "id18"], [173, "id24"], [173, "id30"], [173, "id36"], [174, "http-response-details"], [174, "id6"], [174, "id12"], [180, "http-response-details"], [180, "id6"], [180, "id12"], [180, "id18"], [180, "id24"], [183, "http-response-details"], [183, "id6"], [189, "http-response-details"], [189, "id6"], [189, "id12"], [189, "id18"], [205, "http-response-details"], [205, "id6"], [205, "id12"], [240, "http-response-details"], [240, "id6"], [240, "id12"], [240, "id18"], [259, "http-response-details"], [259, "id6"], [259, "id12"], [259, "id18"], [259, "id24"], [259, "id30"], [259, "id36"], [259, "id42"], [259, "id48"], [259, "id54"], [259, "id60"], [259, "id66"], [259, "id72"], [259, "id78"], [260, "http-response-details"], [260, "id6"], [260, "id12"], [267, "http-response-details"], [267, "id6"], [267, "id12"], [267, "id18"], [267, "id24"], [269, "http-response-details"], [269, "id6"], [275, "http-response-details"], [275, "id6"], [275, "id12"], [275, "id18"], [291, "http-response-details"], [291, "id6"], [291, "id12"], [291, "id18"]], "delete_alert_message_in_batch": [[47, "delete-alert-message-in-batch"]], "delete_alert_receiver_by_id": [[47, "delete-alert-receiver-by-id"]], "delete_alert_rule_by_id": [[47, "delete-alert-rule-by-id"]], "list_alert_messages": [[47, "list-alert-messages"]], "list_alert_receivers": [[47, "list-alert-receivers"]], "list_alert_rules": [[47, "list-alert-rules"]], "update_alert_message_in_batch": [[47, "update-alert-message-in-batch"]], "update_alert_receiver_by_id": [[47, "update-alert-receiver-by-id"]], "update_alert_rule_by_id": [[47, "update-alert-rule-by-id"]], "BaseEdgeType": [[48, "baseedgetype"], [136, "baseedgetype"], [222, "baseedgetype"]], "Properties": [[48, "properties"], [49, "properties"], [50, "properties"], [51, "properties"], [52, "properties"], [53, "properties"], [54, "properties"], [55, "properties"], [56, "properties"], [57, "properties"], [58, "properties"], [59, "properties"], [60, "properties"], [61, "properties"], [62, "properties"], [63, "properties"], [64, "properties"], [65, "properties"], [66, "properties"], [68, "properties"], [69, "properties"], [70, "properties"], [71, "properties"], [72, "properties"], [73, "properties"], [74, "properties"], [76, "properties"], [77, "properties"], [78, "properties"], [79, "properties"], [80, "properties"], [81, "properties"], [82, "properties"], [83, "properties"], [84, "properties"], [85, "properties"], [86, "properties"], [87, "properties"], [88, "properties"], [89, "properties"], [90, "properties"], [91, "properties"], [92, "properties"], [93, "properties"], [96, "properties"], [97, "properties"], [98, "properties"], [99, "properties"], [100, "properties"], [101, "properties"], [102, "properties"], [103, "properties"], [104, "properties"], [105, "properties"], [107, "properties"], [108, "properties"], [109, "properties"], [111, "properties"], [112, "properties"], [113, "properties"], [114, "properties"], [115, "properties"], [116, "properties"], [117, "properties"], [118, "properties"], [119, "properties"], [120, "properties"], [122, "properties"], [123, "properties"], [124, "properties"], [135, "properties"], [136, "properties"], [137, "properties"], [138, "properties"], [139, "properties"], [140, "properties"], [141, "properties"], [142, "properties"], [143, "properties"], [144, "properties"], [145, "properties"], [146, "properties"], [147, "properties"], [148, "properties"], [149, "properties"], [150, "properties"], [151, "properties"], [152, "properties"], [153, "properties"], [155, "properties"], [156, "properties"], [157, "properties"], [158, "properties"], [159, "properties"], [160, "properties"], [161, "properties"], [162, "properties"], [163, "properties"], [164, "properties"], [165, "properties"], [166, "properties"], [167, "properties"], [168, "properties"], [169, "properties"], [170, "properties"], [171, "properties"], [172, "properties"], [175, "properties"], [176, "properties"], [177, "properties"], [178, "properties"], [179, "properties"], [181, "properties"], [182, "properties"], [184, "properties"], [185, "properties"], [186, "properties"], [187, "properties"], [188, "properties"], [190, "properties"], [191, "properties"], [192, "properties"], [193, "properties"], [194, "properties"], [195, "properties"], [196, "properties"], [197, "properties"], [198, "properties"], [199, "properties"], [200, "properties"], [201, "properties"], [202, "properties"], [203, "properties"], [204, "properties"], [206, "properties"], [207, "properties"], [208, "properties"], [209, "properties"], [210, "properties"], [211, "properties"], [221, "properties"], [222, "properties"], [223, "properties"], [224, "properties"], [225, "properties"], [226, "properties"], [227, "properties"], [228, "properties"], [229, "properties"], [230, "properties"], [231, "properties"], [232, "properties"], [233, "properties"], [234, "properties"], [235, "properties"], [236, "properties"], [237, "properties"], [238, "properties"], [239, "properties"], [241, "properties"], [242, "properties"], [243, "properties"], [244, "properties"], [245, "properties"], [246, "properties"], [247, "properties"], [248, "properties"], [249, "properties"], [250, "properties"], [251, "properties"], [252, "properties"], [253, "properties"], [254, "properties"], [255, "properties"], [256, "properties"], [257, "properties"], [258, "properties"], [261, "properties"], [262, "properties"], [263, "properties"], [264, "properties"], [265, "properties"], [266, "properties"], [268, "properties"], [270, "properties"], [271, "properties"], [272, "properties"], [273, "properties"], [274, "properties"], [276, "properties"], [277, "properties"], [278, "properties"], [279, "properties"], [280, "properties"], [281, "properties"], [282, "properties"], [283, "properties"], [284, "properties"], [285, "properties"], [286, "properties"], [287, "properties"], [288, "properties"], [289, "properties"], [290, "properties"], [292, "properties"], [293, "properties"], [294, "properties"], [295, "properties"], [296, "properties"], [297, "properties"]], "BaseEdgeTypeVertexTypePairRelationsInner": [[49, "baseedgetypevertextypepairrelationsinner"], [137, "baseedgetypevertextypepairrelationsinner"], [223, "baseedgetypevertextypepairrelationsinner"]], "BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams": [[50, "baseedgetypevertextypepairrelationsinnerxcsrparams"], [138, "baseedgetypevertextypepairrelationsinnerxcsrparams"], [224, "baseedgetypevertextypepairrelationsinnerxcsrparams"]], "BasePropertyMeta": [[51, "basepropertymeta"], [139, "basepropertymeta"], [225, "basepropertymeta"]], "BaseVertexType": [[52, "basevertextype"], [140, "basevertextype"], [226, "basevertextype"]], "BaseVertexTypeXCsrParams": [[53, "basevertextypexcsrparams"], [141, "basevertextypexcsrparams"], [227, "basevertextypexcsrparams"]], "ColumnMapping": [[54, "columnmapping"], [142, "columnmapping"], [228, "columnmapping"]], "ColumnMappingColumn": [[55, "columnmappingcolumn"]], "CreateAlertReceiverRequest": [[56, "createalertreceiverrequest"]], "CreateAlertRuleRequest": [[57, "createalertrulerequest"]], "CreateDataloadingJobResponse": [[58, "createdataloadingjobresponse"]], "CreateEdgeType": [[59, "createedgetype"], [143, "createedgetype"], [229, "createedgetype"]], "CreateGraphRequest": [[60, "creategraphrequest"], [144, "creategraphrequest"], [230, "creategraphrequest"]], "CreateGraphResponse": [[61, "creategraphresponse"], [145, "creategraphresponse"], [231, "creategraphresponse"]], "CreateGraphSchemaRequest": [[62, "creategraphschemarequest"], [146, "creategraphschemarequest"], [232, "creategraphschemarequest"]], "CreatePropertyMeta": [[63, "createpropertymeta"], [149, "createpropertymeta"], [235, "createpropertymeta"]], "CreateStoredProcRequest": [[64, "createstoredprocrequest"]], "CreateStoredProcResponse": [[65, "createstoredprocresponse"]], "CreateVertexType": [[66, "createvertextype"], [150, "createvertextype"], [236, "createvertextype"]], "graphscope.flex.rest.DataSourceApi": [[67, "graphscope-flex-rest-datasourceapi"]], "bind_datasource_in_batch": [[67, "bind-datasource-in-batch"]], "get_datasource_by_id": [[67, "get-datasource-by-id"]], "unbind_edge_datasource": [[67, "unbind-edge-datasource"]], "unbind_vertex_datasource": [[67, "unbind-vertex-datasource"]], "DataloadingJobConfig": [[68, "dataloadingjobconfig"]], "DataloadingJobConfigEdgesInner": [[69, "dataloadingjobconfigedgesinner"]], "DataloadingJobConfigLoadingConfig": [[70, "dataloadingjobconfigloadingconfig"]], "DataloadingJobConfigLoadingConfigFormat": [[71, "dataloadingjobconfigloadingconfigformat"]], "DataloadingJobConfigVerticesInner": [[72, "dataloadingjobconfigverticesinner"]], "DataloadingMRJobConfig": [[73, "dataloadingmrjobconfig"]], "DateType": [[74, "datetype"], [151, "datetype"], [237, "datetype"]], "graphscope.flex.rest.DeploymentApi": [[75, "graphscope-flex-rest-deploymentapi"]], "get_deployment_info": [[75, "get-deployment-info"]], "get_deployment_pod_log": [[75, "get-deployment-pod-log"]], "get_deployment_resource_usage": [[75, "get-deployment-resource-usage"]], "get_deployment_status": [[75, "get-deployment-status"]], "get_storage_usage": [[75, "get-storage-usage"]], "EdgeMapping": [[76, "edgemapping"], [156, "edgemapping"], [242, "edgemapping"]], "EdgeMappingTypeTriplet": [[77, "edgemappingtypetriplet"], [160, "edgemappingtypetriplet"], [246, "edgemappingtypetriplet"]], "Error": [[78, "error"]], "FixedChar": [[79, "fixedchar"], [163, "fixedchar"], [249, "fixedchar"]], "FixedCharChar": [[80, "fixedcharchar"], [164, "fixedcharchar"], [250, "fixedcharchar"]], "GSDataType": [[81, "gsdatatype"], [165, "gsdatatype"], [251, "gsdatatype"]], "GetAlertMessageResponse": [[82, "getalertmessageresponse"]], "GetAlertReceiverResponse": [[83, "getalertreceiverresponse"]], "GetAlertRuleResponse": [[84, "getalertruleresponse"]], "GetEdgeType": [[85, "getedgetype"], [166, "getedgetype"], [252, "getedgetype"]], "GetGraphResponse": [[86, "getgraphresponse"], [167, "getgraphresponse"], [253, "getgraphresponse"]], "GetGraphSchemaResponse": [[87, "getgraphschemaresponse"], [168, "getgraphschemaresponse"], [254, "getgraphschemaresponse"]], "GetPodLogResponse": [[88, "getpodlogresponse"]], "GetPropertyMeta": [[89, "getpropertymeta"], [171, "getpropertymeta"], [257, "getpropertymeta"]], "GetResourceUsageResponse": [[90, "getresourceusageresponse"]], "GetStorageUsageResponse": [[91, "getstorageusageresponse"]], "GetStoredProcResponse": [[92, "getstoredprocresponse"]], "GetVertexType": [[93, "getvertextype"], [172, "getvertextype"], [258, "getvertextype"]], "graphscope.flex.rest.GraphApi": [[94, "graphscope-flex-rest-graphapi"]], "create_edge_type": [[94, "create-edge-type"]], "create_graph": [[94, "create-graph"]], "create_vertex_type": [[94, "create-vertex-type"]], "delete_edge_type_by_name": [[94, "delete-edge-type-by-name"]], "delete_graph_by_id": [[94, "delete-graph-by-id"]], "delete_vertex_type_by_name": [[94, "delete-vertex-type-by-name"]], "get_graph_by_id": [[94, "get-graph-by-id"]], "get_schema_by_id": [[94, "get-schema-by-id"]], "import_schema_by_id": [[94, "import-schema-by-id"]], "list_graphs": [[94, "list-graphs"]], "graphscope.flex.rest.JobApi": [[95, "graphscope-flex-rest-jobapi"]], "delete_job_by_id": [[95, "delete-job-by-id"]], "get_dataloading_job_config": [[95, "get-dataloading-job-config"]], "get_job_by_id": [[95, "get-job-by-id"]], "list_jobs": [[95, "list-jobs"]], "submit_dataloading_job": [[95, "submit-dataloading-job"]], "JobStatus": [[96, "jobstatus"], [176, "jobstatus"], [262, "jobstatus"]], "LongText": [[97, "longtext"], [177, "longtext"], [263, "longtext"]], "NodeStatus": [[98, "nodestatus"]], "Parameter": [[99, "parameter"], [178, "parameter"], [265, "parameter"]], "PodStatus": [[100, "podstatus"]], "PrimitiveType": [[101, "primitivetype"], [179, "primitivetype"], [266, "primitivetype"]], "ResourceUsage": [[102, "resourceusage"]], "RunningDeploymentInfo": [[103, "runningdeploymentinfo"]], "RunningDeploymentStatus": [[104, "runningdeploymentstatus"]], "SchemaMapping": [[105, "schemamapping"], [184, "schemamapping"], [270, "schemamapping"]], "graphscope.flex.rest.ServiceApi": [[106, "graphscope-flex-rest-serviceapi"]], "get_service_status_by_id": [[106, "get-service-status-by-id"]], "list_service_status": [[106, "list-service-status"]], "restart_service": [[106, "restart-service"]], "start_service": [[106, "start-service"]], "stop_service": [[106, "stop-service"]], "ServiceStatus": [[107, "servicestatus"], [190, "servicestatus"], [276, "servicestatus"]], "ServiceStatusSdkEndpoints": [[108, "servicestatussdkendpoints"]], "StartServiceRequest": [[109, "startservicerequest"], [192, "startservicerequest"], [278, "startservicerequest"]], "graphscope.flex.rest.StoredProcedureApi": [[110, "graphscope-flex-rest-storedprocedureapi"]], "create_stored_procedure": [[110, "create-stored-procedure"]], "delete_stored_procedure_by_id": [[110, "delete-stored-procedure-by-id"]], "get_stored_procedure_by_id": [[110, "get-stored-procedure-by-id"]], "list_stored_procedures": [[110, "list-stored-procedures"]], "update_stored_procedure_by_id": [[110, "update-stored-procedure-by-id"]], "StoredProcedureMeta": [[111, "storedproceduremeta"], [194, "storedproceduremeta"], [280, "storedproceduremeta"]], "StringType": [[112, "stringtype"], [195, "stringtype"], [281, "stringtype"]], "StringTypeString": [[113, "stringtypestring"], [196, "stringtypestring"], [282, "stringtypestring"]], "TemporalType": [[114, "temporaltype"], [197, "temporaltype"], [283, "temporaltype"]], "TemporalTypeTemporal": [[115, "temporaltypetemporal"], [198, "temporaltypetemporal"], [284, "temporaltypetemporal"]], "TimeStampType": [[116, "timestamptype"], [199, "timestamptype"], [285, "timestamptype"]], "TypedValue": [[117, "typedvalue"], [200, "typedvalue"], [286, "typedvalue"]], "UpdateAlertMessageStatusRequest": [[118, "updatealertmessagestatusrequest"]], "UpdateStoredProcRequest": [[119, "updatestoredprocrequest"]], "UploadFileResponse": [[120, "uploadfileresponse"], [202, "uploadfileresponse"], [288, "uploadfileresponse"]], "graphscope.flex.rest.UtilsApi": [[121, "graphscope-flex-rest-utilsapi"]], "upload_file": [[121, "upload-file"]], "VarChar": [[122, "varchar"], [203, "varchar"], [289, "varchar"]], "VarCharVarChar": [[123, "varcharvarchar"], [204, "varcharvarchar"], [290, "varcharvarchar"]], "VertexMapping": [[124, "vertexmapping"], [208, "vertexmapping"], [294, "vertexmapping"]], "FLEX Coordinator Python SDK": [[125, "flex-coordinator-python-sdk"]], "Connect to Coordinator Service(Interactive) via gsctl": [[126, "connect-to-coordinator-service-interactive-via-gsctl"]], "Check Service Status": [[126, "check-service-status"], [307, "check-service-status"]], "Close the connection": [[126, "close-the-connection"], [307, "close-the-connection"]], "Destroy the Interactive Instance": [[126, "destroy-the-interactive-instance"], [307, "destroy-the-interactive-instance"]], "Coordinator RESTFul API": [[127, "coordinator-restful-api"]], "Configurable Items for Deploying Interactive with gsctl": [[128, "configurable-items-for-deploying-interactive-with-gsctl"]], "Ports": [[128, "ports"]], "Service Configuration": [[128, "service-configuration"]], "Customizing Interactive Engine Service Configuration": [[128, "customizing-interactive-engine-service-configuration"]], "Sample Configuration": [[128, "sample-configuration"]], "Sharded Service": [[128, "sharded-service"]], "Available Configurations": [[128, "available-configurations"]], "TODOs": [[128, "todos"]], "Using Custom Graph": [[129, "using-custom-graph"]], "Step 1: Create a New Graph": [[129, "step-1-create-a-new-graph"]], "Step 2: Import Graph Data": [[129, "step-2-import-graph-data"]], "Bind Data Source": [[129, "bind-data-source"]], "Create Data Loading Job": [[129, "create-data-loading-job"]], "Step 3: Start the Service with the New Graph": [[129, "step-3-start-the-service-with-the-new-graph"]], "Step 4: A More Complicated Movies Graph(optional)": [[129, "step-4-a-more-complicated-movies-graph-optional"]], "movie_graph.yaml": [[129, "movie-graph-yaml"]], "import.yaml": [[129, "import-yaml"]], "job_config.yaml": [[129, "job-config-yaml"]], "Try other graphs": [[129, "try-other-graphs"]], "Data Import Configuration": [[130, "data-import-configuration"]], "Supported data source": [[130, "supported-data-source"]], "Column mapping": [[130, "column-mapping"]], "Import from CSV": [[130, "import-from-csv"]], "Import from ODPS Table": [[130, "import-from-odps-table"]], "Sample Configuration for loading \u201cModern\u201d Graph from csv files": [[130, "sample-configuration-for-loading-modern-graph-from-csv-files"]], "Sample configuration for loading \u201cModern Graph\u201d from odps tables": [[130, "sample-configuration-for-loading-modern-graph-from-odps-tables"]], "Configuration Breakdown": [[130, "configuration-breakdown"]], "Loading Configurations": [[130, "loading-configurations"]], "Vertex Mappings": [[130, "vertex-mappings"]], "Edge Mappings": [[130, "edge-mappings"]], "Data Model": [[131, "data-model"]], "Graph Data": [[131, "graph-data"]], "Entity Data": [[131, "entity-data"]], "Primitive Types": [[131, "primitive-types"]], "String Types": [[131, "string-types"]], "Temporal types": [[131, "temporal-types"]], "Array Types": [[131, "array-types"]], "Deployment": [[132, "deployment"], [325, "deployment"]], "Deploy with Docker": [[132, "deploy-with-docker"]], "Customizing Ports": [[132, "customizing-ports"]], "Deploy with Helm": [[132, "deploy-with-helm"]], "Deploy from Source Code": [[132, "deploy-from-source-code"]], "Packing Interactive from Source": [[132, "packing-interactive-from-source"]], "Deploying Customized Built Interactive": [[132, "deploying-customized-built-interactive"]], "Pushing to Your Own Registry": [[132, "pushing-to-your-own-registry"]], "Connecting and Using": [[132, "connecting-and-using"]], "Install Deps on Local": [[134, "install-deps-on-local"]], "Develop on Docker Container": [[134, "develop-on-docker-container"]], "Interactive Query Engine": [[134, "interactive-query-engine"]], "Dependency Graph": [[134, "dependency-graph"]], "Compiler": [[134, "compiler"]], "Build Interactive": [[134, "build-interactive"]], "CMake options": [[134, "cmake-options"]], "Starting Service Manually": [[134, "starting-service-manually"]], "Enable AdminService": [[134, "enable-adminservice"]], "Start Compiler Service": [[134, "start-compiler-service"]], "Error Code": [[134, "error-code"]], "Transactions": [[134, "transactions"]], "APIResponseWithCode": [[135, "apiresponsewithcode"], [221, "apiresponsewithcode"]], "Enum: RelationEnum": [[137, "enum-relationenum"]], "Enum: EdgeStorageStrategyEnum": [[138, "enum-edgestoragestrategyenum"]], "CreateProcedureRequest": [[147, "createprocedurerequest"], [233, "createprocedurerequest"]], "Enum: TypeEnum": [[147, "enum-typeenum"], [170, "enum-typeenum"], [194, "enum-typeenum"]], "CreateProcedureResponse": [[148, "createprocedureresponse"], [234, "createprocedureresponse"]], "DeleteEdgeRequest": [[152, "deleteedgerequest"], [238, "deleteedgerequest"]], "DeleteVertexRequest": [[153, "deletevertexrequest"], [239, "deletevertexrequest"]], "EdgeAPI": [[154, "edgeapi"]], "addEdge": [[154, "addedge"]], "getEdge": [[154, "getedge"]], "updateEdge": [[154, "updateedge"]], "EdgeData": [[155, "edgedata"], [241, "edgedata"]], "EdgeMappingDestinationVertexMappingsInner": [[157, "edgemappingdestinationvertexmappingsinner"], [243, "edgemappingdestinationvertexmappingsinner"]], "EdgeMappingSourceVertexMappingsInner": [[158, "edgemappingsourcevertexmappingsinner"], [244, "edgemappingsourcevertexmappingsinner"]], "EdgeMappingSourceVertexMappingsInnerColumn": [[159, "edgemappingsourcevertexmappingsinnercolumn"], [245, "edgemappingsourcevertexmappingsinnercolumn"]], "EdgeRequest": [[161, "edgerequest"], [247, "edgerequest"]], "EdgeStatistics": [[162, "edgestatistics"], [248, "edgestatistics"]], "Enum: PrimitiveTypeEnum": [[165, "enum-primitivetypeenum"], [179, "enum-primitivetypeenum"]], "Enum: StoreTypeEnum": [[167, "enum-storetypeenum"]], "GetGraphStatisticsResponse": [[169, "getgraphstatisticsresponse"], [255, "getgraphstatisticsresponse"]], "GetProcedureResponse": [[170, "getprocedureresponse"], [256, "getprocedureresponse"]], "GraphManagementApi": [[173, "graphmanagementapi"]], "ListGraphs": [[173, "listgraphs"], [259, "listgraphs"]], "CreateGraph": [[173, "creategraph"], [259, "creategraph"]], "BulkLoading": [[173, "bulkloading"], [259, "bulkloading"]], "DeleteGraph": [[173, "deletegraph"], [259, "deletegraph"]], "GetGraphMeta": [[173, "getgraphmeta"], [259, "getgraphmeta"]], "GetGraphStatistic": [[173, "getgraphstatistic"]], "GetGraphSchema": [[173, "getgraphschema"], [259, "getgraphschema"]], "JobManagementApi": [[174, "jobmanagementapi"]], "CancelJob": [[174, "canceljob"], [260, "canceljob"]], "GetJobById": [[174, "getjobbyid"], [260, "getjobbyid"]], "ListJobs": [[174, "listjobs"], [260, "listjobs"]], "JobResponse": [[175, "jobresponse"], [261, "jobresponse"]], "Enum: StatusEnum": [[176, "enum-statusenum"]], "ProcedureManagementApi": [[180, "proceduremanagementapi"]], "CreateProcedure": [[180, "createprocedure"], [267, "createprocedure"]], "DeleteProcedure": [[180, "deleteprocedure"], [267, "deleteprocedure"]], "GetProcedure": [[180, "getprocedure"], [267, "getprocedure"]], "ListProcedures": [[180, "listprocedures"], [267, "listprocedures"]], "UpdateProcedure": [[180, "updateprocedure"], [267, "updateprocedure"]], "Property": [[181, "property"], [581, "property"]], "QueryRequest": [[182, "queryrequest"], [268, "queryrequest"]], "QueryServiceApi": [[183, "queryserviceapi"]], "CallProcedure": [[183, "callprocedure"], [269, "callprocedure"]], "CallProcedureOnCurrentGraph": [[183, "callprocedureoncurrentgraph"], [269, "callprocedureoncurrentgraph"]], "SchemaMappingLoadingConfig": [[185, "schemamappingloadingconfig"], [271, "schemamappingloadingconfig"]], "Enum: ImportOptionEnum": [[185, "enum-importoptionenum"]], "SchemaMappingLoadingConfigDataSource": [[186, "schemamappingloadingconfigdatasource"], [272, "schemamappingloadingconfigdatasource"]], "Enum: SchemeEnum": [[186, "enum-schemeenum"]], "SchemaMappingLoadingConfigFormat": [[187, "schemamappingloadingconfigformat"], [273, "schemamappingloadingconfigformat"]], "SchemaMappingLoadingConfigXCsrParams": [[188, "schemamappingloadingconfigxcsrparams"], [274, "schemamappingloadingconfigxcsrparams"]], "ServiceManagementApi": [[189, "servicemanagementapi"]], "GetServiceStatus": [[189, "getservicestatus"], [275, "getservicestatus"]], "RestartService": [[189, "restartservice"], [275, "restartservice"]], "StartService": [[189, "startservice"], [275, "startservice"]], "StopService": [[189, "stopservice"], [275, "stopservice"]], "Enum: DeployModeEnum": [[190, "enum-deploymodeenum"]], "SnapshotStatus": [[191, "snapshotstatus"], [277, "snapshotstatus"]], "StopServiceRequest": [[193, "stopservicerequest"], [279, "stopservicerequest"]], "UpdateProcedureRequest": [[201, "updateprocedurerequest"], [287, "updateprocedurerequest"]], "VertexApi": [[205, "vertexapi"], [291, "vertexapi"]], "addVertex": [[205, "addvertex"]], "getVertex": [[205, "getvertex"]], "updateVertex": [[205, "updatevertex"]], "VertexData": [[206, "vertexdata"], [292, "vertexdata"]], "VertexEdgeRequest": [[207, "vertexedgerequest"], [293, "vertexedgerequest"]], "VertexRequest": [[209, "vertexrequest"], [295, "vertexrequest"]], "VertexStatistics": [[210, "vertexstatistics"], [296, "vertexstatistics"]], "VertexTypePairStatistics": [[211, "vertextypepairstatistics"], [297, "vertextypepairstatistics"]], "Java SDK Reference": [[212, "java-sdk-reference"]], "Requirements": [[212, "requirements"]], "Maven users": [[212, "maven-users"]], "Others": [[212, "others"]], "Connect and submit a query": [[212, "connect-and-submit-a-query"], [300, "connect-and-submit-a-query"]], "Create a new graph": [[212, "create-a-new-graph"], [300, "create-a-new-graph"], [582, "create-a-new-graph"]], "Import data to the graph": [[212, "import-data-to-the-graph"], [300, "import-data-to-the-graph"], [582, "import-data-to-the-graph"]], "Create a stored procedure": [[212, "create-a-stored-procedure"], [300, "create-a-stored-procedure"]], "Start the query service on the new graph": [[212, "start-the-query-service-on-the-new-graph"], [300, "start-the-query-service-on-the-new-graph"]], "Submit queries to the new graph": [[212, "submit-queries-to-the-new-graph"], [300, "submit-queries-to-the-new-graph"]], "Submit cypher queries": [[212, "submit-cypher-queries"], [300, "submit-cypher-queries"]], "Query the stored procedure": [[212, "query-the-stored-procedure"]], "Delete the graph": [[212, "delete-the-graph"], [300, "delete-the-graph"], [582, "delete-the-graph"]], "Documentation for Service APIs": [[212, "documentation-for-service-apis"], [301, "documentation-for-service-apis"]], "Documentation for Utilities APIs": [[212, "documentation-for-utilities-apis"], [301, "documentation-for-utilities-apis"]], "Documentation for Data Structures": [[212, "documentation-for-data-structures"], [301, "documentation-for-data-structures"]], "Documentation for Authorization": [[212, "documentation-for-authorization"]], "EdgeApi": [[240, "edgeapi"]], "add_edge": [[240, "add-edge"]], "get_edge": [[240, "get-edge"]], "update_edge": [[240, "update-edge"]], "delete_edge": [[240, "delete-edge"]], "GraphManagementApI": [[259, "graphmanagementapi"]], "GetGraphStatistics": [[259, "getgraphstatistics"]], "createVertexType": [[259, "createvertextype"]], "updateVertexType": [[259, "updatevertextype"]], "deleteVertexType": [[259, "deletevertextype"]], "createEdgeType": [[259, "createedgetype"]], "updateEdgeType": [[259, "updateedgetype"]], "deleteEdgeType": [[259, "deleteedgetype"]], "getSnapshotStatus": [[259, "getsnapshotstatus"]], "gs_interactive.AdminServiceJobManagementApi": [[260, "gs-interactive-adminservicejobmanagementapi"]], "ModelProperty": [[264, "modelproperty"]], "gs_interactive.AdminServiceProcedureManagementApi": [[267, "gs-interactive-adminserviceproceduremanagementapi"]], "gs_interactive.QueryServiceApi": [[269, "gs-interactive-queryserviceapi"]], "gs_interactive.AdminServiceServiceManagementApi": [[275, "gs-interactive-adminserviceservicemanagementapi"]], "add_vertex": [[291, "add-vertex"]], "get_vertex": [[291, "get-vertex"]], "update_vertex": [[291, "update-vertex"]], "delete_vertex": [[291, "delete-vertex"]], "Driver": [[298, "driver"]], "Driver Class": [[298, "module-gs_interactive.client.driver"]], "Encoder and Decoder": [[299, "encoder-and-decoder"]], "Encoder Class": [[299, "module-gs_interactive.client.utils"]], "Decoder Class": [[299, "module-0"]], "Python SDK Guide": [[300, "python-sdk-guide"]], "Python SDK Reference": [[301, "python-sdk-reference"]], "Result": [[302, "result"]], "Result Class": [[302, "module-gs_interactive.client.result"]], "Session": [[303, "session"], [576, "session"]], "Session Interface": [[303, "session-interface"]], "DefaultSession Class": [[303, "defaultsession-class"]], "Status": [[304, "status"]], "Status Class": [[304, "module-gs_interactive.client.status"]], "Interactive RESTFul API": [[305, "interactive-restful-api"]], "Create c++ Stored Procedures on GraphScope Interactive": [[306, "create-c-stored-procedures-on-graphscope-interactive"]], "Getting Started.": [[306, "getting-started"]], "Define a C++ Stored Procedure": [[306, "define-a-c-stored-procedure"]], "Register and Call the stored procedure": [[306, "register-and-call-the-stored-procedure"]], "gsctl": [[306, "gsctl"]], "Define the YAML": [[306, "define-the-yaml"]], "Python SDK": [[306, "python-sdk"], [582, "python-sdk"]], "Java SDK": [[306, "java-sdk"]], "Create a Stored Procedure": [[306, "create-a-stored-procedure"], [311, "create-a-stored-procedure"]], "Graph Database Engine": [[306, "graph-database-engine"]], "Query Input and Output": [[306, "query-input-and-output"]], "Encoder/Decoder": [[306, "encoder-decoder"]], "Programming Interface": [[306, "programming-interface"], [427, "programming-interface"]], "Install Interactive": [[307, "install-interactive"]], "Connect to Interactive Service": [[307, "connect-to-interactive-service"]], "Submit Cypher Queries": [[307, "submit-cypher-queries"], [582, "submit-cypher-queries"]], "Download cypher-shell": [[307, "download-cypher-shell"]], "Connect to the Service": [[307, "connect-to-the-service"]], "Run a Simple Query": [[307, "run-a-simple-query"]], "Glossary": [[308, "glossary"], [351, "glossary"]], "Stored Procedure.": [[308, "stored-procedure"]], "Cypher.": [[308, "cypher"]], "Compile.": [[308, "compile"]], "Install and Deploy Interactive": [[309, "install-and-deploy-interactive"]], "Service Accessibility": [[309, "service-accessibility"]], "A Solid Foundation": [[310, "a-solid-foundation"]], "Key Features": [[310, "key-features"], [338, "key-features"]], "Property Graph Model and Graph Queries": [[310, "property-graph-model-and-graph-queries"]], "The Cypher Query Language": [[310, "the-cypher-query-language"]], "Limitations": [[310, "limitations"], [333, "limitations"]], "Stored Procedures": [[311, "stored-procedures"]], "Define a Stored Procedure": [[311, "define-a-stored-procedure"]], "Delete a Stored Procedures": [[311, "delete-a-stored-procedures"]], "Viewing Stored Procedures": [[311, "viewing-stored-procedures"]], "Querying Stored Procedures": [[311, "querying-stored-procedures"]], "Call the Stored Procedure via Interactive SDK": [[311, "call-the-stored-procedure-via-interactive-sdk"]], "Call the Stored Procedure via Neo4j-native Tools": [[311, "call-the-stored-procedure-via-neo4j-native-tools"]], "Builtin Procedures": [[311, "builtin-procedures"]], "count_vertices": [[311, "count-vertices"]], "Returns": [[311, "returns"], [311, "id2"], [311, "id4"]], "k_hop_neighbors": [[311, "k-hop-neighbors"]], "shortest_path_among_three": [[311, "shortest-path-among-three"]], "pagerank": [[311, "pagerank"]], "GraphScope Interactive": [[312, "graphscope-interactive"]], "Introduction to ArrowFragment": [[313, "introduction-to-arrowfragment"]], "0. \u672f\u8bed": [[313, "id1"]], "1. \u8f7d\u56fe": [[313, "id2"]], "1.1 \u521d\u59cb\u5316partitioner": [[313, "partitioner"]], "1.2 \u6784\u5efa\u539f\u59cbarrow table": [[313, "arrow-table"]], "1.3. Shuffle vtable": [[313, "shuffle-vtable"]], "1.4. \u6784\u5efaVertex map(BasicArrowVertexMapBuilder)": [[313, "vertex-map-basicarrowvertexmapbuilder"]], "1.5. \u6784\u5efaFragment\u51c6\u5907": [[313, "fragment"]], "1.5.1. \u5904\u7406edge table(BasicEVFragmentLoader)": [[313, "edge-table-basicevfragmentloader"]], "1.5.2 FragmentBuilder\u6570\u636e\u521d\u59cb\u5316 (BasicArrowFragmentBuilder)": [[313, "fragmentbuilder-basicarrowfragmentbuilder"]], "1.6 Fragment\u6784\u5efa": [[313, "id3"]], "2. \u8bbf\u95eeFragment": [[313, "id4"]], "2.1 \u8bbf\u95ee\u9876\u70b9": [[313, "id5"]], "2.1.1 \u8bbf\u95ee\u5185\u90e8\u70b9": [[313, "id6"]], "2.1.2 \u8303\u56f4\u5916\u90e8\u70b9": [[313, "id7"]], "2.1.3 \u8bbf\u95ee\u5168\u90e8\u70b9": [[313, "id8"]], "2.1.4 \u8bbf\u95ee\u9876\u70b9\u6570\u636e": [[313, "id9"]], "2.2 \u8bbf\u95ee\u8fb9": [[313, "id10"]], "2.2.1 \u8bbf\u95ee\u51fa\u8fb9": [[313, "id11"]], "2.2.2 \u8bbf\u95ee\u5165\u8fb9": [[313, "id12"]], "2.2.3 \u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": [[313, "id13"]], "Frequently Asked Questions": [[314, "frequently-asked-questions"]], "Getting Started for GLE": [[315, "getting-started-for-gle"]], "Graph Workloads": [[316, "graph-workloads"]], "Graph Analytics": [[316, "graph-analytics"]], "Graph Interactive Query": [[316, "graph-interactive-query"]], "Graph Learning": [[316, "graph-learning"], [433, "graph-learning"]], "GraphScope for Data Scientists": [[317, "graphscope-for-data-scientists"]], "Challenges of Handling Graph Computation": [[317, "challenges-of-handling-graph-computation"]], "Solutions of GraphScope": [[317, "solutions-of-graphscope"]], "Program as Single Machine and Run as Distributed": [[317, "program-as-single-machine-and-run-as-distributed"]], "Integration with PyData Ecosystem": [[317, "integration-with-pydata-ecosystem"]], "How to Report Bugs": [[318, "how-to-report-bugs"]], "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba": [[319, "graphscope-a-one-stop-large-scale-graph-computing-system-from-alibaba"]], "Installation & Deployment": [[319, null]], "GraphScope Flex": [[319, null]], "Graph Analytical Engine": [[319, null], [357, "graph-analytical-engine"]], "Graph Interactive Engine": [[319, null], [357, "graph-interactive-engine"]], "Graph Learning Engine": [[319, null]], "Storage Engine": [[319, null]], "Troubleshooting & Utilities": [[319, null]], "Development": [[319, null]], "Reference": [[319, null], [581, "reference"]], "Indices and tables": [[319, "indices-and-tables"]], "A Generic Benchmark Tool": [[320, "a-generic-benchmark-tool"]], "Benchmark Tool Overview": [[320, "benchmark-tool-overview"]], "Benchmark Tool Usage": [[320, "benchmark-tool-usage"]], "Repository contents": [[320, "repository-contents"]], "Building the benchmark": [[320, "building-the-benchmark"]], "Running the benchmark": [[320, "running-the-benchmark"]], "Collecting the results": [[320, "collecting-the-results"]], "Configurations": [[320, "configurations"]], "Configure Compared Systems": [[320, "configure-compared-systems"]], "Configure Workloads": [[320, "configure-workloads"]], "Configure Results Collection": [[320, "configure-results-collection"]], "Standalone Deployment for GIE": [[321, "standalone-deployment-for-gie"]], "Deploy Your First GIE Service": [[321, "deploy-your-first-gie-service"]], "Remove the GIE Service": [[321, "remove-the-gie-service"]], "Using Your Own Data": [[321, "using-your-own-data"]], "Deploy on a Cluster": [[321, "deploy-on-a-cluster"]], "Other Useful Configurations": [[321, "other-useful-configurations"]], "Design of GIE": [[322, "design-of-gie"]], "The Motivations": [[322, "the-motivations"]], "The Architecture": [[322, "the-architecture"]], "Query Processing": [[322, "query-processing"]], "Build GIE with Vineyard Store on Local": [[323, "build-gie-with-vineyard-store-on-local"]], "Test GIE with Vineyard Store on Local": [[323, "test-gie-with-vineyard-store-on-local"]], "Manually Start the GIE Services": [[323, "manually-start-the-gie-services"]], "Running GraphScope Interactive Engine on Local": [[324, "running-graphscope-interactive-engine-on-local"]], "Customize Configurations for GIE instance": [[324, "customize-configurations-for-gie-instance"]], "GOpt: A Graph-Native Query Optimization Framework": [[325, "gopt-a-graph-native-query-optimization-framework"]], "Introducing GOpt": [[325, "introducing-gopt"]], "Core Features": [[325, "core-features"]], "Why GOpt": [[325, "why-gopt"]], "Quick Start": [[325, "quick-start"], [429, "quick-start"]], "Local Setup": [[325, "local-setup"]], "Docker Setup": [[325, "docker-setup"]], "Importing Data": [[325, "importing-data"]], "Starting Neo4j Service": [[325, "starting-neo4j-service"]], "Analyzing Queries": [[325, "analyzing-queries"]], "Ambiguous Pattern": [[325, "ambiguous-pattern"]], "Graph Pattern Matching": [[325, "graph-pattern-matching"]], "Hybrid Graph Relational": [[325, "hybrid-graph-relational"]], "ST Path": [[325, "st-path"]], "Tutorial": [[325, "tutorial"]], "Benchmark Tools": [[325, "benchmark-tools"]], "Steps": [[325, "steps"]], "Integration of GOpt": [[325, "integration-of-gopt"]], "Design of GOpt": [[325, "design-of-gopt"]], "Detailed Introduction": [[325, "detailed-introduction"]], "Rules": [[325, "rules"]], "Graph Planner Interface by JNI and RESTful API": [[326, "graph-planner-interface-by-jni-and-restful-api"]], "JNI API": [[326, "jni-api"]], "Interface Overview": [[326, "interface-overview"]], "Step 1: Build the Project": [[326, "step-1-build-the-project"], [326, "id2"]], "Step 2: Locate and Extract the Package": [[326, "step-2-locate-and-extract-the-package"], [326, "id3"]], "Step 3: Run the Example Binary": [[326, "step-3-run-the-example-binary"]], "Restful API": [[326, "restful-api"]], "Step 3: Start the Graph Planner RESTful Service": [[326, "step-3-start-the-graph-planner-restful-service"]], "Step 4: Access the RESTful API by Curl": [[326, "step-4-access-the-restful-api-by-curl"]], "Step 4: Access the RESTful API by Java Sdk": [[326, "step-4-access-the-restful-api-by-java-sdk"]], "GIE for Cypher": [[327, "gie-for-cypher"]], "Connecting via Python Driver": [[327, "connecting-via-python-driver"]], "Connecting via Cypher-Shell": [[327, "connecting-via-cypher-shell"]], "Using LLM as an Assistant in GIE": [[328, "using-llm-as-an-assistant-in-gie"]], "0. Environment": [[328, "environment"]], "1. Download Datasets": [[328, "download-datasets"]], "2. Load the Graph": [[328, "load-the-graph"]], "3. Set Endpoint and API Key": [[328, "set-endpoint-and-api-key"]], "4. Generate Graph Query Sentence from Questions": [[328, "generate-graph-query-sentence-from-questions"]], "5. Execute Generated Query Sentence with GIE": [[328, "execute-generated-query-sentence-with-gie"]], "Cypher Support": [[329, "cypher-support"]], "Data Types": [[329, "data-types"], [580, "data-types"]], "Property Types": [[329, "property-types"]], "Structural types": [[329, "structural-types"]], "Constructed Types": [[329, "constructed-types"]], "Operators": [[329, "operators"]], "Clause": [[329, "clause"]], "Neo4j Ecosystem": [[330, "neo4j-ecosystem"]], "GIE For Tinkerpop Ecosystem": [[330, null], [336, null]], "FAQs for GIE Gremlin Usage": [[331, "faqs-for-gie-gremlin-usage"]], "Compatibility with TinkerPop": [[331, "compatibility-with-tinkerpop"]], "Property Graph Constraints": [[331, "property-graph-constraints"]], "What\u2019s the difference between Inner ID and Property ID ?": [[331, "whats-the-difference-between-inner-id-and-property-id"]], "How to use path expand in GIE Gremlin ?": [[331, "how-to-use-path-expand-in-gie-gremlin"]], "How to filter data in GIE Gremlin like SQL ?": [[331, "how-to-filter-data-in-gie-gremlin-like-sql"]], "How to aggregate data in GIE Gremlin like SQL?": [[331, "how-to-aggregate-data-in-gie-gremlin-like-sql"]], "group by multiple keys": [[331, "group-by-multiple-keys"]], "group by multiple values:": [[331, "group-by-multiple-values"]], "How to optimize Gremlin queries for performance in GIE?": [[331, "how-to-optimize-gremlin-queries-for-performance-in-gie"]], "Use appropriate indexing": [[331, "use-appropriate-indexing"]], "How to use subgraph in GIE Gremlin ?": [[331, "how-to-use-subgraph-in-gie-gremlin"]], "Suggestions About Parallelism Settings for Queries": [[331, "suggestions-about-parallelism-settings-for-queries"]], "Supported Gremlin Steps": [[333, "supported-gremlin-steps"]], "Introduction": [[333, "introduction"]], "Standard Steps": [[333, "standard-steps"]], "Source": [[333, "source"]], "V()": [[333, "v"]], "E()": [[333, "e"]], "Expand": [[333, "expand"]], "outE()": [[333, "oute"]], "inE()": [[333, "ine"]], "bothE()": [[333, "bothe"]], "out()": [[333, "out"], [333, "id7"]], "in()": [[333, "in"], [333, "id8"]], "both()": [[333, "both"], [333, "id9"]], "outV()": [[333, "outv"]], "inV()": [[333, "inv"]], "otherV()": [[333, "otherv"]], "bothV()": [[333, "bothv"]], "Filter": [[333, "filter"]], "hasId()": [[333, "hasid"], [335, "hasid"]], "hasLabel()": [[333, "haslabel"]], "has()": [[333, "has"]], "hasNot()": [[333, "hasnot"]], "is()": [[333, "is"]], "where(traversal)": [[333, "where-traversal"]], "where(predicate)": [[333, "where-predicate"]], "not(traversal)": [[333, "not-traversal"]], "dedup()": [[333, "dedup"], [335, "dedup"]], "Project": [[333, "project"]], "id()": [[333, "id"]], "label()": [[333, "label"]], "constant()": [[333, "constant"], [335, "constant"]], "valueMap()": [[333, "valuemap"], [335, "valuemap"]], "values()": [[333, "values"]], "elementMap()": [[333, "elementmap"]], "select()": [[333, "select"], [335, "select"]], "Aggregate": [[333, "aggregate"]], "count()": [[333, "count"]], "fold()": [[333, "fold"], [335, "fold"]], "sum()": [[333, "sum"]], "min()": [[333, "min"]], "max()": [[333, "max"]], "mean()": [[333, "mean"]], "group()": [[333, "group"], [335, "group"]], "groupCount()": [[333, "groupcount"], [335, "groupcount"]], "<h3 id=\"gremlin-order\">Order</h3>": [[333, "order"]], "order()": [[333, "id1"]], "Statistics": [[333, "statistics"]], "limit()": [[333, "limit"]], "coin()": [[333, "coin"]], "sample()": [[333, "sample"]], "Union": [[333, "union"]], "union()": [[333, "id2"]], "Match": [[333, "match"]], "match()": [[333, "id3"]], "Subgraph": [[333, "subgraph"]], "subgraph()": [[333, "id4"]], "Identity": [[333, "identity"]], "identity()": [[333, "id5"]], "Unfold": [[333, "unfold"]], "unfold()": [[333, "id6"], [333, "id10"]], "Syntactic Sugars": [[333, "syntactic-sugars"]], "PathExpand": [[333, "pathexpand"]], "endV()": [[333, "endv"]], "Getting Properties": [[333, "getting-properties"]], "Expression": [[333, "expression"]], "Running Examples": [[333, "running-examples"]], "Aggregate (Group)": [[333, "aggregate-group"]], "To be Supported": [[333, "to-be-supported"]], "path()": [[333, "path"]], "local()": [[333, "local"]], "Will Not be Supported": [[333, "will-not-be-supported"]], "repeat()": [[333, "repeat"]], "properties()": [[333, "properties"]], "sideEffect": [[333, "sideeffect"]], "branch": [[333, "branch"]], "GIE for Gremlin": [[334, "gie-for-gremlin"]], "Connecting via Python SDK": [[334, "connecting-via-python-sdk"]], "Connecting via Java SDK": [[334, "connecting-via-java-sdk"]], "Connecting via Gremlin-Console": [[334, "connecting-via-gremlin-console"]], "Tutorial: LDBC Gremlin": [[335, "tutorial-ldbc-gremlin"]], "Load the LDBC Graph": [[335, "load-the-ldbc-graph"]], "Basic Vertex/Edge Query": [[335, "basic-vertex-edge-query"]], "Retrieve Vertices and Edges": [[335, "retrieve-vertices-and-edges"]], "Apply Some Filters": [[335, "apply-some-filters"]], "Extract Property Values": [[335, "extract-property-values"]], "Real Applications": [[335, "real-applications"], [335, "id1"]], "Basic Traversal Query": [[335, "basic-traversal-query"]], "Expansion": [[335, "expansion"]], "out(), in() and both()": [[335, "out-in-and-both"]], "outE(), inE() and bothE()": [[335, "oute-ine-and-bothe"]], "outV(), inV(), bothV() and otherV()": [[335, "outv-inv-bothv-and-otherv"]], "Multiple Expansion Steps": [[335, "multiple-expansion-steps"]], "Expansion from many starting points": [[335, "expansion-from-many-starting-points"]], "Filter & Expansion": [[335, "filter-expansion"]], "Apply filters after expansion": [[335, "apply-filters-after-expansion"]], "Expansion as filters": [[335, "expansion-as-filters"]], "Path Expansion (Syntactic Sugar)": [[335, "path-expansion-syntactic-sugar"]], "Pattern Match": [[335, "pattern-match"]], "Relational Operations": [[335, "relational-operations"]], "Filter Steps": [[335, "filter-steps"]], "where()": [[335, "where"]], "Project Steps": [[335, "project-steps"]], "id() and label()": [[335, "id-and-label"]], "Aggregate Steps": [[335, "aggregate-steps"]], "sum(), min(), max() and  mean()": [[335, "sum-min-max-and-mean"]], "Order Step": [[335, "order-step"]], "Limit Step": [[335, "limit-step"]], "Expression(Syntax Sugar)": [[335, "expression-syntax-sugar"]], "Complex Queries": [[335, "complex-queries"]], "LDBC BI2": [[335, "ldbc-bi2"]], "LDBC BI3": [[335, "ldbc-bi3"]], "LDBC BI4(Left Part)": [[335, "ldbc-bi4-left-part"]], "LDBC BI11": [[335, "ldbc-bi11"]], "LDBC BI14": [[335, "ldbc-bi14"]], "Apache TinkerPop Ecosystem": [[336, "apache-tinkerpop-ecosystem"]], "Tutorials for Java Users": [[337, "tutorials-for-java-users"]], "Ease-of-use: Python Interface": [[338, "ease-of-use-python-interface"]], "Graph Traversal Support, in Gremlin and Cypher": [[338, "graph-traversal-support-in-gremlin-and-cypher"]], "High Performant Built-in Algorithms": [[338, "high-performant-built-in-algorithms"]], "Extensible Algorithm Library for Graph Analytics": [[338, "extensible-algorithm-library-for-graph-analytics"]], "GNN Training & Inference": [[338, "gnn-training-inference"]], "Cloud Native Design": [[338, "cloud-native-design"]], "Across-Engine Workflow Orchestration": [[338, "across-engine-workflow-orchestration"]], "Design of GLE": [[339, "design-of-gle"]], "Model Paradigms": [[339, "model-paradigms"]], "EgoGraph-based node-centric aggregation": [[339, "egograph-based-node-centric-aggregation"]], "SubGraph-based graph message passing": [[339, "subgraph-based-graph-message-passing"]], "Pipeline for Learning": [[339, "pipeline-for-learning"]], "Dev on docker container": [[340, "dev-on-docker-container"]], "Build Learning Engine": [[340, "build-learning-engine"]], "Running GraphScope Learning Engine on Local": [[341, "running-graphscope-learning-engine-on-local"]], "Graph Sampling": [[342, "graph-sampling"], [421, "graph-sampling"]], "Graph Traversal": [[342, "graph-traversal"], [353, "graph-traversal"], [422, "graph-traversal"]], "Neighborhood Sampling": [[342, "neighborhood-sampling"]], "Subgraph Sampling": [[342, "subgraph-sampling"], [354, "subgraph-sampling"]], "Negative Sampling": [[342, "negative-sampling"], [426, "negative-sampling"]], "GSL": [[342, "gsl"]], "Tutorial: Training a Node Classification Model on K8s Cluster": [[344, "tutorial-training-a-node-classification-model-on-k8s-cluster"]], "Create a session on kubernetes and load graph": [[344, "create-a-session-on-kubernetes-and-load-graph"]], "Graph neural networks (GNNs)": [[344, "graph-neural-networks-gnns"]], "Tutorial: Training a Node Classification Model on Your Local Machine": [[345, "tutorial-training-a-node-classification-model-on-your-local-machine"]], "Load Graph": [[345, "load-graph"], [347, "load-graph"]], "Define the Training Process for the EgoGraphSAGE Model": [[345, "define-the-training-process-for-the-egographsage-model"]], "Launch the Learning Engine": [[345, "launch-the-learning-engine"], [347, "launch-the-learning-engine"]], "Train the Model": [[345, "train-the-model"]], "Tutorial: Training a Node Classification Model (PyG) on a K8S Cluster": [[346, "tutorial-training-a-node-classification-model-pyg-on-a-k8s-cluster"]], "Set parameters & load graph": [[346, "set-parameters-load-graph"]], "Launch the Server Engine": [[346, "launch-the-server-engine"]], "Configure the parameters for client pods": [[346, "configure-the-parameters-for-client-pods"]], "Write training and testing script": [[346, "write-training-and-testing-script"]], "Import packages": [[346, "import-packages"]], "Define test function": [[346, "define-test-function"]], "Define the loader and training process": [[346, "define-the-loader-and-training-process"]], "main function": [[346, "main-function"]], "Run the script": [[346, "run-the-script"]], "Tutorial: Training a Node Classification Model (PyG) on Your Local Machine": [[347, "tutorial-training-a-node-classification-model-pyg-on-your-local-machine"]], "Define the evaluation function": [[347, "define-the-evaluation-function"]], "Create neighbor loaderfor training, testing and validation": [[347, "create-neighbor-loaderfor-training-testing-and-validation"]], "Define the PyG GraphSage Model and optimizer": [[347, "define-the-pyg-graphsage-model-and-optimizer"]], "Train and test": [[347, "train-and-test"]], "Loading Graphs": [[348, "loading-graphs"]], "Load Built-in Datasets": [[348, "load-built-in-datasets"]], "Loading Your Own Datasets": [[348, "loading-your-own-datasets"]], "Adding Vertices": [[348, "adding-vertices"]], "Advanced Usages": [[348, "advanced-usages"]], "Deduce vertex labels when not ambiguous": [[348, "deduce-vertex-labels-when-not-ambiguous"]], "Deduce vertex from edges": [[348, "deduce-vertex-from-edges"]], "Multiple relations": [[348, "multiple-relations"]], "Specify data types of properties manually": [[348, "specify-data-types-of-properties-manually"]], "Other parameters of graph": [[348, "other-parameters-of-graph"]], "Putting them Together": [[348, "putting-them-together"]], "Loading From Pandas or Numpy": [[348, "loading-from-pandas-or-numpy"]], "From Pandas": [[348, "from-pandas"]], "From Numpy": [[348, "from-numpy"]], "Loader Variants": [[348, "loader-variants"]], "Techniques targeting at large graph": [[348, "techniques-targeting-at-large-graph"]], "Tips for reduce memory consumption of graphs": [[348, "tips-for-reduce-memory-consumption-of-graphs"]], "Design of GraphScope": [[349, "design-of-graphscope"]], "Unified Graph Computing Platform": [[349, "unified-graph-computing-platform"]], "Application layer": [[349, "application-layer"]], "Execution engine layer": [[349, "execution-engine-layer"]], "Storage layer": [[349, "storage-layer"]], "Disaggregated Design for Diverse Graph Applications": [[349, "disaggregated-design-for-diverse-graph-applications"]], "GraphScope for BI analysis": [[349, "graphscope-for-bi-analysis"]], "GraphScope for high QPS queries": [[349, "graphscope-for-high-qps-queries"]], "GraphScope for graph analytics": [[349, "graphscope-for-graph-analytics"]], "GraphScope for learning": [[349, "graphscope-for-learning"]], "One-stop Graph Processing": [[350, "one-stop-graph-processing"]], "Graph Analytical Task Quick Start": [[350, "graph-analytical-task-quick-start"]], "Graph Interactive Query Quick Start": [[350, "graph-interactive-query-quick-start"]], "Graph Learning Quick Start": [[350, "graph-learning-quick-start"]], "FLASH": [[351, "flash"]], "GRAPE": [[351, "grape"]], "GAE": [[351, "gae"]], "GART": [[351, "gart"]], "GRIN": [[351, "grin"]], "GraphAr": [[351, "graphar"]], "Groot": [[351, "groot"]], "GUM": [[351, "gum"]], "MaxGraph (deprecated)": [[351, "maxgraph-deprecated"]], "Vineyard, or v6d": [[351, "vineyard-or-v6d"]], "GIE": [[351, "gie"]], "GAIA": [[351, "gaia"]], "Pegasus": [[351, "pegasus"]], "Ingress": [[351, "ingress"]], "PIE-model": [[351, "pie-model"]], "Graph Analytics Workloads": [[352, "graph-analytics-workloads"]], "What is Graph Analytics": [[352, "what-is-graph-analytics"]], "Challenges of Graph Analytics on Large Graphs": [[352, "challenges-of-graph-analytics-on-large-graphs"]], "What can GraphScope Do": [[352, "what-can-graphscope-do"], [354, "what-can-graphscope-do"]], "Graph Interactive Workloads": [[353, "graph-interactive-workloads"]], "Tinkerpop and Gremlin": [[353, "tinkerpop-and-gremlin"]], "Pattern Matching": [[353, "pattern-matching"], [353, "id1"]], "Neo4j and Cypher": [[353, "neo4j-and-cypher"]], "Graph Learning Workloads": [[354, "graph-learning-workloads"]], "What is Graph Neural Network": [[354, "what-is-graph-neural-network"]], "Typical GNN Models": [[354, "typical-gnn-models"]], "Paradigm of Model Training": [[354, "paradigm-of-model-training"]], "Steps of Model Training": [[354, "steps-of-model-training"]], "Challenges of Applying GNNs on Large Graphs": [[354, "challenges-of-applying-gnns-on-large-graphs"]], "Introducing GraphScope": [[355, "introducing-graphscope"]], "What is GraphScope": [[355, "what-is-graphscope"]], "Why use GraphScope": [[355, "why-use-graphscope"]], "What are the Use Cases": [[355, "what-are-the-use-cases"]], "What are the Limitations": [[355, "what-are-the-limitations"]], "What are the Next": [[355, "what-are-the-next"]], "Positioning of GraphScope": [[356, "positioning-of-graphscope"]], "Compare with Graph Processing Systems": [[356, "compare-with-graph-processing-systems"]], "Compare with Graph Databases": [[356, "compare-with-graph-databases"]], "Compare with Graph Learning Systems": [[356, "compare-with-graph-learning-systems"]], "Handling Various Types of Graph Workloads": [[356, "handling-various-types-of-graph-workloads"]], "Performance and Benchmark": [[357, "performance-and-benchmark"]], "Results": [[357, "results"]], "Performance on GPUs": [[357, "performance-on-gpus"]], "Reproducing the results": [[357, "reproducing-the-results"]], "Tutorials for Python Users": [[358, "tutorials-for-python-users"]], "Analytical Engine API Reference": [[359, "analytical-engine-api-reference"]], "Analytical Engine": [[359, "analytical-engine"]], "Fragments in GraphScope": [[359, "fragments-in-graphscope"]], "Analytical Apps": [[359, "analytical-apps"]], "Analytical Workers": [[359, "analytical-workers"]], "App\u2019s Context": [[359, "app-s-context"]], "Analytical App": [[360, "analytical-app"]], "AppAssets": [[360, "appassets"]], "JavaApp": [[360, "javaapp"]], "App object": [[360, "app-object"]], "Functions": [[360, "functions"], [362, "functions"], [435, "functions"]], "BuiltIn apps": [[360, "builtin-apps"]], "Context": [[361, "context"]], "Context object": [[361, "context-object"]], "Cython SDK API": [[362, "cython-sdk-api"]], "Pregel": [[362, "pregel"]], "PIE": [[362, "pie"]], "GraphScope types": [[362, "graphscope-types"]], "Flex API Reference": [[363, "flex-api-reference"]], "About Grape JDK": [[364, "about-grape-jdk"]], "Project Structure": [[364, "project-structure"]], "Building from source": [[364, "building-from-source"]], "Java Reference (javadoc)": [[365, "java-reference-javadoc"]], "graphscope.Vertex": [[366, "graphscope-vertex"]], "graphscope.declare": [[367, "graphscope-declare"]], "graphscope.framework.app.load_app": [[368, "graphscope-framework-app-load-app"]], "graphscope.framework.dag_utils.add_column": [[369, "graphscope-framework-dag-utils-add-column"]], "graphscope.framework.dag_utils.add_labels_to_graph": [[370, "graphscope-framework-dag-utils-add-labels-to-graph"]], "graphscope.framework.dag_utils.arrow_to_dynamic": [[371, "graphscope-framework-dag-utils-arrow-to-dynamic"]], "graphscope.framework.dag_utils.bind_app": [[372, "graphscope-framework-dag-utils-bind-app"]], "graphscope.framework.dag_utils.clear_edges": [[373, "graphscope-framework-dag-utils-clear-edges"]], "graphscope.framework.dag_utils.clear_graph": [[374, "graphscope-framework-dag-utils-clear-graph"]], "graphscope.framework.dag_utils.context_to_dataframe": [[375, "graphscope-framework-dag-utils-context-to-dataframe"]], "graphscope.framework.dag_utils.context_to_numpy": [[376, "graphscope-framework-dag-utils-context-to-numpy"]], "graphscope.framework.dag_utils.copy_graph": [[377, "graphscope-framework-dag-utils-copy-graph"]], "graphscope.framework.dag_utils.create_app": [[378, "graphscope-framework-dag-utils-create-app"]], "graphscope.framework.dag_utils.create_graph": [[379, "graphscope-framework-dag-utils-create-graph"]], "graphscope.framework.dag_utils.create_graph_view": [[380, "graphscope-framework-dag-utils-create-graph-view"]], "graphscope.framework.dag_utils.create_loader": [[381, "graphscope-framework-dag-utils-create-loader"]], "graphscope.framework.dag_utils.create_subgraph": [[382, "graphscope-framework-dag-utils-create-subgraph"]], "graphscope.framework.dag_utils.create_unload_op": [[383, "graphscope-framework-dag-utils-create-unload-op"]], "graphscope.framework.dag_utils.dynamic_to_arrow": [[384, "graphscope-framework-dag-utils-dynamic-to-arrow"]], "graphscope.framework.dag_utils.get_context_data": [[385, "graphscope-framework-dag-utils-get-context-data"]], "graphscope.framework.dag_utils.graph_to_dataframe": [[386, "graphscope-framework-dag-utils-graph-to-dataframe"]], "graphscope.framework.dag_utils.graph_to_numpy": [[387, "graphscope-framework-dag-utils-graph-to-numpy"]], "graphscope.framework.dag_utils.gremlin_to_subgraph": [[388, "graphscope-framework-dag-utils-gremlin-to-subgraph"]], "graphscope.framework.dag_utils.modify_edges": [[389, "graphscope-framework-dag-utils-modify-edges"]], "graphscope.framework.dag_utils.modify_vertices": [[390, "graphscope-framework-dag-utils-modify-vertices"]], "graphscope.framework.dag_utils.output": [[391, "graphscope-framework-dag-utils-output"]], "graphscope.framework.dag_utils.project_arrow_property_graph": [[392, "graphscope-framework-dag-utils-project-arrow-property-graph"]], "graphscope.framework.dag_utils.project_to_simple": [[393, "graphscope-framework-dag-utils-project-to-simple"]], "graphscope.framework.dag_utils.report_graph": [[394, "graphscope-framework-dag-utils-report-graph"]], "graphscope.framework.dag_utils.run_app": [[395, "graphscope-framework-dag-utils-run-app"]], "graphscope.framework.dag_utils.to_data_sink": [[396, "graphscope-framework-dag-utils-to-data-sink"]], "graphscope.framework.dag_utils.to_directed": [[397, "graphscope-framework-dag-utils-to-directed"]], "graphscope.framework.dag_utils.to_undirected": [[398, "graphscope-framework-dag-utils-to-undirected"]], "graphscope.framework.dag_utils.to_vineyard_dataframe": [[399, "graphscope-framework-dag-utils-to-vineyard-dataframe"]], "graphscope.framework.dag_utils.to_vineyard_tensor": [[400, "graphscope-framework-dag-utils-to-vineyard-tensor"]], "graphscope.framework.dag_utils.unload_app": [[401, "graphscope-framework-dag-utils-unload-app"]], "graphscope.framework.dag_utils.unload_context": [[402, "graphscope-framework-dag-utils-unload-context"]], "graphscope.framework.dag_utils.unload_graph": [[403, "graphscope-framework-dag-utils-unload-graph"]], "graphscope.framework.operation.Operation.__init__": [[404, "graphscope-framework-operation-operation-init"]], "graphscope.framework.operation.Operation.as_op_def": [[405, "graphscope-framework-operation-operation-as-op-def"]], "graphscope.framework.operation.Operation.eval": [[406, "graphscope-framework-operation-operation-eval"]], "graphscope.framework.operation.Operation.evaluated": [[407, "graphscope-framework-operation-operation-evaluated"]], "graphscope.framework.operation.Operation.key": [[408, "graphscope-framework-operation-operation-key"]], "graphscope.framework.operation.Operation.signature": [[409, "graphscope-framework-operation-operation-signature"]], "graphscope.g": [[410, "graphscope-g"]], "graphscope.get_default_session": [[411, "graphscope-get-default-session"]], "graphscope.graphlearn": [[412, "graphscope-graphlearn"]], "graphscope.gremlin": [[413, "graphscope-gremlin"]], "graphscope.has_default_session": [[414, "graphscope-has-default-session"]], "graphscope.session": [[415, "graphscope-session"]], "graphscope.set_option": [[416, "graphscope-set-option"]], "Developing Your Own Model": [[417, "developing-your-own-model"]], "How to Build a Graph Learning Algorithm": [[417, "how-to-build-a-graph-learning-algorithm"]], "Sampling": [[417, "sampling"]], "Encoder": [[417, "encoder"], [425, "encoder"]], "Loss Function and Training Process": [[417, "loss-function-and-training-process"]], "Data Source": [[418, "data-source"]], "1 Data format": [[418, "data-format"]], "1.1 Basic format": [[418, "basic-format"]], "1.2 Attribute format\uff08ATTRIBUTED\uff09": [[418, "attribute-format-attributed"]], "1.3 Weight format\uff08WEIGHTED\uff09": [[418, "weight-format-weighted"]], "1.4 Label format\uff08LABELED\uff09": [[418, "label-format-labeled"]], "1.5 Putting together": [[418, "putting-together"]], "2 Data source type": [[418, "data-source-type"]], "2.2 Alibaba Cloud MaxCompute data table": [[418, "alibaba-cloud-maxcompute-data-table"]], "3 User API": [[418, "user-api"]], "Graph Object": [[419, "graph-object"]], "2 Describe the Topology": [[419, "describe-the-topology"]], "3.1 Stand-alone Mode": [[419, "stand-alone-mode"]], "3.2 Distributed Mode \u2013 Client/Server Mode": [[419, "distributed-mode-client-server-mode"]], "Graph Query": [[420, "graph-query"]], "1 Introduction": [[421, "introduction"]], "Graph Sampling Language\uff08GSL)": [[423, "graph-sampling-language-gsl"]], "Install from pip": [[424, "install-from-pip"]], "Get wheel package": [[424, "get-wheel-package"]], "Install using pip": [[424, "install-using-pip"]], "Install TensorFlow": [[424, "install-tensorflow"]], "Install git": [[424, "install-git"]], "Install dependent libraries": [[424, "install-dependent-libraries"]], "Compile": [[424, "compile"], [427, "compile"]], "Install": [[424, "install"]], "Run test": [[424, "run-test"]], "Docker image": [[424, "docker-image"]], "Graph Learning Model": [[425, "graph-learning-model"]], "Data model": [[425, "data-model"]], "Defining Your Own Operator": [[427, "defining-your-own-operator"]], "Distributed Runtime Design": [[427, "distributed-runtime-design"]], "Implement a New Operator": [[427, "implement-a-new-operator"]], "Clone source code": [[427, "clone-source-code"]], "Implement your operator class": [[427, "implement-your-operator-class"]], "Register Operator": [[427, "register-operator"]], "How to Use an Operator": [[427, "how-to-use-an-operator"]], "Integrating Other Data Sources": [[428, "integrating-other-data-sources"]], "File System Interface": [[428, "file-system-interface"]], "ByteStreamAccessFile": [[428, "bytestreamaccessfile"]], "StructuredAccessFile": [[428, "structuredaccessfile"]], "WritableFile": [[428, "writablefile"]], "Register with Scheme": [[428, "register-with-scheme"]], "1 Trying out the built-in models": [[429, "trying-out-the-built-in-models"]], "2 How to use the GL APIs": [[429, "how-to-use-the-gl-apis"]], "3 Developing a GNN model": [[429, "developing-a-gnn-model"]], "3.1 Data Preparation": [[429, "data-preparation"]], "3.2 Graph Construction": [[429, "graph-construction"]], "3.3 Graph Sampling": [[429, "graph-sampling"]], "3.4 GNN Model": [[429, "gnn-model"]], "System configuration": [[430, "system-configuration"]], "Graph": [[431, "graph"], [435, "graph"], [569, "graph"]], "Graph object": [[431, "graph-object"]], "Loader object": [[431, "loader-object"]], "Graph Functions": [[431, "graph-functions"]], "Interactive Query": [[432, "interactive-query"]], "Builtin algorithms": [[434, "builtin-algorithms"]], "Nodes": [[435, "nodes"]], "Edges": [[435, "edges"]], "Self loops": [[435, "self-loops"]], "Attributes": [[435, "attributes"]], "Freezing graph structure": [[435, "freezing-graph-structure"]], "graphscope.nx.classes.function.add_cycle": [[436, "graphscope-nx-classes-function-add-cycle"]], "graphscope.nx.classes.function.add_path": [[437, "graphscope-nx-classes-function-add-path"]], "graphscope.nx.classes.function.add_star": [[438, "graphscope-nx-classes-function-add-star"]], "graphscope.nx.classes.function.all_neighbors": [[439, "graphscope-nx-classes-function-all-neighbors"]], "graphscope.nx.classes.function.common_neighbors": [[440, "graphscope-nx-classes-function-common-neighbors"]], "graphscope.nx.classes.function.create_empty_copy": [[441, "graphscope-nx-classes-function-create-empty-copy"]], "graphscope.nx.classes.function.degree": [[442, "graphscope-nx-classes-function-degree"]], "graphscope.nx.classes.function.degree_histogram": [[443, "graphscope-nx-classes-function-degree-histogram"]], "graphscope.nx.classes.function.density": [[444, "graphscope-nx-classes-function-density"]], "graphscope.nx.classes.function.edge_subgraph": [[445, "graphscope-nx-classes-function-edge-subgraph"]], "graphscope.nx.classes.function.edges": [[446, "graphscope-nx-classes-function-edges"]], "graphscope.nx.classes.function.freeze": [[447, "graphscope-nx-classes-function-freeze"]], "graphscope.nx.classes.function.induced_subgraph": [[448, "graphscope-nx-classes-function-induced-subgraph"]], "graphscope.nx.classes.function.info": [[449, "graphscope-nx-classes-function-info"]], "graphscope.nx.classes.function.is_directed": [[450, "graphscope-nx-classes-function-is-directed"]], "graphscope.nx.classes.function.is_empty": [[451, "graphscope-nx-classes-function-is-empty"]], "graphscope.nx.classes.function.is_frozen": [[452, "graphscope-nx-classes-function-is-frozen"]], "graphscope.nx.classes.function.is_negatively_weighted": [[453, "graphscope-nx-classes-function-is-negatively-weighted"]], "graphscope.nx.classes.function.is_weighted": [[454, "graphscope-nx-classes-function-is-weighted"]], "graphscope.nx.classes.function.neighbors": [[455, "graphscope-nx-classes-function-neighbors"]], "graphscope.nx.classes.function.nodes": [[456, "graphscope-nx-classes-function-nodes"]], "graphscope.nx.classes.function.nodes_with_selfloops": [[457, "graphscope-nx-classes-function-nodes-with-selfloops"]], "graphscope.nx.classes.function.non_edges": [[458, "graphscope-nx-classes-function-non-edges"]], "graphscope.nx.classes.function.non_neighbors": [[459, "graphscope-nx-classes-function-non-neighbors"]], "graphscope.nx.classes.function.number_of_edges": [[460, "graphscope-nx-classes-function-number-of-edges"]], "graphscope.nx.classes.function.number_of_nodes": [[461, "graphscope-nx-classes-function-number-of-nodes"]], "graphscope.nx.classes.function.number_of_selfloops": [[462, "graphscope-nx-classes-function-number-of-selfloops"]], "graphscope.nx.classes.function.selfloop_edges": [[463, "graphscope-nx-classes-function-selfloop-edges"]], "graphscope.nx.classes.function.subgraph": [[464, "graphscope-nx-classes-function-subgraph"]], "graphscope.nx.classes.function.to_directed": [[465, "graphscope-nx-classes-function-to-directed"]], "graphscope.nx.classes.function.to_undirected": [[466, "graphscope-nx-classes-function-to-undirected"]], "graphscope.nx.generators.atlas.graph_atlas": [[467, "graphscope-nx-generators-atlas-graph-atlas"]], "graphscope.nx.generators.atlas.graph_atlas_g": [[468, "graphscope-nx-generators-atlas-graph-atlas-g"]], "graphscope.nx.generators.classic.balanced_tree": [[469, "graphscope-nx-generators-classic-balanced-tree"]], "graphscope.nx.generators.classic.barbell_graph": [[470, "graphscope-nx-generators-classic-barbell-graph"]], "graphscope.nx.generators.classic.binomial_tree": [[471, "graphscope-nx-generators-classic-binomial-tree"]], "graphscope.nx.generators.classic.circulant_graph": [[472, "graphscope-nx-generators-classic-circulant-graph"]], "graphscope.nx.generators.classic.circular_ladder_graph": [[473, "graphscope-nx-generators-classic-circular-ladder-graph"]], "graphscope.nx.generators.classic.complete_graph": [[474, "graphscope-nx-generators-classic-complete-graph"]], "graphscope.nx.generators.classic.complete_multipartite_graph": [[475, "graphscope-nx-generators-classic-complete-multipartite-graph"]], "graphscope.nx.generators.classic.cycle_graph": [[476, "graphscope-nx-generators-classic-cycle-graph"]], "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph": [[477, "graphscope-nx-generators-classic-dorogovtsev-goltsev-mendes-graph"]], "graphscope.nx.generators.classic.empty_graph": [[478, "graphscope-nx-generators-classic-empty-graph"]], "graphscope.nx.generators.classic.full_rary_tree": [[479, "graphscope-nx-generators-classic-full-rary-tree"]], "graphscope.nx.generators.classic.ladder_graph": [[480, "graphscope-nx-generators-classic-ladder-graph"]], "graphscope.nx.generators.classic.lollipop_graph": [[481, "graphscope-nx-generators-classic-lollipop-graph"]], "graphscope.nx.generators.classic.null_graph": [[482, "graphscope-nx-generators-classic-null-graph"]], "graphscope.nx.generators.classic.path_graph": [[483, "graphscope-nx-generators-classic-path-graph"]], "graphscope.nx.generators.classic.star_graph": [[484, "graphscope-nx-generators-classic-star-graph"]], "graphscope.nx.generators.classic.trivial_graph": [[485, "graphscope-nx-generators-classic-trivial-graph"]], "graphscope.nx.generators.classic.turan_graph": [[486, "graphscope-nx-generators-classic-turan-graph"]], "graphscope.nx.generators.classic.wheel_graph": [[487, "graphscope-nx-generators-classic-wheel-graph"]], "graphscope.nx.generators.community.LFR_benchmark_graph": [[488, "graphscope-nx-generators-community-lfr-benchmark-graph"]], "graphscope.nx.generators.community.caveman_graph": [[489, "graphscope-nx-generators-community-caveman-graph"]], "graphscope.nx.generators.community.connected_caveman_graph": [[490, "graphscope-nx-generators-community-connected-caveman-graph"]], "graphscope.nx.generators.community.gaussian_random_partition_graph": [[491, "graphscope-nx-generators-community-gaussian-random-partition-graph"]], "graphscope.nx.generators.community.planted_partition_graph": [[492, "graphscope-nx-generators-community-planted-partition-graph"]], "graphscope.nx.generators.community.random_partition_graph": [[493, "graphscope-nx-generators-community-random-partition-graph"]], "graphscope.nx.generators.community.relaxed_caveman_graph": [[494, "graphscope-nx-generators-community-relaxed-caveman-graph"]], "graphscope.nx.generators.community.ring_of_cliques": [[495, "graphscope-nx-generators-community-ring-of-cliques"]], "graphscope.nx.generators.community.stochastic_block_model": [[496, "graphscope-nx-generators-community-stochastic-block-model"]], "graphscope.nx.generators.community.windmill_graph": [[497, "graphscope-nx-generators-community-windmill-graph"]], "graphscope.nx.generators.degree_seq.configuration_model": [[498, "graphscope-nx-generators-degree-seq-configuration-model"]], "graphscope.nx.generators.degree_seq.degree_sequence_tree": [[499, "graphscope-nx-generators-degree-seq-degree-sequence-tree"]], "graphscope.nx.generators.degree_seq.directed_configuration_model": [[500, "graphscope-nx-generators-degree-seq-directed-configuration-model"]], "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph": [[501, "graphscope-nx-generators-degree-seq-directed-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.expected_degree_graph": [[502, "graphscope-nx-generators-degree-seq-expected-degree-graph"]], "graphscope.nx.generators.degree_seq.havel_hakimi_graph": [[503, "graphscope-nx-generators-degree-seq-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.random_degree_sequence_graph": [[504, "graphscope-nx-generators-degree-seq-random-degree-sequence-graph"]], "graphscope.nx.generators.directed.gn_graph": [[505, "graphscope-nx-generators-directed-gn-graph"]], "graphscope.nx.generators.directed.gnc_graph": [[506, "graphscope-nx-generators-directed-gnc-graph"]], "graphscope.nx.generators.directed.gnr_graph": [[507, "graphscope-nx-generators-directed-gnr-graph"]], "graphscope.nx.generators.directed.random_k_out_graph": [[508, "graphscope-nx-generators-directed-random-k-out-graph"]], "graphscope.nx.generators.directed.scale_free_graph": [[509, "graphscope-nx-generators-directed-scale-free-graph"]], "graphscope.nx.generators.duplication.duplication_divergence_graph": [[510, "graphscope-nx-generators-duplication-duplication-divergence-graph"]], "graphscope.nx.generators.duplication.partial_duplication_graph": [[511, "graphscope-nx-generators-duplication-partial-duplication-graph"]], "graphscope.nx.generators.ego.ego_graph": [[512, "graphscope-nx-generators-ego-ego-graph"]], "graphscope.nx.generators.expanders.chordal_cycle_graph": [[513, "graphscope-nx-generators-expanders-chordal-cycle-graph"]], "graphscope.nx.generators.expanders.margulis_gabber_galil_graph": [[514, "graphscope-nx-generators-expanders-margulis-gabber-galil-graph"]], "graphscope.nx.generators.expanders.paley_graph": [[515, "graphscope-nx-generators-expanders-paley-graph"]], "graphscope.nx.generators.geometric.geographical_threshold_graph": [[516, "graphscope-nx-generators-geometric-geographical-threshold-graph"]], "graphscope.nx.generators.geometric.random_geometric_graph": [[517, "graphscope-nx-generators-geometric-random-geometric-graph"]], "graphscope.nx.generators.geometric.soft_random_geometric_graph": [[518, "graphscope-nx-generators-geometric-soft-random-geometric-graph"]], "graphscope.nx.generators.geometric.thresholded_random_geometric_graph": [[519, "graphscope-nx-generators-geometric-thresholded-random-geometric-graph"]], "graphscope.nx.generators.geometric.waxman_graph": [[520, "graphscope-nx-generators-geometric-waxman-graph"]], "graphscope.nx.generators.harary_graph.hkn_harary_graph": [[521, "graphscope-nx-generators-harary-graph-hkn-harary-graph"]], "graphscope.nx.generators.harary_graph.hnm_harary_graph": [[522, "graphscope-nx-generators-harary-graph-hnm-harary-graph"]], "graphscope.nx.generators.intersection.general_random_intersection_graph": [[523, "graphscope-nx-generators-intersection-general-random-intersection-graph"]], "graphscope.nx.generators.intersection.k_random_intersection_graph": [[524, "graphscope-nx-generators-intersection-k-random-intersection-graph"]], "graphscope.nx.generators.intersection.uniform_random_intersection_graph": [[525, "graphscope-nx-generators-intersection-uniform-random-intersection-graph"]], "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph": [[526, "graphscope-nx-generators-joint-degree-seq-directed-joint-degree-graph"]], "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree": [[527, "graphscope-nx-generators-joint-degree-seq-is-valid-directed-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree": [[528, "graphscope-nx-generators-joint-degree-seq-is-valid-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.joint_degree_graph": [[529, "graphscope-nx-generators-joint-degree-seq-joint-degree-graph"]], "graphscope.nx.generators.mycielski.mycielski_graph": [[530, "graphscope-nx-generators-mycielski-mycielski-graph"]], "graphscope.nx.generators.mycielski.mycielskian": [[531, "graphscope-nx-generators-mycielski-mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees": [[532, "graphscope-nx-generators-nonisomorphic-trees-nonisomorphic-trees"]], "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": [[533, "graphscope-nx-generators-nonisomorphic-trees-number-of-nonisomorphic-trees"]], "graphscope.nx.generators.small.LCF_graph": [[534, "graphscope-nx-generators-small-lcf-graph"]], "graphscope.nx.generators.small.bull_graph": [[535, "graphscope-nx-generators-small-bull-graph"]], "graphscope.nx.generators.small.chvatal_graph": [[536, "graphscope-nx-generators-small-chvatal-graph"]], "graphscope.nx.generators.small.cubical_graph": [[537, "graphscope-nx-generators-small-cubical-graph"]], "graphscope.nx.generators.small.desargues_graph": [[538, "graphscope-nx-generators-small-desargues-graph"]], "graphscope.nx.generators.small.diamond_graph": [[539, "graphscope-nx-generators-small-diamond-graph"]], "graphscope.nx.generators.small.dodecahedral_graph": [[540, "graphscope-nx-generators-small-dodecahedral-graph"]], "graphscope.nx.generators.small.frucht_graph": [[541, "graphscope-nx-generators-small-frucht-graph"]], "graphscope.nx.generators.small.heawood_graph": [[542, "graphscope-nx-generators-small-heawood-graph"]], "graphscope.nx.generators.small.house_graph": [[543, "graphscope-nx-generators-small-house-graph"]], "graphscope.nx.generators.small.house_x_graph": [[544, "graphscope-nx-generators-small-house-x-graph"]], "graphscope.nx.generators.small.icosahedral_graph": [[545, "graphscope-nx-generators-small-icosahedral-graph"]], "graphscope.nx.generators.small.krackhardt_kite_graph": [[546, "graphscope-nx-generators-small-krackhardt-kite-graph"]], "graphscope.nx.generators.small.make_small_graph": [[547, "graphscope-nx-generators-small-make-small-graph"]], "graphscope.nx.generators.small.moebius_kantor_graph": [[548, "graphscope-nx-generators-small-moebius-kantor-graph"]], "graphscope.nx.generators.small.octahedral_graph": [[549, "graphscope-nx-generators-small-octahedral-graph"]], "graphscope.nx.generators.small.pappus_graph": [[550, "graphscope-nx-generators-small-pappus-graph"]], "graphscope.nx.generators.small.petersen_graph": [[551, "graphscope-nx-generators-small-petersen-graph"]], "graphscope.nx.generators.small.sedgewick_maze_graph": [[552, "graphscope-nx-generators-small-sedgewick-maze-graph"]], "graphscope.nx.generators.small.tetrahedral_graph": [[553, "graphscope-nx-generators-small-tetrahedral-graph"]], "graphscope.nx.generators.small.truncated_cube_graph": [[554, "graphscope-nx-generators-small-truncated-cube-graph"]], "graphscope.nx.generators.small.truncated_tetrahedron_graph": [[555, "graphscope-nx-generators-small-truncated-tetrahedron-graph"]], "graphscope.nx.generators.small.tutte_graph": [[556, "graphscope-nx-generators-small-tutte-graph"]], "graphscope.nx.generators.social.davis_southern_women_graph": [[557, "graphscope-nx-generators-social-davis-southern-women-graph"]], "graphscope.nx.generators.social.florentine_families_graph": [[558, "graphscope-nx-generators-social-florentine-families-graph"]], "graphscope.nx.generators.social.karate_club_graph": [[559, "graphscope-nx-generators-social-karate-club-graph"]], "graphscope.nx.generators.social.les_miserables_graph": [[560, "graphscope-nx-generators-social-les-miserables-graph"]], "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge": [[561, "graphscope-nx-generators-spectral-graph-forge-spectral-graph-forge"]], "graphscope.nx.generators.sudoku.sudoku_graph": [[562, "graphscope-nx-generators-sudoku-sudoku-graph"]], "graphscope.nx.generators.trees.prefix_tree": [[563, "graphscope-nx-generators-trees-prefix-tree"]], "graphscope.nx.generators.trees.random_tree": [[564, "graphscope-nx-generators-trees-random-tree"]], "graphscope.nx.generators.triads.triad_graph": [[565, "graphscope-nx-generators-triads-triad-graph"]], "networkx.generators.internet_as_graphs.random_internet_as_graph": [[566, "networkx-generators-internet-as-graphs-random-internet-as-graph"]], "networkx.generators.stochastic.stochastic_graph": [[567, "networkx-generators-stochastic-stochastic-graph"]], "Graph generators": [[568, "graph-generators"]], "Atlas": [[568, "module-graphscope.nx.generators.atlas"]], "Classic": [[568, "module-graphscope.nx.generators.classic"]], "Expanders": [[568, "module-graphscope.nx.generators.expanders"]], "Small": [[568, "module-graphscope.nx.generators.small"]], "Duplication Divergence": [[568, "module-graphscope.nx.generators.duplication"]], "Degree Sequence": [[568, "module-graphscope.nx.generators.degree_seq"]], "Directed": [[568, "module-graphscope.nx.generators.directed"]], "Geometric": [[568, "module-graphscope.nx.generators.geometric"]], "Ego Graph": [[568, "module-graphscope.nx.generators.ego"]], "Stochastic": [[568, "module-networkx.generators.stochastic"]], "AS graph": [[568, "module-networkx.generators.internet_as_graphs"]], "Intersection": [[568, "module-graphscope.nx.generators.intersection"]], "Social Networks": [[568, "module-graphscope.nx.generators.social"]], "Spectral": [[568, "module-graphscope.nx.generators.spectral_graph_forge"]], "Trees": [[568, "module-graphscope.nx.generators.trees"]], "Non Isomorphic Trees": [[568, "module-graphscope.nx.generators.nonisomorphic_trees"]], "Triads": [[568, "module-graphscope.nx.generators.triads"]], "Joint Degree Sequence": [[568, "module-graphscope.nx.generators.joint_degree_seq"]], "Mycielski": [[568, "module-graphscope.nx.generators.mycielski"]], "Harary Graph": [[568, "module-graphscope.nx.generators.harary_graph"]], "Sudoku": [[568, "module-graphscope.nx.generators.sudoku"]], "Graph types": [[569, "graph-types"]], "DiGraph": [[569, "digraph"]], "NetworkX-style API": [[570, "networkx-style-api"]], "Reading graphs": [[571, "reading-graphs"]], "Edge List": [[571, "edge-list"]], "Adjacency List": [[571, "adjacency-list"]], "Graph Transformation": [[572, "graph-transformation"]], "Operation": [[573, "operation"]], "Operation object": [[573, "operation-object"]], "BuiltIn operations": [[573, "module-graphscope.framework.dag_utils"]], "Python API Reference": [[574, "python-api-reference"]], "Selector": [[575, "selector"]], "Selectors in different context": [[575, "selectors-in-different-context"]], "TensorContext": [[575, "tensorcontext"]], "VertexDataContext": [[575, "vertexdatacontext"]], "LabeledVertexDataContext": [[575, "labeledvertexdatacontext"]], "VertexPropertyContext": [[575, "vertexpropertycontext"]], "LabeledVertexPropertyContext": [[575, "labeledvertexpropertycontext"]], "Methods that use selectors": [[575, "methods-that-use-selectors"]], "One-dimensional results": [[575, "one-dimensional-results"]], "Multi-dimensional results": [[575, "multi-dimensional-results"]], "Vertex Range": [[575, "vertex-range"]], "Session object": [[576, "session-object"]], "Session Functions": [[576, "session-functions"]], "Resources Estimator": [[577, "resources-estimator"]], "GART: Bridging the Gap between Relational OLTP and Graph Workloads": [[578, "gart-bridging-the-gap-between-relational-oltp-and-graph-workloads"]], "Architecture and Workflow": [[578, "architecture-and-workflow"]], "Defining Graph Mapping in GART": [[578, "defining-graph-mapping-in-gart"]], "Loading Logs to GART Storage": [[578, "loading-logs-to-gart-storage"]], "Using Loaded Graphs from GraphScope": [[578, "using-loaded-graphs-from-graphscope"]], "GraphAr: Standard Graph Data File Format": [[580, "graphar-standard-graph-data-file-format"]], "The GraphAr File Format": [[580, "the-graphar-file-format"]], "Features": [[580, "features"]], "File Format": [[580, "file-format"]], "Information files": [[580, "information-files"]], "Data files": [[580, "data-files"]], "Property Data Types": [[580, "property-data-types"]], "GraphAr in GraphScope": [[580, "graphar-in-graphscope"]], "Saving Graph Data in GraphAr": [[580, "saving-graph-data-in-graphar"]], "Loading GraphAr Data into GraphScope": [[580, "loading-graphar-data-into-graphscope"]], "GRIN: Graph Retrieval INterface": [[581, "grin-graph-retrieval-interface"]], "Motivations": [[581, "motivations"]], "Unified Graph Retrieval": [[581, "unified-graph-retrieval"]], "GRIN Concepts": [[581, "grin-concepts"]], "Predefined Macros": [[581, "predefined-macros"]], "Partition Strategy": [[581, "partition-strategy"]], "Edge-cut Partition Strategy": [[581, "edge-cut-partition-strategy"]], "Vertex-cut Partition Strategy": [[581, "vertex-cut-partition-strategy"]], "Property Graph Model": [[581, "property-graph-model"]], "Implementation Guideline": [[581, "implementation-guideline"]], "For computing engine": [[581, "for-computing-engine"]], "For storage engine": [[581, "for-storage-engine"]], "Design Details": [[581, "design-details"]], "Handler": [[581, "handler"]], "Edge": [[581, "edge"]], "List": [[581, "list"]], "Array-style Retrieval": [[581, "array-style-retrieval"]], "List Iterator": [[581, "list-iterator"]], "Label": [[581, "label"], [602, "label"]], "Order": [[581, "order"]], "Master and Mirror": [[581, "master-and-mirror"]], "Local Complete": [[581, "local-complete"]], "Natural ID Trait": [[581, "natural-id-trait"]], "Groot: Persistent Graph Store": [[582, "groot-persistent-graph-store"]], "Known Limitation": [[582, "known-limitation"]], "Deploy Groot": [[582, "deploy-groot"]], "Install from ArtifactHub": [[582, "install-from-artifacthub"]], "Installing from a local directory": [[582, "installing-from-a-local-directory"]], "Common Configurations": [[582, "common-configurations"]], "User Guide": [[582, "user-guide"]], "Connection": [[582, "connection"]], "Query Data": [[582, "query-data"]], "Submit Gremlin Queries": [[582, "submit-gremlin-queries"]], "Modify the graph schema": [[582, "modify-the-graph-schema"]], "Offline Data Loading": [[582, "offline-data-loading"]], "Prerequisite": [[582, "prerequisite"]], "Data Format": [[582, "data-format"]], "Loading Process": [[582, "loading-process"]], "1. Build: Building a partitioned graph": [[582, "build-building-a-partitioned-graph"]], "2. Loading graph partitions": [[582, "loading-graph-partitions"]], "3. Commit to store service": [[582, "commit-to-store-service"]], "Other features": [[582, "other-features"]], "Uninstalling and Restarting": [[582, "uninstalling-and-restarting"]], "Uninstall Groot": [[582, "uninstall-groot"]], "Restart Groot": [[582, "restart-groot"]], "Destroy Groot": [[582, "destroy-groot"]], "Developing Guide": [[582, "developing-guide"]], "Build image": [[582, "build-image"]], "Persistence": [[582, "persistence"]], "Interactive SDK": [[582, "interactive-sdk"]], "Troubleshooting": [[582, "troubleshooting"]], "Viewing logs": [[582, "viewing-logs"]], "Configuring logs": [[582, "configuring-logs"]], "Secondary Instance": [[582, "secondary-instance"]], "Traces": [[582, "traces"]], "Write High-availability": [[582, "write-high-availability"]], "In-memory immutable graphs on Vineyard": [[583, "in-memory-immutable-graphs-on-vineyard"]], "Graphs in Vineyard": [[583, "graphs-in-vineyard"]], "Loading Graphs to Vineyard": [[583, "loading-graphs-to-vineyard"]], "Using Loaded Graphs": [[583, "using-loaded-graphs"]], "Applications and algorithms": [[584, "applications-and-algorithms"]], "Bind application to graph": [[584, "bind-application-to-graph"]], "Built-in algorithms": [[584, "built-in-algorithms"]], "Scaling and repartitioning": [[585, "scaling-and-repartitioning"]], "Fennel": [[585, "fennel"]], "XtraPuLP": [[585, "xtrapulp"]], "Hybrid partitioning": [[585, "hybrid-partitioning"]], "User Guide and Examples of GAE": [[586, "user-guide-and-examples-of-gae"]], "Developing Your Algorithms with Python": [[586, "developing-your-algorithms-with-python"]], "Developing Your Algorithms with C++": [[586, "developing-your-algorithms-with-c"]], "Developing Your Algorithms with Java": [[586, "developing-your-algorithms-with-java"]], "User Guide and Examples of GLE": [[587, "user-guide-and-examples-of-gle"]], "Command-line Utility gsctl": [[589, "command-line-utility-gsctl"]], "Install/Update gsctl": [[589, "install-update-gsctl"]], "Commands": [[589, "commands"]], "Utility Scripts": [[589, "utility-scripts"]], "Client/Server Mode": [[589, "client-server-mode"]], "Change Scope": [[589, "change-scope"]], "Close the Connection": [[589, "close-the-connection"]], "How to Find logs": [[590, "how-to-find-logs"]], "Find logs in k8s": [[590, "find-logs-in-k8s"]], "Find logs for GraphScope Analytical Engine (GAE)": [[590, "find-logs-for-graphscope-analytical-engine-gae"]], "Find logs for Graph Interactive Engine (GIE)": [[590, "find-logs-for-graph-interactive-engine-gie"]], "Find logs for Graph Learning Engine (GLE)": [[590, "find-logs-for-graph-learning-engine-gle"]], "Find logs for Groot": [[590, "find-logs-for-groot"]], "Monitoring": [[591, "monitoring"]], "\u56fe\u5206\u6790\u5f15\u64ce": [[592, "id1"]], "\u5185\u7f6e\u7b97\u6cd5": [[592, "id2"]], "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": [[592, "id3"]], "\u4f7f\u7528 PIE \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[592, "pie"]], "\u4f7f\u7528 Pregel \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[592, "pregel"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528 math.h \u4e2d\u7684\u51fd\u6570": [[592, "math-h"]], "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[592, "id5"]], "\u8fd0\u884cJava\u7f16\u5199\u7684\u7b97\u6cd5": [[592, "java"]], "\u8fd0\u884c\u793a\u4f8b\u7684Java\u7b97\u6cd5": [[592, "id6"]], "\u4f7f\u7528Java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": [[592, "id7"]], "\u90e8\u7f72": [[593, "id1"]], "\u4f7f\u7528Helm\u90e8\u7f72GraphScope": [[593, "helmgraphscope"]], "\u5728AWS/\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": [[593, "aws"]], "\u672c\u5730\u90e8\u7f72GraphScope": [[593, "graphscope"]], "\u5f00\u53d1\u8005\u6307\u5357": [[594, "id1"]], "\u57fa\u4e8e Docker \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[594, "docker-graphscope"]], "\u57fa\u4e8e Kubernetes \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[594, "kubernetes-graphscope"]], "\u6784\u5efa Python Wheels": [[594, "python-wheels"]], "Linux": [[594, "linux"]], "macOS": [[594, "macos"]], "\u4ee3\u7801\u98ce\u683c": [[594, "id3"]], "\u5e38\u89c1\u95ee\u9898": [[595, "id1"]], "\u5feb\u901f\u4e0a\u624b": [[596, "id1"]], "\u793a\u4f8b: \u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [[596, "id3"]], "\u521b\u5efa\u4f1a\u8bdd": [[596, "id4"]], "\u4ea4\u4e92\u5f0f\u67e5\u8be2": [[596, "id6"]], "\u56fe\u5206\u6790": [[596, "id7"]], "\u56fe\u795e\u7ecf\u7f51\u7edc (GNNs)": [[596, "gnns"]], "\u5173\u95ed\u4f1a\u8bdd": [[596, "id8"]], "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": [[597, "graph-transformation"]], "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": [[597, "id2"]], "\u6295\u5f71": [[597, "id3"]], "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": [[597, "id4"]], "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": [[597, "id5"]], "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": [[598, "graphscope"]], "\u76ee\u5f55": [[598, null], [603, null]], "API \u53c2\u8003": [[598, null]], "\u7d22\u5f15": [[598, "id1"]], "\u5b89\u88c5": [[599, "id1"]], "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": [[599, "id2"]], "\u57fa\u4e8e Kubernetes \u5b89\u88c5 GraphScope \u5ba2\u6237\u7aef": [[599, "kubernetes-graphscope"]], "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": [[600, "id1"]], "Apache TinkerPop": [[600, "apache-tinkerpop"]], "\u5229\u7528Python\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[600, "python-gremlin-graphscope"]], "\u5229\u7528Java\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[600, "java-gremlin-graphscope"]], "Gremlin Console\uff08\u5f00\u53d1\u63a7\u5236\u53f0\uff09": [[600, "id5"]], "Gremlin\u7f16\u7a0b\u5165\u95e8\u2013101": [[600, "gremlin-101"]], "\u56fe\u6570\u636e\u6a21\u578b": [[600, "id8"]], "\u67e5\u8be2\u8bed\u8a00": [[600, "id9"]], "\u4e00\u4e2a\u4f8b\u5b50": [[600, "id10"]], "Gremlin\u517c\u5bb9\u6027\uff08\u5bf9\u6bd4TinkerPop\uff09": [[600, "gremlin-tinkerpop"]], "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": [[600, "id11"]], "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": [[600, "id12"]], "\u652f\u6301\u7684Gremlin\u64cd\u4f5c": [[600, "id13"]], "\u5df2\u77e5\u9650\u5236": [[600, "id14"]], "\u56fe\u5b66\u4e60\u5f15\u64ce": [[601, "id1"]], "\u56fe\u5b66\u4e60\u6a21\u578b": [[601, "id2"]], "\u6570\u636e\u6a21\u578b": [[601, "id3"]], "\u7f16\u7801\u5668": [[601, "id4"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[601, "id5"]], "\u91c7\u6837": [[601, "id6"]], "\u56fe\u6570\u636e\u6d41": [[601, "id7"]], "\u6a21\u578b": [[601, "id8"]], "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": [[601, "id9"]], "\u8f7d\u56fe": [[602, "loading-graphs"]], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": [[602, "id3"]], "\u624b\u52a8\u914d\u7f6e\u56fe": [[602, "id4"]], "Build Vertex": [[602, "build-vertex"]], "vertices": [[602, "vertices"]], "properties": [[602, "properties"], [602, "id7"]], "vid_field": [[602, "vid-field"]], "Build Edge": [[602, "build-edge"]], "edges": [[602, "edges"]], "label": [[602, "id6"]], "src_label and dst_label": [[602, "src-label-and-dst-label"]], "src_field and dst_field": [[602, "src-field-and-dst-field"]], "\u9ad8\u7ea7\u7528\u6cd5": [[602, "id8"]], "\u6ca1\u6709\u6b67\u4e49\u65f6\uff0c\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": [[602, "id9"]], "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": [[602, "id10"]], "\u591a\u79cd\u8fb9\u5173\u7cfb": [[602, "id11"]], "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": [[602, "id12"]], "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": [[602, "id13"]], "\u5b8c\u6574\u7684\u793a\u4f8b": [[602, "id14"]], "\u4ece Pandas \u6216 Numpy \u4e2d\u8f7d\u56fe": [[602, "pandas-numpy"]], "\u4ece Pandas \u4e2d\u8f7d\u56fe": [[602, "pandas"]], "\u4ece Numpy \u4e2d\u8f7d\u56fe": [[602, "numpy"]], "Loader \u7684\u53d8\u79cd": [[602, "loader"]], "\u5165\u95e8\u6559\u7a0b": [[603, "id1"]]}, "indexentries": {"all_pairs_shortest_path_length()": [[0, "all_pairs_shortest_path_length"]], "attribute_assortativity()": [[0, "attribute_assortativity"]], "average_degree_connectivity()": [[0, "average_degree_connectivity"]], "betweenness_centrality()": [[0, "betweenness_centrality"]], "bfs()": [[0, "bfs"]], "built-in function": [[0, "all_pairs_shortest_path_length"], [0, "attribute_assortativity"], [0, "average_degree_connectivity"], [0, "betweenness_centrality"], [0, "bfs"], [0, "closeness_centrality"], [0, "degree_assortativity_coefficient"], [0, "degree_centrality"], [0, "dfs"], [0, "eigenvector_centrality"], [0, "hits"], [0, "id0"], [0, "id1"], [0, "id2"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "katz_centrality"], [0, "kkore"], [0, "kshell"], [0, "lpa"], [0, "sampling_path"], [0, "sssp"]], "cdlp()": [[0, "id0"]], "closeness_centrality()": [[0, "closeness_centrality"]], "clustering()": [[0, "id1"]], "degree_assortativity_coefficient()": [[0, "degree_assortativity_coefficient"]], "degree_centrality()": [[0, "degree_centrality"]], "dfs()": [[0, "dfs"]], "eigenvector_centrality()": [[0, "eigenvector_centrality"]], "hits()": [[0, "hits"]], "katz_centrality()": [[0, "katz_centrality"]], "kkore()": [[0, "kkore"]], "kshell()": [[0, "kshell"]], "lcc()": [[0, "id2"]], "lpa()": [[0, "lpa"]], "pagerank()": [[0, "id3"]], "sampling_path()": [[0, "sampling_path"]], "sssp()": [[0, "sssp"]], "voterank()": [[0, "id4"]], "wcc()": [[0, "id5"]], "driver (class in gs_interactive.client.driver)": [[298, "gs_interactive.client.driver.Driver"]], "__init__() (gs_interactive.client.driver.driver method)": [[298, "gs_interactive.client.driver.Driver.__init__"]], "close() (gs_interactive.client.driver.driver method)": [[298, "gs_interactive.client.driver.Driver.close"]], "getdefaultsession() (gs_interactive.client.driver.driver method)": [[298, "gs_interactive.client.driver.Driver.getDefaultSession"]], "getneo4jendpoint() (gs_interactive.client.driver.driver method)": [[298, "gs_interactive.client.driver.Driver.getNeo4jEndpoint"]], "getneo4jsession() (gs_interactive.client.driver.driver method)": [[298, "gs_interactive.client.driver.Driver.getNeo4jSession"]], "gs_interactive.client.driver": [[298, "module-gs_interactive.client.driver"]], "module": [[298, "module-gs_interactive.client.driver"], [299, "module-0"], [299, "module-gs_interactive.client.utils"], [302, "module-gs_interactive.client.result"], [303, "module-0"], [303, "module-gs_interactive.client.session"], [304, "module-gs_interactive.client.status"], [435, "module-graphscope.nx.classes.function"], [568, "module-graphscope.nx.generators.atlas"], [568, "module-graphscope.nx.generators.classic"], [568, "module-graphscope.nx.generators.community"], [568, "module-graphscope.nx.generators.degree_seq"], [568, "module-graphscope.nx.generators.directed"], [568, "module-graphscope.nx.generators.duplication"], [568, "module-graphscope.nx.generators.ego"], [568, "module-graphscope.nx.generators.expanders"], [568, "module-graphscope.nx.generators.geometric"], [568, "module-graphscope.nx.generators.harary_graph"], [568, "module-graphscope.nx.generators.intersection"], [568, "module-graphscope.nx.generators.joint_degree_seq"], [568, "module-graphscope.nx.generators.mycielski"], [568, "module-graphscope.nx.generators.nonisomorphic_trees"], [568, "module-graphscope.nx.generators.small"], [568, "module-graphscope.nx.generators.social"], [568, "module-graphscope.nx.generators.spectral_graph_forge"], [568, "module-graphscope.nx.generators.sudoku"], [568, "module-graphscope.nx.generators.trees"], [568, "module-graphscope.nx.generators.triads"], [568, "module-networkx.generators.internet_as_graphs"], [568, "module-networkx.generators.stochastic"], [573, "module-graphscope.framework.dag_utils"]], "read_endpoints_from_env() (gs_interactive.client.driver.driver method)": [[298, "gs_interactive.client.driver.Driver.read_endpoints_from_env"]], "session() (gs_interactive.client.driver.driver method)": [[298, "gs_interactive.client.driver.Driver.session"]], "decoder (class in gs_interactive.client.utils)": [[299, "gs_interactive.client.utils.Decoder"]], "encoder (class in gs_interactive.client.utils)": [[299, "gs_interactive.client.utils.Encoder"]], "__init__() (gs_interactive.client.utils.decoder method)": [[299, "gs_interactive.client.utils.Decoder.__init__"]], "__init__() (gs_interactive.client.utils.encoder method)": [[299, "gs_interactive.client.utils.Encoder.__init__"]], "get_byte() (gs_interactive.client.utils.decoder method)": [[299, "gs_interactive.client.utils.Decoder.get_byte"]], "get_bytes() (gs_interactive.client.utils.decoder method)": [[299, "gs_interactive.client.utils.Decoder.get_bytes"]], "get_bytes() (gs_interactive.client.utils.encoder method)": [[299, "gs_interactive.client.utils.Encoder.get_bytes"]], "get_double() (gs_interactive.client.utils.decoder method)": [[299, "gs_interactive.client.utils.Decoder.get_double"]], "get_int() (gs_interactive.client.utils.decoder method)": [[299, "gs_interactive.client.utils.Decoder.get_int"]], "get_long() (gs_interactive.client.utils.decoder method)": [[299, "gs_interactive.client.utils.Decoder.get_long"]], "get_string() (gs_interactive.client.utils.decoder method)": [[299, "gs_interactive.client.utils.Decoder.get_string"]], "gs_interactive.client.utils": [[299, "module-0"], [299, "module-gs_interactive.client.utils"]], "is_empty() (gs_interactive.client.utils.decoder method)": [[299, "gs_interactive.client.utils.Decoder.is_empty"]], "put_byte() (gs_interactive.client.utils.encoder method)": [[299, "gs_interactive.client.utils.Encoder.put_byte"]], "put_bytes() (gs_interactive.client.utils.encoder method)": [[299, "gs_interactive.client.utils.Encoder.put_bytes"]], "put_double() (gs_interactive.client.utils.encoder method)": [[299, "gs_interactive.client.utils.Encoder.put_double"]], "put_int() (gs_interactive.client.utils.encoder method)": [[299, "gs_interactive.client.utils.Encoder.put_int"]], "put_long() (gs_interactive.client.utils.encoder method)": [[299, "gs_interactive.client.utils.Encoder.put_long"]], "put_string() (gs_interactive.client.utils.encoder method)": [[299, "gs_interactive.client.utils.Encoder.put_string"]], "result (class in gs_interactive.client.result)": [[302, "gs_interactive.client.result.Result"]], "__init__() (gs_interactive.client.result.result method)": [[302, "gs_interactive.client.result.Result.__init__"]], "error() (gs_interactive.client.result.result static method)": [[302, "gs_interactive.client.result.Result.error"]], "from_exception() (gs_interactive.client.result.result static method)": [[302, "gs_interactive.client.result.Result.from_exception"]], "from_response() (gs_interactive.client.result.result static method)": [[302, "gs_interactive.client.result.Result.from_response"]], "get_status() (gs_interactive.client.result.result method)": [[302, "gs_interactive.client.result.Result.get_status"]], "get_status_message() (gs_interactive.client.result.result method)": [[302, "gs_interactive.client.result.Result.get_status_message"]], "get_value() (gs_interactive.client.result.result method)": [[302, "gs_interactive.client.result.Result.get_value"]], "gs_interactive.client.result": [[302, "module-gs_interactive.client.result"]], "is_error() (gs_interactive.client.result.result method)": [[302, "gs_interactive.client.result.Result.is_error"]], "is_ok() (gs_interactive.client.result.result method)": [[302, "gs_interactive.client.result.Result.is_ok"]], "ok() (gs_interactive.client.result.result static method)": [[302, "gs_interactive.client.result.Result.ok"]], "defaultsession (class in gs_interactive.client.session)": [[303, "gs_interactive.client.session.DefaultSession"]], "session (class in gs_interactive.client.session)": [[303, "gs_interactive.client.session.Session"]], "__init__() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.__init__"]], "add_edge() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.add_edge"]], "add_vertex() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.add_vertex"]], "bulk_loading() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.bulk_loading"]], "call_procedure() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.call_procedure"]], "call_procedure_current() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.call_procedure_current"]], "call_procedure_current_raw() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.call_procedure_current_raw"]], "call_procedure_raw() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.call_procedure_raw"]], "cancel_job() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.cancel_job"]], "create_edge_type() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.create_edge_type"]], "create_graph() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.create_graph"]], "create_procedure() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.create_procedure"]], "create_vertex_type() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.create_vertex_type"]], "delete_edge() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.delete_edge"]], "delete_edge_type() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.delete_edge_type"]], "delete_graph() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.delete_graph"]], "delete_procedure() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.delete_procedure"]], "delete_vertex() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.delete_vertex"]], "delete_vertex_type() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.delete_vertex_type"]], "ensure_param_str() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.ensure_param_str"]], "get_edge() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_edge"]], "get_graph_meta() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_graph_meta"]], "get_graph_schema() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_graph_schema"]], "get_graph_statistics() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_graph_statistics"]], "get_job() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_job"]], "get_procedure() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_procedure"]], "get_service_status() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_service_status"]], "get_snapshot_status() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_snapshot_status"]], "get_vertex() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.get_vertex"]], "gs_interactive.client.session": [[303, "module-0"], [303, "module-gs_interactive.client.session"]], "list_graphs() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.list_graphs"]], "list_jobs() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.list_jobs"]], "list_procedures() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.list_procedures"]], "restart_service() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.restart_service"]], "start_service() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.start_service"]], "stop_service() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.stop_service"]], "try_upload_files() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.try_upload_files"]], "update_edge() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.update_edge"]], "update_edge_type() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.update_edge_type"]], "update_procedure() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.update_procedure"]], "update_vertex() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.update_vertex"]], "update_vertex_type() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.update_vertex_type"]], "upload_and_replace_input_inplace() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.upload_and_replace_input_inplace"]], "upload_file() (gs_interactive.client.session.defaultsession method)": [[303, "gs_interactive.client.session.DefaultSession.upload_file"]], "status (class in gs_interactive.client.status)": [[304, "gs_interactive.client.status.Status"]], "__init__() (gs_interactive.client.status.status method)": [[304, "gs_interactive.client.status.Status.__init__"]], "from_exception() (gs_interactive.client.status.status static method)": [[304, "gs_interactive.client.status.Status.from_exception"]], "from_response() (gs_interactive.client.status.status static method)": [[304, "gs_interactive.client.status.Status.from_response"]], "get_code() (gs_interactive.client.status.status method)": [[304, "gs_interactive.client.status.Status.get_code"]], "get_message (gs_interactive.client.status.status property)": [[304, "gs_interactive.client.status.Status.get_message"]], "gs_interactive.client.status": [[304, "module-gs_interactive.client.status"]], "is_error() (gs_interactive.client.status.status method)": [[304, "gs_interactive.client.status.Status.is_error"]], "is_ok() (gs_interactive.client.status.status method)": [[304, "gs_interactive.client.status.Status.is_ok"]], "ok() (gs_interactive.client.status.status static method)": [[304, "gs_interactive.client.status.Status.ok"]], "server_internal_error() (gs_interactive.client.status.status static method)": [[304, "gs_interactive.client.status.Status.server_internal_error"]], "gs::appbase (c++ class)": [[359, "_CPPv4I00EN2gs7AppBaseE"]], "gs::appbase::appbase (c++ function)": [[359, "_CPPv4N2gs7AppBase7AppBaseEv"]], "gs::appbase::inceval (c++ function)": [[359, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::peval (c++ function)": [[359, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::load_strategy (c++ member)": [[359, "_CPPv4N2gs7AppBase13load_strategyE"]], "gs::appbase::message_manager_t (c++ type)": [[359, "_CPPv4N2gs7AppBase17message_manager_tE"]], "gs::appbase::message_strategy (c++ member)": [[359, "_CPPv4N2gs7AppBase16message_strategyE"]], "gs::appbase::need_split_edges (c++ member)": [[359, "_CPPv4N2gs7AppBase16need_split_edgesE"]], "gs::appbase::~appbase (c++ function)": [[359, "_CPPv4N2gs7AppBaseD0Ev"]], "gs::appentry (c++ class)": [[359, "_CPPv4N2gs8AppEntryE"]], "gs::appentry::appentry (c++ function)": [[359, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE"]], "gs::appentry::createworker (c++ function)": [[359, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::appentry::init (c++ function)": [[359, "_CPPv4N2gs8AppEntry4InitEv"]], "gs::appentry::query (c++ function)": [[359, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE"]], "gs::argtypeat (c++ struct)": [[359, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE"]], "gs::argsnum (c++ struct)": [[359, "_CPPv4I0EN2gs7ArgsNumE"]], "gs::argsunpacker (c++ struct)": [[359, "_CPPv4I0EN2gs12ArgsUnpackerE"]], "gs::arrowfragmentloader (c++ class)": [[359, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE"]], "gs::arrowfragmentloader::adddatatoexistedelabel (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedELabelEN8vineyard8ObjectIDE10label_id_t"]], "gs::arrowfragmentloader::adddatatoexistedvlabel (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader22AddDataToExistedVLabelEN8vineyard8ObjectIDE10label_id_t"]], "gs::arrowfragmentloader::addlabelstofragment (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::addlabelstofragmentasfragmentgroup (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::arrowfragmentloader (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE"], [359, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbbb"]], "gs::arrowfragmentloader::extendlabeldata (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader15ExtendLabelDataEN8vineyard8ObjectIDEi"]], "gs::arrowfragmentloader::loadedgetables (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv"]], "gs::arrowfragmentloader::loadfragment (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv"]], "gs::arrowfragmentloader::loadfragmentasfragmentgroup (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv"]], "gs::arrowfragmentloader::loadvertexedgetables (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv"]], "gs::arrowfragmentloader::loadvertextables (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv"]], "gs::arrowfragmentloader::initpartitioner (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv"]], "gs::arrowfragmentloader::~arrowfragmentloader (c++ function)": [[359, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev"]], "gs::arrowprojectedfragment (c++ class)": [[359, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE"]], "gs::arrowprojectedfragment::construct (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedfragment::create (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv"]], "gs::arrowprojectedfragment::getdata (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t"]], "gs::arrowprojectedfragment::getedgenum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv"]], "gs::arrowprojectedfragment::getfragid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t"]], "gs::arrowprojectedfragment::getid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinedgenum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv"]], "gs::arrowprojectedfragment::getincomingadjlist (c++ function)": [[359, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [359, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [359, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getincomingedgenum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv"]], "gs::arrowprojectedfragment::getincominginnervertexadjlist (c++ function)": [[359, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getincomingoutervertexadjlist (c++ function)": [[359, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertex (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexgid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexinternalid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnerverticesnum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv"]], "gs::arrowprojectedfragment::getinternalid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getlocalindegree (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getlocaloutdegree (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutedgenum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv"]], "gs::arrowprojectedfragment::getoutervertex (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexgid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexinternalid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getouterverticesnum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv"]], "gs::arrowprojectedfragment::getoutgoingadjlist (c++ function)": [[359, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [359, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [359, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getoutgoingedgenum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv"]], "gs::arrowprojectedfragment::getoutgoinginnervertexadjlist (c++ function)": [[359, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutgoingoutervertexadjlist (c++ function)": [[359, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::gettotalverticesnum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv"]], "gs::arrowprojectedfragment::getvertex (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getvertexmap (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv"], [359, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv"]], "gs::arrowprojectedfragment::getverticesnum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv"]], "gs::arrowprojectedfragment::gid2oid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t"]], "gs::arrowprojectedfragment::gid2vertex (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::iedests (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::iedestssize (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment11IEDestsSizeEv"]], "gs::arrowprojectedfragment::ioedests (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::ioedestssize (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment12IOEDestsSizeEv"]], "gs::arrowprojectedfragment::innervertexgid2vertex (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::innervertices (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv"]], "gs::arrowprojectedfragment::isinnervertex (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t"]], "gs::arrowprojectedfragment::isoutervertex (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t"]], "gs::arrowprojectedfragment::mirrorvertices (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t"]], "gs::arrowprojectedfragment::oedests (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::oedestssize (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment11OEDestsSizeEv"]], "gs::arrowprojectedfragment::oid2gid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t"], [359, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t"]], "gs::arrowprojectedfragment::outervertexgid2vertex (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::outervertices (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t"], [359, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv"]], "gs::arrowprojectedfragment::preparetorunapp (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE"]], "gs::arrowprojectedfragment::project (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t"]], "gs::arrowprojectedfragment::vertex2gid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t"]], "gs::arrowprojectedfragment::vertices (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv"]], "gs::arrowprojectedfragment::adj_list_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE"]], "gs::arrowprojectedfragment::compact_adj_list_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE"]], "gs::arrowprojectedfragment::compact_edges (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv"]], "gs::arrowprojectedfragment::compact_nbr_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE"]], "gs::arrowprojectedfragment::const_adj_list_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE"]], "gs::arrowprojectedfragment::const_compact_adj_list_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE"]], "gs::arrowprojectedfragment::directed (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv"]], "gs::arrowprojectedfragment::edata_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE"]], "gs::arrowprojectedfragment::edge_label (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv"]], "gs::arrowprojectedfragment::edge_prop_id (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv"]], "gs::arrowprojectedfragment::eid_array_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE"]], "gs::arrowprojectedfragment::eid_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE"]], "gs::arrowprojectedfragment::fid (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv"]], "gs::arrowprojectedfragment::fnum (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv"]], "gs::arrowprojectedfragment::get_arrow_fragment (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv"]], "gs::arrowprojectedfragment::get_edata_array_accessor (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv"]], "gs::arrowprojectedfragment::get_ie_offsets_begin_ptr (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_ie_offsets_end_ptr (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_in_edges_ptr (c++ function)": [[359, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_oe_offsets_begin_ptr (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_end_ptr (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_out_edges_ptr (c++ function)": [[359, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_vdata_array_accessor (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv"]], "gs::arrowprojectedfragment::inner_vertex_array_t (c++ type)": [[359, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE"]], "gs::arrowprojectedfragment::inner_vertices_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE"]], "gs::arrowprojectedfragment::internal_oid_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE"]], "gs::arrowprojectedfragment::label_id_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE"]], "gs::arrowprojectedfragment::load_strategy (c++ member)": [[359, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE"]], "gs::arrowprojectedfragment::local_vertex_map (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv"]], "gs::arrowprojectedfragment::nbr_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE"]], "gs::arrowprojectedfragment::nbr_unit_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE"]], "gs::arrowprojectedfragment::oid_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE"]], "gs::arrowprojectedfragment::outer_vertex_array_t (c++ type)": [[359, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE"]], "gs::arrowprojectedfragment::outer_vertices_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE"]], "gs::arrowprojectedfragment::prop_id_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE"]], "gs::arrowprojectedfragment::property_graph_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE"]], "gs::arrowprojectedfragment::property_vertex_map_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE"]], "gs::arrowprojectedfragment::sub_vertices_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE"]], "gs::arrowprojectedfragment::use_perfect_hash (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment16use_perfect_hashEv"]], "gs::arrowprojectedfragment::vdata_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE"]], "gs::arrowprojectedfragment::vertex_array_t (c++ type)": [[359, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE"]], "gs::arrowprojectedfragment::vertex_label (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv"]], "gs::arrowprojectedfragment::vertex_map_id (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv"]], "gs::arrowprojectedfragment::vertex_map_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE"]], "gs::arrowprojectedfragment::vertex_prop_id (c++ function)": [[359, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv"]], "gs::arrowprojectedfragment::vertex_range_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE"]], "gs::arrowprojectedfragment::vertex_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE"]], "gs::arrowprojectedfragment::vertices_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE"]], "gs::arrowprojectedfragment::vid_array_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE"]], "gs::arrowprojectedfragment::vid_t (c++ type)": [[359, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE"]], "gs::arrowprojectedfragment::~arrowprojectedfragment (c++ function)": [[359, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev"]], "gs::arrowprojectedvertexmap (c++ class)": [[359, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE"]], "gs::arrowprojectedvertexmap::construct (c++ function)": [[359, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedvertexmap::create (c++ function)": [[359, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv"]], "gs::arrowprojectedvertexmap::getfidfromgid (c++ function)": [[359, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getgid (c++ function)": [[359, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t"], [359, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t"]], "gs::arrowprojectedvertexmap::getinnervertexsize (c++ function)": [[359, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t"]], "gs::arrowprojectedvertexmap::getlidfromgid (c++ function)": [[359, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getoffsetfromlid (c++ function)": [[359, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t"]], "gs::arrowprojectedvertexmap::getoid (c++ function)": [[359, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t"]], "gs::arrowprojectedvertexmap::gettotalverticesnum (c++ function)": [[359, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv"]], "gs::arrowprojectedvertexmap::offset2lid (c++ function)": [[359, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t"]], "gs::arrowprojectedvertexmap::project (c++ function)": [[359, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t"]], "gs::arrowprojectedvertexmap::use_perfect_hash (c++ function)": [[359, "_CPPv4NK2gs23ArrowProjectedVertexMap16use_perfect_hashEv"]], "gs::ctxwrapperbuilder (c++ struct)": [[359, "_CPPv4I00EN2gs17CtxWrapperBuilderE"]], "gs::defaultpropertyworker (c++ class)": [[359, "_CPPv4I0EN2gs21DefaultPropertyWorkerE"]], "gs::defaultpropertyworker::defaultpropertyworker (c++ function)": [[359, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultpropertyworker::finalize (c++ function)": [[359, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv"]], "gs::defaultpropertyworker::getcontext (c++ function)": [[359, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv"]], "gs::defaultpropertyworker::init (c++ function)": [[359, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultpropertyworker::output (c++ function)": [[359, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE"]], "gs::defaultpropertyworker::query (c++ function)": [[359, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args"]], "gs::defaultpropertyworker::context_t (c++ type)": [[359, "_CPPv4N2gs21DefaultPropertyWorker9context_tE"]], "gs::defaultpropertyworker::fragment_t (c++ type)": [[359, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE"]], "gs::defaultpropertyworker::message_manager_t (c++ type)": [[359, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE"]], "gs::defaultpropertyworker::~defaultpropertyworker (c++ function)": [[359, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev"]], "gs::defaultworker (c++ class)": [[359, "_CPPv4I0EN2gs13DefaultWorkerE"]], "gs::defaultworker::defaultworker (c++ function)": [[359, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultworker::finalize (c++ function)": [[359, "_CPPv4N2gs13DefaultWorker8FinalizeEv"]], "gs::defaultworker::getcontext (c++ function)": [[359, "_CPPv4N2gs13DefaultWorker10GetContextEv"]], "gs::defaultworker::init (c++ function)": [[359, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultworker::output (c++ function)": [[359, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE"]], "gs::defaultworker::query (c++ function)": [[359, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args"]], "gs::defaultworker::context_t (c++ type)": [[359, "_CPPv4N2gs13DefaultWorker9context_tE"]], "gs::defaultworker::fragment_t (c++ type)": [[359, "_CPPv4N2gs13DefaultWorker10fragment_tE"]], "gs::defaultworker::message_manager_t (c++ type)": [[359, "_CPPv4N2gs13DefaultWorker17message_manager_tE"]], "gs::defaultworker::~defaultworker (c++ function)": [[359, "_CPPv4N2gs13DefaultWorkerD0Ev"]], "gs::dispatchresult (c++ class)": [[359, "_CPPv4N2gs14DispatchResultE"]], "gs::dispatchresult::aggregatepolicy (c++ enum)": [[359, "_CPPv4N2gs14DispatchResult15AggregatePolicyE"]], "gs::dispatchresult::aggregatepolicy::kconcat (c++ enumerator)": [[359, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE"]], "gs::dispatchresult::aggregatepolicy::kmergegraphdef (c++ enumerator)": [[359, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE"]], "gs::dispatchresult::aggregatepolicy::kpickfirst (c++ enumerator)": [[359, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonempty (c++ enumerator)": [[359, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonemptygraphdef (c++ enumerator)": [[359, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE"]], "gs::dispatchresult::aggregatepolicy::krequireconsistent (c++ enumerator)": [[359, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE"]], "gs::dispatchresult::dispatchresult (c++ function)": [[359, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE"], [359, "_CPPv4N2gs14DispatchResult14DispatchResultEv"]], "gs::dispatchresult::aggregate_policy (c++ function)": [[359, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv"]], "gs::dispatchresult::data (c++ function)": [[359, "_CPPv4NK2gs14DispatchResult4dataEv"]], "gs::dispatchresult::error_code (c++ function)": [[359, "_CPPv4NK2gs14DispatchResult10error_codeEv"]], "gs::dispatchresult::graph_def (c++ function)": [[359, "_CPPv4N2gs14DispatchResult9graph_defEv"], [359, "_CPPv4NK2gs14DispatchResult9graph_defEv"]], "gs::dispatchresult::has_large_data (c++ function)": [[359, "_CPPv4NK2gs14DispatchResult14has_large_dataEv"]], "gs::dispatchresult::message (c++ function)": [[359, "_CPPv4N2gs14DispatchResult7messageEv"]], "gs::dispatchresult::set_data (c++ function)": [[359, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb"], [359, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb"]], "gs::dispatchresult::set_error (c++ function)": [[359, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE"]], "gs::dispatchresult::set_graph_def (c++ function)": [[359, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy"]], "gs::dispatchresult::worker_id (c++ function)": [[359, "_CPPv4NK2gs14DispatchResult9worker_idEv"]], "gs::dispatcher (c++ class)": [[359, "_CPPv4N2gs10DispatcherE"]], "gs::dispatcher::dispatch (c++ function)": [[359, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::dispatcher (c++ function)": [[359, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE"]], "gs::dispatcher::setcommand (c++ function)": [[359, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::start (c++ function)": [[359, "_CPPv4N2gs10Dispatcher5StartEv"]], "gs::dispatcher::stop (c++ function)": [[359, "_CPPv4N2gs10Dispatcher4StopEv"]], "gs::dispatcher::subscribe (c++ function)": [[359, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE"]], "gs::engineconfig (c++ struct)": [[359, "_CPPv4N2gs12EngineConfigE"]], "gs::engineconfig::tojsonstring (c++ function)": [[359, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv"]], "gs::engineconfig::enable_java_sdk (c++ member)": [[359, "_CPPv4N2gs12EngineConfig15enable_java_sdkE"]], "gs::engineconfig::networkx (c++ member)": [[359, "_CPPv4N2gs12EngineConfig8networkxE"]], "gs::engineconfig::vineyard_rpc_endpoint (c++ member)": [[359, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE"]], "gs::engineconfig::vineyard_socket (c++ member)": [[359, "_CPPv4N2gs12EngineConfig15vineyard_socketE"]], "gs::fragmentwrapper (c++ class)": [[359, "_CPPv4I0EN2gs15FragmentWrapperE"]], "gs::gsobject (c++ class)": [[359, "_CPPv4N2gs8GSObjectE"]], "gs::gsobject::gsobject (c++ function)": [[359, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType"]], "gs::gsobject::tostring (c++ function)": [[359, "_CPPv4NK2gs8GSObject8ToStringEv"]], "gs::gsobject::id (c++ function)": [[359, "_CPPv4NK2gs8GSObject2idEv"]], "gs::gsobject::type (c++ function)": [[359, "_CPPv4NK2gs8GSObject4typeEv"]], "gs::gsobject::~gsobject (c++ function)": [[359, "_CPPv4N2gs8GSObjectD0Ev"]], "gs::grapeengine (c++ class)": [[359, "_CPPv4N2gs11GrapeEngineE"]], "gs::grapeengine::grapeengine (c++ function)": [[359, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE"], [359, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi"]], "gs::grapeengine::rundagfile (c++ function)": [[359, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv"]], "gs::grapeengine::start (c++ function)": [[359, "_CPPv4N2gs11GrapeEngine5StartEv"]], "gs::grapeengine::stop (c++ function)": [[359, "_CPPv4N2gs11GrapeEngine4StopEv"]], "gs::grapeinstance (c++ class)": [[359, "_CPPv4N2gs13GrapeInstanceE"]], "gs::grapeinstance::grapeinstance (c++ function)": [[359, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE"]], "gs::grapeinstance::init (c++ function)": [[359, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE"]], "gs::grapeinstance::onreceive (c++ function)": [[359, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE"]], "gs::objectmanager (c++ class)": [[359, "_CPPv4N2gs13ObjectManagerE"]], "gs::objectmanager::getobject (c++ function)": [[359, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE"], [359, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE"]], "gs::objectmanager::hasobject (c++ function)": [[359, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE"]], "gs::objectmanager::putobject (c++ function)": [[359, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE"]], "gs::objectmanager::removeobject (c++ function)": [[359, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE"]], "gs::parallelpropertyworker (c++ class)": [[359, "_CPPv4I0EN2gs22ParallelPropertyWorkerE"]], "gs::parallelpropertyworker::finalize (c++ function)": [[359, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv"]], "gs::parallelpropertyworker::getcontext (c++ function)": [[359, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv"]], "gs::parallelpropertyworker::init (c++ function)": [[359, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::parallelpropertyworker::output (c++ function)": [[359, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE"]], "gs::parallelpropertyworker::parallelpropertyworker (c++ function)": [[359, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::parallelpropertyworker::query (c++ function)": [[359, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args"]], "gs::parallelpropertyworker::context_t (c++ type)": [[359, "_CPPv4N2gs22ParallelPropertyWorker9context_tE"]], "gs::parallelpropertyworker::fragment_t (c++ type)": [[359, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE"]], "gs::parallelpropertyworker::message_manager_t (c++ type)": [[359, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE"]], "gs::parallelpropertyworker::~parallelpropertyworker (c++ function)": [[359, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev"]], "gs::propertyappbase (c++ class)": [[359, "_CPPv4I00EN2gs15PropertyAppBaseE"]], "gs::propertyappbase::inceval (c++ function)": [[359, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::peval (c++ function)": [[359, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::propertyappbase (c++ function)": [[359, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv"]], "gs::propertyappbase::load_strategy (c++ member)": [[359, "_CPPv4N2gs15PropertyAppBase13load_strategyE"]], "gs::propertyappbase::message_manager_t (c++ type)": [[359, "_CPPv4N2gs15PropertyAppBase17message_manager_tE"]], "gs::propertyappbase::message_strategy (c++ member)": [[359, "_CPPv4N2gs15PropertyAppBase16message_strategyE"]], "gs::propertyappbase::need_split_edges (c++ member)": [[359, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE"]], "gs::propertyappbase::~propertyappbase (c++ function)": [[359, "_CPPv4N2gs15PropertyAppBaseD0Ev"]], "gs::propertyautoappbase (c++ class)": [[359, "_CPPv4I00EN2gs19PropertyAutoAppBaseE"]], "gs::propertyautoappbase::inceval (c++ function)": [[359, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::peval (c++ function)": [[359, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::propertyautoappbase (c++ function)": [[359, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv"]], "gs::propertyautoappbase::load_strategy (c++ member)": [[359, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE"]], "gs::propertyautoappbase::message_strategy (c++ member)": [[359, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE"]], "gs::propertyautoappbase::need_split_edges (c++ member)": [[359, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE"]], "gs::propertyautoappbase::~propertyautoappbase (c++ function)": [[359, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev"]], "gs::propertyautoworker (c++ class)": [[359, "_CPPv4I0EN2gs18PropertyAutoWorkerE"]], "gs::propertyautoworker::finalize (c++ function)": [[359, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv"]], "gs::propertyautoworker::getcontext (c++ function)": [[359, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv"]], "gs::propertyautoworker::init (c++ function)": [[359, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::propertyautoworker::output (c++ function)": [[359, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE"]], "gs::propertyautoworker::propertyautoworker (c++ function)": [[359, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::propertyautoworker::query (c++ function)": [[359, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args"]], "gs::propertyautoworker::context_t (c++ type)": [[359, "_CPPv4N2gs18PropertyAutoWorker9context_tE"]], "gs::propertyautoworker::fragment_t (c++ type)": [[359, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE"]], "gs::propertyautoworker::message_manager_t (c++ type)": [[359, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE"]], "gs::propertyautoworker::~propertyautoworker (c++ function)": [[359, "_CPPv4N2gs18PropertyAutoWorkerD0Ev"]], "gs::tensorcontext (c++ class)": [[359, "_CPPv4I00EN2gs13TensorContextE"]], "gs::tensorcontext::tensorcontext (c++ function)": [[359, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t"]], "gs::tensorcontext::assign (c++ function)": [[359, "_CPPv4N2gs13TensorContext6assignERK6data_t"], [359, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE"]], "gs::tensorcontext::data_t (c++ type)": [[359, "_CPPv4N2gs13TensorContext6data_tE"]], "gs::tensorcontext::fragment (c++ function)": [[359, "_CPPv4N2gs13TensorContext8fragmentEv"]], "gs::tensorcontext::set_shape (c++ function)": [[359, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE"]], "gs::tensorcontext::shape (c++ function)": [[359, "_CPPv4NK2gs13TensorContext5shapeEv"]], "gs::tensorcontext::tensor (c++ function)": [[359, "_CPPv4N2gs13TensorContext6tensorEv"]], "gs::tensorcontextwrapper (c++ class)": [[359, "_CPPv4I000EN2gs20TensorContextWrapperE"]], "gs::tensorcontextwrapper::tensorcontextwrapper (c++ function)": [[359, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::tensorcontextwrapper::toarrowarrays (c++ function)": [[359, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::tensorcontextwrapper::todataframe (c++ function)": [[359, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE"]], "gs::tensorcontextwrapper::tondarray (c++ function)": [[359, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t"]], "gs::tensorcontextwrapper::tovineyarddataframe (c++ function)": [[359, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE"]], "gs::tensorcontextwrapper::tovineyardtensor (c++ function)": [[359, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t"]], "gs::tensorcontextwrapper::context_type (c++ function)": [[359, "_CPPv4N2gs20TensorContextWrapper12context_typeEv"]], "gs::tensorcontextwrapper::fragment_wrapper (c++ function)": [[359, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv"]], "gs::vertexdatacontextwrapper (c++ class)": [[359, "_CPPv4I00EN2gs24VertexDataContextWrapperE"]], "gs::vertexdatacontextwrapper::toarrowarrays (c++ function)": [[359, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::vertexdatacontextwrapper::todataframe (c++ function)": [[359, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tondarray (c++ function)": [[359, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyarddataframe (c++ function)": [[359, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyardtensor (c++ function)": [[359, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::vertexdatacontextwrapper (c++ function)": [[359, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::vertexdatacontextwrapper::context_type (c++ function)": [[359, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv"]], "gs::vertexdatacontextwrapper::fragment_wrapper (c++ function)": [[359, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv"]], "gs::vertexpropertycontext (c++ class)": [[359, "_CPPv4I0EN2gs21VertexPropertyContextE"]], "gs::vertexpropertycontext::vertexpropertycontext (c++ function)": [[359, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t"]], "gs::vertexpropertycontext::add_column (c++ function)": [[359, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType"]], "gs::vertexpropertycontext::fragment (c++ function)": [[359, "_CPPv4N2gs21VertexPropertyContext8fragmentEv"]], "gs::vertexpropertycontext::fragment_t (c++ type)": [[359, "_CPPv4N2gs21VertexPropertyContext10fragment_tE"]], "gs::vertexpropertycontext::get_column (c++ function)": [[359, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t"], [359, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE"]], "gs::vertexpropertycontext::get_typed_column (c++ function)": [[359, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t"], [359, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE"]], "gs::vertexpropertycontext::oid_t (c++ type)": [[359, "_CPPv4N2gs21VertexPropertyContext5oid_tE"]], "gs::vertexpropertycontext::prop_id_t (c++ type)": [[359, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE"]], "gs::vertexpropertycontext::properties_map (c++ function)": [[359, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv"]], "gs::vertexpropertycontext::vertex_properties (c++ function)": [[359, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv"]], "gs::vertexpropertycontext::vertex_t (c++ type)": [[359, "_CPPv4N2gs21VertexPropertyContext8vertex_tE"]], "gs::rpc::analyticalserver (c++ class)": [[359, "_CPPv4N2gs3rpc16AnalyticalServerE"]], "gs::rpc::analyticalserver::analyticalserver (c++ function)": [[359, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi"]], "gs::rpc::analyticalserver::startserver (c++ function)": [[359, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv"]], "gs::rpc::analyticalserver::stopserver (c++ function)": [[359, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv"]], "app (class in graphscope.framework.app)": [[360, "graphscope.framework.app.App"]], "appassets (class in graphscope.framework.app)": [[360, "graphscope.framework.app.AppAssets"]], "appdagnode (class in graphscope.framework.app)": [[360, "graphscope.framework.app.AppDAGNode"]], "javaapp (class in graphscope.analytical.app)": [[360, "graphscope.analytical.app.JavaApp"]], "__call__() (graphscope.analytical.app.javaapp method)": [[360, "graphscope.analytical.app.JavaApp.__call__"]], "__del__() (graphscope.framework.app.app method)": [[360, "graphscope.framework.app.App.__del__"]], "__init__() (graphscope.analytical.app.javaapp method)": [[360, "graphscope.analytical.app.JavaApp.__init__"]], "__init__() (graphscope.framework.app.app method)": [[360, "graphscope.framework.app.App.__init__"]], "__init__() (graphscope.framework.app.appassets method)": [[360, "graphscope.framework.app.AppAssets.__init__"]], "algo (graphscope.framework.app.appassets property)": [[360, "graphscope.framework.app.AppAssets.algo"]], "attribute_assortativity_coefficient() (in module graphscope)": [[360, "graphscope.attribute_assortativity_coefficient"]], "average_degree_connectivity() (in module graphscope)": [[360, "graphscope.average_degree_connectivity"]], "average_shortest_path_length() (in module graphscope)": [[360, "graphscope.average_shortest_path_length"]], "avg_clustering() (in module graphscope)": [[360, "graphscope.avg_clustering"]], "bfs() (in module graphscope)": [[360, "graphscope.bfs"]], "cdlp() (in module graphscope)": [[360, "graphscope.cdlp"]], "clustering() (in module graphscope)": [[360, "graphscope.clustering"]], "context_type (graphscope.framework.app.appassets property)": [[360, "graphscope.framework.app.AppAssets.context_type"]], "degree_assortativity_coefficient() (in module graphscope)": [[360, "graphscope.degree_assortativity_coefficient"]], "degree_centrality() (in module graphscope)": [[360, "graphscope.degree_centrality"]], "eigenvector_centrality() (in module graphscope)": [[360, "graphscope.eigenvector_centrality"]], "gar (graphscope.framework.app.appassets property)": [[360, "graphscope.framework.app.AppAssets.gar"]], "hits() (in module graphscope)": [[360, "graphscope.hits"]], "is_compatible() (graphscope.analytical.app.javaapp method)": [[360, "graphscope.analytical.app.JavaApp.is_compatible"]], "is_compatible() (graphscope.framework.app.appassets method)": [[360, "graphscope.framework.app.AppAssets.is_compatible"]], "is_simple_path() (in module graphscope)": [[360, "graphscope.is_simple_path"]], "k_core() (in module graphscope)": [[360, "graphscope.k_core"]], "k_shell() (in module graphscope)": [[360, "graphscope.k_shell"]], "katz_centrality() (in module graphscope)": [[360, "graphscope.katz_centrality"]], "key (graphscope.framework.app.app property)": [[360, "graphscope.framework.app.App.key"]], "louvain() (in module graphscope)": [[360, "graphscope.louvain"]], "lpa() (in module graphscope)": [[360, "graphscope.lpa"]], "lpa_u2i() (in module graphscope)": [[360, "graphscope.lpa_u2i"]], "numeric_assortativity_coefficient() (in module graphscope)": [[360, "graphscope.numeric_assortativity_coefficient"]], "pagerank() (in module graphscope)": [[360, "graphscope.pagerank"]], "pagerank_nx() (in module graphscope)": [[360, "graphscope.pagerank_nx"]], "signature (graphscope.framework.app.app property)": [[360, "graphscope.framework.app.App.signature"]], "signature (graphscope.framework.app.appassets property)": [[360, "graphscope.framework.app.AppAssets.signature"]], "signature() (graphscope.analytical.app.javaapp method)": [[360, "graphscope.analytical.app.JavaApp.signature"]], "sssp() (in module graphscope)": [[360, "graphscope.sssp"]], "triangles() (in module graphscope)": [[360, "graphscope.triangles"]], "type (graphscope.framework.app.appassets property)": [[360, "graphscope.framework.app.AppAssets.type"]], "voterank() (in module graphscope)": [[360, "graphscope.voterank"]], "wcc() (in module graphscope)": [[360, "graphscope.wcc"]], "basecontextdagnode (class in graphscope.framework.context)": [[361, "graphscope.framework.context.BaseContextDAGNode"]], "context (class in graphscope.framework.context)": [[361, "graphscope.framework.context.Context"]], "dynamicvertexdatacontext (class in graphscope.framework.context)": [[361, "graphscope.framework.context.DynamicVertexDataContext"]], "labeledvertexdatacontextdagnode (class in graphscope.framework.context)": [[361, "graphscope.framework.context.LabeledVertexDataContextDAGNode"]], "labeledvertexpropertycontextdagnode (class in graphscope.framework.context)": [[361, "graphscope.framework.context.LabeledVertexPropertyContextDAGNode"]], "resultdagnode (class in graphscope.framework.context)": [[361, "graphscope.framework.context.ResultDAGNode"]], "tensorcontextdagnode (class in graphscope.framework.context)": [[361, "graphscope.framework.context.TensorContextDAGNode"]], "vertexdatacontextdagnode (class in graphscope.framework.context)": [[361, "graphscope.framework.context.VertexDataContextDAGNode"]], "vertexpropertycontextdagnode (class in graphscope.framework.context)": [[361, "graphscope.framework.context.VertexPropertyContextDAGNode"]], "to_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[361, "graphscope.framework.context.BaseContextDAGNode.to_dataframe"]], "to_numpy() (graphscope.framework.context.basecontextdagnode method)": [[361, "graphscope.framework.context.BaseContextDAGNode.to_numpy"]], "to_vineyard_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[361, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_dataframe"]], "to_vineyard_tensor() (graphscope.framework.context.basecontextdagnode method)": [[361, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_tensor"]], "vertex (in module graphscope)": [[366, "graphscope.Vertex"]], "declare() (in module graphscope)": [[367, "graphscope.declare"]], "load_app() (in module graphscope.framework.app)": [[368, "graphscope.framework.app.load_app"]], "add_column() (in module graphscope.framework.dag_utils)": [[369, "graphscope.framework.dag_utils.add_column"]], "add_labels_to_graph() (in module graphscope.framework.dag_utils)": [[370, "graphscope.framework.dag_utils.add_labels_to_graph"]], "arrow_to_dynamic() (in module graphscope.framework.dag_utils)": [[371, "graphscope.framework.dag_utils.arrow_to_dynamic"]], "bind_app() (in module graphscope.framework.dag_utils)": [[372, "graphscope.framework.dag_utils.bind_app"]], "clear_edges() (in module graphscope.framework.dag_utils)": [[373, "graphscope.framework.dag_utils.clear_edges"]], "clear_graph() (in module graphscope.framework.dag_utils)": [[374, "graphscope.framework.dag_utils.clear_graph"]], "context_to_dataframe() (in module graphscope.framework.dag_utils)": [[375, "graphscope.framework.dag_utils.context_to_dataframe"]], "context_to_numpy() (in module graphscope.framework.dag_utils)": [[376, "graphscope.framework.dag_utils.context_to_numpy"]], "copy_graph() (in module graphscope.framework.dag_utils)": [[377, "graphscope.framework.dag_utils.copy_graph"]], "create_app() (in module graphscope.framework.dag_utils)": [[378, "graphscope.framework.dag_utils.create_app"]], "create_graph() (in module graphscope.framework.dag_utils)": [[379, "graphscope.framework.dag_utils.create_graph"]], "create_graph_view() (in module graphscope.framework.dag_utils)": [[380, "graphscope.framework.dag_utils.create_graph_view"]], "create_loader() (in module graphscope.framework.dag_utils)": [[381, "graphscope.framework.dag_utils.create_loader"]], "create_subgraph() (in module graphscope.framework.dag_utils)": [[382, "graphscope.framework.dag_utils.create_subgraph"]], "create_unload_op() (in module graphscope.framework.dag_utils)": [[383, "graphscope.framework.dag_utils.create_unload_op"]], "dynamic_to_arrow() (in module graphscope.framework.dag_utils)": [[384, "graphscope.framework.dag_utils.dynamic_to_arrow"]], "get_context_data() (in module graphscope.framework.dag_utils)": [[385, "graphscope.framework.dag_utils.get_context_data"]], "graph_to_dataframe() (in module graphscope.framework.dag_utils)": [[386, "graphscope.framework.dag_utils.graph_to_dataframe"]], "graph_to_numpy() (in module graphscope.framework.dag_utils)": [[387, "graphscope.framework.dag_utils.graph_to_numpy"]], "gremlin_to_subgraph() (in module graphscope.framework.dag_utils)": [[388, "graphscope.framework.dag_utils.gremlin_to_subgraph"]], "modify_edges() (in module graphscope.framework.dag_utils)": [[389, "graphscope.framework.dag_utils.modify_edges"]], "modify_vertices() (in module graphscope.framework.dag_utils)": [[390, "graphscope.framework.dag_utils.modify_vertices"]], "output() (in module graphscope.framework.dag_utils)": [[391, "graphscope.framework.dag_utils.output"]], "project_arrow_property_graph() (in module graphscope.framework.dag_utils)": [[392, "graphscope.framework.dag_utils.project_arrow_property_graph"]], "project_to_simple() (in module graphscope.framework.dag_utils)": [[393, "graphscope.framework.dag_utils.project_to_simple"]], "report_graph() (in module graphscope.framework.dag_utils)": [[394, "graphscope.framework.dag_utils.report_graph"]], "run_app() (in module graphscope.framework.dag_utils)": [[395, "graphscope.framework.dag_utils.run_app"]], "to_data_sink() (in module graphscope.framework.dag_utils)": [[396, "graphscope.framework.dag_utils.to_data_sink"]], "to_directed() (in module graphscope.framework.dag_utils)": [[397, "graphscope.framework.dag_utils.to_directed"]], "to_undirected() (in module graphscope.framework.dag_utils)": [[398, "graphscope.framework.dag_utils.to_undirected"]], "to_vineyard_dataframe() (in module graphscope.framework.dag_utils)": [[399, "graphscope.framework.dag_utils.to_vineyard_dataframe"]], "to_vineyard_tensor() (in module graphscope.framework.dag_utils)": [[400, "graphscope.framework.dag_utils.to_vineyard_tensor"]], "unload_app() (in module graphscope.framework.dag_utils)": [[401, "graphscope.framework.dag_utils.unload_app"]], "unload_context() (in module graphscope.framework.dag_utils)": [[402, "graphscope.framework.dag_utils.unload_context"]], "unload_graph() (in module graphscope.framework.dag_utils)": [[403, "graphscope.framework.dag_utils.unload_graph"]], "__init__() (graphscope.framework.operation.operation method)": [[404, "graphscope.framework.operation.Operation.__init__"]], "as_op_def() (graphscope.framework.operation.operation method)": [[405, "graphscope.framework.operation.Operation.as_op_def"]], "eval() (graphscope.framework.operation.operation method)": [[406, "graphscope.framework.operation.Operation.eval"]], "evaluated (graphscope.framework.operation.operation property)": [[407, "graphscope.framework.operation.Operation.evaluated"]], "key (graphscope.framework.operation.operation property)": [[408, "graphscope.framework.operation.Operation.key"]], "signature (graphscope.framework.operation.operation property)": [[409, "graphscope.framework.operation.Operation.signature"]], "g() (in module graphscope)": [[410, "graphscope.g"]], "get_default_session() (in module graphscope)": [[411, "graphscope.get_default_session"]], "graphlearn() (in module graphscope)": [[412, "graphscope.graphlearn"]], "gremlin() (in module graphscope)": [[413, "graphscope.gremlin"]], "has_default_session() (in module graphscope)": [[414, "graphscope.has_default_session"]], "session (in module graphscope)": [[415, "graphscope.session"]], "set_option() (in module graphscope)": [[416, "graphscope.set_option"]], "graph (class in graphscope.framework.graph)": [[431, "graphscope.framework.graph.Graph"]], "graphdagnode (class in graphscope.framework.graph)": [[431, "graphscope.framework.graph.GraphDAGNode"]], "loader (class in graphscope.framework.loader)": [[431, "graphscope.framework.loader.Loader"]], "__init__() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.__init__"]], "__init__() (graphscope.framework.graph.graphdagnode method)": [[431, "graphscope.framework.graph.GraphDAGNode.__init__"]], "__init__() (graphscope.framework.loader.loader method)": [[431, "graphscope.framework.loader.Loader.__init__"]], "add_column() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.add_column"]], "add_column() (graphscope.framework.graph.graphdagnode method)": [[431, "graphscope.framework.graph.GraphDAGNode.add_column"]], "add_edges() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.add_edges"]], "add_edges() (graphscope.framework.graph.graphdagnode method)": [[431, "graphscope.framework.graph.GraphDAGNode.add_edges"]], "add_vertices() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.add_vertices"]], "add_vertices() (graphscope.framework.graph.graphdagnode method)": [[431, "graphscope.framework.graph.GraphDAGNode.add_vertices"]], "consolidate_columns() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.consolidate_columns"]], "consolidate_columns() (graphscope.framework.graph.graphdagnode method)": [[431, "graphscope.framework.graph.GraphDAGNode.consolidate_columns"]], "detach() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.detach"]], "key (graphscope.framework.graph.graph property)": [[431, "graphscope.framework.graph.Graph.key"]], "load_from() (graphscope.framework.graph.graph class method)": [[431, "graphscope.framework.graph.Graph.load_from"]], "load_from() (in module graphscope.framework.graph_builder)": [[431, "graphscope.framework.graph_builder.load_from"]], "loaded() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.loaded"]], "project() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.project"]], "project() (graphscope.framework.graph.graphdagnode method)": [[431, "graphscope.framework.graph.GraphDAGNode.project"]], "save_to() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.save_to"]], "schema (graphscope.framework.graph.graph property)": [[431, "graphscope.framework.graph.Graph.schema"]], "schema_path (graphscope.framework.graph.graph property)": [[431, "graphscope.framework.graph.Graph.schema_path"]], "session_id (graphscope.framework.graph.graph property)": [[431, "graphscope.framework.graph.Graph.session_id"]], "to_dataframe() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.to_dataframe"]], "to_directed() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.to_directed"]], "to_numpy() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.to_numpy"]], "to_undirected() (graphscope.framework.graph.graph method)": [[431, "graphscope.framework.graph.Graph.to_undirected"]], "vineyard_id (graphscope.framework.graph.graph property)": [[431, "graphscope.framework.graph.Graph.vineyard_id"]], "interactivequery (class in graphscope.interactive.query)": [[432, "graphscope.interactive.query.InteractiveQuery"]], "__init__() (graphscope.interactive.query.interactivequery method)": [[432, "graphscope.interactive.query.InteractiveQuery.__init__"]], "close() (graphscope.interactive.query.interactivequery method)": [[432, "graphscope.interactive.query.InteractiveQuery.close"]], "cypher_driver (graphscope.interactive.query.interactivequery property)": [[432, "graphscope.interactive.query.InteractiveQuery.cypher_driver"]], "cypher_url (graphscope.interactive.query.interactivequery property)": [[432, "graphscope.interactive.query.InteractiveQuery.cypher_url"]], "execute() (graphscope.interactive.query.interactivequery method)": [[432, "graphscope.interactive.query.InteractiveQuery.execute"]], "graph_url (graphscope.interactive.query.interactivequery property)": [[432, "graphscope.interactive.query.InteractiveQuery.graph_url"]], "gremlin_client (graphscope.interactive.query.interactivequery property)": [[432, "graphscope.interactive.query.InteractiveQuery.gremlin_client"]], "gremlin_url (graphscope.interactive.query.interactivequery property)": [[432, "graphscope.interactive.query.InteractiveQuery.gremlin_url"]], "object_id (graphscope.interactive.query.interactivequery property)": [[432, "graphscope.interactive.query.InteractiveQuery.object_id"]], "session (graphscope.interactive.query.interactivequery property)": [[432, "graphscope.interactive.query.InteractiveQuery.session"]], "session_id (graphscope.interactive.query.interactivequery property)": [[432, "graphscope.interactive.query.InteractiveQuery.session_id"]], "subgraph() (graphscope.interactive.query.interactivequery method)": [[432, "graphscope.interactive.query.InteractiveQuery.subgraph"]], "submit() (graphscope.interactive.query.interactivequery method)": [[432, "graphscope.interactive.query.InteractiveQuery.submit"]], "traversal_source() (graphscope.interactive.query.interactivequery method)": [[432, "graphscope.interactive.query.InteractiveQuery.traversal_source"]], "e() (graphscope.learning.graph.graph method)": [[433, "graphscope.learning.graph.Graph.E"]], "graph (class in graphscope.learning.graph)": [[433, "graphscope.learning.graph.Graph"]], "v() (graphscope.learning.graph.graph method)": [[433, "graphscope.learning.graph.Graph.V"]], "__init__() (graphscope.learning.graph.graph method)": [[433, "graphscope.learning.graph.Graph.__init__"]], "get_handle() (graphscope.learning.graph.graph method)": [[433, "graphscope.learning.graph.Graph.get_handle"]], "average_clustering() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.average_clustering"]], "average_shortest_path_length() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.average_shortest_path_length"]], "bfs_edges() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.bfs_edges"]], "clustering() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.clustering"]], "degree_centrality() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.degree_centrality"]], "eigenvector_centrality() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.eigenvector_centrality"]], "has_path() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.has_path"]], "hits() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.hits"]], "in_degree_centrality() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.in_degree_centrality"]], "k_core() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.k_core"]], "katz_centrality() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.katz_centrality"]], "out_degree_centrality() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.out_degree_centrality"]], "triangles() (in module graphscope.nx.builtin)": [[434, "graphscope.nx.builtin.triangles"]], "graphscope.nx.classes.function": [[435, "module-graphscope.nx.classes.function"]], "add_cycle() (in module graphscope.nx.classes.function)": [[436, "graphscope.nx.classes.function.add_cycle"]], "add_path() (in module graphscope.nx.classes.function)": [[437, "graphscope.nx.classes.function.add_path"]], "add_star() (in module graphscope.nx.classes.function)": [[438, "graphscope.nx.classes.function.add_star"]], "all_neighbors() (in module graphscope.nx.classes.function)": [[439, "graphscope.nx.classes.function.all_neighbors"]], "common_neighbors() (in module graphscope.nx.classes.function)": [[440, "graphscope.nx.classes.function.common_neighbors"]], "create_empty_copy() (in module graphscope.nx.classes.function)": [[441, "graphscope.nx.classes.function.create_empty_copy"]], "degree() (in module graphscope.nx.classes.function)": [[442, "graphscope.nx.classes.function.degree"]], "degree_histogram() (in module graphscope.nx.classes.function)": [[443, "graphscope.nx.classes.function.degree_histogram"]], "density() (in module graphscope.nx.classes.function)": [[444, "graphscope.nx.classes.function.density"]], "edge_subgraph() (in module graphscope.nx.classes.function)": [[445, "graphscope.nx.classes.function.edge_subgraph"]], "edges() (in module graphscope.nx.classes.function)": [[446, "graphscope.nx.classes.function.edges"]], "freeze() (in module graphscope.nx.classes.function)": [[447, "graphscope.nx.classes.function.freeze"]], "induced_subgraph() (in module graphscope.nx.classes.function)": [[448, "graphscope.nx.classes.function.induced_subgraph"]], "info() (in module graphscope.nx.classes.function)": [[449, "graphscope.nx.classes.function.info"]], "is_directed() (in module graphscope.nx.classes.function)": [[450, "graphscope.nx.classes.function.is_directed"]], "is_empty() (in module graphscope.nx.classes.function)": [[451, "graphscope.nx.classes.function.is_empty"]], "is_frozen() (in module graphscope.nx.classes.function)": [[452, "graphscope.nx.classes.function.is_frozen"]], "is_negatively_weighted() (in module graphscope.nx.classes.function)": [[453, "graphscope.nx.classes.function.is_negatively_weighted"]], "is_weighted() (in module graphscope.nx.classes.function)": [[454, "graphscope.nx.classes.function.is_weighted"]], "neighbors() (in module graphscope.nx.classes.function)": [[455, "graphscope.nx.classes.function.neighbors"]], "nodes() (in module graphscope.nx.classes.function)": [[456, "graphscope.nx.classes.function.nodes"]], "nodes_with_selfloops() (in module graphscope.nx.classes.function)": [[457, "graphscope.nx.classes.function.nodes_with_selfloops"]], "non_edges() (in module graphscope.nx.classes.function)": [[458, "graphscope.nx.classes.function.non_edges"]], "non_neighbors() (in module graphscope.nx.classes.function)": [[459, "graphscope.nx.classes.function.non_neighbors"]], "number_of_edges() (in module graphscope.nx.classes.function)": [[460, "graphscope.nx.classes.function.number_of_edges"]], "number_of_nodes() (in module graphscope.nx.classes.function)": [[461, "graphscope.nx.classes.function.number_of_nodes"]], "number_of_selfloops() (in module graphscope.nx.classes.function)": [[462, "graphscope.nx.classes.function.number_of_selfloops"]], "selfloop_edges() (in module graphscope.nx.classes.function)": [[463, "graphscope.nx.classes.function.selfloop_edges"]], "subgraph() (in module graphscope.nx.classes.function)": [[464, "graphscope.nx.classes.function.subgraph"]], "to_directed() (in module graphscope.nx.classes.function)": [[465, "graphscope.nx.classes.function.to_directed"]], "to_undirected() (in module graphscope.nx.classes.function)": [[466, "graphscope.nx.classes.function.to_undirected"]], "graph_atlas() (in module graphscope.nx.generators.atlas)": [[467, "graphscope.nx.generators.atlas.graph_atlas"]], "graph_atlas_g() (in module graphscope.nx.generators.atlas)": [[468, "graphscope.nx.generators.atlas.graph_atlas_g"]], "balanced_tree() (in module graphscope.nx.generators.classic)": [[469, "graphscope.nx.generators.classic.balanced_tree"]], "barbell_graph() (in module graphscope.nx.generators.classic)": [[470, "graphscope.nx.generators.classic.barbell_graph"]], "binomial_tree() (in module graphscope.nx.generators.classic)": [[471, "graphscope.nx.generators.classic.binomial_tree"]], "circulant_graph() (in module graphscope.nx.generators.classic)": [[472, "graphscope.nx.generators.classic.circulant_graph"]], "circular_ladder_graph() (in module graphscope.nx.generators.classic)": [[473, "graphscope.nx.generators.classic.circular_ladder_graph"]], "complete_graph() (in module graphscope.nx.generators.classic)": [[474, "graphscope.nx.generators.classic.complete_graph"]], "complete_multipartite_graph() (in module graphscope.nx.generators.classic)": [[475, "graphscope.nx.generators.classic.complete_multipartite_graph"]], "cycle_graph() (in module graphscope.nx.generators.classic)": [[476, "graphscope.nx.generators.classic.cycle_graph"]], "dorogovtsev_goltsev_mendes_graph() (in module graphscope.nx.generators.classic)": [[477, "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph"]], "empty_graph() (in module graphscope.nx.generators.classic)": [[478, "graphscope.nx.generators.classic.empty_graph"]], "full_rary_tree() (in module graphscope.nx.generators.classic)": [[479, "graphscope.nx.generators.classic.full_rary_tree"]], "ladder_graph() (in module graphscope.nx.generators.classic)": [[480, "graphscope.nx.generators.classic.ladder_graph"]], "lollipop_graph() (in module graphscope.nx.generators.classic)": [[481, "graphscope.nx.generators.classic.lollipop_graph"]], "null_graph() (in module graphscope.nx.generators.classic)": [[482, "graphscope.nx.generators.classic.null_graph"]], "path_graph() (in module graphscope.nx.generators.classic)": [[483, "graphscope.nx.generators.classic.path_graph"]], "star_graph() (in module graphscope.nx.generators.classic)": [[484, "graphscope.nx.generators.classic.star_graph"]], "trivial_graph() (in module graphscope.nx.generators.classic)": [[485, "graphscope.nx.generators.classic.trivial_graph"]], "turan_graph() (in module graphscope.nx.generators.classic)": [[486, "graphscope.nx.generators.classic.turan_graph"]], "wheel_graph() (in module graphscope.nx.generators.classic)": [[487, "graphscope.nx.generators.classic.wheel_graph"]], "lfr_benchmark_graph() (in module graphscope.nx.generators.community)": [[488, "graphscope.nx.generators.community.LFR_benchmark_graph"]], "caveman_graph() (in module graphscope.nx.generators.community)": [[489, "graphscope.nx.generators.community.caveman_graph"]], "connected_caveman_graph() (in module graphscope.nx.generators.community)": [[490, "graphscope.nx.generators.community.connected_caveman_graph"]], "gaussian_random_partition_graph() (in module graphscope.nx.generators.community)": [[491, "graphscope.nx.generators.community.gaussian_random_partition_graph"]], "planted_partition_graph() (in module graphscope.nx.generators.community)": [[492, "graphscope.nx.generators.community.planted_partition_graph"]], "random_partition_graph() (in module graphscope.nx.generators.community)": [[493, "graphscope.nx.generators.community.random_partition_graph"]], "relaxed_caveman_graph() (in module graphscope.nx.generators.community)": [[494, "graphscope.nx.generators.community.relaxed_caveman_graph"]], "ring_of_cliques() (in module graphscope.nx.generators.community)": [[495, "graphscope.nx.generators.community.ring_of_cliques"]], "stochastic_block_model() (in module graphscope.nx.generators.community)": [[496, "graphscope.nx.generators.community.stochastic_block_model"]], "windmill_graph() (in module graphscope.nx.generators.community)": [[497, "graphscope.nx.generators.community.windmill_graph"]], "configuration_model() (in module graphscope.nx.generators.degree_seq)": [[498, "graphscope.nx.generators.degree_seq.configuration_model"]], "degree_sequence_tree() (in module graphscope.nx.generators.degree_seq)": [[499, "graphscope.nx.generators.degree_seq.degree_sequence_tree"]], "directed_configuration_model() (in module graphscope.nx.generators.degree_seq)": [[500, "graphscope.nx.generators.degree_seq.directed_configuration_model"]], "directed_havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[501, "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph"]], "expected_degree_graph() (in module graphscope.nx.generators.degree_seq)": [[502, "graphscope.nx.generators.degree_seq.expected_degree_graph"]], "havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[503, "graphscope.nx.generators.degree_seq.havel_hakimi_graph"]], "random_degree_sequence_graph() (in module graphscope.nx.generators.degree_seq)": [[504, "graphscope.nx.generators.degree_seq.random_degree_sequence_graph"]], "gn_graph() (in module graphscope.nx.generators.directed)": [[505, "graphscope.nx.generators.directed.gn_graph"]], "gnc_graph() (in module graphscope.nx.generators.directed)": [[506, "graphscope.nx.generators.directed.gnc_graph"]], "gnr_graph() (in module graphscope.nx.generators.directed)": [[507, "graphscope.nx.generators.directed.gnr_graph"]], "random_k_out_graph() (in module graphscope.nx.generators.directed)": [[508, "graphscope.nx.generators.directed.random_k_out_graph"]], "scale_free_graph() (in module graphscope.nx.generators.directed)": [[509, "graphscope.nx.generators.directed.scale_free_graph"]], "duplication_divergence_graph() (in module graphscope.nx.generators.duplication)": [[510, "graphscope.nx.generators.duplication.duplication_divergence_graph"]], "partial_duplication_graph() (in module graphscope.nx.generators.duplication)": [[511, "graphscope.nx.generators.duplication.partial_duplication_graph"]], "ego_graph() (in module graphscope.nx.generators.ego)": [[512, "graphscope.nx.generators.ego.ego_graph"]], "chordal_cycle_graph() (in module graphscope.nx.generators.expanders)": [[513, "graphscope.nx.generators.expanders.chordal_cycle_graph"]], "margulis_gabber_galil_graph() (in module graphscope.nx.generators.expanders)": [[514, "graphscope.nx.generators.expanders.margulis_gabber_galil_graph"]], "paley_graph() (in module graphscope.nx.generators.expanders)": [[515, "graphscope.nx.generators.expanders.paley_graph"]], "geographical_threshold_graph() (in module graphscope.nx.generators.geometric)": [[516, "graphscope.nx.generators.geometric.geographical_threshold_graph"]], "random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[517, "graphscope.nx.generators.geometric.random_geometric_graph"]], "soft_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[518, "graphscope.nx.generators.geometric.soft_random_geometric_graph"]], "thresholded_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[519, "graphscope.nx.generators.geometric.thresholded_random_geometric_graph"]], "waxman_graph() (in module graphscope.nx.generators.geometric)": [[520, "graphscope.nx.generators.geometric.waxman_graph"]], "hkn_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[521, "graphscope.nx.generators.harary_graph.hkn_harary_graph"]], "hnm_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[522, "graphscope.nx.generators.harary_graph.hnm_harary_graph"]], "general_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[523, "graphscope.nx.generators.intersection.general_random_intersection_graph"]], "k_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[524, "graphscope.nx.generators.intersection.k_random_intersection_graph"]], "uniform_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[525, "graphscope.nx.generators.intersection.uniform_random_intersection_graph"]], "directed_joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[526, "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph"]], "is_valid_directed_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[527, "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree"]], "is_valid_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[528, "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree"]], "joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[529, "graphscope.nx.generators.joint_degree_seq.joint_degree_graph"]], "mycielski_graph() (in module graphscope.nx.generators.mycielski)": [[530, "graphscope.nx.generators.mycielski.mycielski_graph"]], "mycielskian() (in module graphscope.nx.generators.mycielski)": [[531, "graphscope.nx.generators.mycielski.mycielskian"]], "nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[532, "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees"]], "number_of_nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[533, "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees"]], "lcf_graph() (in module graphscope.nx.generators.small)": [[534, "graphscope.nx.generators.small.LCF_graph"]], "bull_graph() (in module graphscope.nx.generators.small)": [[535, "graphscope.nx.generators.small.bull_graph"]], "chvatal_graph() (in module graphscope.nx.generators.small)": [[536, "graphscope.nx.generators.small.chvatal_graph"]], "cubical_graph() (in module graphscope.nx.generators.small)": [[537, "graphscope.nx.generators.small.cubical_graph"]], "desargues_graph() (in module graphscope.nx.generators.small)": [[538, "graphscope.nx.generators.small.desargues_graph"]], "diamond_graph() (in module graphscope.nx.generators.small)": [[539, "graphscope.nx.generators.small.diamond_graph"]], "dodecahedral_graph() (in module graphscope.nx.generators.small)": [[540, "graphscope.nx.generators.small.dodecahedral_graph"]], "frucht_graph() (in module graphscope.nx.generators.small)": [[541, "graphscope.nx.generators.small.frucht_graph"]], "heawood_graph() (in module graphscope.nx.generators.small)": [[542, "graphscope.nx.generators.small.heawood_graph"]], "house_graph() (in module graphscope.nx.generators.small)": [[543, "graphscope.nx.generators.small.house_graph"]], "house_x_graph() (in module graphscope.nx.generators.small)": [[544, "graphscope.nx.generators.small.house_x_graph"]], "icosahedral_graph() (in module graphscope.nx.generators.small)": [[545, "graphscope.nx.generators.small.icosahedral_graph"]], "krackhardt_kite_graph() (in module graphscope.nx.generators.small)": [[546, "graphscope.nx.generators.small.krackhardt_kite_graph"]], "make_small_graph() (in module graphscope.nx.generators.small)": [[547, "graphscope.nx.generators.small.make_small_graph"]], "moebius_kantor_graph() (in module graphscope.nx.generators.small)": [[548, "graphscope.nx.generators.small.moebius_kantor_graph"]], "octahedral_graph() (in module graphscope.nx.generators.small)": [[549, "graphscope.nx.generators.small.octahedral_graph"]], "pappus_graph() (in module graphscope.nx.generators.small)": [[550, "graphscope.nx.generators.small.pappus_graph"]], "petersen_graph() (in module graphscope.nx.generators.small)": [[551, "graphscope.nx.generators.small.petersen_graph"]], "sedgewick_maze_graph() (in module graphscope.nx.generators.small)": [[552, "graphscope.nx.generators.small.sedgewick_maze_graph"]], "tetrahedral_graph() (in module graphscope.nx.generators.small)": [[553, "graphscope.nx.generators.small.tetrahedral_graph"]], "truncated_cube_graph() (in module graphscope.nx.generators.small)": [[554, "graphscope.nx.generators.small.truncated_cube_graph"]], "truncated_tetrahedron_graph() (in module graphscope.nx.generators.small)": [[555, "graphscope.nx.generators.small.truncated_tetrahedron_graph"]], "tutte_graph() (in module graphscope.nx.generators.small)": [[556, "graphscope.nx.generators.small.tutte_graph"]], "davis_southern_women_graph() (in module graphscope.nx.generators.social)": [[557, "graphscope.nx.generators.social.davis_southern_women_graph"]], "florentine_families_graph() (in module graphscope.nx.generators.social)": [[558, "graphscope.nx.generators.social.florentine_families_graph"]], "karate_club_graph() (in module graphscope.nx.generators.social)": [[559, "graphscope.nx.generators.social.karate_club_graph"]], "les_miserables_graph() (in module graphscope.nx.generators.social)": [[560, "graphscope.nx.generators.social.les_miserables_graph"]], "spectral_graph_forge() (in module graphscope.nx.generators.spectral_graph_forge)": [[561, "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge"]], "sudoku_graph() (in module graphscope.nx.generators.sudoku)": [[562, "graphscope.nx.generators.sudoku.sudoku_graph"]], "prefix_tree() (in module graphscope.nx.generators.trees)": [[563, "graphscope.nx.generators.trees.prefix_tree"]], "random_tree() (in module graphscope.nx.generators.trees)": [[564, "graphscope.nx.generators.trees.random_tree"]], "triad_graph() (in module graphscope.nx.generators.triads)": [[565, "graphscope.nx.generators.triads.triad_graph"]], "random_internet_as_graph() (in module networkx.generators.internet_as_graphs)": [[566, "networkx.generators.internet_as_graphs.random_internet_as_graph"]], "stochastic_graph() (in module networkx.generators.stochastic)": [[567, "networkx.generators.stochastic.stochastic_graph"]], "graphscope.nx.generators.atlas": [[568, "module-graphscope.nx.generators.atlas"]], "graphscope.nx.generators.classic": [[568, "module-graphscope.nx.generators.classic"]], "graphscope.nx.generators.community": [[568, "module-graphscope.nx.generators.community"]], "graphscope.nx.generators.degree_seq": [[568, "module-graphscope.nx.generators.degree_seq"]], "graphscope.nx.generators.directed": [[568, "module-graphscope.nx.generators.directed"]], "graphscope.nx.generators.duplication": [[568, "module-graphscope.nx.generators.duplication"]], "graphscope.nx.generators.ego": [[568, "module-graphscope.nx.generators.ego"]], "graphscope.nx.generators.expanders": [[568, "module-graphscope.nx.generators.expanders"]], "graphscope.nx.generators.geometric": [[568, "module-graphscope.nx.generators.geometric"]], "graphscope.nx.generators.harary_graph": [[568, "module-graphscope.nx.generators.harary_graph"]], "graphscope.nx.generators.intersection": [[568, "module-graphscope.nx.generators.intersection"]], "graphscope.nx.generators.joint_degree_seq": [[568, "module-graphscope.nx.generators.joint_degree_seq"]], "graphscope.nx.generators.mycielski": [[568, "module-graphscope.nx.generators.mycielski"]], "graphscope.nx.generators.nonisomorphic_trees": [[568, "module-graphscope.nx.generators.nonisomorphic_trees"]], "graphscope.nx.generators.small": [[568, "module-graphscope.nx.generators.small"]], "graphscope.nx.generators.social": [[568, "module-graphscope.nx.generators.social"]], "graphscope.nx.generators.spectral_graph_forge": [[568, "module-graphscope.nx.generators.spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[568, "module-graphscope.nx.generators.sudoku"]], "graphscope.nx.generators.trees": [[568, "module-graphscope.nx.generators.trees"]], "graphscope.nx.generators.triads": [[568, "module-graphscope.nx.generators.triads"]], "networkx.generators.internet_as_graphs": [[568, "module-networkx.generators.internet_as_graphs"]], "networkx.generators.stochastic": [[568, "module-networkx.generators.stochastic"]], "digraph (class in graphscope.nx)": [[569, "graphscope.nx.DiGraph"]], "graph (class in graphscope.nx)": [[569, "graphscope.nx.Graph"]], "__contains__() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.__contains__"]], "__contains__() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.__contains__"]], "__getitem__() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.__getitem__"]], "__getitem__() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.__getitem__"]], "__init__() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.__init__"]], "__init__() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.__init__"]], "__iter__() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.__iter__"]], "__iter__() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.__iter__"]], "__len__() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.__len__"]], "__len__() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.__len__"]], "add_edge() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.add_edge"]], "add_edge() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.add_edge"]], "add_edges_from() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.add_edges_from"]], "add_edges_from() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.add_edges_from"]], "add_node() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.add_node"]], "add_node() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.add_node"]], "add_nodes_from() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.add_nodes_from"]], "add_nodes_from() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.add_nodes_from"]], "add_weighted_edges_from() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.add_weighted_edges_from"]], "add_weighted_edges_from() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.add_weighted_edges_from"]], "adj (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.adj"]], "adj (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.adj"]], "adjacency() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.adjacency"]], "adjacency() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.adjacency"]], "adjlist_inner_dict_factory (graphscope.nx.digraph attribute)": [[569, "graphscope.nx.DiGraph.adjlist_inner_dict_factory"]], "adjlist_inner_dict_factory (graphscope.nx.graph attribute)": [[569, "graphscope.nx.Graph.adjlist_inner_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.digraph attribute)": [[569, "graphscope.nx.DiGraph.adjlist_outer_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.graph attribute)": [[569, "graphscope.nx.Graph.adjlist_outer_dict_factory"]], "clear() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.clear"]], "clear() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.clear"]], "clear_edges() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.clear_edges"]], "clear_edges() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.clear_edges"]], "copy() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.copy"]], "copy() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.copy"]], "degree (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.degree"]], "degree (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.degree"]], "edge_attr_dict_factory (graphscope.nx.digraph attribute)": [[569, "graphscope.nx.DiGraph.edge_attr_dict_factory"]], "edge_attr_dict_factory (graphscope.nx.graph attribute)": [[569, "graphscope.nx.Graph.edge_attr_dict_factory"]], "edge_subgraph() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.edge_subgraph"]], "edge_subgraph() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.edge_subgraph"]], "edges (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.edges"]], "edges (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.edges"]], "get_edge_data() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.get_edge_data"]], "get_edge_data() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.get_edge_data"]], "graph_attr_dict_factory (graphscope.nx.digraph attribute)": [[569, "graphscope.nx.DiGraph.graph_attr_dict_factory"]], "graph_attr_dict_factory (graphscope.nx.graph attribute)": [[569, "graphscope.nx.Graph.graph_attr_dict_factory"]], "graph_cache_factory (graphscope.nx.digraph attribute)": [[569, "graphscope.nx.DiGraph.graph_cache_factory"]], "graph_cache_factory (graphscope.nx.graph attribute)": [[569, "graphscope.nx.Graph.graph_cache_factory"]], "graph_type (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.graph_type"]], "graph_type (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.graph_type"]], "has_edge() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.has_edge"]], "has_edge() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.has_edge"]], "has_node() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.has_node"]], "has_node() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.has_node"]], "has_predecessor() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.has_predecessor"]], "has_successor() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.has_successor"]], "in_degree (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.in_degree"]], "in_edges (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.in_edges"]], "is_directed() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.is_directed"]], "is_directed() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.is_directed"]], "is_multigraph() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.is_multigraph"]], "is_multigraph() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.is_multigraph"]], "key (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.key"]], "key (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.key"]], "name (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.name"]], "name (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.name"]], "nbunch_iter() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.nbunch_iter"]], "nbunch_iter() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.nbunch_iter"]], "neighbors() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.neighbors"]], "neighbors() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.neighbors"]], "node_attr_dict_factory (graphscope.nx.digraph attribute)": [[569, "graphscope.nx.DiGraph.node_attr_dict_factory"]], "node_attr_dict_factory (graphscope.nx.graph attribute)": [[569, "graphscope.nx.Graph.node_attr_dict_factory"]], "node_dict_factory (graphscope.nx.digraph attribute)": [[569, "graphscope.nx.DiGraph.node_dict_factory"]], "node_dict_factory (graphscope.nx.graph attribute)": [[569, "graphscope.nx.Graph.node_dict_factory"]], "nodes (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.nodes"]], "nodes (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.nodes"]], "number_of_edges() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.number_of_edges"]], "number_of_edges() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.number_of_edges"]], "number_of_nodes() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.number_of_nodes"]], "number_of_nodes() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.number_of_nodes"]], "op (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.op"]], "op (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.op"]], "order() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.order"]], "order() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.order"]], "out_degree (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.out_degree"]], "out_edges (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.out_edges"]], "pred (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.pred"]], "predecessors() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.predecessors"]], "remove_edge() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.remove_edge"]], "remove_edge() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.remove_edge"]], "remove_edges_from() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.remove_edges_from"]], "remove_edges_from() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.remove_edges_from"]], "remove_node() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.remove_node"]], "remove_node() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.remove_node"]], "remove_nodes_from() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.remove_nodes_from"]], "remove_nodes_from() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.remove_nodes_from"]], "reverse() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.reverse"]], "schema (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.schema"]], "schema (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.schema"]], "session (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.session"]], "session (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.session"]], "session_id (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.session_id"]], "session_id (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.session_id"]], "set_edge_data() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.set_edge_data"]], "set_edge_data() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.set_edge_data"]], "set_node_data() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.set_node_data"]], "set_node_data() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.set_node_data"]], "signature (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.signature"]], "signature (graphscope.nx.graph property)": [[569, "graphscope.nx.Graph.signature"]], "size() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.size"]], "size() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.size"]], "subgraph() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.subgraph"]], "subgraph() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.subgraph"]], "succ (graphscope.nx.digraph property)": [[569, "graphscope.nx.DiGraph.succ"]], "successors() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.successors"]], "to_directed() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.to_directed"]], "to_directed() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.to_directed"]], "to_undirected() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.to_undirected"]], "to_undirected() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.to_undirected"]], "to_undirected_class() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.to_undirected_class"]], "to_undirected_class() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.to_undirected_class"]], "update() (graphscope.nx.digraph method)": [[569, "graphscope.nx.DiGraph.update"]], "update() (graphscope.nx.graph method)": [[569, "graphscope.nx.Graph.update"]], "read_adjlist() (in module graphscope.nx)": [[571, "graphscope.nx.read_adjlist"]], "read_edgelist() (in module graphscope.nx)": [[571, "graphscope.nx.read_edgelist"]], "__init__() (in module graphscope.nx.graph)": [[572, "graphscope.nx.Graph.__init__"]], "_convert_arrow_to_dynamic() (in module graphscope.nx.graph)": [[572, "graphscope.nx.Graph._convert_arrow_to_dynamic"]], "operation (class in graphscope.framework.operation)": [[573, "graphscope.framework.operation.Operation"]], "graphscope.framework.dag_utils": [[573, "module-graphscope.framework.dag_utils"]], "session (class in graphscope)": [[576, "graphscope.Session"]], "__enter__() (graphscope.session method)": [[576, "graphscope.Session.__enter__"]], "__exit__() (graphscope.session method)": [[576, "graphscope.Session.__exit__"]], "__init__() (graphscope.session method)": [[576, "graphscope.Session.__init__"]], "add_lib() (graphscope.session method)": [[576, "graphscope.Session.add_lib"]], "as_default() (graphscope.session method)": [[576, "graphscope.Session.as_default"]], "close() (graphscope.session method)": [[576, "graphscope.Session.close"]], "connected() (graphscope.session method)": [[576, "graphscope.Session.connected"]], "engine_config (graphscope.session property)": [[576, "graphscope.Session.engine_config"]], "g() (graphscope.session method)": [[576, "graphscope.Session.g"]], "get_config() (graphscope.session method)": [[576, "graphscope.Session.get_config"]], "get_vineyard_object_mapping_table() (graphscope.session method)": [[576, "graphscope.Session.get_vineyard_object_mapping_table"]], "graphlearn() (graphscope.session method)": [[576, "graphscope.Session.graphlearn"]], "info (graphscope.session property)": [[576, "graphscope.Session.info"]], "interactive() (graphscope.session method)": [[576, "graphscope.Session.interactive"]], "load_from() (graphscope.session method)": [[576, "graphscope.Session.load_from"]], "restore_from_pvc() (graphscope.session method)": [[576, "graphscope.Session.restore_from_pvc"]], "run_fetches() (graphscope.session method)": [[576, "graphscope.Session.run_fetches"]], "store_to_pvc() (graphscope.session method)": [[576, "graphscope.Session.store_to_pvc"]]}})