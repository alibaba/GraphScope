<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.alibaba.graphscope</groupId>
  <artifactId>interactive-parent</artifactId>
  <packaging>pom</packaging>
  <version>${revision}</version>

  <name>InteractiveEngine</name>
  <profiles>
    <!-- DO NOT CHANGE THE *ORDER* IN WHICH THESE PROFILES ARE DEFINED! -->
    <profile>
      <id>experimental</id>
      <modules>
        <module>sdk-common</module>
        <module>executor/engine/pegasus/clients/java/client</module>
        <module>compiler</module>
      </modules>
    </profile>
    <profile>
      <id>graphscope</id>
      <properties>
        <rust.compile.target>v6d</rust.compile.target>
      </properties>
      <modules>
        <module>assembly</module>
        <module>common</module>
        <module>executor</module>
        <module>frontend</module>
        <module>executor/engine/pegasus/clients/java/client</module>
        <module>compiler</module>
        <module>sdk-common</module>
      </modules>
    </profile>
    <profile>
      <id>groot</id>
      <properties>
        <rust.compile.target>groot</rust.compile.target>
      </properties>
      <modules>
        <module>assembly</module>
        <module>common</module>
        <module>executor</module>
        <module>data-load-tool</module>
        <module>groot-module</module>
        <module>groot-server</module>
        <module>lgraph</module>
        <module>sdk</module>
        <module>sdk-common</module>
        <module>executor/engine/pegasus/clients/java/client</module>
        <module>compiler</module>
      </modules>
    </profile>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>assembly</module>
        <module>common</module>
        <module>data-load-tool</module>
        <module>executor</module>
        <module>frontend</module>
        <module>groot-module</module>
        <module>groot-server</module>
        <module>lgraph</module>
        <module>sdk</module>
        <module>sdk-common</module>
        <module>tests</module>
        <module>executor/engine/pegasus/clients/java/client</module>
        <module>compiler</module>
      </modules>
    </profile>
  </profiles>

  <properties>
    <revision>0.0.1-SNAPSHOT</revision>
    <rust.compile.skip>false</rust.compile.skip>
    <rust.compile.mode>debug</rust.compile.mode>
    <rust.compile.target>v6d</rust.compile.target>
    <rust.compile.skip.clean>true</rust.compile.skip.clean>
    <groot.compile.feature>""</groot.compile.feature>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <hadoop.version>3.2.4</hadoop.version>
    <!-- TODO(shirly121): upgrade to 3.6.1 -->
    <tinkerpop.version>3.5.1</tinkerpop.version>
    <slf4j.version>1.7.21</slf4j.version>
    <log4j2.version>2.19.0</log4j2.version>
    <logback.version>1.2.3</logback.version>
    <groovy.version>2.5.14</groovy.version>
    <kafka.version>2.7.2</kafka.version>
    <kafka.junit.version>3.2.1</kafka.junit.version>
    <zookeeper.version>3.6.3</zookeeper.version>
    <curator.version>5.4.0</curator.version>
    <jackson.version>2.14.1</jackson.version>
    <protoc.version>3.21.12</protoc.version>
    <protobuf.version>3.21.12</protobuf.version>
    <grpc.version>1.51.1</grpc.version>
    <jna.version>5.7.0</jna.version>
    <junit.version>4.13.2</junit.version>
    <junit.jupiter.version>5.6.3</junit.jupiter.version>
    <testng.version>6.9.9</testng.version>
    <mockito.version>4.0.0</mockito.version>
    <rocksdb.version>5.15.10</rocksdb.version>
    <metrics.core.version>3.2.5</metrics.core.version>
    <skip.tests>true</skip.tests>
    <flatten.maven.plugin>1.1.0</flatten.maven.plugin>
    <javax.annotation.version>1.2</javax.annotation.version>
    <guava.version>31.1-jre</guava.version>
    <commons.configuration.version>2.8.0</commons.configuration.version>
    <commons.codec.version>1.15</commons.codec.version>
    <commons.collections4.version>4.4</commons.collections4.version>
    <commons.math3.version>3.6.1</commons.math3.version>
    <commons.lang3.version>3.12.0</commons.lang3.version>
    <lombok.version>1.18.24</lombok.version>
    <commons.cli.version>1.5.0</commons.cli.version>
    <commons.io.version>2.11.0</commons.io.version>
    <calcite.version>1.32.0</calcite.version>
    <immutables.version>2.9.3</immutables.version>
    <!-- OSS SDK requires httpclient version to be 4.4.1, related links: https://www.alibabacloud.com/help/zh/object-storage-service/latest/java-faq?spm=a2c63.p38356.0.0.69a63c6bXPt34F-->
    <httpcomponents.version>4.4.1</httpcomponents.version>
    <kryo.version>4.0.2</kryo.version>
    <antlr4.version>4.9.1</antlr4.version>
    <aliyun.oss.version>3.14.1</aliyun.oss.version>
    <odps.sdk.public.version>0.36.4-public</odps.sdk.public.version>
    <scala.version>2.12.10</scala.version>
    <scala.binary.version>2.12</scala.binary.version>
    <spark.version>3.1.1</spark.version>

    <!-- Plugin -->
    <maven.surefire.version>2.22.2</maven.surefire.version>
    <maven.resource.version>3.3.0</maven.resource.version>
    <maven.clean.version>3.2.0</maven.clean.version>
    <maven.compile.version>3.10.0</maven.compile.version>
    <maven.jar.version>3.0.0</maven.jar.version>
    <maven.install.version>3.1.0</maven.install.version>
    <maven.deploy.version>3.0.0</maven.deploy.version>
    <maven.shade.version>3.4.1</maven.shade.version>
    <maven.assembly.version>3.4.2</maven.assembly.version>
    <os.maven.version>1.7.1</os.maven.version>
    <protobuf.maven.version>0.6.1</protobuf.maven.version>
    <build.helper.version>1.4</build.helper.version>
    <exec.maven.version>3.0.0</exec.maven.version>
    <scala.maven.version>3.2.2</scala.maven.version>
    <cobertura.maven.version>2.7</cobertura.maven.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>2.0.20</version>
      </dependency>

      <dependency>
        <groupId>com.alibaba.graphscope</groupId>
        <artifactId>interactive-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.graphscope</groupId>
        <artifactId>sdk-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>compiler</artifactId>
        <groupId>com.alibaba.graphscope</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.pegasus</groupId>
        <artifactId>pegasus-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.graphscope</groupId>
        <artifactId>sdk</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.graphscope</groupId>
        <artifactId>executor</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba.graphscope</groupId>
        <artifactId>groot-module</artifactId>
        <version>${project.version}</version>
      </dependency>


      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${javax.annotation.version}</version>
      </dependency>

      <!-- google -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>

      <!-- apache -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>${commons.collections4.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>${commons.math3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons.cli.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons.io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpcomponents.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-configuration2</artifactId>
        <version>${commons.configuration.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons.codec.version}</version>
      </dependency>

      <!-- tinkerpop -->
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>tinkergraph-gremlin</artifactId>
        <version>${tinkerpop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-core</artifactId>
        <version>${tinkerpop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-driver</artifactId>
        <version>${tinkerpop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-groovy</artifactId>
        <version>${tinkerpop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-server</artifactId>
        <version>${tinkerpop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tinkerpop</groupId>
        <artifactId>gremlin-test</artifactId>
        <version>${tinkerpop.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <!-- TODO(siyuan): Upgrade to org.apache.groovy -->
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy</artifactId>
        <version>${groovy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-jsr223</artifactId>
        <version>${groovy.version}</version>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>4.1.79.Final</version>
      </dependency>

      <!-- Spark and Scala -->
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- ODPS -->
      <dependency>
        <groupId>com.aliyun.odps</groupId>
        <artifactId>odps-sdk-commons</artifactId>
        <version>${odps.sdk.public.version}</version>
      </dependency>

      <dependency>
        <groupId>com.aliyun.odps</groupId>
        <artifactId>odps-sdk-mapred</artifactId>
        <version>${odps.sdk.public.version}</version>
      </dependency>

      <!-- Bill of Materials -->
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>2.14.1</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j2.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-bom</artifactId>
        <version>1.51.1</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- testing -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${testng.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- hadoop -->
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-minicluster</artifactId>
        <version>${hadoop.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-hdfs</artifactId>
        <version>${hadoop.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
        <scope>compile</scope>
      </dependency>

      <!-- kafka and zookeeper -->
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-framework</artifactId>
        <version>${curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-client</artifactId>
        <version>${curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-recipes</artifactId>
        <version>${curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-test</artifactId>
        <version>${curator.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-x-discovery</artifactId>
        <version>${curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>${kafka.version}</version>
      </dependency>
      <dependency>
        <groupId>com.salesforce.kafka.test</groupId>
        <artifactId>kafka-junit-core</artifactId>
        <version>${kafka.junit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.salesforce.kafka.test</groupId>
        <artifactId>kafka-junit5</artifactId>
        <version>${kafka.junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_2.13</artifactId>
        <version>${kafka.version}</version>
      </dependency>

      <dependency>
        <groupId>com.esotericsoftware</groupId>
        <artifactId>kryo-shaded</artifactId>
        <version>${kryo.version}</version>
      </dependency>

      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4</artifactId>
        <version>${antlr4.version}</version>
      </dependency>
      <dependency>
        <groupId>net.java.dev.jna</groupId>
        <artifactId>jna</artifactId>
        <version>${jna.version}</version>
      </dependency>
      <dependency>
        <groupId>org.rocksdb</groupId>
        <artifactId>rocksdbjni</artifactId>
        <version>${rocksdb.version}</version>
      </dependency>

      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${metrics.core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aliyun.oss</groupId>
        <artifactId>aliyun-sdk-oss</artifactId>
        <version>${aliyun.oss.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.calcite</groupId>
        <artifactId>calcite-core</artifactId>
        <version>${calcite.version}</version>
      </dependency>
      <dependency>
        <groupId>org.immutables</groupId>
        <artifactId>value</artifactId>
        <version>${immutables.version}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resource.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compile.version}</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
        </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven.deploy.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven.shade.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven.assembly.version}</version>
          <configuration>
            <appendAssemblyId>false</appendAssemblyId>
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build.helper.version}</version>
        </plugin>
        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>${protobuf.maven.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>${cobertura.maven.version}</version>
          <configuration>
            <instrumentation>
              <excludes>
                <exclude>com/alibaba/graphscope/proto/*</exclude>
                <exclude>com/alibaba/graphscope/Message.class</exclude>
              </excludes>
            </instrumentation>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec.maven.version}</version>
        </plugin>
        <plugin>
          <groupId>org.antlr</groupId>
          <artifactId>antlr4-maven-plugin</artifactId>
          <version>${antlr4.version}</version>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>${scala.maven.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten.maven.plugin}</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
