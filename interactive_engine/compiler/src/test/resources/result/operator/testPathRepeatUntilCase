query_plan {
  source_op {
    base {
      id: 1
      argument {
      }
    }
  }
  unary_op {
    base {
      id: 2
      operator_type: REPEAT
      argument {
        payload: "\b\t\020\b\030\002*\221\001\022\017\n\t\b\003\020*\032\003B\001\r\020\001 \001\022\022\n\f\b\004\020\004\032\000R\004\b\003\022\000\020\003 \001\022\016\n\b\b\005\020 \032\0020\001\020\004 \001\022\020\n\n\b\006\020V\032\004Z\002 \001\020\005 \001\022\035\n\027\b\a\020\024:\021\b\r\020\004\032\t:\005peter`\b \b\020\006 \001\022\f\n\b\b\t\020YZ\002\b\004\020\a\032\022\n\b\b\b\020FZ\002\b\004\020\006\030\a(\0018\001\"\a\003\004\005\006\a\b\t"
      }
    }
    input_operator_id: 1
  }
  unary_op {
    base {
      id: 10
      operator_type: HAS
      logical_compare {
        prop_id: 13
        compare: EQ
        value {
          str_value: "peter"
          value_type: VT_STRING
        }
        type: VT_STRING
      }
    }
    input_operator_id: 2
    shuffle_type: SHUFFLE_BY_KEY_TYPE
  }
  unary_op {
    base {
      id: 11
      operator_type: PROP_FILL
      argument {
        int_value_list: 13
      }
    }
    input_operator_id: 10
    shuffle_type: SHUFFLE_BY_KEY_TYPE
  }
  unary_op {
    base {
      id: 12
      operator_type: PATH_OUT
      argument {
        bool_value: true
        path_out_value {
          path_out_type: PATH_PROP
          path_prop_id: 13
        }
      }
      before_requirement {
        req_type: PATH_ADD
        req_argument {
        }
      }
    }
    input_operator_id: 11
  }
  operator_id_list: 1
  operator_id_list: 2
  operator_id_list: 10
  operator_id_list: 11
  operator_id_list: 12
}
