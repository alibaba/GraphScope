/**
 * Copyright 2020 Alibaba Group Holding Limited.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

option java_package = "com.alibaba.maxgraph.proto";

package tinkerpop;

// The gremlin service definition.
service GremlinService {
  rpc getEdges(EdgesRequest) returns (stream EdgesReponse);
  rpc getVertexs(VertexRequest) returns (stream VertexResponse);
  rpc getLimitEdges(LimitEdgeRequest) returns (stream LimitEdgesReponse);
  rpc scan(VertexScanRequest) returns (stream VertexResponse);
}

message VertexScanRequest {
    int32 typeId     =  1;
    bool order       =  2;
    string orderKey  =  3;
    int32 limit      =  4;
}

message VertexId {
    int64 id      =  1;
    int32 typeId  =  2;
}

message VertexRequest {
    repeated VertexId ids  =  1;
    bool     order         =  2;
    string   orderKey      =  3;
    int32    limit          =  4;
}

message VertexResponse {
    VertexId id  =  1;
    bytes pros    =  2;
}

message EdgesRequest {
    repeated int64 srcId    =    1;
    bool d                  =    2;
    repeated string label   =    3;
    bool idOnly             =    4;
}

message EdgesReponse {
    int32 size    =    1;
    int64 srcid   =    2;
    string label  =    3;
    repeated VertexId dstids = 4;
    repeated bytes pros   = 5;
}

message LimitEdgeRequest {
    EdgesRequest req   =   1;
    bool order         =   2;
    repeated string orderKey    =   3;
    int32  limit        =   4;
    bool idOnly         =   5;
}

message LimitEdgesReponse {
    VertexId source    =    1;
    VertexId destin    =    2;
    int32    typeId    =    3;
    bytes    pros      =    4;
}
