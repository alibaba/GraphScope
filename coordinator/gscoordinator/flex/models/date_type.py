from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gscoordinator.flex.models.base_model import Model
from gscoordinator.flex import util


class DateType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date32=None):  # noqa: E501
        """DateType - a model defined in OpenAPI

        :param date32: The date32 of this DateType.  # noqa: E501
        :type date32: str
        """
        self.openapi_types = {
            'date32': str
        }

        self.attribute_map = {
            'date32': 'date32'
        }

        self._date32 = date32

    @classmethod
    def from_dict(cls, dikt) -> 'DateType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DateType of this DateType.  # noqa: E501
        :rtype: DateType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date32(self) -> str:
        """Gets the date32 of this DateType.


        :return: The date32 of this DateType.
        :rtype: str
        """
        return self._date32

    @date32.setter
    def date32(self, date32: str):
        """Sets the date32 of this DateType.


        :param date32: The date32 of this DateType.
        :type date32: str
        """
        if date32 is None:
            raise ValueError("Invalid value for `date32`, must not be `None`")  # noqa: E501

        self._date32 = date32
