from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gscoordinator.flex.models.base_model import Model
from gscoordinator.flex.models.service_status_sdk_endpoints import ServiceStatusSdkEndpoints
from gscoordinator.flex import util

from gscoordinator.flex.models.service_status_sdk_endpoints import ServiceStatusSdkEndpoints  # noqa: E501

class ServiceStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, graph_id=None, status=None, sdk_endpoints=None, start_time=None):  # noqa: E501
        """ServiceStatus - a model defined in OpenAPI

        :param graph_id: The graph_id of this ServiceStatus.  # noqa: E501
        :type graph_id: str
        :param status: The status of this ServiceStatus.  # noqa: E501
        :type status: str
        :param sdk_endpoints: The sdk_endpoints of this ServiceStatus.  # noqa: E501
        :type sdk_endpoints: ServiceStatusSdkEndpoints
        :param start_time: The start_time of this ServiceStatus.  # noqa: E501
        :type start_time: str
        """
        self.openapi_types = {
            'graph_id': str,
            'status': str,
            'sdk_endpoints': ServiceStatusSdkEndpoints,
            'start_time': str
        }

        self.attribute_map = {
            'graph_id': 'graph_id',
            'status': 'status',
            'sdk_endpoints': 'sdk_endpoints',
            'start_time': 'start_time'
        }

        self._graph_id = graph_id
        self._status = status
        self._sdk_endpoints = sdk_endpoints
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceStatus of this ServiceStatus.  # noqa: E501
        :rtype: ServiceStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def graph_id(self) -> str:
        """Gets the graph_id of this ServiceStatus.


        :return: The graph_id of this ServiceStatus.
        :rtype: str
        """
        return self._graph_id

    @graph_id.setter
    def graph_id(self, graph_id: str):
        """Sets the graph_id of this ServiceStatus.


        :param graph_id: The graph_id of this ServiceStatus.
        :type graph_id: str
        """
        if graph_id is None:
            raise ValueError("Invalid value for `graph_id`, must not be `None`")  # noqa: E501

        self._graph_id = graph_id

    @property
    def status(self) -> str:
        """Gets the status of this ServiceStatus.


        :return: The status of this ServiceStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this ServiceStatus.


        :param status: The status of this ServiceStatus.
        :type status: str
        """
        allowed_values = ["Running", "Stopped"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def sdk_endpoints(self) -> ServiceStatusSdkEndpoints:
        """Gets the sdk_endpoints of this ServiceStatus.


        :return: The sdk_endpoints of this ServiceStatus.
        :rtype: ServiceStatusSdkEndpoints
        """
        return self._sdk_endpoints

    @sdk_endpoints.setter
    def sdk_endpoints(self, sdk_endpoints: ServiceStatusSdkEndpoints):
        """Sets the sdk_endpoints of this ServiceStatus.


        :param sdk_endpoints: The sdk_endpoints of this ServiceStatus.
        :type sdk_endpoints: ServiceStatusSdkEndpoints
        """

        self._sdk_endpoints = sdk_endpoints

    @property
    def start_time(self) -> str:
        """Gets the start_time of this ServiceStatus.


        :return: The start_time of this ServiceStatus.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time: str):
        """Sets the start_time of this ServiceStatus.


        :param start_time: The start_time of this ServiceStatus.
        :type start_time: str
        """

        self._start_time = start_time
