from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gscoordinator.flex.models.base_model import Model
from gscoordinator.flex import util


class CreateGraphResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, graph_id=None):  # noqa: E501
        """CreateGraphResponse - a model defined in OpenAPI

        :param graph_id: The graph_id of this CreateGraphResponse.  # noqa: E501
        :type graph_id: str
        """
        self.openapi_types = {
            'graph_id': str
        }

        self.attribute_map = {
            'graph_id': 'graph_id'
        }

        self._graph_id = graph_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateGraphResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateGraphResponse of this CreateGraphResponse.  # noqa: E501
        :rtype: CreateGraphResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def graph_id(self) -> str:
        """Gets the graph_id of this CreateGraphResponse.


        :return: The graph_id of this CreateGraphResponse.
        :rtype: str
        """
        return self._graph_id

    @graph_id.setter
    def graph_id(self, graph_id: str):
        """Sets the graph_id of this CreateGraphResponse.


        :param graph_id: The graph_id of this CreateGraphResponse.
        :type graph_id: str
        """
        if graph_id is None:
            raise ValueError("Invalid value for `graph_id`, must not be `None`")  # noqa: E501

        self._graph_id = graph_id
