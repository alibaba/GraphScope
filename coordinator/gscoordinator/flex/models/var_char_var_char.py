from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gscoordinator.flex.models.base_model import Model
from gscoordinator.flex import util


class VarCharVarChar(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_length=None):  # noqa: E501
        """VarCharVarChar - a model defined in OpenAPI

        :param max_length: The max_length of this VarCharVarChar.  # noqa: E501
        :type max_length: int
        """
        self.openapi_types = {
            'max_length': int
        }

        self.attribute_map = {
            'max_length': 'max_length'
        }

        self._max_length = max_length

    @classmethod
    def from_dict(cls, dikt) -> 'VarCharVarChar':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VarChar_var_char of this VarCharVarChar.  # noqa: E501
        :rtype: VarCharVarChar
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_length(self) -> int:
        """Gets the max_length of this VarCharVarChar.


        :return: The max_length of this VarCharVarChar.
        :rtype: int
        """
        return self._max_length

    @max_length.setter
    def max_length(self, max_length: int):
        """Sets the max_length of this VarCharVarChar.


        :param max_length: The max_length of this VarCharVarChar.
        :type max_length: int
        """
        if max_length is None:
            raise ValueError("Invalid value for `max_length`, must not be `None`")  # noqa: E501

        self._max_length = max_length
