from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gscoordinator.flex.models.base_model import Model
from gscoordinator.flex import util


class ResourceUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host=None, timestamp=None, usage=None):  # noqa: E501
        """ResourceUsage - a model defined in OpenAPI

        :param host: The host of this ResourceUsage.  # noqa: E501
        :type host: str
        :param timestamp: The timestamp of this ResourceUsage.  # noqa: E501
        :type timestamp: str
        :param usage: The usage of this ResourceUsage.  # noqa: E501
        :type usage: str
        """
        self.openapi_types = {
            'host': str,
            'timestamp': str,
            'usage': str
        }

        self.attribute_map = {
            'host': 'host',
            'timestamp': 'timestamp',
            'usage': 'usage'
        }

        self._host = host
        self._timestamp = timestamp
        self._usage = usage

    @classmethod
    def from_dict(cls, dikt) -> 'ResourceUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResourceUsage of this ResourceUsage.  # noqa: E501
        :rtype: ResourceUsage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self) -> str:
        """Gets the host of this ResourceUsage.


        :return: The host of this ResourceUsage.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host: str):
        """Sets the host of this ResourceUsage.


        :param host: The host of this ResourceUsage.
        :type host: str
        """
        if host is None:
            raise ValueError("Invalid value for `host`, must not be `None`")  # noqa: E501

        self._host = host

    @property
    def timestamp(self) -> str:
        """Gets the timestamp of this ResourceUsage.


        :return: The timestamp of this ResourceUsage.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: str):
        """Sets the timestamp of this ResourceUsage.


        :param timestamp: The timestamp of this ResourceUsage.
        :type timestamp: str
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

        self._timestamp = timestamp

    @property
    def usage(self) -> str:
        """Gets the usage of this ResourceUsage.


        :return: The usage of this ResourceUsage.
        :rtype: str
        """
        return self._usage

    @usage.setter
    def usage(self, usage: str):
        """Sets the usage of this ResourceUsage.


        :param usage: The usage of this ResourceUsage.
        :type usage: str
        """
        if usage is None:
            raise ValueError("Invalid value for `usage`, must not be `None`")  # noqa: E501

        self._usage = usage
