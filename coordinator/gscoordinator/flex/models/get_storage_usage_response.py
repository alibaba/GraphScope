from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gscoordinator.flex.models.base_model import Model
from gscoordinator.flex import util


class GetStorageUsageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_usage=None):  # noqa: E501
        """GetStorageUsageResponse - a model defined in OpenAPI

        :param storage_usage: The storage_usage of this GetStorageUsageResponse.  # noqa: E501
        :type storage_usage: Dict[str, float]
        """
        self.openapi_types = {
            'storage_usage': Dict[str, float]
        }

        self.attribute_map = {
            'storage_usage': 'storage_usage'
        }

        self._storage_usage = storage_usage

    @classmethod
    def from_dict(cls, dikt) -> 'GetStorageUsageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetStorageUsageResponse of this GetStorageUsageResponse.  # noqa: E501
        :rtype: GetStorageUsageResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_usage(self) -> Dict[str, float]:
        """Gets the storage_usage of this GetStorageUsageResponse.


        :return: The storage_usage of this GetStorageUsageResponse.
        :rtype: Dict[str, float]
        """
        return self._storage_usage

    @storage_usage.setter
    def storage_usage(self, storage_usage: Dict[str, float]):
        """Sets the storage_usage of this GetStorageUsageResponse.


        :param storage_usage: The storage_usage of this GetStorageUsageResponse.
        :type storage_usage: Dict[str, float]
        """
        if storage_usage is None:
            raise ValueError("Invalid value for `storage_usage`, must not be `None`")  # noqa: E501

        self._storage_usage = storage_usage
