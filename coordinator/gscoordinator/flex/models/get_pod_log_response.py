from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gscoordinator.flex.models.base_model import Model
from gscoordinator.flex import util


class GetPodLogResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log=None):  # noqa: E501
        """GetPodLogResponse - a model defined in OpenAPI

        :param log: The log of this GetPodLogResponse.  # noqa: E501
        :type log: Dict[str, object]
        """
        self.openapi_types = {
            'log': Dict[str, object]
        }

        self.attribute_map = {
            'log': 'log'
        }

        self._log = log

    @classmethod
    def from_dict(cls, dikt) -> 'GetPodLogResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetPodLogResponse of this GetPodLogResponse.  # noqa: E501
        :rtype: GetPodLogResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log(self) -> Dict[str, object]:
        """Gets the log of this GetPodLogResponse.


        :return: The log of this GetPodLogResponse.
        :rtype: Dict[str, object]
        """
        return self._log

    @log.setter
    def log(self, log: Dict[str, object]):
        """Sets the log of this GetPodLogResponse.


        :param log: The log of this GetPodLogResponse.
        :type log: Dict[str, object]
        """
        if log is None:
            raise ValueError("Invalid value for `log`, must not be `None`")  # noqa: E501

        self._log = log
