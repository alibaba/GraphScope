from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gscoordinator.flex.models.base_model import Model
from gscoordinator.flex import util


class FixedCharChar(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed_length=None):  # noqa: E501
        """FixedCharChar - a model defined in OpenAPI

        :param fixed_length: The fixed_length of this FixedCharChar.  # noqa: E501
        :type fixed_length: int
        """
        self.openapi_types = {
            'fixed_length': int
        }

        self.attribute_map = {
            'fixed_length': 'fixed_length'
        }

        self._fixed_length = fixed_length

    @classmethod
    def from_dict(cls, dikt) -> 'FixedCharChar':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FixedChar_char of this FixedCharChar.  # noqa: E501
        :rtype: FixedCharChar
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed_length(self) -> int:
        """Gets the fixed_length of this FixedCharChar.


        :return: The fixed_length of this FixedCharChar.
        :rtype: int
        """
        return self._fixed_length

    @fixed_length.setter
    def fixed_length(self, fixed_length: int):
        """Sets the fixed_length of this FixedCharChar.


        :param fixed_length: The fixed_length of this FixedCharChar.
        :type fixed_length: int
        """
        if fixed_length is None:
            raise ValueError("Invalid value for `fixed_length`, must not be `None`")  # noqa: E501

        self._fixed_length = fixed_length
