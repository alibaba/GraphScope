/*
 * GraphScope Interactive API v0.0.3
 * This is the definition of GraphScope Interactive API, including   - AdminService API   - Vertex/Edge API   - QueryService   AdminService API (with tag AdminService) defines the API for GraphManagement, ProcedureManagement and Service Management.  Vertex/Edge API (with tag GraphService) defines the API for Vertex/Edge management, including creation/updating/delete/retrive.  QueryService API (with tag QueryService) defines the API for procedure_call, Ahodc query.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: graphscope@alibaba-inc.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.alibaba.graphscope.JSON;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * Used for storage optimization
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams {
    /**
     * Gets or Sets edgeStorageStrategy
     */
    @JsonAdapter(EdgeStorageStrategyEnum.Adapter.class)
    public enum EdgeStorageStrategyEnum {
        ONLY_IN("ONLY_IN"),

        ONLY_OUT("ONLY_OUT"),

        BOTH_OUT_IN("BOTH_OUT_IN");

        private String value;

        EdgeStorageStrategyEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static EdgeStorageStrategyEnum fromValue(String value) {
            for (EdgeStorageStrategyEnum b : EdgeStorageStrategyEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        public static class Adapter extends TypeAdapter<EdgeStorageStrategyEnum> {
            @Override
            public void write(
                    final JsonWriter jsonWriter, final EdgeStorageStrategyEnum enumeration)
                    throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public EdgeStorageStrategyEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return EdgeStorageStrategyEnum.fromValue(value);
            }
        }

        public static void validateJsonElement(JsonElement jsonElement) throws IOException {
            String value = jsonElement.getAsString();
            EdgeStorageStrategyEnum.fromValue(value);
        }
    }

    public static final String SERIALIZED_NAME_EDGE_STORAGE_STRATEGY = "edge_storage_strategy";

    @SerializedName(SERIALIZED_NAME_EDGE_STORAGE_STRATEGY)
    private EdgeStorageStrategyEnum edgeStorageStrategy;

    public static final String SERIALIZED_NAME_SORT_ON_COMPACTION = "sort_on_compaction";

    @SerializedName(SERIALIZED_NAME_SORT_ON_COMPACTION)
    private Boolean sortOnCompaction;

    public BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams() {}

    public BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams edgeStorageStrategy(
            EdgeStorageStrategyEnum edgeStorageStrategy) {
        this.edgeStorageStrategy = edgeStorageStrategy;
        return this;
    }

    /**
     * Get edgeStorageStrategy
     * @return edgeStorageStrategy
     **/
    @javax.annotation.Nullable
    public EdgeStorageStrategyEnum getEdgeStorageStrategy() {
        return edgeStorageStrategy;
    }

    public void setEdgeStorageStrategy(EdgeStorageStrategyEnum edgeStorageStrategy) {
        this.edgeStorageStrategy = edgeStorageStrategy;
    }

    public BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams sortOnCompaction(
            Boolean sortOnCompaction) {
        this.sortOnCompaction = sortOnCompaction;
        return this;
    }

    /**
     * Get sortOnCompaction
     * @return sortOnCompaction
     **/
    @javax.annotation.Nullable
    public Boolean getSortOnCompaction() {
        return sortOnCompaction;
    }

    public void setSortOnCompaction(Boolean sortOnCompaction) {
        this.sortOnCompaction = sortOnCompaction;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams
                baseEdgeTypeVertexTypePairRelationsInnerXCsrParams =
                        (BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams) o;
        return Objects.equals(
                        this.edgeStorageStrategy,
                        baseEdgeTypeVertexTypePairRelationsInnerXCsrParams.edgeStorageStrategy)
                && Objects.equals(
                        this.sortOnCompaction,
                        baseEdgeTypeVertexTypePairRelationsInnerXCsrParams.sortOnCompaction);
    }

    @Override
    public int hashCode() {
        return Objects.hash(edgeStorageStrategy, sortOnCompaction);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams {\n");
        sb.append("    edgeStorageStrategy: ")
                .append(toIndentedString(edgeStorageStrategy))
                .append("\n");
        sb.append("    sortOnCompaction: ").append(toIndentedString(sortOnCompaction)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("edge_storage_strategy");
        openapiFields.add("sort_on_compaction");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in"
                                    + " BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams is not"
                                    + " found in the empty JSON string",
                                BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams
                                        .openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.openapiFields.contains(
                    entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                        + " `BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams`"
                                        + " properties. JSON: %s",
                                entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("edge_storage_strategy") != null
                        && !jsonObj.get("edge_storage_strategy").isJsonNull())
                && !jsonObj.get("edge_storage_strategy").isJsonPrimitive()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `edge_storage_strategy` to be a primitive type in"
                                    + " the JSON string but got `%s`",
                            jsonObj.get("edge_storage_strategy").toString()));
        }
        // validate the optional field `edge_storage_strategy`
        if (jsonObj.get("edge_storage_strategy") != null
                && !jsonObj.get("edge_storage_strategy").isJsonNull()) {
            EdgeStorageStrategyEnum.validateJsonElement(jsonObj.get("edge_storage_strategy"));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.class.isAssignableFrom(
                    type.getRawType())) {
                return null; // this class only serializes
                // 'BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams' and its
                // subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams> thisAdapter =
                    gson.getDelegateAdapter(
                            this,
                            TypeToken.get(
                                    BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams>() {
                        @Override
                        public void write(
                                JsonWriter out,
                                BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams read(
                                JsonReader in) throws IOException {
                            JsonElement jsonElement = elementAdapter.read(in);
                            validateJsonElement(jsonElement);
                            return thisAdapter.fromJsonTree(jsonElement);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams
     * @throws IOException if the JSON string is invalid with respect to BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams
     */
    public static BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams fromJson(String jsonString)
            throws IOException {
        return JSON.getGson()
                .fromJson(jsonString, BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams.class);
    }

    /**
     * Convert an instance of BaseEdgeTypeVertexTypePairRelationsInnerXCsrParams to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
