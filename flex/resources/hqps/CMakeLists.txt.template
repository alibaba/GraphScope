###############################################################################
###########      Generated by GraphScope Flex          ########################
###############################################################################
cmake_minimum_required(VERSION 3.5)

include(FindPackageHandleStandardArgs)

project(HighQpsCodeGen
        VERSION 1.0
        LANGUAGES CXX)

SET(FLEX_LABEL_TYPE "uint8_t" CACHE STRING "The label type of the graph, valid values: uint16_t, uint8_t")
# check label_type in {uint8, uint16}
if(NOT FLEX_LABEL_TYPE STREQUAL "uint8_t" AND NOT FLEX_LABEL_TYPE STREQUAL "uint16_t")
    message(FATAL_ERROR "FLEX_LABEL_TYPE must be uint8 or uint16, but got ${FLEX_LABEL_TYPE}")
endif()
add_compile_definitions(FLEX_LABEL_TYPE=${FLEX_LABEL_TYPE})

# the query name, 
if (QUERY_NAME)
        message("Query name ${QUERY_NAME}")
else()
        message(FATAL_ERROR "QueryName not set")
endif()

# the path where we can find graphscope headers
if (FLEX_INCLUDE_PREFIX)
        message("flex header install dir ${FLEX_INCLUDE_PREFIX}")
else()
        message(FATAL_ERROR "FLEX_INCLUDE_PREFIX not set")
endif()

add_definitions(-DRAPIDJSON_HAS_CXX11=1)
add_definitions(-DRAPIDJSON_HAS_STDSTRING=1)
add_definitions(-DRAPIDJSON_HAS_CXX11_RVALUE_REFS=1)
add_definitions(-DRAPIDJSON_HAS_CXX11_RANGE_FOR=1)

# try to find mpi, if not found warning
find_package(MPI)
if (MPI_FOUND)
    include_directories(SYSTEM ${MPI_CXX_INCLUDE_PATH})
else ()
    message(WARNING "mpi not found, build without mpi")
endif()

include_directories(${CMAKE_CURRENT_SOURCE_DIR})

# Check if /opt/graphscope exists and include directory. Since grape headers may installed here.
if(EXISTS "/opt/graphscope/include")
    include_directories("/opt/graphscope/include")
endif()

if (EXISTS "/opt/flex/include")
    include_directories("/opt/flex/include")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp -Wl,-rpath,$ORIGIN -O2 -flto -Werror=unused-result -fPIC -no-pie")

add_library(${QUERY_NAME} SHARED ${PROJECT_SOURCE_DIR}/${QUERY_NAME}.cc)
target_include_directories(${QUERY_NAME} PUBLIC ${FLEX_INCLUDE_PREFIX} ${FLEX_INCLUDE_PREFIX}/flex/build/engines/hqps_db/ ${FLEX_INCLUDE_PREFIX}/flex/build/utils/)
target_link_libraries(${QUERY_NAME} PUBLIC)