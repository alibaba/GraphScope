openapi: 3.0.3
info:
  contact:
    email: graphscope@alibaba-inc.com
    name: GraphScope
  description: |-
    This is a specification for GraphScope FLEX HTTP service based on the OpenAPI 3.0 specification. You can find out more details about
    specification at [doc](https://swagger.io/specification/v3/).

    Some useful links:
    - [GraphScope Repository](https://github.com/alibaba/GraphScope)
    - [The Source API definition for GraphScope Interactive](https://github.com/GraphScope/portal/tree/main/httpservice)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: GraphScope FLEX HTTP SERVICE API
  version: 0.9.1
externalDocs:
  description: Find out More about GraphScope
  url: http://graphscope.io
servers:
- url: /
paths:
  /api/v1/alert/message:
    get:
      operationId: list_alert_messages
      parameters:
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - solved
          - unsolved
          - dealing
          type: string
        style: form
      - explode: true
        in: query
        name: severity
        required: false
        schema:
          enum:
          - warning
          - emergency
          type: string
        style: form
      - description: format with "2023-02-21-11-56-30"
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          type: string
        style: form
      - description: format with "2023-02-21-11-56-30"
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertMessage'
                type: array
          description: Successful operation
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
    put:
      description: Update alert messages in batch
      operationId: update_alert_messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_alert_messages_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
        "404":
          description: Alert message not found
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
  /api/v1/alert/receiver:
    get:
      operationId: list_receivers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertReceiver'
                type: array
          description: Successful operation
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
    post:
      operationId: register_receiver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertReceiver'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
  /api/v1/alert/receiver/{receiver_id}:
    delete:
      operationId: delete_receiver_by_id
      parameters:
      - explode: false
        in: path
        name: receiver_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
        "404":
          description: Reveiver not found
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
    put:
      operationId: update_receiver_by_id
      parameters:
      - explode: false
        in: path
        name: receiver_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertReceiver'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
        "404":
          description: Reveiver not found
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
  /api/v1/alert/rule:
    get:
      operationId: list_alert_rules
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertRule'
                type: array
          description: Successful operation
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
  /api/v1/alert/rule/{rule_name}:
    delete:
      operationId: delete_alert_rule_by_name
      parameters:
      - explode: false
        in: path
        name: rule_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
    put:
      operationId: update_alert_rule_by_name
      parameters:
      - explode: false
        in: path
        name: rule_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
      tags:
      - alert
      x-openapi-router-controller: gs_flex_coordinator.controllers.alert_controller
  /api/v1/connection:
    delete:
      description: Close the connection with coordinator
      operationId: close
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Close connection successfully
      tags:
      - connection
      x-openapi-router-controller: gs_flex_coordinator.controllers.connection_controller
    post:
      description: Connect to coordinator service
      operationId: connect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStatus'
          description: Connect coordinator service successfully
      tags:
      - connection
      x-openapi-router-controller: gs_flex_coordinator.controllers.connection_controller
  /api/v1/deployment/info:
    get:
      description: Get deployment's meta info
      operationId: get_deployment_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentInfo'
          description: successful operation
      tags:
      - deployment
      x-openapi-router-controller: gs_flex_coordinator.controllers.deployment_controller
  /api/v1/deployment/log:
    get:
      operationId: fetch_log
      parameters:
      - explode: true
        in: query
        name: component
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pod_name
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: container_name
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: since_seconds
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeploymentStatus'
                type: array
          description: successful operation
      tags:
      - deployment
      x-openapi-router-controller: gs_flex_coordinator.controllers.deployment_controller
  /api/v1/deployment/status:
    get:
      description: Get deployment's status (k8s only)
      operationId: get_deployment_status
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeploymentStatus'
                type: array
          description: successful operation
      tags:
      - deployment
      x-openapi-router-controller: gs_flex_coordinator.controllers.deployment_controller
  /api/v1/graph:
    get:
      description: List all graphs
      operationId: list_graphs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Graph'
                type: array
          description: Successful operation
      tags:
      - graph
      x-openapi-router-controller: gs_flex_coordinator.controllers.graph_controller
    post:
      description: Create a new graph
      operationId: create_graph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Graph'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - graph
      x-openapi-router-controller: gs_flex_coordinator.controllers.graph_controller
  /api/v1/graph/{graph_name}:
    delete:
      description: Delete a graph by name
      operationId: delete_graph
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
      tags:
      - graph
      x-openapi-router-controller: gs_flex_coordinator.controllers.graph_controller
  /api/v1/graph/{graph_name}/procedure:
    get:
      description: List stored procedures on a certain graph
      operationId: list_procedures_by_graph
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Procedure'
                type: array
          description: Successful operation
      tags:
      - procedure
      x-openapi-router-controller: gs_flex_coordinator.controllers.procedure_controller
    post:
      description: Create a new stored procedure on a certain graph
      operationId: create_procedure
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Procedure'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - procedure
      x-openapi-router-controller: gs_flex_coordinator.controllers.procedure_controller
  /api/v1/graph/{graph_name}/procedure/{procedure_name}:
    delete:
      description: Delete a stored procedure on a certain graph
      operationId: delete_procedure
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: procedure_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
      tags:
      - procedure
      x-openapi-router-controller: gs_flex_coordinator.controllers.procedure_controller
    put:
      description: Update srored procedure on a certain graph
      operationId: update_procedure
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: procedure_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Procedure'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
      tags:
      - procedure
      x-openapi-router-controller: gs_flex_coordinator.controllers.procedure_controller
  /api/v1/graph/{graph_name}/schema:
    get:
      description: Get graph schema by name
      operationId: get_schema
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Successful operation
      tags:
      - graph
      x-openapi-router-controller: gs_flex_coordinator.controllers.graph_controller
  /api/v1/graph/{graph_name}/schema/edge_edge/{type_name}:
    delete:
      description: Delete a edge type by name
      operationId: delete_edge_type
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: type_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: source_vertex_type
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: destination_vertex_type
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
      tags:
      - graph
      x-openapi-router-controller: gs_flex_coordinator.controllers.graph_controller
  /api/v1/graph/{graph_name}/schema/edge_type:
    post:
      description: Create a edge type
      operationId: create_edge_type
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeType'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - graph
      x-openapi-router-controller: gs_flex_coordinator.controllers.graph_controller
  /api/v1/graph/{graph_name}/schema/vertex_type:
    post:
      description: Create a vertex type
      operationId: create_vertex_type
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VertexType'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - graph
      x-openapi-router-controller: gs_flex_coordinator.controllers.graph_controller
  /api/v1/graph/{graph_name}/schema/vertex_type/{type_name}:
    delete:
      description: Delete a vertex type by name
      operationId: delete_vertex_type
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: type_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Successful operation
      tags:
      - graph
      x-openapi-router-controller: gs_flex_coordinator.controllers.graph_controller
  /api/v1/groot/graph:
    get:
      description: list groot graph
      operationId: list_groot_graph
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GrootGraph'
                type: array
          description: Successful operation
      tags:
      - legacy
      x-openapi-router-controller: gs_flex_coordinator.controllers.legacy_controller
  /api/v1/groot/graph/{graph_name}/schema:
    get:
      description: Get graph schema by name
      operationId: get_groot_schema
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrootSchema'
          description: Successful operation
      tags:
      - legacy
      x-openapi-router-controller: gs_flex_coordinator.controllers.legacy_controller
    post:
      description: Import schema to groot graph
      operationId: import_schema
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrootSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - legacy
      x-openapi-router-controller: gs_flex_coordinator.controllers.legacy_controller
  /api/v1/interactive/graph/{graph_name}/dataloading:
    post:
      operationId: data_import
      parameters:
      - explode: false
        in: path
        name: graph_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaMapping'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - legacy
      x-openapi-router-controller: gs_flex_coordinator.controllers.legacy_controller
  /api/v1/node/status:
    get:
      description: "Get node status (cpu/memory/disk, local only)"
      operationId: get_node_status
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NodeStatus'
                type: array
          description: successful operation
      tags:
      - deployment
      x-openapi-router-controller: gs_flex_coordinator.controllers.deployment_controller
  /api/v1/procedure:
    get:
      description: List all the stored procedures
      operationId: list_procedures
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Procedure'
                type: array
          description: Successful operation
      tags:
      - procedure
      x-openapi-router-controller: gs_flex_coordinator.controllers.procedure_controller
  /api/v1/service/restart:
    post:
      description: Restart current service
      operationId: restart_service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - service
      x-openapi-router-controller: gs_flex_coordinator.controllers.service_controller
  /api/v1/service/start:
    post:
      description: Start service
      operationId: start_service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/start_service_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - service
      x-openapi-router-controller: gs_flex_coordinator.controllers.service_controller
  /api/v1/service/status:
    get:
      description: Get service status
      operationId: get_service_status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceStatus'
          description: successful operation
      tags:
      - service
      x-openapi-router-controller: gs_flex_coordinator.controllers.service_controller
  /api/v1/service/stop:
    post:
      description: Stop current service
      operationId: stop_service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      tags:
      - service
      x-openapi-router-controller: gs_flex_coordinator.controllers.service_controller
components:
  schemas:
    ApiResponse:
      type: string
    Connection:
      example:
        coordinator_endpoint: coordinator_endpoint
      properties:
        coordinator_endpoint:
          title: coordinator_endpoint
          type: string
      title: Connection
      type: object
      x-body-name: connection
    ConnectionStatus:
      example:
        solution: INTERACTIVE
        status: CONNECTED
      properties:
        status:
          enum:
          - CONNECTED
          title: status
          type: string
        solution:
          enum:
          - INTERACTIVE
          - GRAPHSCOPE_INSIGHT
          title: solution
          type: string
      title: ConnectionStatus
      type: object
      x-body-name: connection_status
    Graph:
      example:
        schema:
          vertex_types:
          - type_name: type_name
            primary_keys:
            - primary_keys
            - primary_keys
            type_id: 0
            properties:
            - property_type:
                primitive_type: DT_DOUBLE
              property_id: 6
              property_name: property_name
            - property_type:
                primitive_type: DT_DOUBLE
              property_id: 6
              property_name: property_name
          - type_name: type_name
            primary_keys:
            - primary_keys
            - primary_keys
            type_id: 0
            properties:
            - property_type:
                primitive_type: DT_DOUBLE
              property_id: 6
              property_name: property_name
            - property_type:
                primitive_type: DT_DOUBLE
              property_id: 6
              property_name: property_name
          edge_types:
          - type_name: type_name
            type_id: 1
            vertex_type_pair_relations:
            - source_vertex: source_vertex
              destination_vertex: destination_vertex
              x_csr_params:
                edge_storage_strategy: ONLY_IN
              relation: MANY_TO_MANY
            - source_vertex: source_vertex
              destination_vertex: destination_vertex
              x_csr_params:
                edge_storage_strategy: ONLY_IN
              relation: MANY_TO_MANY
            properties:
            - property_type:
                primitive_type: DT_DOUBLE
              property_id: 6
              property_name: property_name
            - property_type:
                primitive_type: DT_DOUBLE
              property_id: 6
              property_name: property_name
          - type_name: type_name
            type_id: 1
            vertex_type_pair_relations:
            - source_vertex: source_vertex
              destination_vertex: destination_vertex
              x_csr_params:
                edge_storage_strategy: ONLY_IN
              relation: MANY_TO_MANY
            - source_vertex: source_vertex
              destination_vertex: destination_vertex
              x_csr_params:
                edge_storage_strategy: ONLY_IN
              relation: MANY_TO_MANY
            properties:
            - property_type:
                primitive_type: DT_DOUBLE
              property_id: 6
              property_name: property_name
            - property_type:
                primitive_type: DT_DOUBLE
              property_id: 6
              property_name: property_name
        stored_procedures:
          directory: plugins
        name: name
        store_type: mutable_csr
      properties:
        name:
          title: name
          type: string
        store_type:
          enum:
          - mutable_csr
          title: store_type
          type: string
        stored_procedures:
          $ref: '#/components/schemas/Graph_stored_procedures'
        schema:
          $ref: '#/components/schemas/Schema'
      title: Graph
      type: object
      x-body-name: graph
    Schema:
      example:
        vertex_types:
        - type_name: type_name
          primary_keys:
          - primary_keys
          - primary_keys
          type_id: 0
          properties:
          - property_type:
              primitive_type: DT_DOUBLE
            property_id: 6
            property_name: property_name
          - property_type:
              primitive_type: DT_DOUBLE
            property_id: 6
            property_name: property_name
        - type_name: type_name
          primary_keys:
          - primary_keys
          - primary_keys
          type_id: 0
          properties:
          - property_type:
              primitive_type: DT_DOUBLE
            property_id: 6
            property_name: property_name
          - property_type:
              primitive_type: DT_DOUBLE
            property_id: 6
            property_name: property_name
        edge_types:
        - type_name: type_name
          type_id: 1
          vertex_type_pair_relations:
          - source_vertex: source_vertex
            destination_vertex: destination_vertex
            x_csr_params:
              edge_storage_strategy: ONLY_IN
            relation: MANY_TO_MANY
          - source_vertex: source_vertex
            destination_vertex: destination_vertex
            x_csr_params:
              edge_storage_strategy: ONLY_IN
            relation: MANY_TO_MANY
          properties:
          - property_type:
              primitive_type: DT_DOUBLE
            property_id: 6
            property_name: property_name
          - property_type:
              primitive_type: DT_DOUBLE
            property_id: 6
            property_name: property_name
        - type_name: type_name
          type_id: 1
          vertex_type_pair_relations:
          - source_vertex: source_vertex
            destination_vertex: destination_vertex
            x_csr_params:
              edge_storage_strategy: ONLY_IN
            relation: MANY_TO_MANY
          - source_vertex: source_vertex
            destination_vertex: destination_vertex
            x_csr_params:
              edge_storage_strategy: ONLY_IN
            relation: MANY_TO_MANY
          properties:
          - property_type:
              primitive_type: DT_DOUBLE
            property_id: 6
            property_name: property_name
          - property_type:
              primitive_type: DT_DOUBLE
            property_id: 6
            property_name: property_name
      properties:
        vertex_types:
          items:
            $ref: '#/components/schemas/VertexType'
          title: vertex_types
          type: array
        edge_types:
          items:
            $ref: '#/components/schemas/EdgeType'
          title: edge_types
          type: array
      title: Schema
      type: object
      x-body-name: schema
    VertexType:
      example:
        type_name: type_name
        primary_keys:
        - primary_keys
        - primary_keys
        type_id: 0
        properties:
        - property_type:
            primitive_type: DT_DOUBLE
          property_id: 6
          property_name: property_name
        - property_type:
            primitive_type: DT_DOUBLE
          property_id: 6
          property_name: property_name
      properties:
        type_id:
          format: int32
          title: type_id
          type: integer
        type_name:
          title: type_name
          type: string
        properties:
          items:
            $ref: '#/components/schemas/Property'
          title: properties
          type: array
        primary_keys:
          items:
            type: string
          title: primary_keys
          type: array
      title: VertexType
      type: object
      x-body-name: vertex_type
    EdgeType:
      example:
        type_name: type_name
        type_id: 1
        vertex_type_pair_relations:
        - source_vertex: source_vertex
          destination_vertex: destination_vertex
          x_csr_params:
            edge_storage_strategy: ONLY_IN
          relation: MANY_TO_MANY
        - source_vertex: source_vertex
          destination_vertex: destination_vertex
          x_csr_params:
            edge_storage_strategy: ONLY_IN
          relation: MANY_TO_MANY
        properties:
        - property_type:
            primitive_type: DT_DOUBLE
          property_id: 6
          property_name: property_name
        - property_type:
            primitive_type: DT_DOUBLE
          property_id: 6
          property_name: property_name
      properties:
        type_id:
          format: int32
          title: type_id
          type: integer
        type_name:
          title: type_name
          type: string
        vertex_type_pair_relations:
          items:
            $ref: '#/components/schemas/EdgeType_vertex_type_pair_relations_inner'
          title: vertex_type_pair_relations
          type: array
        properties:
          items:
            $ref: '#/components/schemas/Property'
          title: properties
          type: array
      title: EdgeType
      type: object
      x-body-name: edge_type
    Property:
      example:
        property_type:
          primitive_type: DT_DOUBLE
        property_id: 6
        property_name: property_name
      properties:
        property_id:
          format: int32
          title: property_id
          type: integer
        property_name:
          title: property_name
          type: string
        property_type:
          $ref: '#/components/schemas/Property_property_type'
      title: Property
      type: object
      x-body-name: property
    Procedure:
      example:
        runnable: true
        bound_graph: bound_graph
        enable: true
        query: query
        name: name
        description: description
        returns:
        - name: name
          type: type
        - name: name
          type: type
        type: cpp
        params:
        - name: name
          type: type
        - name: name
          type: type
      properties:
        name:
          title: name
          type: string
        bound_graph:
          title: bound_graph
          type: string
        description:
          title: description
          type: string
        type:
          enum:
          - cpp
          - cypher
          title: type
          type: string
        query:
          title: query
          type: string
        enable:
          title: enable
          type: boolean
        runnable:
          title: runnable
          type: boolean
        params:
          items:
            $ref: '#/components/schemas/Procedure_params_inner'
          title: params
          type: array
        returns:
          items:
            $ref: '#/components/schemas/Procedure_params_inner'
          title: returns
          type: array
      title: Procedure
      type: object
      x-body-name: procedure
    DeploymentInfo:
      example:
        name: name
        cluster_type: HOSTS
        version: version
      properties:
        name:
          title: name
          type: string
        cluster_type:
          enum:
          - HOSTS
          - KUBERNETES
          title: cluster_type
          type: string
        version:
          title: version
          type: string
      title: DeploymentInfo
      type: object
      x-body-name: deployment_info
    DeploymentStatus:
      description: K8s only
      example:
        container:
        - container
        - container
        creation_time: creation_time
        image:
        - image
        - image
        node: node
        restart_count: 0
        memory_value: 1
        cpu_value: 6
        name: name
        labels:
        - labels
        - labels
        status: status
        timestamp: timestamp
      properties:
        name:
          title: name
          type: string
        container:
          items:
            type: string
          title: container
          type: array
        image:
          items:
            type: string
          title: image
          type: array
        labels:
          items:
            type: string
          title: labels
          type: array
        node:
          title: node
          type: string
        status:
          title: status
          type: string
        restart_count:
          format: int32
          title: restart_count
          type: integer
        cpu_value:
          description: cpu value in millicore
          format: int32
          title: cpu_value
          type: integer
        memory_value:
          description: memory value in megabytes
          format: int32
          title: memory_value
          type: integer
        timestamp:
          title: timestamp
          type: string
        creation_time:
          title: creation_time
          type: string
      title: DeploymentStatus
      type: object
      x-body-name: deployment_status
    NodeStatus:
      example:
        node: node
        memory_usage: 6.027456183070403
        disk_usage: 1.4658129805029452
        cpu_usage: 0.8008281904610115
      properties:
        node:
          title: node
          type: string
        cpu_usage:
          format: double
          title: cpu_usage
          type: number
        memory_usage:
          format: double
          title: memory_usage
          type: number
        disk_usage:
          format: double
          title: disk_usage
          type: number
      title: NodeStatus
      type: object
      x-body-name: node_status
    ServiceStatus:
      example:
        graph_name: graph_name
        sdk_endpoints:
          gremlin: gremlin
          cypher: cypher
          hqps: hqps
          grpc: grpc
        status: status
      properties:
        status:
          title: status
          type: string
        graph_name:
          description: which graph is serving now
          title: graph_name
          type: string
        sdk_endpoints:
          $ref: '#/components/schemas/ServiceStatus_sdk_endpoints'
      title: ServiceStatus
      type: object
      x-body-name: service_status
    AlertRule:
      example:
        severity: warning
        conditions_desription: conditions_desription
        enable: true
        name: name
        metric_type: node
        frequency: 0
      properties:
        name:
          title: name
          type: string
        severity:
          enum:
          - warning
          - emergency
          title: severity
          type: string
        metric_type:
          enum:
          - node
          - service
          title: metric_type
          type: string
        conditions_desription:
          title: conditions_desription
          type: string
        frequency:
          description: (mins)
          title: frequency
          type: integer
        enable:
          title: enable
          type: boolean
      title: AlertRule
      type: object
      x-body-name: alert_rule
    AlertMessage:
      example:
        severity: warning
        trigger_time: trigger_time
        metric_type: node
        message_id: message_id
        message: message
        alert_name: alert_name
        target:
        - target
        - target
        status: unsolved
      properties:
        message_id:
          description: Generated in server side
          title: message_id
          type: string
        alert_name:
          title: alert_name
          type: string
        severity:
          enum:
          - warning
          - emergency
          title: severity
          type: string
        metric_type:
          enum:
          - node
          - service
          title: metric_type
          type: string
        target:
          items:
            type: string
          title: target
          type: array
        trigger_time:
          title: trigger_time
          type: string
        status:
          enum:
          - unsolved
          - solved
          - dealing
          title: status
          type: string
        message:
          title: message
          type: string
      title: AlertMessage
      type: object
      x-body-name: alert_message
    AlertReceiver:
      example:
        webhook_url: webhook_url
        is_at_all: true
        receiver_id: receiver_id
        enable: true
        at_user_ids:
        - at_user_ids
        - at_user_ids
        type: webhook
        message: message
      properties:
        type:
          enum:
          - webhook
          title: type
          type: string
        receiver_id:
          description: Generated in server side
          title: receiver_id
          type: string
        webhook_url:
          title: webhook_url
          type: string
        at_user_ids:
          items:
            type: string
          title: at_user_ids
          type: array
        is_at_all:
          title: is_at_all
          type: boolean
        enable:
          title: enable
          type: boolean
        message:
          description: error message generated in server side
          title: message
          type: string
      title: AlertReceiver
      type: object
      x-body-name: alert_receiver
    SchemaMapping:
      example:
        loading_config:
          format:
            metadata:
              key: ""
            type: type
          import_option: init
          data_source:
            scheme: file
        edge_mappings:
        - inputs:
          - inputs
          - inputs
          source_vertex_mappings:
          - column:
              name: name
              index: 0
          - column:
              name: name
              index: 0
          destination_vertex_mappings:
          - column:
              name: name
              index: 0
          - column:
              name: name
              index: 0
          column_mappings:
          - column:
              name: name
              index: 0
            property: property
          - column:
              name: name
              index: 0
            property: property
          type_triplet:
            edge: edge
            source_vertex: source_vertex
            destination_vertex: destination_vertex
        - inputs:
          - inputs
          - inputs
          source_vertex_mappings:
          - column:
              name: name
              index: 0
          - column:
              name: name
              index: 0
          destination_vertex_mappings:
          - column:
              name: name
              index: 0
          - column:
              name: name
              index: 0
          column_mappings:
          - column:
              name: name
              index: 0
            property: property
          - column:
              name: name
              index: 0
            property: property
          type_triplet:
            edge: edge
            source_vertex: source_vertex
            destination_vertex: destination_vertex
        graph: graph
        vertex_mappings:
        - type_name: type_name
          inputs:
          - inputs
          - inputs
          column_mappings:
          - column:
              name: name
              index: 0
            property: property
          - column:
              name: name
              index: 0
            property: property
        - type_name: type_name
          inputs:
          - inputs
          - inputs
          column_mappings:
          - column:
              name: name
              index: 0
            property: property
          - column:
              name: name
              index: 0
            property: property
      properties:
        graph:
          title: graph
          type: string
        loading_config:
          $ref: '#/components/schemas/SchemaMapping_loading_config'
        vertex_mappings:
          items:
            $ref: '#/components/schemas/VertexMapping'
          title: vertex_mappings
          type: array
        edge_mappings:
          items:
            $ref: '#/components/schemas/EdgeMapping'
          title: edge_mappings
          type: array
      title: SchemaMapping
      type: object
      x-body-name: schema_mapping
    VertexMapping:
      example:
        type_name: type_name
        inputs:
        - inputs
        - inputs
        column_mappings:
        - column:
            name: name
            index: 0
          property: property
        - column:
            name: name
            index: 0
          property: property
      properties:
        type_name:
          title: type_name
          type: string
        inputs:
          items:
            type: string
          title: inputs
          type: array
        column_mappings:
          items:
            $ref: '#/components/schemas/ColumnMapping'
          title: column_mappings
          type: array
      title: VertexMapping
      type: object
      x-body-name: vertex_mapping
    EdgeMapping:
      example:
        inputs:
        - inputs
        - inputs
        source_vertex_mappings:
        - column:
            name: name
            index: 0
        - column:
            name: name
            index: 0
        destination_vertex_mappings:
        - column:
            name: name
            index: 0
        - column:
            name: name
            index: 0
        column_mappings:
        - column:
            name: name
            index: 0
          property: property
        - column:
            name: name
            index: 0
          property: property
        type_triplet:
          edge: edge
          source_vertex: source_vertex
          destination_vertex: destination_vertex
      properties:
        type_triplet:
          $ref: '#/components/schemas/EdgeMapping_type_triplet'
        inputs:
          items:
            type: string
          title: inputs
          type: array
        source_vertex_mappings:
          items:
            $ref: '#/components/schemas/EdgeMapping_source_vertex_mappings_inner'
          title: source_vertex_mappings
          type: array
        destination_vertex_mappings:
          items:
            $ref: '#/components/schemas/EdgeMapping_destination_vertex_mappings_inner'
          title: destination_vertex_mappings
          type: array
        column_mappings:
          items:
            $ref: '#/components/schemas/ColumnMapping'
          title: column_mappings
          type: array
      title: EdgeMapping
      type: object
      x-body-name: edge_mapping
    ColumnMapping:
      example:
        column:
          name: name
          index: 0
        property: property
      properties:
        column:
          $ref: '#/components/schemas/EdgeMapping_source_vertex_mappings_inner_column'
        property:
          description: must align with the schema
          title: property
          type: string
      title: ColumnMapping
      type: object
      x-body-name: column_mapping
    GrootGraph:
      example:
        creation_time: creation_time
        schema:
          vertices:
          - label: label
            properties:
            - is_primary_key: true
              name: name
              id: 0
              type: STRING
            - is_primary_key: true
              name: name
              id: 0
              type: STRING
          - label: label
            properties:
            - is_primary_key: true
              name: name
              id: 0
              type: STRING
            - is_primary_key: true
              name: name
              id: 0
              type: STRING
          edges:
          - label: label
            relations:
            - src_label: src_label
              dst_label: dst_label
            - src_label: src_label
              dst_label: dst_label
            properties:
            - is_primary_key: true
              name: name
              id: 0
              type: STRING
            - is_primary_key: true
              name: name
              id: 0
              type: STRING
          - label: label
            relations:
            - src_label: src_label
              dst_label: dst_label
            - src_label: src_label
              dst_label: dst_label
            properties:
            - is_primary_key: true
              name: name
              id: 0
              type: STRING
            - is_primary_key: true
              name: name
              id: 0
              type: STRING
        directed: true
        gremlin_interface:
          grpc_endpoint: grpc_endpoint
          password: password
          gremlin_endpoint: gremlin_endpoint
          username: username
        name: name
      properties:
        name:
          title: name
          type: string
        directed:
          title: directed
          type: boolean
        creation_time:
          title: creation_time
          type: string
        schema:
          $ref: '#/components/schemas/GrootSchema'
        gremlin_interface:
          $ref: '#/components/schemas/GrootGraph_gremlin_interface'
      title: GrootGraph
      type: object
      x-body-name: groot_graph
    GrootSchema:
      example:
        vertices:
        - label: label
          properties:
          - is_primary_key: true
            name: name
            id: 0
            type: STRING
          - is_primary_key: true
            name: name
            id: 0
            type: STRING
        - label: label
          properties:
          - is_primary_key: true
            name: name
            id: 0
            type: STRING
          - is_primary_key: true
            name: name
            id: 0
            type: STRING
        edges:
        - label: label
          relations:
          - src_label: src_label
            dst_label: dst_label
          - src_label: src_label
            dst_label: dst_label
          properties:
          - is_primary_key: true
            name: name
            id: 0
            type: STRING
          - is_primary_key: true
            name: name
            id: 0
            type: STRING
        - label: label
          relations:
          - src_label: src_label
            dst_label: dst_label
          - src_label: src_label
            dst_label: dst_label
          properties:
          - is_primary_key: true
            name: name
            id: 0
            type: STRING
          - is_primary_key: true
            name: name
            id: 0
            type: STRING
      properties:
        vertices:
          items:
            $ref: '#/components/schemas/GrootVertexType'
          title: vertices
          type: array
        edges:
          items:
            $ref: '#/components/schemas/GrootEdgeType'
          title: edges
          type: array
      title: GrootSchema
      type: object
      x-body-name: groot_schema
    GrootVertexType:
      example:
        label: label
        properties:
        - is_primary_key: true
          name: name
          id: 0
          type: STRING
        - is_primary_key: true
          name: name
          id: 0
          type: STRING
      properties:
        label:
          title: label
          type: string
        properties:
          items:
            $ref: '#/components/schemas/GrootProperty'
          title: properties
          type: array
      title: GrootVertexType
      type: object
      x-body-name: groot_vertex_type
    GrootEdgeType:
      example:
        label: label
        relations:
        - src_label: src_label
          dst_label: dst_label
        - src_label: src_label
          dst_label: dst_label
        properties:
        - is_primary_key: true
          name: name
          id: 0
          type: STRING
        - is_primary_key: true
          name: name
          id: 0
          type: STRING
      properties:
        label:
          title: label
          type: string
        relations:
          items:
            $ref: '#/components/schemas/GrootEdgeType_relations_inner'
          title: relations
          type: array
        properties:
          items:
            $ref: '#/components/schemas/GrootProperty'
          title: properties
          type: array
      title: GrootEdgeType
      type: object
      x-body-name: groot_edge_type
    GrootProperty:
      example:
        is_primary_key: true
        name: name
        id: 0
        type: STRING
      properties:
        id:
          format: int32
          title: id
          type: integer
        name:
          title: name
          type: string
        type:
          enum:
          - STRING
          - LONG
          - DOUBLE
          title: type
          type: string
        is_primary_key:
          title: is_primary_key
          type: boolean
      title: GrootProperty
      type: object
      x-body-name: groot_property
    start_service_request:
      properties:
        graph_name:
          title: graph_name
          type: string
      title: start_service_request
      type: object
    update_alert_messages_request:
      properties:
        messages:
          items:
            $ref: '#/components/schemas/AlertMessage'
          title: messages
          type: array
        batch_status:
          description: Override the status of each message
          enum:
          - solved
          - unsolved
          - dealing
          title: batch_status
          type: string
        batch_delete:
          default: false
          description: True will delete all the messages in request body
          title: batch_delete
          type: boolean
      title: update_alert_messages_request
      type: object
    Graph_stored_procedures:
      example:
        directory: plugins
      properties:
        directory:
          enum:
          - plugins
          title: directory
          type: string
      title: Graph_stored_procedures
      type: object
    EdgeType_vertex_type_pair_relations_inner_x_csr_params:
      description: Used for storage optimization
      example:
        edge_storage_strategy: ONLY_IN
      properties:
        edge_storage_strategy:
          enum:
          - ONLY_IN
          - ONLY_OUT
          - BOTH_OUT_IN
          title: edge_storage_strategy
          type: string
      title: EdgeType_vertex_type_pair_relations_inner_x_csr_params
      type: object
    EdgeType_vertex_type_pair_relations_inner:
      example:
        source_vertex: source_vertex
        destination_vertex: destination_vertex
        x_csr_params:
          edge_storage_strategy: ONLY_IN
        relation: MANY_TO_MANY
      properties:
        source_vertex:
          title: source_vertex
          type: string
        destination_vertex:
          title: destination_vertex
          type: string
        relation:
          enum:
          - MANY_TO_MANY
          - ONE_TO_MANY
          - MANY_TO_ONE
          - ONE_TO_ONE
          title: relation
          type: string
        x_csr_params:
          $ref: '#/components/schemas/EdgeType_vertex_type_pair_relations_inner_x_csr_params'
      title: EdgeType_vertex_type_pair_relations_inner
      type: object
    Property_property_type:
      example:
        primitive_type: DT_DOUBLE
      properties:
        primitive_type:
          enum:
          - DT_DOUBLE
          - DT_STRING
          - DT_SIGNED_INT32
          - DT_SIGNED_INT64
          - DT_DATE32
          title: primitive_type
          type: string
      title: Property_property_type
      type: object
    Procedure_params_inner:
      example:
        name: name
        type: type
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          type: string
      title: Procedure_params_inner
      type: object
    ServiceStatus_sdk_endpoints:
      example:
        gremlin: gremlin
        cypher: cypher
        hqps: hqps
        grpc: grpc
      properties:
        cypher:
          title: cypher
          type: string
        gremlin:
          title: gremlin
          type: string
        hqps:
          title: hqps
          type: string
        grpc:
          title: grpc
          type: string
      title: ServiceStatus_sdk_endpoints
      type: object
    SchemaMapping_loading_config_data_source:
      example:
        scheme: file
      properties:
        scheme:
          enum:
          - file
          title: scheme
          type: string
      title: SchemaMapping_loading_config_data_source
      type: object
    SchemaMapping_loading_config_format:
      example:
        metadata:
          key: ""
        type: type
      properties:
        type:
          title: type
          type: string
        metadata:
          additionalProperties: true
          title: metadata
          type: object
      title: SchemaMapping_loading_config_format
      type: object
    SchemaMapping_loading_config:
      example:
        format:
          metadata:
            key: ""
          type: type
        import_option: init
        data_source:
          scheme: file
      properties:
        data_source:
          $ref: '#/components/schemas/SchemaMapping_loading_config_data_source'
        import_option:
          enum:
          - init
          - overwrite
          title: import_option
          type: string
        format:
          $ref: '#/components/schemas/SchemaMapping_loading_config_format'
      title: SchemaMapping_loading_config
      type: object
    EdgeMapping_type_triplet:
      description: "source label -> [edge label] -> destination label"
      example:
        edge: edge
        source_vertex: source_vertex
        destination_vertex: destination_vertex
      properties:
        edge:
          title: edge
          type: string
        source_vertex:
          title: source_vertex
          type: string
        destination_vertex:
          title: destination_vertex
          type: string
      title: EdgeMapping_type_triplet
      type: object
    EdgeMapping_source_vertex_mappings_inner_column:
      example:
        name: name
        index: 0
      properties:
        index:
          format: int32
          title: index
          type: integer
        name:
          title: name
          type: string
      title: EdgeMapping_source_vertex_mappings_inner_column
      type: object
    EdgeMapping_source_vertex_mappings_inner:
      description: Mapping column index to the primary key of source vertex
      example:
        column:
          name: name
          index: 0
      properties:
        column:
          $ref: '#/components/schemas/EdgeMapping_source_vertex_mappings_inner_column'
      title: EdgeMapping_source_vertex_mappings_inner
      type: object
    EdgeMapping_destination_vertex_mappings_inner:
      description: Mapping column index to the primary key of destination vertex
      example:
        column:
          name: name
          index: 0
      properties:
        column:
          $ref: '#/components/schemas/EdgeMapping_source_vertex_mappings_inner_column'
      title: EdgeMapping_destination_vertex_mappings_inner
      type: object
    GrootGraph_gremlin_interface:
      example:
        grpc_endpoint: grpc_endpoint
        password: password
        gremlin_endpoint: gremlin_endpoint
        username: username
      properties:
        gremlin_endpoint:
          title: gremlin_endpoint
          type: string
        grpc_endpoint:
          title: grpc_endpoint
          type: string
        username:
          title: username
          type: string
        password:
          title: password
          type: string
      title: GrootGraph_gremlin_interface
      type: object
    GrootEdgeType_relations_inner:
      example:
        src_label: src_label
        dst_label: dst_label
      properties:
        src_label:
          title: src_label
          type: string
        dst_label:
          title: dst_label
          type: string
      title: GrootEdgeType_relations_inner
      type: object
