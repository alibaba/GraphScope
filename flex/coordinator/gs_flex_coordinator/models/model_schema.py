from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gs_flex_coordinator.models.base_model import Model
from gs_flex_coordinator.models.edge_type import EdgeType
from gs_flex_coordinator.models.vertex_type import VertexType
from gs_flex_coordinator import util

from gs_flex_coordinator.models.edge_type import EdgeType  # noqa: E501
from gs_flex_coordinator.models.vertex_type import VertexType  # noqa: E501

class ModelSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vertex_types=None, edge_types=None):  # noqa: E501
        """ModelSchema - a model defined in OpenAPI

        :param vertex_types: The vertex_types of this ModelSchema.  # noqa: E501
        :type vertex_types: List[VertexType]
        :param edge_types: The edge_types of this ModelSchema.  # noqa: E501
        :type edge_types: List[EdgeType]
        """
        self.openapi_types = {
            'vertex_types': List[VertexType],
            'edge_types': List[EdgeType]
        }

        self.attribute_map = {
            'vertex_types': 'vertex_types',
            'edge_types': 'edge_types'
        }

        self._vertex_types = vertex_types
        self._edge_types = edge_types

    @classmethod
    def from_dict(cls, dikt) -> 'ModelSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Schema of this ModelSchema.  # noqa: E501
        :rtype: ModelSchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vertex_types(self) -> List[VertexType]:
        """Gets the vertex_types of this ModelSchema.


        :return: The vertex_types of this ModelSchema.
        :rtype: List[VertexType]
        """
        return self._vertex_types

    @vertex_types.setter
    def vertex_types(self, vertex_types: List[VertexType]):
        """Sets the vertex_types of this ModelSchema.


        :param vertex_types: The vertex_types of this ModelSchema.
        :type vertex_types: List[VertexType]
        """

        self._vertex_types = vertex_types

    @property
    def edge_types(self) -> List[EdgeType]:
        """Gets the edge_types of this ModelSchema.


        :return: The edge_types of this ModelSchema.
        :rtype: List[EdgeType]
        """
        return self._edge_types

    @edge_types.setter
    def edge_types(self, edge_types: List[EdgeType]):
        """Sets the edge_types of this ModelSchema.


        :param edge_types: The edge_types of this ModelSchema.
        :type edge_types: List[EdgeType]
        """

        self._edge_types = edge_types
