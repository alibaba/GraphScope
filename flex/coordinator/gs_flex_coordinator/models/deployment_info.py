from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gs_flex_coordinator.models.base_model import Model
from gs_flex_coordinator import util


class DeploymentInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, cluster_type=None, version=None):  # noqa: E501
        """DeploymentInfo - a model defined in OpenAPI

        :param name: The name of this DeploymentInfo.  # noqa: E501
        :type name: str
        :param cluster_type: The cluster_type of this DeploymentInfo.  # noqa: E501
        :type cluster_type: str
        :param version: The version of this DeploymentInfo.  # noqa: E501
        :type version: str
        """
        self.openapi_types = {
            'name': str,
            'cluster_type': str,
            'version': str
        }

        self.attribute_map = {
            'name': 'name',
            'cluster_type': 'cluster_type',
            'version': 'version'
        }

        self._name = name
        self._cluster_type = cluster_type
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'DeploymentInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeploymentInfo of this DeploymentInfo.  # noqa: E501
        :rtype: DeploymentInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this DeploymentInfo.


        :return: The name of this DeploymentInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this DeploymentInfo.


        :param name: The name of this DeploymentInfo.
        :type name: str
        """

        self._name = name

    @property
    def cluster_type(self) -> str:
        """Gets the cluster_type of this DeploymentInfo.


        :return: The cluster_type of this DeploymentInfo.
        :rtype: str
        """
        return self._cluster_type

    @cluster_type.setter
    def cluster_type(self, cluster_type: str):
        """Sets the cluster_type of this DeploymentInfo.


        :param cluster_type: The cluster_type of this DeploymentInfo.
        :type cluster_type: str
        """
        allowed_values = ["HOSTS", "KUBERNETES"]  # noqa: E501
        if cluster_type not in allowed_values:
            raise ValueError(
                "Invalid value for `cluster_type` ({0}), must be one of {1}"
                .format(cluster_type, allowed_values)
            )

        self._cluster_type = cluster_type

    @property
    def version(self) -> str:
        """Gets the version of this DeploymentInfo.


        :return: The version of this DeploymentInfo.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this DeploymentInfo.


        :param version: The version of this DeploymentInfo.
        :type version: str
        """

        self._version = version
