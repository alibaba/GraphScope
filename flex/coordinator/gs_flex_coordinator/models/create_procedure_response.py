from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gs_flex_coordinator.models.base_model import Model
from gs_flex_coordinator import util


class CreateProcedureResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, procedure_id=None):  # noqa: E501
        """CreateProcedureResponse - a model defined in OpenAPI

        :param procedure_id: The procedure_id of this CreateProcedureResponse.  # noqa: E501
        :type procedure_id: str
        """
        self.openapi_types = {
            'procedure_id': str
        }

        self.attribute_map = {
            'procedure_id': 'procedure_id'
        }

        self._procedure_id = procedure_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateProcedureResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateProcedureResponse of this CreateProcedureResponse.  # noqa: E501
        :rtype: CreateProcedureResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def procedure_id(self) -> str:
        """Gets the procedure_id of this CreateProcedureResponse.


        :return: The procedure_id of this CreateProcedureResponse.
        :rtype: str
        """
        return self._procedure_id

    @procedure_id.setter
    def procedure_id(self, procedure_id: str):
        """Sets the procedure_id of this CreateProcedureResponse.


        :param procedure_id: The procedure_id of this CreateProcedureResponse.
        :type procedure_id: str
        """
        if procedure_id is None:
            raise ValueError("Invalid value for `procedure_id`, must not be `None`")  # noqa: E501

        self._procedure_id = procedure_id
