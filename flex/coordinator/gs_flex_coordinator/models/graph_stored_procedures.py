from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gs_flex_coordinator.models.base_model import Model
from gs_flex_coordinator import util


class GraphStoredProcedures(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, directory=None):  # noqa: E501
        """GraphStoredProcedures - a model defined in OpenAPI

        :param directory: The directory of this GraphStoredProcedures.  # noqa: E501
        :type directory: str
        """
        self.openapi_types = {
            'directory': str
        }

        self.attribute_map = {
            'directory': 'directory'
        }

        self._directory = directory

    @classmethod
    def from_dict(cls, dikt) -> 'GraphStoredProcedures':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Graph_stored_procedures of this GraphStoredProcedures.  # noqa: E501
        :rtype: GraphStoredProcedures
        """
        return util.deserialize_model(dikt, cls)

    @property
    def directory(self) -> str:
        """Gets the directory of this GraphStoredProcedures.


        :return: The directory of this GraphStoredProcedures.
        :rtype: str
        """
        return self._directory

    @directory.setter
    def directory(self, directory: str):
        """Sets the directory of this GraphStoredProcedures.


        :param directory: The directory of this GraphStoredProcedures.
        :type directory: str
        """
        allowed_values = ["plugins"]  # noqa: E501
        if directory not in allowed_values:
            raise ValueError(
                "Invalid value for `directory` ({0}), must be one of {1}"
                .format(directory, allowed_values)
            )

        self._directory = directory
