from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gs_flex_coordinator.models.base_model import Model
from gs_flex_coordinator import util


class DeploymentStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, container=None, image=None, labels=None, node=None, status=None, restart_count=None, cpu_value=None, memory_value=None, timestamp=None, creation_time=None):  # noqa: E501
        """DeploymentStatus - a model defined in OpenAPI

        :param name: The name of this DeploymentStatus.  # noqa: E501
        :type name: str
        :param container: The container of this DeploymentStatus.  # noqa: E501
        :type container: List[str]
        :param image: The image of this DeploymentStatus.  # noqa: E501
        :type image: List[str]
        :param labels: The labels of this DeploymentStatus.  # noqa: E501
        :type labels: List[str]
        :param node: The node of this DeploymentStatus.  # noqa: E501
        :type node: str
        :param status: The status of this DeploymentStatus.  # noqa: E501
        :type status: str
        :param restart_count: The restart_count of this DeploymentStatus.  # noqa: E501
        :type restart_count: int
        :param cpu_value: The cpu_value of this DeploymentStatus.  # noqa: E501
        :type cpu_value: int
        :param memory_value: The memory_value of this DeploymentStatus.  # noqa: E501
        :type memory_value: int
        :param timestamp: The timestamp of this DeploymentStatus.  # noqa: E501
        :type timestamp: str
        :param creation_time: The creation_time of this DeploymentStatus.  # noqa: E501
        :type creation_time: str
        """
        self.openapi_types = {
            'name': str,
            'container': List[str],
            'image': List[str],
            'labels': List[str],
            'node': str,
            'status': str,
            'restart_count': int,
            'cpu_value': int,
            'memory_value': int,
            'timestamp': str,
            'creation_time': str
        }

        self.attribute_map = {
            'name': 'name',
            'container': 'container',
            'image': 'image',
            'labels': 'labels',
            'node': 'node',
            'status': 'status',
            'restart_count': 'restart_count',
            'cpu_value': 'cpu_value',
            'memory_value': 'memory_value',
            'timestamp': 'timestamp',
            'creation_time': 'creation_time'
        }

        self._name = name
        self._container = container
        self._image = image
        self._labels = labels
        self._node = node
        self._status = status
        self._restart_count = restart_count
        self._cpu_value = cpu_value
        self._memory_value = memory_value
        self._timestamp = timestamp
        self._creation_time = creation_time

    @classmethod
    def from_dict(cls, dikt) -> 'DeploymentStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeploymentStatus of this DeploymentStatus.  # noqa: E501
        :rtype: DeploymentStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this DeploymentStatus.


        :return: The name of this DeploymentStatus.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this DeploymentStatus.


        :param name: The name of this DeploymentStatus.
        :type name: str
        """

        self._name = name

    @property
    def container(self) -> List[str]:
        """Gets the container of this DeploymentStatus.


        :return: The container of this DeploymentStatus.
        :rtype: List[str]
        """
        return self._container

    @container.setter
    def container(self, container: List[str]):
        """Sets the container of this DeploymentStatus.


        :param container: The container of this DeploymentStatus.
        :type container: List[str]
        """

        self._container = container

    @property
    def image(self) -> List[str]:
        """Gets the image of this DeploymentStatus.


        :return: The image of this DeploymentStatus.
        :rtype: List[str]
        """
        return self._image

    @image.setter
    def image(self, image: List[str]):
        """Sets the image of this DeploymentStatus.


        :param image: The image of this DeploymentStatus.
        :type image: List[str]
        """

        self._image = image

    @property
    def labels(self) -> List[str]:
        """Gets the labels of this DeploymentStatus.


        :return: The labels of this DeploymentStatus.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels: List[str]):
        """Sets the labels of this DeploymentStatus.


        :param labels: The labels of this DeploymentStatus.
        :type labels: List[str]
        """

        self._labels = labels

    @property
    def node(self) -> str:
        """Gets the node of this DeploymentStatus.


        :return: The node of this DeploymentStatus.
        :rtype: str
        """
        return self._node

    @node.setter
    def node(self, node: str):
        """Sets the node of this DeploymentStatus.


        :param node: The node of this DeploymentStatus.
        :type node: str
        """

        self._node = node

    @property
    def status(self) -> str:
        """Gets the status of this DeploymentStatus.


        :return: The status of this DeploymentStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this DeploymentStatus.


        :param status: The status of this DeploymentStatus.
        :type status: str
        """

        self._status = status

    @property
    def restart_count(self) -> int:
        """Gets the restart_count of this DeploymentStatus.


        :return: The restart_count of this DeploymentStatus.
        :rtype: int
        """
        return self._restart_count

    @restart_count.setter
    def restart_count(self, restart_count: int):
        """Sets the restart_count of this DeploymentStatus.


        :param restart_count: The restart_count of this DeploymentStatus.
        :type restart_count: int
        """

        self._restart_count = restart_count

    @property
    def cpu_value(self) -> int:
        """Gets the cpu_value of this DeploymentStatus.

        cpu value in millicore  # noqa: E501

        :return: The cpu_value of this DeploymentStatus.
        :rtype: int
        """
        return self._cpu_value

    @cpu_value.setter
    def cpu_value(self, cpu_value: int):
        """Sets the cpu_value of this DeploymentStatus.

        cpu value in millicore  # noqa: E501

        :param cpu_value: The cpu_value of this DeploymentStatus.
        :type cpu_value: int
        """

        self._cpu_value = cpu_value

    @property
    def memory_value(self) -> int:
        """Gets the memory_value of this DeploymentStatus.

        memory value in megabytes  # noqa: E501

        :return: The memory_value of this DeploymentStatus.
        :rtype: int
        """
        return self._memory_value

    @memory_value.setter
    def memory_value(self, memory_value: int):
        """Sets the memory_value of this DeploymentStatus.

        memory value in megabytes  # noqa: E501

        :param memory_value: The memory_value of this DeploymentStatus.
        :type memory_value: int
        """

        self._memory_value = memory_value

    @property
    def timestamp(self) -> str:
        """Gets the timestamp of this DeploymentStatus.


        :return: The timestamp of this DeploymentStatus.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: str):
        """Sets the timestamp of this DeploymentStatus.


        :param timestamp: The timestamp of this DeploymentStatus.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def creation_time(self) -> str:
        """Gets the creation_time of this DeploymentStatus.


        :return: The creation_time of this DeploymentStatus.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time: str):
        """Sets the creation_time of this DeploymentStatus.


        :param creation_time: The creation_time of this DeploymentStatus.
        :type creation_time: str
        """

        self._creation_time = creation_time
