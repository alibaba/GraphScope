from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gs_flex_coordinator.models.base_model import Model
from gs_flex_coordinator import util


class QueryStatement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, statement_id=None, name=None, description=None, query=None):  # noqa: E501
        """QueryStatement - a model defined in OpenAPI

        :param statement_id: The statement_id of this QueryStatement.  # noqa: E501
        :type statement_id: str
        :param name: The name of this QueryStatement.  # noqa: E501
        :type name: str
        :param description: The description of this QueryStatement.  # noqa: E501
        :type description: str
        :param query: The query of this QueryStatement.  # noqa: E501
        :type query: str
        """
        self.openapi_types = {
            'statement_id': str,
            'name': str,
            'description': str,
            'query': str
        }

        self.attribute_map = {
            'statement_id': 'statement_id',
            'name': 'name',
            'description': 'description',
            'query': 'query'
        }

        self._statement_id = statement_id
        self._name = name
        self._description = description
        self._query = query

    @classmethod
    def from_dict(cls, dikt) -> 'QueryStatement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QueryStatement of this QueryStatement.  # noqa: E501
        :rtype: QueryStatement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def statement_id(self) -> str:
        """Gets the statement_id of this QueryStatement.

        generated in server side  # noqa: E501

        :return: The statement_id of this QueryStatement.
        :rtype: str
        """
        return self._statement_id

    @statement_id.setter
    def statement_id(self, statement_id: str):
        """Sets the statement_id of this QueryStatement.

        generated in server side  # noqa: E501

        :param statement_id: The statement_id of this QueryStatement.
        :type statement_id: str
        """

        self._statement_id = statement_id

    @property
    def name(self) -> str:
        """Gets the name of this QueryStatement.


        :return: The name of this QueryStatement.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this QueryStatement.


        :param name: The name of this QueryStatement.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this QueryStatement.


        :return: The description of this QueryStatement.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this QueryStatement.


        :param description: The description of this QueryStatement.
        :type description: str
        """

        self._description = description

    @property
    def query(self) -> str:
        """Gets the query of this QueryStatement.


        :return: The query of this QueryStatement.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query: str):
        """Sets the query of this QueryStatement.


        :param query: The query of this QueryStatement.
        :type query: str
        """

        self._query = query
