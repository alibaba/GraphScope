from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gs_flex_coordinator.models.base_model import Model
from gs_flex_coordinator.models.groot_edge_type_relations_inner import GrootEdgeTypeRelationsInner
from gs_flex_coordinator.models.groot_property import GrootProperty
from gs_flex_coordinator import util

from gs_flex_coordinator.models.groot_edge_type_relations_inner import GrootEdgeTypeRelationsInner  # noqa: E501
from gs_flex_coordinator.models.groot_property import GrootProperty  # noqa: E501

class GrootEdgeType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label=None, relations=None, properties=None):  # noqa: E501
        """GrootEdgeType - a model defined in OpenAPI

        :param label: The label of this GrootEdgeType.  # noqa: E501
        :type label: str
        :param relations: The relations of this GrootEdgeType.  # noqa: E501
        :type relations: List[GrootEdgeTypeRelationsInner]
        :param properties: The properties of this GrootEdgeType.  # noqa: E501
        :type properties: List[GrootProperty]
        """
        self.openapi_types = {
            'label': str,
            'relations': List[GrootEdgeTypeRelationsInner],
            'properties': List[GrootProperty]
        }

        self.attribute_map = {
            'label': 'label',
            'relations': 'relations',
            'properties': 'properties'
        }

        self._label = label
        self._relations = relations
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt) -> 'GrootEdgeType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GrootEdgeType of this GrootEdgeType.  # noqa: E501
        :rtype: GrootEdgeType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self) -> str:
        """Gets the label of this GrootEdgeType.


        :return: The label of this GrootEdgeType.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this GrootEdgeType.


        :param label: The label of this GrootEdgeType.
        :type label: str
        """

        self._label = label

    @property
    def relations(self) -> List[GrootEdgeTypeRelationsInner]:
        """Gets the relations of this GrootEdgeType.


        :return: The relations of this GrootEdgeType.
        :rtype: List[GrootEdgeTypeRelationsInner]
        """
        return self._relations

    @relations.setter
    def relations(self, relations: List[GrootEdgeTypeRelationsInner]):
        """Sets the relations of this GrootEdgeType.


        :param relations: The relations of this GrootEdgeType.
        :type relations: List[GrootEdgeTypeRelationsInner]
        """

        self._relations = relations

    @property
    def properties(self) -> List[GrootProperty]:
        """Gets the properties of this GrootEdgeType.


        :return: The properties of this GrootEdgeType.
        :rtype: List[GrootProperty]
        """
        return self._properties

    @properties.setter
    def properties(self, properties: List[GrootProperty]):
        """Sets the properties of this GrootEdgeType.


        :param properties: The properties of this GrootEdgeType.
        :type properties: List[GrootProperty]
        """

        self._properties = properties
