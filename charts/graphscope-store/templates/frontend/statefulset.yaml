{{- $frontendFullname := include "graphscope-store.frontend.fullname" . }}
{{- $ingestorFullname := include "graphscope-store.ingestor.fullname" . }}
{{- $coordinatorFullname := include "graphscope-store.coordinator.fullname" . }}
{{- $storeFullname := include "graphscope-store.store.fullname" . }}
{{- $kafkaFullname := include "graphscope-store.kafka.fullname" . -}}
{{- $releaseNamespace := .Release.Namespace }}
{{- $clusterDomain := .Values.clusterDomain }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "graphscope-store.frontend.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "graphscope-store.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
    {{- if .Values.commonLabels }}
    {{- include "graphscope-store.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "graphscope-store.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels: {{ include "graphscope-store.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  serviceName: {{ include "graphscope-store.frontend.fullname" . }}-headless
  updateStrategy:
    type: {{ .Values.frontend.updateStrategy }}
    {{- if (eq "Recreate" .Values.frontend.updateStrategy) }}
    rollingUpdate: null
    {{- end }}
  template:
    metadata:
      annotations:
        {{- if (include "graphscope-store.createConfigmap" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.frontend.podAnnotations }}
        {{- include "graphscope-store.tplvalues.render" (dict "value" .Values.frontend.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "graphscope-store.labels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
        {{- if .Values.commonLabels }}
        {{- include "graphscope-store.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "graphscope-store.serviceAccountName" . }}
      {{- if .Values.frontend.affinity }}
      affinity: {{- include "graphscope-store.tplvalues.render" (dict "value" .Values.frontend.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "graphscope-store.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.frontend.initContainers }}
        {{- include "graphscope-store.tplvalues.render" (dict "value" .Values.frontend.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: frontend
          image: {{ include "graphscope-store.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
          - /bin/bash
          - -c
          - |
            /tmp/ready_probe.sh

            [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
            ordinal=${BASH_REMATCH[1]}
            sudo sed -e "s/GRAPH_NAME/$(GRAPH_NAME)/g" \
                     -e "s/ROLE/$(ROLE)/g" \
                     -e "s/INDEX/${ordinal}/g" \
                     -e "s/KAFKA_SERVERS/$(KAFKA_SERVERS)/g" \
                     -e "s/FRONTEND/$(DNS_NAME_PREFIX_FRONTEND)/g" \
                     -e "s/INGESTOR/$(DNS_NAME_PREFIX_INGESTOR)/g" \
                     -e "s/COORDINATOR/$(DNS_NAME_PREFIX_COORDINATOR)/g" \
                     -e "s/STORE/$(DNS_NAME_PREFIX_STORE)/g" \
                     -e "s@LOG4RS_CONFIG@${GRAPHSCOPE_HOME}/groot/conf/log4rs.yml@g" \
            /etc/graphscope-store/my.cnf.tpl | sudo tee /etc/graphscope-store/my.cnf

            LOG_NAME=graphscope-store MAXGRAPH_CONF_FILE=/etc/graphscope-store/my.cnf \
              ${GRAPHSCOPE_HOME}/groot/bin/store_ctl.sh maxgraph $(EXECUTOR)
          env:
            - name: DEBUG
              value: "false"
            - name: GRAPH_NAME
              value: {{ .Values.graphName | quote }}
            - name: MAXGRAPH_JAVA_OPTS
              value: {{ .Values.javaOpts | quote }}
            - name: ROLE
              value: "frontend"
            - name: EXECUTOR
              value: "frontend-gaia"
            - name: FRONTEND_COUNT
              value: {{ .Values.frontend.replicaCount | quote }}
            - name: INGESTOR_COUNT
              value: {{ .Values.ingestor.replicaCount | quote }}
            - name: COORDINATOR_COUNT
              value: {{ .Values.coordinator.replicaCount | quote }}
            - name: STORE_COUNT
              value: {{ .Values.store.replicaCount | quote }}
            - name: DNS_NAME_PREFIX_FRONTEND
              value: {{ $frontendFullname }}-{}.{{ $frontendFullname }}-headless.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}
            - name: DNS_NAME_PREFIX_INGESTOR
              value: {{ $ingestorFullname }}-{}.{{ $ingestorFullname }}-headless.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}
            - name: DNS_NAME_PREFIX_COORDINATOR
              value: {{ $coordinatorFullname }}-{}.{{ $coordinatorFullname }}-headless.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}
            - name: DNS_NAME_PREFIX_STORE
              value: {{ $storeFullname }}-{}.{{ $storeFullname }}-headless.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}
            - name: DNS_NAME_SERVICE_KAFKA
              value: {{ $kafkaFullname}}-headless.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}
            - name: KAFKA_SERVERS
              value: {{ include "graphscope-store.kafka.brokerlist" . }}
            {{- if .Values.maxgraphLogbackFile }}
            - name: MAXGRAPH_LOGBACK_FILE
              value: {{ .Values.maxgraphLogbackFile | quote }}
            {{- end }}
          ports:
            - name: port
              containerPort: 55555
            - name: service-port
              containerPort: 55556
            - name: gremlin
              containerPort: 12312
            - name: gaia-rpc
              containerPort: 60000
            - name: gaia-engine
              containerPort: 60001
          {{- if .Values.frontend.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: port
            initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.frontend.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.frontend.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.frontend.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.frontend.resources }}
          resources: {{- toYaml .Values.frontend.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/graphscope-store/my.cnf.tpl
              subPath: my.cnf

      volumes:
        - name: config
          configMap:
            name: {{ include "graphscope-store.configmapName" . }}

