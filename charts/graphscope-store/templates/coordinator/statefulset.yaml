{{- if .Values.distributedDeployment -}}
{{- include "util.statefulsets" (list . "coordinator.statefulset") -}}
{{- end -}}


{{- define "coordinator.statefulset" -}}
metadata:
  name: {{ include "graphscope-store.coordinator.fullname" . }}
  labels:
    app.kubernetes.io/component: coordinator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: coordinator
  serviceName: {{ printf "%s-coordinator-headless" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  template:
    metadata:
      labels:
        {{- include "common.tplvalues.render" (dict "value" .Values.store.podLabels "context" $) | nindent 8 }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" .Values.store.podAnnotations "context" $) | nindent 8 }}
    spec:
      hostNetwork: {{ .Values.store.hostNetwork }}
      hostIPC: {{ .Values.store.hostIPC }}
      {{- if .Values.store.schedulerName }}
      schedulerName: {{ .Values.store.schedulerName | quote }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - image: {{ include "graphscope-store.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          name: default
          ports:
            - name: inner-rpc
              containerPort: 55555
          env:
            - name: ROLE
              value: coordinator
            - name: RELEASE_FULL_NAME
              value: {{ include "graphscope-store.fullname" . }}
            - name: KAFKA_SERVERS
              value: {{ include "graphscope-store.kafka.brokerlist" . }}
            - name: ZK_CONNECT
              value: {{ printf "%s-headless" (include "graphscope-store.zookeeper.fullname" .) | quote }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: inner-rpc
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: inner-rpc
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: inner-rpc
          {{- end }}
          {{- if .Values.coordinator.resources }}
          resources: {{- toYaml .Values.coordinator.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: meta
              mountPath: {{ .Values.fileMetaStorePath }}
            - name: config
              mountPath: /etc/groot/groot.config.tpl
              subPath: groot.config
            - name: config
              mountPath: /etc/groot/setup.sh
              subPath: setup.sh
      volumes:
        - name: config
          configMap:
            name: {{ include "graphscope-store.configmapName" . }}
            defaultMode: 0755
  {{- if and .Values.coordinator.persistence.enabled .Values.coordinator.persistence.existingClaim }}
        - name: meta
          persistentVolumeClaim:
            claimName: {{ tpl .Values.coordinator.persistence.existingClaim . }}
  {{- else if not .Values.coordinator.persistence.enabled }}
        - name: meta
          emptyDir: {}
  {{- else if and .Values.coordinator.persistence.enabled (not .Values.coordinator.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: meta
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.coordinator.persistence.size | quote }}
        {{ include "graphscope-store.storageClass" . | nindent 8 }}
  {{- end }}
{{- end -}}