# Default values for graphscope.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  registry: registry.cn-hongkong.aliyuncs.com
  repository: graphscope
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Example:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []


## Specify an array of volumes by setting enabled true.
## Here is an example to mount hostpath `/testingdata` to `/tmp/testingdata` in pod.
volumes:
  enabled: false
  items:
    data:
      type: hostPath
      field:
        type: Directory
        path: /testingdata
      mounts:
      - mountPath: /tmp/testingdata
preemptive: true


coordinator:
  service:
    type: NodePort
  image:
    name: coordinator
  resources:
    requests:
      cpu: 0.2
      memory: 256Mi
    limits:
      cpu: 1
      memory: 512Mi
  extraEnv: {}
  readinessProbe:
    enabled: true
    initialDelaySeconds: 0
    periodSeconds: 1
    timeoutSeconds: 5
    failureThreshold: 20
    successThreshold: 1
  # Waiting GraphScope instance ready until reached timeout.
  timeout_seconds: 1200


engines:
  num_workers: 2
  # Available options of log_level: INFO, DEBUG
  log_level: INFO

  analytical:
    enabled: True
    image:
      name: analytical
  analytical_java:
    enabled: False
    image:
      name: analytical-java
  interactive:
    enabled: True
    image:
      name: interactive
  learning:
    enabled: True
    image:
      name: learning
  dataset:
    enabled: False
    image:
      name: dataset

  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 2.0
      memory: 2Gi

vineyard:
  # When `vineyard.daemonset` is set to the Helm release name, the coordinator will
  # tries to discover the vineyard DaemonSet in current namespace, then use it if
  # found, and fallback to bundled vineyard container otherwise.
  #
  # The vineyard IPC socket is placed on host at /var/run/vineyard-{namespace}-{release}.
  daemonset: ""
  image:
    name: ghcr.io/v6d-io/v6d/vineyardd
    # Overrides the image tag whose default is the chart appVersion.
    tag: v0.11.2
  resources:
    requests:
      cpu: 0.5
      memory: 512Mi
    limits:
      cpu: 0.5
      memory: 512Mi
  ## Init size of vineyard shared memory.
  shared_mem: 8Gi



withJupyter: true
jupyter:
  image:
    name: registry.cn-hongkong.aliyuncs.com/graphscope/jupyter
    tag: ""
  resources:
    requests:
      cpu: 0.5
      memory: 256Mi
    limits:
      cpu: 1.0
      memory: 512Mi
  port: 30080
