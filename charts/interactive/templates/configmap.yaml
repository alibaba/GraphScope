apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "graphscope-interactive.configmapName" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "graphscope-interactive.labels" . | nindent 4 }}
    app.kubernetes.io/component: configmap
    {{- if .Values.commonLabels }}
    {{- include "graphscope-interactive.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "graphscope-interactive.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  interactive_config.yaml: |-
    log_level: {{ .Values.engine.logLevel  }}
    verbose_level: {{ .Values.engine.verboseLevel  }}
    default_graph: {{ .Values.defaultGraph }}
    compute_engine:
      type: hiactor
      workers:
        - localhost: {{ .Values.engine.service.queryPort }}
      thread_num_per_worker: {{ .Values.engine.threadNumPerWorker }}
      memory_per_worker: {{ .Values.engine.resources.limits.memory }}
      store:
        type: cpp-mcsr
      metadata_store:
        uri: {{ include "graphscope-interactive.engine.metadataStoreUri" . }}
      wal_uri: {{ include "graphscope-interactive.engine.walUri" . }}
    compiler:
      planner:
        is_on: true
        opt: RBO
        rules:
          - FilterIntoJoinRule
          - FilterMatchRule
          - NotMatchToAntiJoinRule
      meta:
        reader:
          schema:
            uri: {{ include "graphscope-interactive.engine.compiler.metaReaderSchemaUri" . }}
            interval: {{ printf "%d" ( int .Values.engine.compiler.meta.reader.schema.interval) }}
          statistics:
            uri: {{ include "graphscope-interactive.engine.compiler.metaStatisticsUri" . }}
            interval: {{ printf "%d" (int .Values.engine.compiler.meta.reader.statistics.interval) }}
          timeout: {{ .Values.engine.compiler.meta.reader.timeout }}
      endpoint:
        default_listen_address: localhost
        bolt_connector:
          disabled: false
          port: {{ .Values.engine.compiler.endpoint.boltConnector.port }}
        gremlin_connector:
          disabled: true
          port: {{ .Values.engine.compiler.endpoint.gremlinConnector.port }}
      query_timeout: {{ .Values.engine.compiler.queryTimeout }}
    http_service:
      default_listen_address: localhost
      admin_port: {{ .Values.engine.service.adminPort  }}
      query_port: {{ .Values.engine.service.queryPort  }}
      max_content_length: {{ .Values.engine.service.maxContentLength }}
    master:
      instance_name: {{ include "graphscope-interactive.master.fullname" . }}
      admin_port: {{ .Values.master.service.adminPort }}
      service_registry:
        type: etcd
        endpoint: {{ include "graphscope-interactive.master.serviceRegistry.endpoint" . }}
        ttl: {{ .Values.master.serviceRegistry.ttl }}
      launcher_type: k8s
      k8s_launcher_config:
        namespace: {{ .Release.Namespace }}
        instance_prefix: {{ .Values.master.k8sLauncherConfig.instancePrefix }}
        config_file: {{ .Values.master.k8sLauncherConfig.configFile }}
        image_pull_policy: {{ .Values.master.k8sLauncherConfig.imagePullPolicy }}
        default_replicas: {{ .Values.master.k8sLauncherConfig.defaultReplicas }}
        service_account_create: false
        service_account_name: {{ include "graphscope-interactive.serviceAccountName" . }}

  master_entrypoint.sh: |-
    #!/bin/bash
    # This should be the entrypoint of the master instance
    echo "Starting master instance..."
    mkdir -p {{ include "graphscope-interactive.master.workspace" . }}
    mkdir -p {{ include "graphscope-interactive.master.codegenWorkDir" . }}
    echo "using configfile: {{ include "graphscope-interactive.master.configFileMountPath" . }}"
    python3 -m gs_interactive_admin --config-file {{ include "graphscope-interactive.master.configFileMountPath" . }}
    #sleep infinity


  engine_entrypoint.sh: |-
    #!/bin/bash
    # This should be the entrypoint of the engine instance
    if [ $# -gt 1 ]; then
      echo "Expect one optional argument [GraphSchemaPath], bot got $#"
      exit
    fi
    if [ $# -eq 1 ]; then
      graph_file=$1
    else
      graph_file="{{ include "graphscope-interacitve.engine.defaultGraphSchemaPath" . }}"
    fi
    echo "Starting engine instance..."
    echo "using configfile: {{ include "graphscope-interactive.engine.configFileMountPath" . }}"
    echo "Workspace: {{ .Values.workspace }} "
    mkdir -p  {{ .Values.workspace }}/conf
    echo "config file ${graph_file}"
    /opt/flex/bin/entrypoint.sh -w {{ .Values.workspace }} -g $graph_file
    #sleep infinity