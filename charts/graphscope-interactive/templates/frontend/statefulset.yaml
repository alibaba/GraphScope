{{- $frontendFullname := include "graphscope-interactive.frontend.fullname" . }}
{{- $releaseNamespace := .Release.Namespace }}
{{- $clusterDomain := .Values.clusterDomain }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "graphscope-interactive.frontend.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "graphscope-interactive.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
    {{- if .Values.commonLabels }}
    {{- include "graphscope-interactive.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "graphscope-interactive.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels: {{ include "graphscope-interactive.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  serviceName: {{ include "graphscope-interactive.frontend.fullname" . }}-headless
  updateStrategy:
    type: {{ .Values.frontend.updateStrategy }}
    {{- if (eq "Recreate" .Values.frontend.updateStrategy) }}
    rollingUpdate: null
    {{- end }}
  template:
    metadata:
      annotations:
        {{- if .Values.frontend.podAnnotations }}
        {{- include "graphscope-interactive.tplvalues.render" (dict "value" .Values.frontend.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "graphscope-interactive.labels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
        {{- if .Values.commonLabels }}
        {{- include "graphscope-interactive.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "graphscope-interactive.serviceAccountName" . }}
      {{- if .Values.frontend.affinity }}
      affinity: {{- include "graphscope-interactive.tplvalues.render" (dict "value" .Values.frontend.affinity "context" $) | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.frontend.initContainers }}
        {{- include "graphscope-interactive.tplvalues.render" (dict "value" .Values.frontend.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: frontend
          image: {{ include "graphscope-interactive.frontend.image" . }}
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy | quote }}
          command:
            - /bin/bash
            - -c
            - |
              echo "Starting frontend..."

              # get graph schema file
              cmd="java -cp /opt/graphscope/interactive_engine/compiler/target/libs/:/opt/graphscope/interactive_engine/compiler/target/compiler-1.0-SNAPSHOT.jar"
              cmd="$cmd -Djava.library.path=/opt/graphscope/interactive_engine/executor/ir/target/release/"
              cmd="$cmd -Dgraph.schema=$GRAPH_SCHEMA_URI"
              cmd="$cmd com.alibaba.graphscope.GraphServer"
              cmd="$cmd $INTERACTIVE_CONFIG_PATH"
              echo "Starting frontend with command: $cmd"
              sleep infinity
          env:
            - name: TIMEOUT
              value: {{ .Values.hiactorTimeout | quote }}
            - name: INTERACTIVE_CONFIG_PATH
              value: {{ include "graphscope-interactive.engineConfigPath" . }}
            - name: GRAPH_SCHEMA_URI
              value: {{ include "graphscope-interactive.graphSchemaUri" . }}
          ports:
            - name: gremlin
              containerPort: {{ .Values.frontend.service.gremlinPort }}
            - name: cypher
              containerPort: {{ .Values.frontend.service.cypherPort }}
          {{- if .Values.frontend.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.frontend.service.gremlinPort }}
            initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.frontend.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.frontend.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.frontend.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.resources.frontend }}
          resources: {{- toYaml .Values.resources.frontend | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: {{ include "graphscope-interactive.engineConfigPath" . }}
              subPath: interactive_config.yaml
            - name: config
              mountPath: /etc/interactive/setup.sh
              subPath: setup.sh
        - name: query-nginx
          image: {{ include "graphscope-interactive.nginx.image" . }} 
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy | quote }}
          # command: ["sleep", "infinity"]
          ports:
            - name: query-port
              containerPort: {{ .Values.frontend.service.queryPort }}
          {{- if .Values.resources.frontend }}
          resources: {{- toYaml .Values.resources.frontend | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: {{ include "graphscope-interactive.engineConfigPath" . }}
              subPath: engine_config.yaml
            - name: query-nginx-config  
              mountPath: /usr/local/openresty/nginx/conf/nginx.conf
              subPath: nginx.conf
        - name: admin-nginx
          image: {{ include "graphscope-interactive.nginx.image" . }} 
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy | quote }}
          # command: ["sleep", "infinity"]
          ports:
            - name: admin-port
              containerPort: {{ .Values.frontend.service.adminPort }}
          {{- if .Values.resources.frontend }}
          resources: {{- toYaml .Values.resources.frontend | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: {{ include "graphscope-interactive.engineConfigPath" . }}
              subPath: engine_config.yaml
            - name: admin-nginx-config  
              mountPath: /usr/local/openresty/nginx/conf/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: admin-nginx-config  
          configMap:  
            name: {{ .Release.Name }}-admin-nginx-config 
        - name: query-nginx-config  
          configMap:  
            name: {{ .Release.Name }}-query-nginx-config 
        - name: config
          configMap:
            name: {{ include "graphscope-interactive.configmapName" . }}
            defaultMode: 0755
