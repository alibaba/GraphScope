name: Docs

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Cpp Format and Lint Check
      run: |
        # install clang-format
        if [ ! -f /usr/bin/clang-format ]; then
            sudo curl -L https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-22538c65/clang-format-8_linux-amd64 --output /usr/bin/clang-format
            sudo chmod +x /usr/bin/clang-format
        fi

        # run format
        cd analytical_engine/
        find ./apps ./benchmarks ./core ./frame ./misc ./test  -name "*.h" | xargs clang-format -i --style=file
        find ./apps ./benchmarks ./core ./frame ./misc ./test  -name "*.cc" | xargs clang-format -i --style=file

        # validate format
        function prepend() { while read line; do echo "${1}${line}"; done; }

        GIT_DIFF=$(git diff --ignore-submodules)
        if [[ -n $GIT_DIFF ]]; then
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            echo "| clang-format failures found!"
            echo "|"
            echo "$GIT_DIFF" | prepend "| "
            echo "|"
            echo "| Run: "
            echo "|"
            echo "|    make gsa_clformat"
            echo "|"
            echo "| to fix this error."
            echo "|"
            echo "| Ensure you are working with clang-format-8, which can be obtained from"
            echo "|"
            echo "|    https://github.com/muttleyxd/clang-tools-static-binaries/releases"
            echo "|"
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            exit -1
        fi

    - name: Python Format and Lint Check
      run: |
        echo "Checking formatting for $GITHUB_REPOSITORY"
        pip3 install black==20.8b1 flake8==3.8.4 isort==5.5.4
        pushd python
        python3 -m isort --check --diff .
        python3 -m black --check --diff .
        python3 -m flake8 .
        popd
        pushd coordinator
        python3 -m isort --check --diff .
        python3 -m black --check --diff .
        python3 -m flake8 .

    - name: Generate Docs
      shell: bash
      run: |
        # Install pip dependencies, build builtin gar, and generate proto stuffs.
        sudo apt update
        sudo apt install -y doxygen
        make graphscope-docs

    - name: Upload Docs
      if: ${{ github.ref == 'refs/heads/main' }}
      shell: bash
      run: |
        shopt -s extglob

        git config user.email github-actions@github.com
        git config user.name github-actions

        git fetch origin gh-pages --no-recurse-submodules
        git checkout gh-pages
        cd docs/
        rm -rf !(_build)
        mv _build/html/* ./
        mv _build/html/.nojekyll ./
        rm -rf _build/
        rm -rf ../learning_engine/ || true
        rm -rf ../python || true

        git add -A
        git commit --amend --no-edit -m "Generate latest docs on CI, from commit ${{ github.sha }}."
        git push -f origin gh-pages

