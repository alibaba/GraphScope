name: GraphScope CI on Local

on:
  # Trigger the workflow on push or pull request, but only for the main branch
  push:
    branches:
      - main
    paths-ignore:
      - 'gnn_engine/**'
      - '**.md'
      - '**.rst'
      - 'docs/**'
      - 'scripts/**'
      - '!scripts/deploy_local.sh'
      - 'tutorials/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'gnn_engine/**'
      - '**.md'
      - '**.rst'
      - 'docs/**'
      - 'scripts/**'
      - '!scripts/deploy_local.sh'
      - 'tutorials/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-latest]
        include:
          - os: ubuntu-20.04
            sccache-path: /home/runner/.cache/sccache
            sccache-file: sccache-v0.2.15-x86_64-unknown-linux-musl
          - os: macos-latest
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
            sscache-file: sccache-v0.2.15-x86_64-apple-darwin
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
    - uses: actions/checkout@v2
    - name: Install sccache
      run: |
        curl -L https://github.com/mozilla/sccache/releases/download/v0.2.15/${{ matrix.sccache-file }}.tar.gz | tar xz
        sudo mv ${{ matrix.sccache-file }}/sccache /usr/local/bin/
        sudo chmod +x /usr/local/bin/sccache

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - uses: actions/cache@v2
      with:
        path: ${{ matrix.sccache-path }}
        key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-sccache-
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Dependencies of GraphScope
      run: |
        /bin/bash ${GITHUB_WORKSPACE}/scripts/deploy_local.sh install_deps --verbose

        # avoid access node by DNS hostnames
        r=`cat /etc/hosts | grep $(hostname) || true`
        if [ -z "${r}" ];then export hn=$(hostname); sudo -E bash -c 'echo "127.0.0.1 ${hn}" >> /etc/hosts'; fi
        cat /etc/hosts

    - name: Build GraphScope
      run: |
        sccache --start-server
        /bin/bash ${GITHUB_WORKSPACE}/scripts/deploy_local.sh build_and_deploy --verbose --build_type debug
        sccache --show-stats
        sccache --stop-server || true

    - name: Run Local Test
      env:
        OS : ${{ matrix.os }}
      run: |
        source ~/.graphscope_env
        export GRAPHSCOPE_HOME=/opt/graphscope

        # install tensorflow for graphlearn if os is ubuntu20.04
        if [ "${OS}" == "ubuntu-20.04" ];
        then
            pip3 install pytest tensorflow --user;
        fi

        # prelaunch the etcd
        /usr/local/bin/etcd --data-dir=/tmp/default.etcd&

        export GS_TEST_DIR=${GITHUB_WORKSPACE}/gstest
        git clone -b master --single-branch --depth=1 https://github.com/7br/gstest.git ${GS_TEST_DIR}
        # Copy test_run_locally.py out of graphscope to enable import graph-learn from system path
        cp ${GITHUB_WORKSPACE}/python/tests/local/test_run_locally.py /tmp/test_run_locally.py
        rm -rf ~/.m2 ~/.cargo || true
        python3 -m pytest -s -v /tmp/test_run_locally.py

    - name: Run Gaia on Vineyard Store Test
      if: matrix.os == 'ubuntu-20.04'
      run: |
        source ~/.graphscope_env
        export GRAPHSCOPE_HOME=/opt/graphscope
        export GS_TEST_DIR=${GITHUB_WORKSPACE}/gstest
        # run test
        cd interactive_engine/gaia-adaptor && ./gaia_on_vineyard_test.sh

    - name: Run Gaia on Maxgraph Store Test
      if: matrix.os == 'ubuntu-20.04'
      run: |
        source ~/.graphscope_env
        # run test
        cd interactive_engine/gaia-adaptor && ./gremlin_test.sh

    - name: Upload GIE Log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: gie-log
        path: /tmp/gs/
