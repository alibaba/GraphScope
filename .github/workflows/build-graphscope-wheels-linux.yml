name: Build GraphScope Wheels on Linux

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
    paths-ignore:
      - 'CONTRIBUTORS'
      - 'LICENSE'
      - 'NOTICE.txt'
      - '**.md'
      - '**.rst'
      - 'docs/**'
      - 'demo/**'
      - 'scripts/**'
      - 'tutorials/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'CONTRIBUTORS'
      - 'LICENSE'
      - 'NOTICE.txt'
      - '**.md'
      - '**.rst'
      - 'docs/**'
      - 'demo/**'
      - 'scripts/**'
      - 'tutorials/**'
      - '.github/workflows/docs.yml'
      - '.github/workflows/gss.yml'
      - '.github/workflows/gaia.yml'
      - '.github/workflows/gae.yml'
      - '.github/workflows/nightly.yml'
      - '.github/workflows/release.yml'
      - '.github/workflows/networkx-forward-algo-nightly.yml'
      - '.github/workflows/build-graphscope-wheels-linux.yml'
      - '.github/workflows/build-graphscope-wheels-maos.yml'

env:
  DOCKER_URL: registry.cn-hongkong.aliyuncs.com
  GS_IMAGE: registry.cn-hongkong.aliyuncs.com/graphscope/graphscope

jobs:
  build-wheels:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup tmate session
      if: false
      uses: mxschmitt/action-tmate@v2

    - name: Build Wheel Package
      run: |
        # Due to an observation of changing hostname in github runners,
        # append 127.0.0.1 to etc/hosts to avoid DNS lookup.
        r=`cat /etc/hosts | grep $(hostname) || true`
        if [ -z "${r}" ];then export hn=$(hostname); sudo -E bash -c 'echo "127.0.0.1 ${hn}" >> /etc/hosts'; fi
        cat /etc/hosts

        cd ${GITHUB_WORKSPACE}/k8s
        # build graphscope wheels
        sudo -E make graphscope-py3-package

        # build client wheels
        sudo -E make graphscope-client-py3-package

        # package
        cd ${GITHUB_WORKSPACE}
        tar -zcf client.tar.gz python/dist/wheelhouse/*.whl
        tar -zcf graphscope.tar.gz coordinator/dist/

        # move wheels into one floder to upload to PyPI
        mkdir ${GITHUB_WORKSPACE}/upload_pypi
        mv ${GITHUB_WORKSPACE}/python/dist/wheelhouse/*.whl ${GITHUB_WORKSPACE}/upload_pypi/
        mv ${GITHUB_WORKSPACE}/coordinator/dist/wheelhouse/*.whl ${GITHUB_WORKSPACE}/upload_pypi/
        mv ${GITHUB_WORKSPACE}/coordinator/dist/*.whl ${GITHUB_WORKSPACE}/upload_pypi/

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: wheel-${{ github.sha }}
        path: |
          client.tar.gz
          graphscope.tar.gz
        retention-days: 5

  centos-test:
    runs-on: ubuntu-20.04
    needs: [build-wheels]
    container:
      image: centos:8
      options:
        --shm-size 4096m

    steps:
    - uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Prepare Environment
      shell: bash
      run: |
        # fixed download metadata for repo 'appstream'
        sudo sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-*
        sudo sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*

        dnf install -y gcc gcc-c++ make cmake

        # install git and python3
        dnf install -y git python38 python38-devel
        python3 -m pip install --upgrade pip --user

        # install graphscope-client
        cd ${GITHUB_WORKSPACE}/artifacts
        tar -zxf ./wheel-${{ github.sha }}/client.tar.gz
        pushd python/dist/wheelhouse
        for f in * ; do python3 -m pip install $f --user || true; done
        popd

        # install graphscope
        tar -zxf ./wheel-${{ github.sha }}/graphscope.tar.gz
        pushd coordinator/dist/wheelhouse
        python3 -m pip install ./*.whl --user
        popd
        pushd coordinator/dist
        python3 -m pip install ./*.whl --user || true
        popd

        # install tensorflow
        python3 -m pip install pytest "tensorflow<=2.5.2" --user
        # install jdk
        dnf install -y java-11-openjdk-devel

    - name: Run Minimum Test
      env:
        GS_TEST_DIR: ${{ github.workspace }}/gstest
      run: |
        # python3-Cython version is too old, use cython installed by pip in $HOME/.local/bin
        export PATH=$HOME/.local/bin:$PATH
        git clone -b master --single-branch --depth=1 https://github.com/7br/gstest.git ${GS_TEST_DIR}
        python3 -m pytest -s -v $(dirname $(python3 -c "import graphscope; print(graphscope.__file__)"))/tests/minitest
