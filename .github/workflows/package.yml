name: GraphScope standalone CI with pip package

on:
  workflow_dispatch:
  schedule:
    # The notifications for scheduled workflows are sent to the user who
    # last modified the cron syntax in the workflow file.
    # Trigger the workflow at 03:00(CST) every day.
    - cron:  '00 19 * * *'

jobs:
  build:
    if: ${{ github.ref == 'refs/heads/main' && github.repository == 'alibaba/GraphScope' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup tmate session
      if: false
      uses: mxschmitt/action-tmate@v2

    - name: Build Wheel Package
      run: |
        # avoid access node by DNS hostnames
        r=`cat /etc/hosts | grep $(hostname) || true`
        if [ -z "${r}" ];then export hn=$(hostname); sudo -E bash -c 'echo "127.0.0.1 ${hn}" >> /etc/hosts'; fi
        cat /etc/hosts

        cd k8s
        # graphscope
        sudo make graphscope-manylinux2014-py2-py3
        # graphscope client
        sudo make graphscope-client-manylinux2014-py3

        # package
        cd ${GITHUB_WORKSPACE}
        tar -zcf client.tar.gz python/dist/wheelhouse/*.whl
        tar -zcf graphscope.tar.gz coordinator/dist/wheelhouse/*.whl

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: wheel-${{ github.sha }}
        path: |
          client.tar.gz
          graphscope.tar.gz
        retention-days: 5

  test:
    if: ${{ github.ref == 'refs/heads/main' && github.repository == 'alibaba/GraphScope' }}
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2.3.2
      with:
        submodules: true

    - uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Run Test on  ${{ matrix.python-version }}
      env:
        PYTHON: ${{ matrix.python-version }}
      shell: bash
      run: |
        pushd artifacts
        # install graphscope-client
        tar -zxf ./wheel-${{ github.sha }}/client.tar.gz
        pushd python/dist/wheelhouse
        for f in * ; do pip3 install $f || true; done
        popd
        # install graphscope
        tar -zxf ./wheel-${{ github.sha }}/graphscope.tar.gz
        pushd coordinator/dist/wheelhouse
        pip3 install ./*.whl
        popd
        popd

        # run test
        pip3 install pytest tensorflow --user;
        sudo apt update -y && sudo apt install openjdk-11-jdk -y
        cp ${GITHUB_WORKSPACE}/python/tests/local/test_standalone.py /tmp/test_standalone.py
        python3 -m pytest -s -v /tmp/test_standalone.py
